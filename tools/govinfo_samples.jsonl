{"source_domain": "govinfo.gov", "source_collection": "BILLS", "source_congress": "119", "source_session": null, "source_filename": "BILLS-119hr1968enr.xml", "source_url": "https://www.govinfo.gov/content/pkg/BILLS-119hr1968enr/xml/BILLS-119hr1968enr.xml", "doc_type": "hr", "published_at": null, "received_at": null, "canonical_id": "BILLS-119hr1968enr", "title": "Making further continuing appropriations and other extensions for the fiscal year ending September 30, 2025, and for other purposes.", "sponsors": null, "actions": null, "text_versions": null, "raw_xml_base64": "<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="billres.xsl"?>
<!DOCTYPE bill PUBLIC "-//US Congress//DTDs/bill.dtd//EN" "bill.dtd">
<bill bill-stage="Enrolled-Bill" dms-id="H04425F32B3A14813B0F89923DE3D95E6" public-private="public" key="H" bill-type="olc" stage-count="1"> 
<metadata xmlns:dc="http://purl.org/dc/elements/1.1/">
<dublinCore>
<dc:title> HR 1968 ENR: Full-Year Continuing Appropriations and Extensions Act, 2025</dc:title>
<dc:publisher>U.S. House of Representatives</dc:publisher>
<dc:date></dc:date>
<dc:format>text/xml</dc:format>
<dc:language>EN</dc:language>
<dc:rights>Pursuant to Title 17 Section 105 of the United States Code, this file is not subject to copyright protection and is in the public domain.</dc:rights>
</dublinCore>
</metadata>
<form>
<distribution-code display="no">I</distribution-code> 
<congress display="yes">One Hundred Nineteenth Congress of the United States of America</congress><session display="yes">At the First Session</session><enrolled-dateline>Begun and held at the City of Washington on Friday, the third day of January, two thousand and twenty-five</enrolled-dateline> 
<legis-num display="yes">H. R. 1968</legis-num> 
<current-chamber display="no"></current-chamber> 
<legis-type>AN ACT</legis-type> 
<official-title display="yes">Making further continuing appropriations and other extensions for the fiscal year ending September 30, 2025, and for other purposes.</official-title> 
</form> 
<legis-body id="HC53C58030E664BBB93F9DFD5F4E6B676" style="OLC"> 
<section id="H44A4058FC40B492CB99F848B59EAFDAB" section-type="section-one"><enum>1.</enum><header>Short title</header><text display-inline="no-display-inline">This Act may be cited as the <quote><short-title>Full-Year Continuing Appropriations and Extensions Act, 2025</short-title></quote>.</text></section> <section id="H86F06309A0F64009A0C008B324514B0D"><enum>2.</enum><header>Table of contents</header><text display-inline="no-display-inline">The table of contents of this Act is as follows:</text> 
<toc container-level="legis-body-container" quoted-block="no-quoted-block" lowest-level="section" regeneration="yes-regeneration" lowest-bolded-level="division-lowest-bolded"> 
<toc-entry idref="H44A4058FC40B492CB99F848B59EAFDAB" level="section">Sec. 1. Short title.</toc-entry> 
<toc-entry idref="H86F06309A0F64009A0C008B324514B0D" level="section">Sec. 2. Table of contents.</toc-entry> 
<toc-entry idref="H363441AF922742A0ADC68D55760BDC98" level="section">Sec. 3. References.</toc-entry> 
<toc-entry idref="HEBE0F216826842CDB5526A67CE345595" level="division">Division A—Full-Year Continuing Appropriations Act, 2025</toc-entry> 
<toc-entry idref="H785EB4C8C9AB4AAD8C7D5FC6E52DBB1B" level="title">Title I—General Provisions</toc-entry> 
<toc-entry idref="HFB990FBF7F8248C39D5153558B31D3FE" level="title">Title II—Agriculture, Rural Development, Food and Drug Administration, and Related Agencies</toc-entry> 
<toc-entry idref="H121EC97C3EC94B28970FFE39E9A068EF" level="title">Title III—Commerce, Justice, Science, and Related Agencies</toc-entry> 
<toc-entry idref="HB625EA0FA1B34B7395C000475649EFF8" level="title">Title IV—Department of Defense</toc-entry> 
<toc-entry idref="H7A532F63D89941328281FDF62465A71E" level="title">Title V—Energy and Water Development and Related Agencies</toc-entry> 
<toc-entry idref="HD2203E9C2588400895D13E8D7A05BE22" level="title">Title VI—Financial Services and General Government</toc-entry> 
<toc-entry idref="HDDFB2F5A717641B88FFFAFA73318BAED" level="title">Title VII—Department of Homeland Security</toc-entry> 
<toc-entry idref="HD7A7F19A2D7E4D1CA49AB99B07DA5A96" level="title">Title VIII—Department of the Interior, Environment, and Related Agencies</toc-entry> 
<toc-entry idref="H378C026C5C504255B5036C4A3EC72D45" level="title">Title IX—Departments of Labor, Health and Human Services, and Education, and Related Agencies</toc-entry> 
<toc-entry idref="H7991C53F952E4595960B9B9EACD605B7" level="title">Title X—Legislative Branch</toc-entry> 
<toc-entry idref="H359C470F2C6846EE8F331523385FD59B" level="title">Title XI—Military Construction, Veterans Affairs, and Related Agencies</toc-entry> 
<toc-entry idref="HF3D6715F3FA14D9BB97C8E17A043B09E" level="title">Title XII—Department of State, Foreign Operations, and Related Programs</toc-entry> 
<toc-entry idref="H7403D9066CC74898BFB837156101DE82" level="title">Title XIII—Transportation, Housing and Urban Development, and Related Agencies </toc-entry> 
<toc-entry idref="H8DC01E05B3DF42C9A1B3EBADD98EAA87" level="division">Division B—Health</toc-entry> 
<toc-entry idref="HF7CE0CC2978648F7AE7D0864B87F91A4" level="title">Title I—Public health extenders</toc-entry> 
<toc-entry idref="H67BB6A856CDA4988BBA402B5BE442334" level="section">Sec. 2101. Extension for community health centers, National Health Service Corps, and teaching health centers that operate GME programs.</toc-entry> 
<toc-entry idref="HD60E88ED6AE542A8B6ADCB1B513AB4AF" level="section">Sec. 2102. Extension of special diabetes programs.</toc-entry> 
<toc-entry idref="H1E69C2818E244E908BEAD4E9ABE84B0C" level="section">Sec. 2103. National health security extensions.</toc-entry> 
<toc-entry idref="H7AC2185BD508466591A0422BF99AEADF" level="title">Title II—Medicare</toc-entry> 
<toc-entry idref="H6E95873D63854758BFC7F9D69633F932" level="section">Sec. 2201. Extension of increased inpatient hospital payment adjustment for certain low-volume hospitals.</toc-entry> 
<toc-entry idref="H45808D7AB2984E6283C578938F9889CF" level="section">Sec. 2202. Extension of the Medicare-dependent hospital (MDH) program.</toc-entry> 
<toc-entry idref="H88E32DDC1290420D9F87A2A1B41B8F4D" level="section">Sec. 2203. Extension of add-on payments for ambulance services.</toc-entry> 
<toc-entry idref="HEBD0BA207AF74621977780477C6847FE" level="section">Sec. 2204. Extension of funding for quality measure endorsement, input, and selection.</toc-entry> 
<toc-entry idref="H1D1A5CDC14DF4CCC995128495145A53E" level="section">Sec. 2205. Extension of funding outreach and assistance for low-income programs.</toc-entry> 
<toc-entry idref="H42EA3690279A434CAF43DBB936E1318C" level="section">Sec. 2206. Extension of the work geographic index floor.</toc-entry> 
<toc-entry idref="H16585DC82A3242EC94B1E8294985230D" level="section">Sec. 2207. Extension of certain telehealth flexibilities.</toc-entry> 
<toc-entry idref="HFB96D54BE1E24586B0ACC8752F1FA825" level="section">Sec. 2208. Extending acute hospital care at home waiver authorities.</toc-entry> 
<toc-entry idref="H1F30CBF4643D4490A42FFE115B4F5604" level="section">Sec. 2209. Extension of temporary inclusion of authorized oral antiviral drugs as covered part D drugs.</toc-entry> 
<toc-entry idref="H1605045683F94C959D531FAF6124375C" level="section">Sec. 2210. Medicare improvement fund.</toc-entry> 
<toc-entry idref="HC622665FAF1E4C8891AECF9C25D08455" level="section">Sec. 2211. Medicare sequestration.</toc-entry> 
<toc-entry idref="HFB257B942BBE402C8DDA3FB99A90FFAB" level="title">Title III—Human services</toc-entry> 
<toc-entry idref="HEF77BACFBE144089964F6EC8FE413679" level="section">Sec. 2301. Sexual risk avoidance education extension.</toc-entry> 
<toc-entry idref="H4D6453E6C25D487DABE297FFB315FDDC" level="section">Sec. 2302. Personal responsibility education extension.</toc-entry> 
<toc-entry idref="HF1A1D0EEAF3F4F0C81E978FBD5121AB1" level="section">Sec. 2303. Extension of funding for family-to-family health information centers.</toc-entry> 
<toc-entry idref="H85880A3547CB447D8D5A730E8720ED3D" level="title">Title IV—Medicaid</toc-entry> 
<toc-entry idref="HA4E065E508544BD189F6D9F797B10D69" level="section">Sec. 2401. Delaying Medicaid DSH reductions.</toc-entry> 
<toc-entry idref="HBB86ABDD143B4BE8AA3DA22E60351343" level="division">Division C—Other Matters</toc-entry> 
<toc-entry idref="HA7500BD7906C49C2A60B2B8BA8839BC1" level="section">Sec. 3101. Commodity futures trading commission whistleblower program.</toc-entry> 
<toc-entry idref="HA7FDB28F7C214B52A05B179B91D81F78" level="section">Sec. 3102. Protection of certain facilities and assets from unmanned aircraft.</toc-entry> 
<toc-entry idref="HCC2038159A5442199A54BE75A9CD97DE" level="section">Sec. 3103. Additional special assessment.</toc-entry> 
<toc-entry idref="H4519B1A8A64F4FE8AC66CA4D8BD76220" level="section">Sec. 3104. National cybersecurity protection system authorization.</toc-entry> 
<toc-entry idref="H578CBB7C116B4133AB01A9E827AAD7B5" level="section">Sec. 3105. Extension of temporary order for fentanyl-related substances.</toc-entry> 
<toc-entry idref="H1BCAC964C0CC4BB899737B049667213F" level="section">Sec. 3106. Budgetary effects.</toc-entry></toc></section> 
<section id="H363441AF922742A0ADC68D55760BDC98"><enum>3.</enum><header>References</header><text display-inline="no-display-inline">Except as expressly provided otherwise, any reference to <quote>this Act</quote> contained in any division of this Act shall be treated as referring only to the provisions of that division.</text></section> <division id="HEBE0F216826842CDB5526A67CE345595" style="appropriations"><enum>A</enum><header>Full-Year Continuing Appropriations Act, 2025</header> <section id="H6647D192A10A488C95252F1988A5702A" section-type="undesignated-section"><text display-inline="no-display-inline">The following sums are hereby appropriated, out of any money in the Treasury not otherwise appropriated, and out of applicable corporate or other revenues, receipts, and funds, for the several departments, agencies, corporations, and other organizational units of Government for fiscal year 2025, and for other purposes, namely:</text></section> 
<title id="H785EB4C8C9AB4AAD8C7D5FC6E52DBB1B" style="appropriations"><enum>I</enum><header>General Provisions</header> 
<section id="HC05F2F3239434D41A8398E8268574B60"><enum>1101.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="H4278A9ED532843888ED5A991E947DF41"><enum>(a)</enum><text>Such amounts as may be necessary, at the level specified in subsection (c) and under the authority and conditions provided in applicable appropriations Acts for fiscal year 2024, for projects or activities (including the costs of direct loans and loan guarantees) that are not otherwise specifically provided for, and for which appropriations, funds, or other authority were made available in the following appropriations Acts:</text> <paragraph id="H892B40352FC84F67BA8CCDD3F0F84716"><enum>(1)</enum><text display-inline="yes-display-inline">The Agriculture, Rural Development, Food and Drug Administration, and Related Agencies Appropriations Act, 2024 (division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>).</text></paragraph> 
<paragraph id="H547B4A212847411A81AA4B09DCDBF26C"><enum>(2)</enum><text display-inline="yes-display-inline">The Commerce, Justice, Science, and Related Agencies Appropriations Act, 2024 (division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>), except section 510 shall be applied by substituting <quote>$1,900,000,000</quote> for <quote>$1,353,000,000</quote>, except section 521(a)(1) shall be applied by substituting <quote>$30,000,000</quote> for <quote>$35,000,000</quote>, except section 521(a)(4) shall be applied by substituting <quote>$9,560,000,000</quote> for <quote>$12,440,000,000</quote>, except section 521(b)(3) shall be applied by substituting <quote>$15,000,000</quote> for <quote>$5,000,000</quote>, except section 521(b)(4) shall be applied by substituting <quote>$125,000,000</quote> for <quote>$120,000,000</quote>, except section 521(b)(5) shall be applied by substituting <quote>$20,000,000</quote> for <quote>$15,000,000</quote>, except section 521(c)(1) shall be applied by substituting <quote>$300,000,000</quote> for <quote>$131,572,000</quote>, except section 521(c)(2) shall be applied by substituting <quote>$250,000,000</quote> for <quote>$500,000,000</quote>, except section 521(f) shall be applied by inserting <quote> or title II of division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref></quote> after <quote>117–328</quote>, and except sections 222, 521(a)(2), 521(a)(3), 521(a)(5), 521(b)(1), and 521(b)(2).</text></paragraph> <paragraph id="H0F796CEF0C034965B577405038720B6A"><enum>(3)</enum><text>The Department of Defense Appropriations Act, 2024 (division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>).</text></paragraph> 
<paragraph id="HF74E72000E60471195271A026BFC91FF"><enum>(4)</enum><text display-inline="yes-display-inline">The Energy and Water Development and Related Agencies Appropriations Act, 2024 (division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>), except the third proviso under the heading <quote>Corps of Engineers—Civil—Construction</quote>, and except sections 307, 311, and 312.</text></paragraph> <paragraph id="H3430C42A2BA34B13A6BF72D639153259"><enum>(5)</enum><text>The Financial Services and General Government Appropriations Act, 2024 (division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>), except section 635 shall be applied by substituting <quote>$400,000,000</quote> for <quote>$387,500,000</quote>, except the last proviso under the heading <quote>Federal Payment for Defender Services in District of Columbia Courts</quote> shall be applied by substituting <quote>$12,000,000</quote> for <quote>$25,000,000</quote>, and except sections 636, 637, 638, and 639.</text></paragraph> 
<paragraph id="HA7036648822B4671BEEAAA0554445E07"><enum>(6)</enum><text>The Department of Homeland Security Appropriations Act, 2024 (division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>), except sections 543 through 546, and including sections 102 through 105 of title I of division G of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>.</text></paragraph> <paragraph id="H0D06C906C89040E4B2DDDC8B3F475BFD"><enum>(7)</enum><text display-inline="yes-display-inline">The Department of the Interior, Environment, and Related Agencies Appropriations Act, 2024 (division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>), except the fourth and fifth paragraphs under the heading <quote>National Park Service—Administrative Provisions</quote>, except the eighteenth proviso under the first paragraph under the heading <quote>Environmental Protection Agency—State and Tribal Assistance Grants</quote>, and except sections 446 through 448.</text></paragraph> 
<paragraph id="H36978909384C487EA350E9B04EF41B33"><enum>(8)</enum><text display-inline="yes-display-inline">The Departments of Labor, Health and Human Services, and Education, and Related Agencies Appropriations Act, 2024 (division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>), except section 240 shall be applied by substituting <quote>$1,471,000,000</quote> for <quote>$1,250,000,000</quote> and by substituting <quote>2025, except that no amounts may be rescinded from amounts that were previously designated by the Congress as being for an emergency requirement pursuant to a concurrent resolution on the budget or the Balanced Budget and Emergency Deficit Control Act of 1985</quote> for <quote>2024</quote> in such section, except sections 241 and 310, except the amount included in section 528 shall be applied by substituting <quote>$13,059,000,000</quote> for <quote>$14,224,000,000</quote>, and except the amount included in section 529 shall be applied by substituting <quote>$160,000,000</quote> for <quote>$4,309,000,000</quote>.</text></paragraph> <paragraph id="H68F47938EB514E078754990DEA639D7C"><enum>(9)</enum><text display-inline="yes-display-inline">The Legislative Branch Appropriations Act, 2024 (division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>), except the matter under the heading <quote>Joint Items, Joint Congressional Committee on Inaugural Ceremonies of 2025</quote>, and including section 7 in the matter preceding division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>.</text></paragraph> 
<paragraph id="HBB24DD647991467DA01AF8FEBF63404B"><enum>(10)</enum><text display-inline="yes-display-inline">The Military Construction, Veterans Affairs, and Related Agencies Appropriations Act, 2024 (division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>), except the second provisos under the headings <quote>Veterans Health Administration, Medical Services</quote>, <quote>Veterans Health Administration, Medical Community Care</quote>, and <quote>Veterans Health Administration, Medical Support and Compliance</quote>.</text></paragraph> <paragraph id="H0E389232CF8D47C9AFFB45C3F44AD045"><enum>(11)</enum><text display-inline="yes-display-inline">The Department of State, Foreign Operations, and Related Programs Appropriations Act, 2024 (division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>), except sections 7074(e) and 7075(a).</text></paragraph> 
<paragraph id="H27CB6AF50A984B8681623768F67AFB10"><enum>(12)</enum><text display-inline="yes-display-inline">The Transportation, Housing and Urban Development, and Related Agencies Appropriations Act, 2024 (division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>), except sections 108, 109B, 119G, 125, 154, 165, 171, and 236.</text></paragraph></subsection> <subsection id="H92CF137453854BD49AB3032F1490AF4D"><enum>(b)</enum><text>For purposes of this division, the term <quote>level</quote> means an amount.</text></subsection> 
<subsection id="H64079ACC6F4D4120BF73C2AFBF39D81C"><enum>(c)</enum><text>The level referred to in subsection (a) shall be the amounts appropriated in the appropriations Acts referred to in such subsection, including transfers and obligation limitations.</text></subsection></section> <section id="H7F0D62F67B0244028B0410489AE55749"><enum>1102.</enum><text>Appropriations made by section 1101 shall be available to the extent and in the manner that would be provided by the pertinent appropriations Act.</text></section> 
<section id="H323C100A530240C0BEFB728A6BB9C04D"><enum>1103.</enum><text>Appropriations provided by this division that, in the applicable appropriations Act for fiscal year 2024, carried a multiple-year or no-year period of availability shall retain a comparable period of availability.</text></section> <section id="HA222942305BF4E89885671D651880D21"><enum>1104.</enum><text>No appropriation or funds made available or authority granted pursuant to section 1101 shall be used to initiate or resume any project or activity for which appropriations, funds, or other authority were specifically prohibited during fiscal year 2024.</text></section> 
<section id="H663BFD5D790348C4BB1E196A2A6DCA50"><enum>1105.</enum><text>Except as otherwise expressly provided in this division, the requirements, authorities, conditions, limitations, and other provisions of the appropriations Acts referred to in section 1101 shall continue in effect through the date specified in section 1106.</text></section> <section id="H05E1D41F554546C29CBD3F474EDBECFD"><enum>1106.</enum><text>Unless otherwise provided for in this division or in the applicable appropriations Act, appropriations and funds made available and authority granted pursuant to this division shall be available through September 30, 2025.</text></section> 
<section id="H6D7E1FBB1A9849C4865A6BB70F0A2323"><enum>1107.</enum><text>Expenditures made pursuant to the Continuing Appropriations Act, 2025 (<external-xref legal-doc="public-law" parsable-cite="pl/118/83">Public Law 118–83</external-xref>) shall be charged to the applicable appropriation, fund, or authorization provided by this division.</text></section> <section id="HA44D234615A941F290BC525415B60C78"><enum>1108.</enum><text>Funds appropriated by this division may be obligated and expended notwithstanding section 10 of <external-xref legal-doc="public-law" parsable-cite="pl/91/672">Public Law 91–672</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/22/2412">22 U.S.C. 2412</external-xref>), section 15 of the State Department Basic Authorities Act of 1956 (<external-xref legal-doc="usc" parsable-cite="usc/22/2680">22 U.S.C. 2680</external-xref>), section 313 of the Foreign Relations Authorization Act, Fiscal Years 1994 and 1995 (<external-xref legal-doc="usc" parsable-cite="usc/22/6212">22 U.S.C. 6212</external-xref>), and section 504(a)(1) of the National Security Act of 1947 (<external-xref legal-doc="usc" parsable-cite="usc/50/3094">50 U.S.C. 3094(a)(1)</external-xref>).</text></section> 
<section id="H12E6302326CB4572BF92CCE7951932C8"><enum>1109.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="H241767F393E14052978B33DE09E9B035"><enum>(a)</enum><text display-inline="yes-display-inline">For entitlements and other mandatory payments whose budget authority was provided in appropriations Acts for fiscal year 2024, and for activities under the Food and Nutrition Act of 2008, the levels established by section 1101 shall be the amounts necessary to maintain program levels under current law and under the authority and conditions provided in the applicable appropriations Acts for fiscal year 2024.</text></subsection> <subsection id="HE8288B5D206D4CE987942ECFCC93AD81"><enum>(b)</enum><text>In addition to the amounts otherwise provided by section 1101, the following amounts shall be available for the following accounts for advance payments for the first quarter of fiscal year 2026:</text> 
<paragraph id="H5540EB68AA414089B4A1FABD70D2BAD2"><enum>(1)</enum><text><quote>Department of Labor—Office of Workers’ Compensation Programs—Special Benefits for Disabled Coal Miners</quote>, for benefit payments under title IV of the Federal Mine Safety and Health Act of 1977, $6,000,000, to remain available until expended.</text></paragraph> <paragraph id="HCE32E39B909444D98AEC9B274505B357"><enum>(2)</enum><text><quote>Department of Health and Human Services—Centers for Medicare &amp; Medicaid Services—Grants to States for Medicaid</quote>, for payments to States or in the case of section 1928 on behalf of States under title XIX of the Social Security Act, $261,063,820,000, to remain available until expended.</text></paragraph> 
<paragraph id="H35F29A3668754A10BFACB27B1BB339FC"><enum>(3)</enum><text><quote>Department of Health and Human Services—Administration for Children and Families—Payments to States for Child Support Enforcement and Family Support Programs</quote>, for payments to States or other non-Federal entities under titles I, IV–D, X, XI, XIV, and XVI of the Social Security Act and the Act of July 5, 1960 (24 U.S.C. ch. 9), $1,600,000,000, to remain available until expended.</text></paragraph> <paragraph id="HD713FCB880974F2FBEEAD71E24F46147"><enum>(4)</enum><text><quote>Department of Health and Human Services—Administration for Children and Families—Payments for Foster Care and Permanency</quote>, for payments to States or other non-Federal entities under title IV–E of the Social Security Act, $3,600,000,000.</text></paragraph> 
<paragraph id="H8A408FEEDF7D440B975CBA172D039115"><enum>(5)</enum><text><quote>Social Security Administration—Supplemental Security Income Program</quote>, for benefit payments under title XVI of the Social Security Act, $22,100,000,000, to remain available until expended.</text></paragraph></subsection></section> <section id="HC3E0A3664B134384B575EFB774A0B237"><enum>1110.</enum> <subsection commented="no" display-inline="yes-display-inline" id="HBF6732E7C7BE4118B4A5FAF1069B8692"><enum>(a)</enum><text display-inline="yes-display-inline">Each amount incorporated by reference in this Act that was previously designated by the Congress as an emergency requirement pursuant to section 251(b)(2)(A)(i) of the Balanced Budget and Emergency Deficit Control Act of 1985 or as being for disaster relief pursuant to section 251(b)(2)(D) of such Act is designated by the Congress as an emergency requirement pursuant to section 251(b)(2)(A)(i) of such Act or as being for disaster relief pursuant to section 251(b)(2)(D) of such Act, respectively.</text></subsection> 
<subsection id="H08EE76A6132A44B8A27C5B61E14076B3"><enum>(b)</enum><text display-inline="yes-display-inline">Section 6 of Public Laws 118–42 and 118–47 and section 11206(4) of this Act shall apply to amounts designated in subsection (a).</text></subsection> <subsection id="HC0CC2AD1D993464C959471F5EF2430EF"><enum>(c)</enum><text display-inline="yes-display-inline">Each amount incorporated by reference in this Act that was previously designated in division B of <external-xref legal-doc="public-law" parsable-cite="pl/117/159">Public Law 117–159</external-xref>, division J of <external-xref legal-doc="public-law" parsable-cite="pl/117/58">Public Law 117–58</external-xref>, or in section 443(b) of division G of <external-xref legal-doc="public-law" parsable-cite="pl/117/328">Public Law 117–328</external-xref> by the Congress as an emergency requirement pursuant to a concurrent resolution on the budget shall continue to be treated as an amount specified in section 103(b) of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/5">Public Law 118–5</external-xref>.</text></subsection></section> 
<section id="H776805E9B76B48FCB6211D9204749D7E"><enum>1111.</enum><text>Any language specifying an earmark in an appropriations Act for fiscal year 2024, or in a committee report or joint explanatory statement accompanying such an Act, shall have no legal effect with respect to funds appropriated by this division. For purposes of this section, the term <quote>earmark</quote> means a congressional earmark, community project funding, or congressionally directed spending item, as defined in clause 9(e) of rule XXI of the Rules of the House of Representatives and paragraph 5(a) of rule XLIV of the Standing Rules of the Senate.</text></section> <section id="HB01E337385C24965AC9A773A940B4457"><enum>1112.</enum><text>With respect to any discretionary account for which advance appropriations were provided for fiscal year 2025 or 2026 in an appropriations Act for fiscal year 2024, in addition to amounts otherwise made available by this division, advance appropriations are provided in the same amount for fiscal year 2026 or 2027, respectively, with a comparable period of availability.</text></section> 
<section id="H3B7EE13ED4334C1FACFC81B1BBEA1BB1"><enum>1113.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="H0B453EAB8B5E4B8BB201917844D27C3A"><enum>(a)</enum><text>Not later than 45 days after the date of the enactment of this division, each department and agency in subsection (c) shall submit to the Committees on Appropriations of the House of Representatives and the Senate a spending, expenditure, or operating plan for fiscal year 2025—</text> <paragraph id="H63ADB7ABC3264DC1BEB47B7B6101046D"><enum>(1)</enum><text>at the program, project, or activity level (or, for foreign assistance programs funded in the Department of State, Foreign Operations, and Related Programs Appropriations Act, at the country, regional, and central program level, and for any international organization); or</text></paragraph> 
<paragraph id="H0FCDE4E09BEF4508810A7731302FEC48"><enum>(2)</enum><text>as applicable, at any greater level of detail required for funds covered by such a plan in an appropriations Act referred to in section 1101, in the joint explanatory statement accompanying such Act, or in committee report language incorporated by reference in such joint explanatory statement.</text></paragraph></subsection> <subsection id="H5094ACCE85114405A0C246A0A78FB473"><enum>(b)</enum><text>If a sequestration is ordered by the President under section 254 of the Balanced Budget and Emergency Deficit Control Act of 1985, the spending, expenditure, or operating plan required by this section shall reflect such sequestration.</text></subsection> 
<subsection id="H9C17AD8580E14CEC97E33D9B84037060"><enum>(c)</enum><text>The departments and agencies to which this section applies are as follows:</text> <paragraph id="H7706135D83C34C5FB34948EC29B36D5B"><enum>(1)</enum><text>The Department of Agriculture.</text></paragraph> 
<paragraph id="HFB7D456821D14161861B7CC1495E0FE1"><enum>(2)</enum><text>The Department of Commerce, including the United States Patent and Trademark Office.</text></paragraph> <paragraph id="H95E0BE8C11F642BDBB7C3739CD418EF5"><enum>(3)</enum><text>The Department of Defense, other than for amounts made available in section 1101(a)(3) and title IV of this division.</text></paragraph> 
<paragraph id="H9AE779BCD58748FB859515092FF254C6"><enum>(4)</enum><text>The Department of Education.</text></paragraph> <paragraph id="HD155B9155F564434B0B91B1CC40864E9"><enum>(5)</enum><text>The Department of Energy.</text></paragraph> 
<paragraph id="H39F5C61E7DD1465F8D2AE47AC3B2F124"><enum>(6)</enum><text>The Department of Health and Human Services.</text></paragraph> <paragraph id="HE2B75B978DA64654A0D315C12D2345A1"><enum>(7)</enum><text>The Department of Homeland Security.</text></paragraph> 
<paragraph id="H6A9BE31D07104CBDBD4B263883970D93"><enum>(8)</enum><text>The Department of Housing and Urban Development.</text></paragraph> <paragraph id="HF2ACB5DC83D44AF69352C08B7B0C85AE"><enum>(9)</enum><text>The Department of the Interior.</text></paragraph> 
<paragraph id="HDBCC00A7F06C48FFBF57CAB16ED8FF62"><enum>(10)</enum><text>The Department of Justice.</text></paragraph> <paragraph id="H91588170C88C40A6B5BC70BCB06BCE95"><enum>(11)</enum><text>The Department of Labor.</text></paragraph> 
<paragraph id="H9C473E54435E4A189B976C9B3EBECEEB"><enum>(12)</enum><text>The Department of State and United States Agency for International Development.</text></paragraph> <paragraph id="H3487C6B1DF0E48C58EF2D0B736B6335C"><enum>(13)</enum><text>The Department of Transportation.</text></paragraph> 
<paragraph id="H68B286B5D50A42E79957436081283D68"><enum>(14)</enum><text>The Department of the Treasury.</text></paragraph> <paragraph id="H735E1FA1498445A7A53B17BDFB2CE620"><enum>(15)</enum><text>The Department of Veterans Affairs.</text></paragraph> 
<paragraph id="H2DF6B54D718040809D2FD5354B472C4A"><enum>(16)</enum><text>The National Aeronautics and Space Administration.</text></paragraph> <paragraph id="H9ACC2E8E8684452DA750D8500DF109A5"><enum>(17)</enum><text>The National Science Foundation.</text></paragraph> 
<paragraph id="H2E985539F82043F08A107C6F02D64CDC"><enum>(18)</enum><text>The Judiciary.</text></paragraph> <paragraph id="HAD904D9301FB477BAE5D33C3873559D1"><enum>(19)</enum><text>With respect to amounts made available under the heading <quote>Executive Office of the President and Funds Appropriated to the President</quote>, agencies funded under such heading.</text></paragraph> 
<paragraph id="H975A6E0D014742749B1241972F7E1A71"><enum>(20)</enum><text>The Federal Communications Commission.</text></paragraph> <paragraph id="H66CF7AA5B5744831AEE21AC7D6319C39"><enum>(21)</enum><text>The General Services Administration.</text></paragraph> 
<paragraph id="H4272D5C383A642DCB94D7A01BBB85314"><enum>(22)</enum><text>The Office of Personnel Management.</text></paragraph> <paragraph id="HBB8E4C380A20484D9E8644DA52C5F81F"><enum>(23)</enum><text>The National Archives and Records Administration.</text></paragraph> 
<paragraph id="HBB822122B0714FAE8DB61B0B5A9BCE20"><enum>(24)</enum><text>The Securities and Exchange Commission.</text></paragraph> <paragraph id="H37A8C7AB15874BB2B59D48B657B4777F"><enum>(25)</enum><text>The Small Business Administration.</text></paragraph> 
<paragraph id="H56222F666B14454FAF3E4CC3B707495B"><enum>(26)</enum><text>The Environmental Protection Agency.</text></paragraph> <paragraph id="H2CA377FD31574721A4E28502A1AC4B4F"><enum>(27)</enum><text>The Indian Health Service.</text></paragraph> 
<paragraph id="HB0DBD1AA9C094700A0EBF4B382FA60F0"><enum>(28)</enum><text>The Smithsonian Institution.</text></paragraph> <paragraph id="H0BA97BAE620D4B5D82C76A087B4AE579"><enum>(29)</enum><text>The Social Security Administration.</text></paragraph> 
<paragraph id="H0A6ED4A19BBE415D988070339C7CE2BD"><enum>(30)</enum><text>The Corporation for National and Community Service.</text></paragraph> <paragraph id="H7E9511301671498AB809E2B91F49D563"><enum>(31)</enum><text>The Corporation for Public Broadcasting.</text></paragraph> 
<paragraph id="HF84D0518D02946BC8A536EA1F34A103A"><enum>(32)</enum><text>The Food and Drug Administration.</text></paragraph> <paragraph id="H3E422AD713E643C096D76935FB7E0788"><enum>(33)</enum><text>The Commodity Futures Trading Commission.</text></paragraph> 
<paragraph id="H692E1F08CBBE45439B62C396F1C69A5F"><enum>(34)</enum><text>The United States International Development Finance Corporation.</text></paragraph> <paragraph id="HFD84E66A203B4643BE410A2C6C0BA932"><enum>(35)</enum><text>The Architect of the Capitol.</text></paragraph></subsection></section> 
<section id="HBE64A7D237974381A64CE35621282821"><enum>1114.</enum><text>Not later than May 15, 2025, and each month thereafter through November 1, 2025, the Office of Management and Budget shall submit to the Committees on Appropriations of the House of Representatives and the Senate a report on all obligations incurred in fiscal year 2025, by each department and agency, using funds made available by this division. Such report shall—</text> <paragraph id="HB4A7F763348A4183B3CF0C14C71EAECB"><enum>(1)</enum><text>set forth obligations by account; and</text></paragraph> 
<paragraph id="HFAE2E1D5E07546BBBC5F3706AB184F88"><enum>(2)</enum><text>compare the obligations incurred in the period covered by the report to the obligations incurred in the same period in fiscal year 2024.</text></paragraph></section> <section id="H64B354CFA5F14783B8F3A88957187514"><enum>1115.</enum><text display-inline="yes-display-inline">During the period covered by this Act, section 235(b) of the Sentencing Reform Act of 1984 (<external-xref legal-doc="usc" parsable-cite="usc/18/3551">18 U.S.C. 3551</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/98/473">Public Law 98–473</external-xref>; 98 Stat. 2032), as such section relates to <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/18/311">chapter 311</external-xref> of title 18, United States Code, and the United States Parole Commission, shall be applied by substituting <quote>37</quote> for <quote>36</quote> each place it appears.</text></section> 
<section id="HE1B29C6C9D274EC59E17E6E441CE38A0"><enum>1116.</enum><text display-inline="yes-display-inline">Any amount appropriated by this Act, designated by the Congress as an emergency requirement pursuant to section 251(b)(2)(A)(i) of the Balanced Budget and Emergency Deficit Control Act of 1985, and subsequently so designated by the President, and transferred pursuant to transfer authorities provided by this division shall retain such designation.</text></section></title> <title id="HFB990FBF7F8248C39D5153558B31D3FE" style="appropriations"><enum>II</enum><header>Agriculture, Rural Development, Food and Drug Administration, and Related Agencies</header> <section id="H8C4FE833EF0A44AC88C8FE0362668ACA" section-type="subsequent-section"><enum>1201.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for each of the following accounts shall be as follows:</text> 
<paragraph id="HEA081A034F974EA79385A2FBDFF1A400"><enum>(1)</enum><text>$0 for <quote>Department of Agriculture—Agricultural Programs—Agricultural Research Service—Buildings and Facilities</quote>.</text></paragraph> <paragraph id="H2ED07975311A46DAB4ECA9CC82FA97B2"><enum>(2)</enum><text>$1,147,750,000 for <quote>Department of Agriculture—Agricultural Programs—Animal and Plant Health Inspection Service—Salaries and Expenses</quote>.</text></paragraph> 
<paragraph id="H8DED4C0EF925458A90DF16D5F42B338C"><enum>(3)</enum><text>$895,754,000 for <quote>Department of Agriculture—Farm Production and Conservation Programs—Natural Resources Conservation Service—Conservation Operations</quote>.</text></paragraph> <paragraph id="H8FA59D37938A4A4CB8A391AB98E6878D"><enum>(4)</enum><text>$14,650,000 for <quote>Department of Agriculture—Farm Production and Conservation Programs—Natural Resources Conservation Service—Watershed and Flood Prevention Operations</quote>.</text></paragraph> 
<paragraph id="H105241C5CF514953BCE7D69BEB84FCDC"><enum>(5)</enum><text>$478,487,000 for <quote>Department of Agriculture—Rural Development Programs—Rural Utilities Service—Rural Water and Waste Disposal Program Account</quote>.</text></paragraph> <paragraph id="H4DBF43B52ABA4D75A56862BB3177D65B"><enum>(6)</enum><text display-inline="yes-display-inline">$40,000,000 for <quote>Department of Agriculture—Rural Development Programs—Rural Utilities Service—Distance Learning, Telemedicine, and Broadband Program</quote>, for grants for telemedicine and distance learning services in rural areas, as authorized by <external-xref legal-doc="usc" parsable-cite="usc/7/950aaa">7 U.S.C. 950aaa et seq.</external-xref></text></paragraph> 
<paragraph id="H97B2CB5139A54056A52552636222495B"><enum>(7)</enum><text display-inline="yes-display-inline">$90,000,000 for <quote>Department of Agriculture—Rural Development Programs—Rural Utilities Service—Distance Learning, Telemedicine, and Broadband Program</quote>, for the cost to continue a broadband loan and grant pilot program established by section 779 of division A of the Consolidated Appropriations Act, 2018 (<external-xref legal-doc="public-law" parsable-cite="pl/115/141">Public Law 115–141</external-xref>) under the Rural Electrification Act of 1936, as amended (<external-xref legal-doc="usc" parsable-cite="usc/7/901">7 U.S.C. 901 et seq.</external-xref>).</text></paragraph></section> <section id="H1224ABE7581F459BB8BA5F6B76ABB00E" section-type="subsequent-section"><enum>1202.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for each of the following accounts shall be as follows:</text> 
<paragraph id="H3717C22FE42140AC8290C9D09A2E63A0"><enum>(1)</enum><text>$1,214,009,000 for <quote>Department of Agriculture—Agricultural Programs—Food Safety and Inspection Service</quote>.</text></paragraph> <paragraph id="H5DA1FFAC4163478C96BB6F53BC3AF28D"><enum>(2)</enum><text display-inline="yes-display-inline">$516,070,000 for <quote>Department of Agriculture—Domestic Food Programs—Food and Nutrition Service—Commodity Assistance Program</quote>, of which $425,000,000 shall be for the Commodity Supplemental Food Program.</text></paragraph> 
<paragraph id="H0EE71867D182487B80228874E7F2350A"><enum>(3)</enum><text>$7,597,000,000 for <quote>Department of Agriculture—Domestic Food Programs—Food and Nutrition Service—Special Supplemental Nutrition Program for Women, Infants, and Children (WIC)</quote>.</text></paragraph></section> <section id="H19AE54C70A844CCF9E39F8873A707D27" section-type="subsequent-section"><enum>1203.</enum> <subsection commented="no" display-inline="yes-display-inline" id="H2CC8419D08684512B3E81ACFF2EADA60"><enum>(a)</enum><text display-inline="yes-display-inline">Section 260 of the Agricultural Marketing Act of 1946 (<external-xref legal-doc="usc" parsable-cite="usc/7/1636i">7 U.S.C. 1636i</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2025</quote>. </text></subsection> 
<subsection id="H5F3D3778F202449A97AFA8E1A6956D90"><enum>(b)</enum><text display-inline="yes-display-inline">Section 942 of the Livestock Mandatory Reporting Act of 1999 (<external-xref legal-doc="usc" parsable-cite="usc/7/1635">7 U.S.C. 1635</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/106/78">Public Law 106–78</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2025</quote>.</text></subsection></section> <section id="H1E6F7955F111497CA4EC03FF08B5A5A7" section-type="subsequent-section"><enum>1204.</enum><text display-inline="yes-display-inline">Section 778 of division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> is amended by striking paragraph (1).</text></section><appropriations-small id="H7AC553EC7C15412AB5BF0F1CF50BBA76"><header>(Including Transfers of Funds)</header></appropriations-small> 
<section id="HE4C6AD0EDB4744748B76AD89E27011D5"><enum>1205.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, amounts made available under the heading <quote>Agricultural Programs, Farm Service Agency, Agricultural Credit Insurance Fund Program Account</quote> may be reprogrammed as necessary between allocations for loan categories to ensure that overall program levels are equal to, to the maximum extent practicable, the fiscal year 2024 program levels, notwithstanding section 346(b)(2)(A)(i)(I) of the Consolidated Farm and Rural Development Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1994">7 U.S.C. 1994(b)(2)(A)(i)(I)</external-xref>).</text></section><appropriations-small id="HF822E4059A974631B876D71BE919AD1E"><header>(Including Transfers of Funds)</header></appropriations-small> <section id="H633E52BF8E5744878110B5F2008192DB"><enum>1206.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, amounts may be transferred among accounts of the Department of Agriculture under the heading <quote>Rural Development Programs</quote> to allow for the program levels to be equal to, to the maximum extent practicable, the levels enacted for fiscal year 2024: <italic>Provided</italic>, That $34,000,000 shall be transferred from such accounts to <quote>Rural Development Programs, Rural Housing Service, Rental Assistance Program</quote>.</text></section> 
<section id="H4BB22EA5C6394E5086F5E4E7DDCD43B2" section-type="subsequent-section"><enum>1207.</enum><text display-inline="yes-display-inline">Title I of division N of the Consolidated Appropriations Act, 2023 (<external-xref legal-doc="public-law" parsable-cite="pl/117/328">Public Law 117–328</external-xref>), is amended in the last proviso under the heading <quote>Agricultural Programs—Processing, Research and Marketing—Office of the Secretary</quote>, by adding at the end the following: <quote>, except that the Secretary shall allow producers to retain payments not to exceed 90 percent of the producer’s revenue losses (as determined by the Secretary) if the Secretary determines a <italic>de minimis</italic> amount, as defined by the Secretary, of a producer’s revenue loss is attributable to crops for which the producer did not insure or obtain coverage under the Noninsured Crop Disaster Assistance Program under section 196 of the Federal Agriculture Improvement and Reform Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/7/7333">7 U.S.C. 7333</external-xref>): <italic>Provided further</italic>, That amounts repurposed pursuant to this section that were previously designated by the Congress as an emergency requirement pursuant to a concurrent resolution on the budget are designated as an emergency requirement pursuant to section 251(b)(2)(A)(i) of the Balanced Budget and Emergency Deficit Control Act of 1985.</quote>. </text></section></title> <title id="H121EC97C3EC94B28970FFE39E9A068EF" style="appropriations"><enum>III</enum><header>Commerce, Justice, Science, and Related Agencies</header> <section id="HF69FE606B3714FD0AF1F01F539C16346"><enum>1301.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows: </text> 
<subsection display-inline="no-display-inline" id="H57D1ABBBD9B34A04A02DE96E562A2FCB"><enum> (1)</enum><text display-inline="yes-display-inline">$857,159,000 for <quote>Department of Commerce—National Institute of Standards and Technology—Scientific and Technical Research and Services</quote>.</text></subsection> <subsection id="HEC726AC802484419ACDA4511B4B3BEAA"><enum>(2)</enum><text display-inline="yes-display-inline">$87,758,000 for <quote>Department of Commerce—National Institute of Standards and Technology—Construction of Research Facilities</quote>.</text></subsection> 
<subsection id="H384EEB4E144E44CD87EF62AD2ACA534D"><enum>(3)</enum><text display-inline="yes-display-inline">$4,408,986,000 for <quote>Department of Commerce—National Oceanic and Atmospheric Administration—Operations, Research and Facilities</quote>.</text></subsection> <subsection id="H4FEA6D8F4767497EB612AD1287994B94"><enum>(4)</enum><text display-inline="yes-display-inline">$2,000,033,000 for <quote>Department of Justice—State and Local Law Enforcement Activities—Office of Justice Programs—State and Local Law Enforcement Assistance</quote>, and amounts provided under paragraph (1) shall be $499,033,000, amounts provided under subparagraph (Q) of paragraph (1) shall be $0, and amounts provided under subparagraph (R) of paragraph (1) shall be $0.</text></subsection> 
<subsection id="HF3B8F40378194878BA3CD08836CD087E"><enum>(5)</enum><text>$417,168,839 for <quote>Department of Justice—Community Oriented Policing Services—Community Oriented Policing Services Programs</quote>, and amounts provided under paragraph (7) shall be $0.</text></subsection> <subsection id="HAE9DDA256EFE4238AA6958AEB9FC3BF7"><enum>(6)</enum><text display-inline="yes-display-inline">$3,092,327,000 for <quote>National Aeronautics and Space Administration—Safety, Security and Mission Services</quote>.</text></subsection></section> 
<section id="HC85FB3DEA7AE407D8674E49499F78A20"><enum>1302.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows: </text> <subsection id="H04C99277253B4CFD9F1FA02C76A9B90A"><enum>(1)</enum><text display-inline="yes-display-inline">$38,460,240 for <quote>Department of Justice—Justice Operations, Management, And Accountability—Justice Information Sharing Technology</quote>.</text></subsection> 
<subsection display-inline="no-display-inline" id="H3170B418B56A404B9E429781123EF91E"><enum> (2)</enum><text display-inline="yes-display-inline">$2,236,000,000 for <quote>Department of Justice—United States Marshals Service—Federal Prisoner Detention</quote>.</text></subsection></section></title> <title id="HB625EA0FA1B34B7395C000475649EFF8" style="appropriations"><enum>IV</enum><header>Department of Defense</header> <section id="HC6116C9DCD584A51A54798D532C113B7"><enum>1401.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for appropriations accounts under title I of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be as follows:</text> 
<paragraph id="H08EEDEAD52E94D82B8016051024DBC5F"><enum>(1)</enum><text display-inline="yes-display-inline">$51,181,397,000 for <quote>Military Personnel, Army</quote>.</text></paragraph> <paragraph id="H57B01BCF3CD3442E8524A2D415A3FF8A"><enum>(2)</enum><text>$38,813,378,000 for <quote>Military Personnel, Navy</quote>.</text></paragraph> 
<paragraph id="H607BB4F321274298AD7E14DD8A05A714"><enum>(3)</enum><text>$16,151,382,000 for <quote>Military Personnel, Marine Corps</quote>.</text></paragraph> <paragraph id="H58A12FCA6146490DAD8FE5331C4F8CC9"><enum>(4)</enum><text>$37,023,437,000 for <quote>Military Personnel, Air Force</quote>.</text></paragraph> 
<paragraph id="HD8A672F239DC44BDA2B566A9527AC571"><enum>(5)</enum><text>$1,312,347,000 for <quote>Military Personnel, Space Force</quote>.</text></paragraph> <paragraph id="H83F7D7D421E2448692CBDF4E5F51B79A"><enum>(6)</enum><text>$5,490,830,000 for <quote>Reserve Personnel, Army</quote>.</text></paragraph> 
<paragraph id="H90659A48523642BABBF6FFD921232152"><enum>(7)</enum><text>$2,566,620,000 for <quote>Reserve Personnel, Navy</quote>.</text></paragraph> <paragraph id="H258BB7B973FA4A33B8C15B106EBD6E77"><enum>(8)</enum><text>$944,225,000 for <quote>Reserve Personnel, Marine Corps</quote>.</text></paragraph> 
<paragraph id="HF9A48A54D4F6460C98B85585F111B23E"><enum>(9)</enum><text>$2,597,273,000 for <quote>Reserve Personnel, Air Force</quote>.</text></paragraph> <paragraph id="HFE92C16E0FD44332B6F5FFCA1CE8001C"><enum>(10)</enum><text>$10,019,623,000 for <quote>National Guard Personnel, Army</quote>.</text></paragraph> 
<paragraph id="HA8622FEB7ACB4F66912FA6EB9E3F9CDB"><enum>(11)</enum><text>$5,287,499,000 for <quote>National Guard Personnel, Air Force</quote>.</text></paragraph></section> <section id="HB4B55203B4974A129A438AA5EABF825B"><enum>1402.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for appropriations accounts under title II of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be as follows:</text> 
<paragraph id="H29C533F2C2E4415DA9A1CFA420784961"><enum>(1)</enum><text>$57,968,853,000 for <quote>Operation and Maintenance, Army</quote>.</text></paragraph> <paragraph id="HEAA8738149CE4A32AEE8D02E84DA3503"><enum>(2)</enum><text>$73,657,268,000 for <quote>Operation and Maintenance, Navy</quote>.</text></paragraph> 
<paragraph id="HC85D3D963DE444309842C7D68BBC4FBA"><enum>(3)</enum><text>$10,183,272,000 for <quote>Operation and Maintenance, Marine Corps</quote>.</text></paragraph> <paragraph id="H3F7FA02C56A248DAA0A4087CC0C0FB78"><enum>(4)</enum><text>$63,239,279,000 for <quote>Operation and Maintenance, Air Force</quote>.</text></paragraph> 
<paragraph id="H64F64F2E5B1B403599F9081CE8AEDC13"><enum>(5)</enum><text>$5,070,915,000 for <quote>Operation and Maintenance, Space Force</quote>.</text></paragraph> <paragraph id="HE918F6C6764849818C015C56F362C1E4"><enum>(6)</enum><text>$53,376,465,000 for <quote>Operation and Maintenance, Defense-Wide</quote>.</text></paragraph> 
<paragraph id="H7B2D64E2EA374A2BB616C4ACC290E97D"><enum>(7)</enum><text>$528,699,000 for <quote>Counter-ISIS Train and Equip Fund</quote>.</text></paragraph> <paragraph id="H52B7D54580014757916D9BC0A4A40E49"><enum>(8)</enum><text>$3,233,517,000 for <quote>Operation and Maintenance, Army Reserve</quote>.</text></paragraph> 
<paragraph id="HBDA6012CCE0945D8B742DD1BDC4D9497"><enum>(9)</enum><text>$1,316,518,000 for <quote>Operation and Maintenance, Navy Reserve</quote>.</text></paragraph> <paragraph id="HE2D5E53825E447F184B9AE64664DD8C9"><enum>(10)</enum><text>$334,258,000 for <quote>Operation and Maintenance, Marine Corps Reserve</quote>.</text></paragraph> 
<paragraph id="HE756157430FD4297866E9BADB4C3C4FE"><enum>(11)</enum><text>$4,029,224,000 for <quote>Operation and Maintenance, Air Force Reserve</quote>.</text></paragraph> <paragraph id="HDA0FC241D5354F1987A2C5172B43502F"><enum>(12)</enum><text>$8,408,317,000 for <quote>Operation and Maintenance, Army National Guard</quote>.</text></paragraph> 
<paragraph id="H7A12A56E5EB1433F82B614DBEE830A25"><enum>(13)</enum><text>$7,249,086,000 for <quote>Operation and Maintenance, Air National Guard</quote>.</text></paragraph> <paragraph id="H465B935B270643F6A628BC5B7D32775D"><enum>(14)</enum><text>$21,035,000 for <quote>United States Court of Appeals for the Armed Forces</quote>.</text></paragraph> 
<paragraph id="H419B778757AC4B508CAB7375EE50E334"><enum>(15)</enum><text>$283,069,000 for <quote>Environmental Restoration, Army</quote>.</text></paragraph> <paragraph id="HC96A375A57B54A528482B35F4F1BC105"><enum>(16)</enum><text>$343,591,000 for <quote>Environmental Restoration, Navy</quote>.</text></paragraph> 
<paragraph id="H94692413FFBF4031A6C01943E89B016F"><enum>(17)</enum><text>$330,524,000 for <quote>Environmental Restoration, Air Force</quote>.</text></paragraph> <paragraph id="H1624F7566B2548DE94DA21D45F025320"><enum>(18)</enum><text>$9,480,000 for <quote>Environmental Restoration, Defense-Wide</quote>.</text></paragraph> 
<paragraph id="HDFC6A747E2A54CF0A9C3394177A46A91"><enum>(19)</enum><text>$236,475,000 for <quote>Environmental Restoration, Formerly Used Defense Sites</quote>.</text></paragraph> <paragraph id="HB39070AF086A4EB882B810910E0E5632"><enum>(20)</enum><text>$115,335,000 for <quote>Overseas Humanitarian, Disaster, and Civic Aid</quote>.</text></paragraph> 
<paragraph id="H2C29422796D943CFAFC1481DAB56E95F"><enum>(21)</enum><text>$296,076,000 for <quote>Cooperative Threat Reduction Account</quote>.</text></paragraph> <paragraph id="H63302AEF28124AF6BDD0B74DB15883A8"><enum>(22)</enum><text>$56,176,000 for <quote>Defense Acquisition Workforce Development Account</quote>.</text></paragraph></section> 
<section id="H7E86E3F7159F4A8E8884C0117D1876F7"><enum>1403.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for appropriations accounts under title III of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be as follows:</text> <paragraph id="H9A0648421A924CA6BD2C3E94E35F8586"><enum>(1)</enum><text>$3,472,891,000 for <quote>Aircraft Procurement, Army</quote>.</text></paragraph> 
<paragraph id="H6E8A5BEC3B16430FA172E6FCB9F8AF04"><enum>(2)</enum><text>$5,998,293,000 for <quote>Missile Procurement, Army</quote>.</text></paragraph> <paragraph id="HDB540C31120E444883734068AAFB445D"><enum>(3)</enum><text>$3,688,870,000 for <quote>Procurement of Weapons and Tracked Combat Vehicles, Army</quote>.</text></paragraph> 
<paragraph id="HFD02F8A006DD4EE48C1FA30ED2A447B6"><enum>(4)</enum><text>$2,857,276,000 for <quote>Procurement of Ammunition, Army</quote>.</text></paragraph> <paragraph id="H5AE45CB0BBAC4E2AB7CDE131E7B9B605"><enum>(5)</enum><text>$8,677,094,000 for <quote>Other Procurement, Army</quote>.</text></paragraph> 
<paragraph id="HDFE56DF660AD4B999BF4C7EB545E70FD"><enum>(6)</enum><text>$15,918,954,000 for <quote>Aircraft Procurement, Navy</quote>.</text></paragraph> <paragraph id="HEB63A2D24A49410A9B4CEBF882DF629F"><enum>(7)</enum><text>$6,348,511,000 for <quote>Weapons Procurement, Navy</quote>.</text></paragraph> 
<paragraph id="HD9B49C6AB68F4470881A96B15E9740BE"><enum>(8)</enum><text>$1,598,584,000 for <quote>Procurement of Ammunition, Navy and Marine Corps</quote>.</text></paragraph> <paragraph id="HBE8DF80B53994EDBA9BB57A1E6AB1B93"><enum>(9)</enum><text>$15,142,773,000 for <quote>Other Procurement, Navy</quote>.</text></paragraph> 
<paragraph id="H84E9A32FCBC243DF9A4E51D49CFAFCEC"><enum>(10)</enum><text>$3,803,608,000 for <quote>Procurement, Marine Corps</quote>.</text></paragraph> <paragraph id="H21BBC1D9900848028DBC3CE02F77B215"><enum>(11)</enum><text>$19,899,019,000 for <quote>Aircraft Procurement, Air Force</quote>.</text></paragraph> 
<paragraph id="H7C5D203F2BDA42D5B46ED11A4F18E382"><enum>(12)</enum><text>$4,258,672,000 for <quote>Missile Procurement, Air Force</quote>.</text></paragraph> <paragraph id="H794DB9199D134303A963F8AD4C9542E5"><enum>(13)</enum><text>$550,646,000 for <quote>Procurement of Ammunition, Air Force</quote>.</text></paragraph> 
<paragraph id="HF39FDBE9E1DA460F90DA85019A8AD8F3"><enum>(14)</enum><text>$30,978,191,000 for <quote>Other Procurement, Air Force</quote>.</text></paragraph> <paragraph id="HD43950A05CAD407888F298D911F7BF76"><enum>(15)</enum><text>$3,900,769,000 for <quote>Procurement, Space Force</quote>.</text></paragraph> 
<paragraph id="HFF965E25C0254AC79365575D80EE1CEC"><enum>(16)</enum><text>$5,719,307,000 for <quote>Procurement, Defense-Wide</quote>.</text></paragraph> <paragraph id="H069268056B274D0B9EC98EBFD649F1A0"><enum>(17)</enum><text>$463,377,000 for <quote>Defense Production Act Purchases</quote>.</text></paragraph> 
<paragraph id="H12B82C8963654BEE90EE848508338E30"><enum>(18)</enum><text>$850,000,000 for <quote>National Guard and Reserve Equipment Account</quote>.</text></paragraph></section> <section id="H5CA89157D181484F9AE9A64A996966D0"><enum>1404.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for <quote>Shipbuilding and Conversion, Navy</quote> shall be $33,331,952,000, as follows:</text> 
<paragraph id="H7BD1085DB04E4B76A927E69898FB9154"><enum>(1)</enum><text>Columbia Class Submarine, $3,364,835,000;</text></paragraph> <paragraph id="HF1DCFC35D521414A96BB4AECCB1A3F51"><enum>(2)</enum><text>Columbia Class Submarine (AP), $6,215,939,000;</text></paragraph> 
<paragraph id="H11D6EFB9519C4290816CD9036CC5390B"><enum>(3)</enum><text>Carrier Replacement Program (CVN–80), $1,123,124,000;</text></paragraph> <paragraph id="H9A315363DB3F44D3A074D72B34BD667E"><enum>(4)</enum><text>Carrier Replacement Program (CVN–81), $674,930,000;</text></paragraph> 
<paragraph id="H5CF1C16B808242AF97A09777BDF425EF"><enum>(5)</enum><text>Virginia Class Submarine, $3,615,904,000;</text></paragraph> <paragraph id="HFDD18F7533CE492B8719E18D16DB18BC"><enum>(6)</enum><text>Virginia Class Submarine (AP), $3,720,303,000;</text></paragraph> 
<paragraph id="H56B623B86B3F4712880DDBAA86D94995"><enum>(7)</enum><text>CVN Refueling Overhauls, $811,143,000;</text></paragraph> <paragraph id="HBB52B3DDA65845AFA6D5BC3BCF1A2184"><enum>(8)</enum><text>DDG–1000 Program, $61,100,000;</text></paragraph> 
<paragraph id="HB4AE3A4BAE0C4ADFA6A741A34BACB5D9"><enum>(9)</enum><text>DDG–51 Destroyer, $7,951,890,000;</text></paragraph> <paragraph id="H96D68828CACB48BDA63BE73DD766A790"><enum>(10)</enum><text>DDG–51 Destroyer (AP), $83,224,000;</text></paragraph> 
<paragraph id="H058D2CD1593C4336A3B3359B900C55B1"><enum>(11)</enum><text>FFG–Frigate, $233,200,000;</text></paragraph> <paragraph id="H45887FB1757846AA9FD80E0BEC8A95A6"><enum>(12)</enum><text>LPD Flight II, $1,561,963,000;</text></paragraph> 
<paragraph id="H538BC23F3BBA44B79FEDD476ABB1ED75"><enum>(13)</enum><text>LHA Replacement (AP), $61,118,000;</text></paragraph> <paragraph id="HADD67A1FC607442092F203E6E783AC4B"><enum>(14)</enum><text display-inline="yes-display-inline">Medium Landing Ship, $29,668,000;</text></paragraph> 
<paragraph id="H5EEC9DBB314448799410CDE81991417C"><enum>(15)</enum><text display-inline="yes-display-inline">Ship to Shore Connector, $480,000,000;</text></paragraph> <paragraph id="HD9C8615403524F8EA185695CF1850645"><enum>(16)</enum><text display-inline="yes-display-inline">Service Craft, $41,426,000;</text></paragraph> 
<paragraph id="HECB946C0B97D492984C05E6F6E4C6109"><enum>(17)</enum><text display-inline="yes-display-inline">Auxiliary Personnel Lighter, $76,168,000;</text></paragraph> <paragraph id="HDC3FBEEB5B144EF68E18D1A936C716C6"><enum>(18)</enum><text display-inline="yes-display-inline">LCAC SLEP, $45,087,000;</text></paragraph> 
<paragraph id="H15DF989FE84743D38398D1DBAFF24639"><enum>(19)</enum><text display-inline="yes-display-inline">Auxiliary Vessels, $204,939,000;</text></paragraph> <paragraph id="HAE213CD2B5D34F92BA527B008566102B"><enum>(20)</enum><text>For outfitting, post delivery, conversions, and first destination transportation, $585,967,000; and</text></paragraph> 
<paragraph id="H2E045DB8517043B599CF9B5AE11BEC29"><enum>(21)</enum><text>Completion of Prior Year Shipbuilding Programs, $2,390,024,000.</text></paragraph></section> <section id="H6EA05465DE1441EE9601E96D59C161D0"><enum>1405.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for appropriations accounts under title IV of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be as follows:</text> 
<paragraph id="HD5928B8A81FF43CB866DC4CEFB5605C0"><enum>(1)</enum><text>$14,322,031,000 for <quote>Research, Development, Test and Evaluation, Army</quote>.</text></paragraph> <paragraph id="HEA8275EA7441427A825290EF430E5C73"><enum>(2)</enum><text>$25,967,177,000 for <quote>Research, Development, Test and Evaluation, Navy</quote>.</text></paragraph> 
<paragraph id="HF95E391BD39648C2931CC663A75500FF"><enum>(3)</enum><text>$46,811,425,000 for <quote>Research, Development, Test and Evaluation, Air Force</quote>.</text></paragraph> <paragraph id="HAB8A9EB6D9724B24AE7A0494795B0BF5"><enum>(4)</enum><text>$18,553,363,000 for <quote>Research, Development, Test and Evaluation, Space Force</quote>.</text></paragraph> 
<paragraph id="H9B13BD9A43484B02806EA295ABFF66A8"><enum>(5)</enum><text>$35,238,856,000 for <quote>Research, Development, Test and Evaluation, Defense-Wide</quote>.</text></paragraph> <paragraph id="H255121E87E914D5C9DEA962F7E4C6F17"><enum>(6)</enum><text>$348,709,000 for <quote>Operational Test and Evaluation, Defense</quote>.</text></paragraph></section> 
<section id="HAF6DA48ACDCA4189B733E91A417A6FB9"><enum>1406.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for <quote>Revolving and Management Funds</quote> shall be $1,840,550,000.</text></section> <section id="H67050C6294004AF6A1E9038C669BBF9A"><enum>1407.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for appropriations accounts under title VI of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be as follows:</text> 
<paragraph id="H09547F1F8FE441ABA05F98FC4FA55CE0"><enum>(1)</enum><text display-inline="yes-display-inline">$40,395,072,000 for <quote>Defense Health Program</quote>: <italic>Provided</italic>, That the amounts included under such heading shall be applied to funds appropriated by this Act by substituting <quote>$38,300,769,000</quote> for <quote>$36,639,695,000</quote>, <quote>$20,599,128,000</quote> for <quote>$19,757,403,000</quote>, <quote>$398,867,000</quote> for <quote>$381,881,000</quote>, <quote>$1,695,436,000</quote> for <quote>$2,877,048,000</quote>, and <quote>$650,000,000</quote> for <quote>$1,509,000,000</quote>.</text></paragraph> <paragraph id="HF167FBBF0C8340D3A7F3311A1FF484BE"><enum>(2)</enum><text display-inline="yes-display-inline">$775,507,000 for <quote>Chemical Agents and Munitions Destruction, Defense</quote>: <italic>Provided</italic>, That the amounts included under such heading shall be applied to funds appropriated by this Act by striking <quote>$57,875,000</quote> and substituting <quote>$20,745,000</quote> for <quote>$89,284,000</quote>, <quote>$13,945,000</quote> for <quote>$23,676,000</quote>, <quote>$6,800,000</quote> for <quote>$34,199,000</quote>, and <quote>$754,762,000</quote> for <quote>$1,002,560,000</quote>.</text></paragraph> 
<paragraph id="HCEFC6B0A9892428CB94C3DAF10CA103D"><enum>(3)</enum><text display-inline="yes-display-inline">$1,110,436,000 for <quote>Drug Interdiction and Counter-Drug Activities, Defense</quote>: <italic>Provided</italic>, That the amounts included under such heading shall be applied to funds appropriated by this Act by substituting <quote>$653,702,000</quote> for <quote>$702,962,000</quote>, <quote>$135,567,000</quote> for <quote>$138,313,000</quote>, <quote>$295,000,000</quote> for <quote>$305,786,000</quote>, and <quote>$26,167,000</quote> for <quote>$30,000,000</quote>.</text></paragraph> <paragraph id="H34385E3D2E78415D853E9A67C9DED09A"><enum>(4)</enum><text display-inline="yes-display-inline">$539,769,000 for <quote>Office of the Inspector General</quote>: <italic>Provided</italic>, That the amounts included under such heading shall be applied to funds appropriated by this Act by substituting <quote>$536,533,000</quote> for <quote>$524,067,000</quote>, <quote>$1,336,000</quote> for <quote>$1,098,000</quote>, and <quote>$1,900,000</quote> for <quote>$3,400,000</quote>.</text></paragraph></section> 
<section id="H2C3744E70475451595243DD487391B94"><enum>1408.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for <quote>Related Agencies, Intelligence Community Management Account</quote> under title VII of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be $629,128,000. </text></section> <section id="HA6703CCF80BA480D829BC3F67911E9B4" commented="no"><enum>1409.</enum><text display-inline="yes-display-inline">No appropriation or funds made available or authority granted pursuant to section 1101(3) for the Department of Defense shall be used to initiate or resume any project or activity unless provided for in H.R. 8774 (as engrossed in the House of Representatives on June 28, 2024) or S. 4921 (as reported by the Senate Committee on Appropriations on August 1, 2024). </text></section> 
<section id="HA6A05F00B2174A4FA879C7B67D9D500F" commented="no"><enum>1410.</enum><text display-inline="yes-display-inline">The levels for appropriations accounts specified in sections 1401 through 1408 for classified programs shall conform to the direction included in the classified annex accompanying this title and shall be implemented in a manner consistent with <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>.</text></section> <section id="H0153C2A59C1342E8BE900F875E2353F3"><enum>1411.</enum><text display-inline="yes-display-inline">Section 8004 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>40 percent</quote> for <quote>20 percent</quote>.</text></section> 
<section id="H6375C753BCDD4BFDAAEE36D1DC034F8D"><enum>1412.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="H52CA200B398841DC83CA8638020E0FE6"><enum>(a)</enum><text display-inline="yes-display-inline">Section 8005 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> is amended by striking <quote>$6,000,000,000</quote> and inserting <quote>$8,000,000,000</quote>: <italic>Provided,</italic> That any transfer made pursuant to such section may not extend the period of availability of funds transferred beyond the period of availability for obligation of such funds as provided to such funds in division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>.</text> <paragraph id="HA2867F17E9164868A0B9C717500178AE"><enum>(b)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, section 8005 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this Act by substituting <quote>$8,000,000,000</quote> for the dollar amount in such section.</text></paragraph></subsection></section> 
<section id="H92E3938C222C451D9743A88160558A4E"><enum>1413.</enum><text display-inline="yes-display-inline">Section 8026 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>$2,886,300,000</quote> for <quote>$2,857,803,000</quote> and <quote>$461,300,000</quote> for <quote>$456,803,000</quote>. Subsection (e) of such section shall not apply to funds appropriated by this Act.</text></section> <section id="H5131905B77A84FEDA7FB62A16C17F954"><enum>1414.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, section 8109 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>$1,362,809,000</quote> for <quote>$1,406,346,000</quote>, section 8110 of such division shall be applied by substituting <quote>$350,000,000</quote> for <quote>$380,000,000</quote>, and section 8117 of such division shall be applied by substituting <quote>$50,406,000</quote> for <quote>$15,000,000</quote>. </text></section> 
<section id="H1BAD57A3C3464C09A8F968ED60D43411"><enum>1415.</enum><text display-inline="yes-display-inline">Section 8046 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>, shall not apply to funds made available under this Act.</text></section><appropriations-small id="HB7C6C6DB44E4496CAA761F9EB761F729"><header>(Rescissions)</header></appropriations-small> <section id="HE6C36ACC464241138A842205989EA784"><enum>1416.</enum><text display-inline="yes-display-inline">The following amounts are permanently rescinded:</text> 
<paragraph id="H8296C085E7224013B0F667C447AC852C"><enum>(1)</enum><text display-inline="yes-display-inline"><quote>Afghanistan Security Forces Fund</quote>, 2022/2025, $80,000,000;</text></paragraph> <paragraph id="HFF5CBE674B5F425685E6E8B45DC37603"><enum>(2)</enum><text display-inline="yes-display-inline"><quote>Aircraft Procurement, Army</quote>, 2023/2025, $25,000,000;</text></paragraph> 
<paragraph id="H32EE8E5F283A4FD58333F311CBE7CC0A"><enum>(3)</enum><text display-inline="yes-display-inline"><quote>Aircraft Procurement, Navy</quote>, 2023/2025, $3,700,000;</text></paragraph> <paragraph id="H63692CC9751E424082F370CF64593B22"><enum>(4)</enum><text display-inline="yes-display-inline"><quote>Other Procurement, Navy</quote>, 2023/2025, $45,000,000;</text></paragraph> 
<paragraph id="HCCD1D71B3D6B4FC2B404A2A13D6AF7A5"><enum>(5)</enum><text display-inline="yes-display-inline"><quote>Aircraft Procurement, Air Force</quote>, 2023/2025, $125,373,000;</text></paragraph> <paragraph id="H6ED0B8D5176045018AFEA52A6B53E5AE"><enum>(6)</enum><text display-inline="yes-display-inline"><quote>Procurement Ammunition, Air Force</quote>, 2023/2025, $23,000,000;</text></paragraph> 
<paragraph id="HE920EE942B674B549F1872A158F2D1F7"><enum>(7)</enum><text display-inline="yes-display-inline"><quote>Operation and Maintenance, Defense-Wide</quote>, 2024/2025, $25,000,000;</text></paragraph> <paragraph id="HCA10CAA5D6824E10839A07E2D13BF7C4"><enum>(8)</enum><text display-inline="yes-display-inline"><quote>Counter-ISIS Train and Equip Fund</quote>, 2024/2025, $50,000,000;</text></paragraph> 
<paragraph id="HC26E03AC538B49B08B823182E9DBF628"><enum>(9)</enum><text display-inline="yes-display-inline"><quote>Cooperative Threat Reduction Account</quote>, 2024/2026, $91,000,000;</text></paragraph> <paragraph id="H64603FF5F67D437197980C3E5E9DD567"><enum>(10)</enum><text display-inline="yes-display-inline"><quote>Aircraft Procurement, Navy</quote>, 2024/2026, $48,050,000;</text></paragraph> 
<paragraph id="H37855918EB61470E84D711DD5CFE0CAB"><enum>(11)</enum><text display-inline="yes-display-inline"><quote>Aircraft Procurement, Air Force</quote>, 2024/2026, $65,000,000;</text></paragraph> <paragraph id="H09CC916770D3415EB299F81C0414F9B6"><enum>(12)</enum><text display-inline="yes-display-inline"><quote>Other Procurement, Air Force</quote>, 2024/2026, $188,300,000;</text></paragraph> 
<paragraph id="H89024FE868B642E49EE66E4290695874"><enum>(13)</enum><text display-inline="yes-display-inline"><quote>Procurement, Space Force</quote>, 2024/2026, $46,300,000;</text></paragraph> <paragraph id="HB62CAB016E3A436C90A6FB0A56AC4197"><enum>(14)</enum><text display-inline="yes-display-inline"><quote>Procurement, Defense-Wide</quote>, 2024/2026, $14,777,000;</text></paragraph> 
<paragraph id="HA174FDC3A22E4CF0BCA6F64C82907A63"><enum>(15)</enum><text display-inline="yes-display-inline"><quote>Research, Development, Test and Evaluation, Navy</quote>, 2024/2025, $51,395,000;</text></paragraph> <paragraph id="H3669E49FF3C842B6A45E3EEEB5E77D60"><enum>(16)</enum><text display-inline="yes-display-inline"><quote>Research, Development, Test and Evaluation, Air Force</quote>, 2024/2025, $408,942,000;</text></paragraph> 
<paragraph id="H895F15387E244BBF968B92635888CA1C"><enum>(17)</enum><text display-inline="yes-display-inline"><quote>Research, Development, Test and Evaluation, Space Force</quote>, 2024/2025, $111,665,000; and</text></paragraph> <paragraph id="H8566D06F5162418C9DD1287E498B754D"><enum>(18)</enum><text display-inline="yes-display-inline"><quote>Research, Development, Test and Evaluation, Defense-Wide</quote>, 2024/2025, $31,800,000. </text></paragraph></section> 
<section id="HC5FCDBEA95DE4059A0194B96C09F2D6C"><enum>1417.</enum><text display-inline="yes-display-inline">Of the amounts appropriated in section 1404 of this Act, $2,390,024,000 shall be available until September 30, 2025, to fund prior year shipbuilding costs increases for the following programs:</text> <paragraph id="H0D2A401B274E4642AB64CA0B96133546"><enum>(1)</enum><text display-inline="yes-display-inline">Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2013/2025: Carrier Replacement Program, $236,000,000;</text></paragraph> 
<paragraph id="HA40EF296667A41A2B91B09254F2E9731"><enum>(2)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2016/2025: DDG–51 Program, $10,509,000;</text></paragraph> <paragraph id="HD5BB2EE5363C47C69BE7121C611C1EFD"><enum>(3)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2016/2025: Towing, Salvage, and Rescue Ship Program, $60,000,000;</text></paragraph> 
<paragraph id="HCA89A77C42904C67948DB88DD165FA13"><enum>(4)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2017/2025: Virginia Class Submarine Program, $219,370,000;</text></paragraph> <paragraph id="H94BE5A1DB0374B0286891AD6447908B4"><enum>(5)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2017/2025: DDG–51 Program, $115,600,000;</text></paragraph> 
<paragraph id="HBA1DFCABFF304F05B91FEF0BBDC9268B"><enum>(6)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2017/2025: Littoral Combat Ship Program, $8,100,000;</text></paragraph> <paragraph id="H7F7013A1E62C4877AF1A8B8600E02222"><enum>(7)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2017/2025: LHA Replacement Program, $115,397,000;</text></paragraph> 
<paragraph id="H623DAE9B96A247F2AEB90206D84C0A25"><enum>(8)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2018/2025: Virginia Class Submarine Program, $73,634,000;</text></paragraph> <paragraph id="H9C02AD8831244DED8D9E063008178373"><enum>(9)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2018/2025: DDG–51 Program, $107,405,000;</text></paragraph> 
<paragraph id="HA86805FBF5E24285BB9E3C78CBE1BF2D"><enum>(10)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2018/2025: Littoral Combat Ship Program, $12,000,000;</text></paragraph> <paragraph id="HDF7D591262EC42EABCF416F7B088CCDF"><enum>(11)</enum><text display-inline="yes-display-inline">Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2018/2025: LPD 17 (Flight II) Amphibious Transport Dock Program, $19,158,000;</text></paragraph> 
<paragraph id="HDA876250498C4B48A293403E12A28E6C"><enum>(12)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2018/2025: Oceanographic Ships Program, $18,000,000;</text></paragraph> <paragraph id="H99A14B36F63E42789FD2200CBB0687CC"><enum>(13)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2018/2025: Ship to Shore Connector Program, $14,694,000;</text></paragraph> 
<paragraph id="H4B32B263C70F47D8BC6CEC48491ED1F0"><enum>(14)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2019/2025: Littoral Combat Ship Program, $27,900,000;</text></paragraph> <paragraph id="HB3B072D753A64019ABE943156514D848"><enum>(15)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2019/2025: T–AO Fleet Oiler Program, $49,995,000;</text></paragraph> 
<paragraph id="HBDCC6BD9755C4FCAB97477F9051AD6FF"><enum>(16)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2019/2025: Ship to Shore Connector Program, $33,345,000;</text></paragraph> <paragraph id="H287584D5FFE5480FB75F21E850AB2ADA"><enum>(17)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2020/2025: CVN Refueling Overhauls, $669,171,000;</text></paragraph> 
<paragraph id="H7905A62820D0451488537D322094252B"><enum>(18)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2020/2025: FFG–Frigate Program, $105,413,000;</text></paragraph> <paragraph id="H227CCD31A608411BA9890B5DAE6BEFC1"><enum>(19)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2020/2025: T–AO Fleet Oiler Program, $151,837,000;</text></paragraph> 
<paragraph id="H52201A635B194AE5BB620D6E58E7B3CE"><enum>(20)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2020/2025: Towing, Salvage, and Rescue Ship Program, $978,000;</text></paragraph> <paragraph id="HB23FDB04686D4B58A9D2C1812EEC8ABC"><enum>(21)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2021/2025: FFG–Frigate Program, $76,580,000;</text></paragraph> 
<paragraph id="H8C967FE777874B83850AD5EC92F08DE1"><enum>(22)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2021/2025: Towing, Salvage, and Rescue Ship Program, $17,375,000;</text></paragraph> <paragraph id="H4113AD224DCF4D3988BDB7A8B72B9741"><enum>(23)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2022/2025: FFG–Frigate Program, $64,940,000;</text></paragraph> 
<paragraph id="H04C7BFBD196340DEADCE22D68B8D46E3"><enum>(24)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2022/2025: T–AO Fleet Oiler Program, $13,222,000;</text></paragraph> <paragraph id="H729542692FF9425DAA40CA95553B891E"><enum>(25)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2022/2025: Towing, Salvage, and Rescue Ship Program, $4,234,000;</text></paragraph> 
<paragraph id="H213A81181F3C4DEBABB123B589C64B5A"><enum>(26)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2023/2025: FFG–Frigate Program, $54,308,000;</text></paragraph> <paragraph id="H32B43FA42F1E45558D165F4D246ADBCA"><enum>(27)</enum><text>Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2023/2025: T–AO Fleet Oiler Program, $12,100,000; and</text></paragraph> 
<paragraph id="H23BB01BE0A774850A4028743B0F8E1DC"><enum>(28)</enum><text display-inline="yes-display-inline">Under the heading <quote>Shipbuilding and Conversion, Navy</quote>, 2024/2025: FFG–Frigate Program, $98,759,000.</text></paragraph></section> <section id="HBDE512F949B54BF286DA0296355FB86E"><enum>1418.</enum><text display-inline="yes-display-inline">The last paragraph in section 8010 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by striking <quote>Naval Strike Missile</quote> and all that follows before the period and inserting <quote>CH–53K Heavy Lift helicopters, T408 engines, and USS Virginia Class (SSN–774)</quote>.</text></section> 
<section id="H34B10730B67B45BD8C877BF9647ECAA1"><enum>1419.</enum><text display-inline="yes-display-inline">During the period covered by this Act, section 8092 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>$204,939,000</quote> for <quote>$142,008,000</quote>.</text></section> <section id="HAB563D570E20406C8D039F3BA5AB18F1"><enum>1420.</enum><text display-inline="yes-display-inline">For an additional amount there is appropriated to the <quote>Department of Defense Credit Program Account</quote> established pursuant to section 149(e)(5) of title 10, United States Code, as amended by section 905(a) of the National Defense Authorization Act for Fiscal Year 2025 (<external-xref legal-doc="public-law" parsable-cite="pl/118/159">Public Law 118–159</external-xref>), $89,049,000, to remain available until expended, to carry out a pilot program on capital assistance to support defense investment in the industrial base as authorized by section 149(e) of such title, of which up to $7,900,000 may be used for administrative expenses and project-specific transaction costs: <italic>Provided</italic>, That costs of loans and loan guarantees, including the cost of modifying such loans and loan guarantees, shall be as defined in section 502 of the Congressional Budget Act of 1974: <italic>Provided further,</italic> That such amounts are available to subsidize gross obligations for the principal amount of loans, and total loan principal, any part of which is to be guaranteed, not to exceed $4,000,000,000: <italic>Provided further,</italic> That, for the purposes of carrying out the Congressional Budget Act of 1974, the Director of the Congressional Budget Office may request, and the Secretary shall promptly provide documentation and information relating to a project receiving capital assistance as authorized under section 149(e) of such title: <italic>Provided further,</italic> That section 8140 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall not apply to funds appropriated by this Act.</text></section><appropriations-small id="HFF39A85FBDE74A91BD0AF3854CC4FED7"><header>(Including Transfer of Funds)</header></appropriations-small> 
<section id="H772C0E7F2309453C8E80CC9DCF332E41"><enum>1421.</enum><text display-inline="yes-display-inline">For an additional amount for the Department of Defense, $8,000,000,000, to remain available until September 30, 2025, for transfer to military personnel accounts, operation and maintenance accounts, and the Defense Working Capital Funds, in addition to amounts otherwise made available only for U.S. military operations, force protection, and deterrence led by Commander, United States Central Command and Commander, United States European Command: <italic>Provided</italic>, That none of the funds provided under this section may be obligated or expended until 30 days after the Secretary of Defense provides to the congressional defense committees an execution plan: <italic>Provided further,</italic> That not less than 15 days prior to any transfer of funds, the Secretary of Defense shall notify the congressional defense committees of the details of any such transfer: <italic>Provided further</italic>, That the transfer authority provided under this section is in addition to any other transfer authority provided elsewhere in this Act: <italic>Provided further</italic>, That upon transfer, the funds shall be merged with and available for the same purposes, and for the same time period, as the appropriation to which transferred: <italic>Provided further,</italic> That upon a determination that all or part of the funds transferred from this appropriation are not necessary for the purposes provided herein, such amounts may be transferred back and merged with this appropriation.</text></section> <section id="HBDCEFD5B8C754AD48315F7F8770A0E7B"><enum>1422.</enum> <subsection commented="no" display-inline="yes-display-inline" id="HB50B5B4A1DBE4453BE5BEAEDB035FDDC"><enum>(a)</enum><text display-inline="yes-display-inline">Not later than 45 days after the date of the enactment of this division, the Department of Defense, after consultation with the Subcommittees on Defense of the Committees on Appropriations of the House of Representatives and the Senate, shall submit to such Subcommittees a spending, expenditure, or operating plan for fiscal year 2025 for appropriations or funds made available pursuant to section 1101(a)(3) or any other provision of this title for the Department of Defense at the same level of detail required for the report outlined by section 8007 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>.</text></subsection> 
<subsection id="H8B5BFF459F494C13A187F10BDFF0C92C"><enum>(b)</enum><text display-inline="yes-display-inline">No program, project, or activity may be included in the expenditure plan submitted pursuant to subsection (a) unless such program, project, or activity was provided for in H.R. 8774 (as engrossed in the House of Representatives on June 28, 2024) or S. 4921 (as reported by the Senate Committee on Appropriations on August 1, 2024) or in the reports accompanying those Acts. </text></subsection> <subsection id="HB2765D70F4FA49E69220A5CE571961A8"><enum>(c)</enum><text display-inline="yes-display-inline">The plan submitted pursuant to subsection (a) shall serve as the baseline for reprogramming and transfer authorities for fiscal year 2025 under the authorities and conditions of sections 8005 and 8006 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>. </text></subsection> 
<subsection id="HE23854DFC54F4CB5938BBB1BD0E0704F"><enum>(d)</enum><text display-inline="yes-display-inline">If a sequestration is ordered by the President under section 254 of the Balanced Budget and Emergency Deficit Control Act of 1985, the spending, expenditure, or operating plan required by this section shall reflect such sequestration. </text></subsection></section></title> <title id="H7A532F63D89941328281FDF62465A71E"><enum>V</enum><header>Energy and Water Development and Related Agencies</header> <section id="H43F543D0292441158EBF91AD1C44D0F0"><enum>1501.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be applied as follows:</text> 
<subsection id="H2D663A00A9C142D2B9CED340ED4B6D26"><enum>(1)</enum><text display-inline="yes-display-inline">$1,710,806,000 for <quote>Department of the Interior—Bureau of Reclamation—Water and Related Resources</quote>: <italic>Provided</italic>, That the sixth proviso under such heading shall not apply to funds appropriated in this division.</text></subsection> <subsection id="HA78B1E86C4B04182A89367EEB5C6E762"><enum>(2)</enum><text display-inline="yes-display-inline">$0 for <quote>Department of Energy—Energy Programs—Energy Projects</quote>.</text></subsection></section> 
<section id="HBF4AA56459054C6F81E80A49DD53CE34"><enum>1502.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows:</text> <subsection id="HC63473400740499DB1FA0C8719BBAD25"><enum>(1)</enum><text>$55,000,000 for <quote>Department of Energy—Energy Programs—Title 17 Innovative Technology Loan Guarantee Program</quote>: <italic>Provided</italic>, That the second and third provisos shall be applied by substituting <quote>$55,000,000</quote> for <quote>$70,000,000</quote> and the fourth proviso shall be applied by substituting <quote>$170,000,000</quote> for <quote>$70,000,000</quote>.</text></subsection> 
<subsection id="H112F5B44D3A2411F89B3A8A4FEB0D4C1"><enum>(2)</enum><text>$19,293,000,000 for <quote>Department of Energy—Atomic Energy Defense Activities—National Nuclear Security Administration—Weapons Activities</quote>.</text></subsection> <subsection id="H7E6042AD881C4C09AA377CC43C609EEB"><enum>(3)</enum><text>$2,396,000,000 for <quote>Department of Energy—Atomic Energy Defense Activities—National Nuclear Security Administration—Defense Nuclear Nonproliferation</quote>.</text></subsection> 
<subsection id="H21BD9DAC23CC40489C3DA78935ACFA75"><enum>(4)</enum><text display-inline="yes-display-inline">$1,107,000,000 for <quote>Department of Energy—Environmental and Other Defense Activities—Other Defense Activities</quote>.</text></subsection></section> <section id="H6FFCADAD2C6E4FAB93805F7AB7B5E9C6"><enum>1503.</enum> <subsection commented="no" display-inline="yes-display-inline" id="H5DB42A33D00C4B8FB7F95C50494D3932"><enum>(a)</enum><text display-inline="yes-display-inline">Section 102 of division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall not apply with respect to funds appropriated by this division.</text></subsection> 
<subsection id="H0E0BDE6208304FA6AD2C1EA13AE5F78D"><enum>(b)</enum><text display-inline="yes-display-inline">Not later than 60 days after the date of enactment of this division, the Chief of Engineers shall submit directly to the Committees on Appropriations of the House of Representatives and the Senate a detailed work plan for fiscal year 2025 with respect to the funds appropriated by this division for <quote>Corps of Engineers—Civil</quote>: <italic>Provided</italic>, That specific studies and projects shall not be eligible to receive such funds made available under the headings <quote>Investigations</quote>, <quote>Construction</quote>, and <quote>Mississippi River and Tributaries</quote>, as applicable, unless such studies and projects are active as of the date that is the day prior to the date of enactment of this division and are otherwise eligible to receive funds made available under such headings: <italic>Provided further</italic>, That the Assistant Secretary of the Army for Civil Works shall not deviate from the work plan submitted pursuant to this subsection once the plan has been submitted to the Committees on Appropriations of the House of Representatives and the Senate, except as provided in section 101 of division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref>.</text></subsection></section> <section id="HE2B1B48968D04B64979BCD475A8E82FA"><enum>1504.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, language under the heading <quote>Department of Energy—Energy Programs—Uranium Enrichment Decontamination and Decommissioning Fund</quote> in <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall be applied to funds appropriated by this Act by substituting <quote>to be deposited into and subsequently derived from</quote> for <quote>to be derived from</quote>.</text></section> 
<section id="H5A7718FF98DD4DAF86FC465AFC899852"><enum>1505.</enum><text display-inline="yes-display-inline">Section 301(d) of division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall not apply to amounts made available by this division to the Department of Energy under the headings <quote>Atomic Energy Defense Activities—National Nuclear Security Administration—Weapons Activities</quote>, <quote>Atomic Energy Defense Activities—National Nuclear Security Administration—Defense Nuclear Nonproliferation</quote>, and <quote>Environmental and Other Defense Activities—Defense Environmental Cleanup</quote>.</text></section> <section id="H9FC99B1D35764BEAA55E5654EAE7F540"><enum>1506.</enum><text display-inline="yes-display-inline">Section 10609(a) of the Northwestern New Mexico Rural Water Projects Act (subtitle B of title X of <external-xref legal-doc="public-law" parsable-cite="pl/111/11">Public Law 111–11</external-xref>) shall be applied by substituting <quote>$1,640,000,000</quote> for <quote>$870,000,000</quote> and <quote>2025</quote> for <quote>2024</quote>.</text></section> 
<section id="H5C02141C24E84584B8F8C75AFB89E628"><enum>1507.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="HC2202723DCAE4B25A7D82E6C574B1785"><enum>(a)</enum><text display-inline="yes-display-inline">In accordance with section 4007 of <external-xref legal-doc="public-law" parsable-cite="pl/114/322">Public Law 114–322</external-xref>, and as recommended by the Secretary of the Interior in a letter dated May 22, 2024, funding provided for such purpose in fiscal year 2024 shall be made available to the Sites Reservoir Project.</text></subsection> <subsection id="HD88FD8DE0B604A9CAA202EFDBF3B2998"><enum>(b)</enum><text display-inline="yes-display-inline">In accordance with section 4009(c) of <external-xref legal-doc="public-law" parsable-cite="pl/114/322">Public Law 114–322</external-xref>, and as recommended by the Secretary in a letter dated May 22, 2024, funding provided for such purpose in fiscal year 2023 and fiscal year 2024 shall be made available to the El Paso Aquifer Storage and Recovery Enhanced Arroyo Project, the Replenish Big Bear, the Purified Water Replenishment Project, the North San Diego Water Reuse Coalition Regional Recycled Water Program, the Coachella Valley Water District WRP–10 Non-Potable Water System Expansion, the Pure Water Oceanside Phase 1, and the Carpinteria Advanced Purification Project.</text></subsection></section> 
<section id="HB09EDB4CFEDC4947B4A32C4B27528720"><enum>1508.</enum><text display-inline="yes-display-inline">Amounts made available by section 1101 for <quote>Department of Energy—Atomic Energy Defense Activities—National Nuclear Security Administration—Naval Reactors</quote> may be used for the design and construction of the Naval Examination Acquisition Project.</text></section> <section id="H6A7365BF6BDE4E0E8B6E7649E415ED48"><enum>1509.</enum><text display-inline="yes-display-inline">Amounts made available by section 1101 for <quote>Department of Energy—Atomic Energy Defense Activities—National Nuclear Security Administration—Weapons Activities</quote> may be used for Domestic Uranium Enrichment, Warhead Assembly Modernization, the Principal Underground Laboratory for Subcritical Experimentation at the Nevada National Security Sites, the Analytic Gas Laboratory at Pantex, and the Plutonium Mission Safety and Quality Building at the Los Alamos National Laboratory.</text></section></title> 
<title id="HD2203E9C2588400895D13E8D7A05BE22"><enum>VI</enum><header>Financial Services and General Government</header> 
<section id="HB79064A3F349420AA4B5E12BBB18B963"><enum>1601.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts in division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied as follows:</text> <subsection id="HFB52FBFCCFAE4420BADEB538319F757F"><enum>(1)</enum><text>In section 204, by substituting <quote>$0</quote> for <quote>$13,045,000</quote>.</text></subsection> 
<subsection id="H1472E55D01144A6F920A906FA0807AF9"><enum>(2)</enum><text>In section 530, by substituting <quote>$0</quote> for <quote>$38,414,000</quote>.</text></subsection> <subsection id="HDDB486F2A3FA4CD7B6FB7C5FC021F621"><enum>(3)</enum><text>In section 542, by substituting <quote>$0</quote> for <quote>$116,541,000</quote>.</text></subsection></section> 
<section id="H1FD1C4ACC80C41FD88DC428C132E8078"><enum>1602.</enum><text>Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows:</text> <subsection id="H1EE72A28DC854597A6F782BDCE830AFE"><enum>(1)</enum><text display-inline="yes-display-inline">$15,000,000 for <quote>Election Assistance Commission—Election Security Grants</quote>.</text></subsection> 
<subsection id="H30561D39EAB9427FAD504E84163A860A"><enum>(2)</enum><text display-inline="yes-display-inline">$9,308,000,000 for <quote>General Services Administration—Federal Buildings Fund</quote>, without regard to the limitations in paragraphs (1) through (3) and subparagraphs (A) through (C) in paragraph (2) under such heading in division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>: <italic>Provided</italic>, That the amount under such heading for buildings operations shall be applied by substituting <quote>$3,272,000,000</quote> for <quote>$2,951,184,000</quote>.</text></subsection> <subsection id="HB9D8579CDE7D48E4BA0E04F095C7FFD1"><enum>(3)</enum><text display-inline="yes-display-inline">$8,000,000 for <quote>National Archives and Records Administration—Repairs and Restoration</quote>: <italic>Provided</italic>, That the amounts included under such heading in division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>$0</quote> for <quote>$17,500,000</quote>.</text></subsection> 
<subsection id="H8BD99F7123D446E8BD5FEA8C0A737D50"><enum>(4)</enum><text display-inline="yes-display-inline">$90,000,000 for <quote>District of Columbia—Federal Funds—Federal Payment For Emergency Planning and Security Costs In The District of Columbia</quote> : <italic>Provided</italic>, That $50,000,000 of the amounts included under such heading shall be for costs associated with the Presidential Inauguration held in January 2025.</text></subsection></section> <section id="H1C5D076301B74773B4818D8E29737496"><enum>1603.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, no funds are provided by this Act for <quote>General Services Administration—Pre-election Presidential Transition</quote>.</text></section> 
<section id="H6A2CC396E60445B5AD806F23702704E9"><enum>1604.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for <quote>Small Business Administration—Disaster Loans Program Account</quote> shall be $406,000,000: <italic>Provided</italic>, That the amounts included under such heading in division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>$396,000,000</quote> for <quote>$165,000,000</quote>: <italic>Provided further,</italic> That of the funds made available by section 1101 under such heading, $374,000,000 shall be for major disasters declared pursuant to the Robert T. Stafford Disaster Relief and Emergency Assistance Act (<external-xref legal-doc="usc" parsable-cite="usc/42/5122">42 U.S.C. 5122(2)</external-xref>) and is designated by the Congress as being for disaster relief pursuant to section 251(b)(2)(D) of the Balanced Budget and Emergency Deficit Control Act of 1985.</text></section> <section id="H73286BC4BB8F4570B8418FB04C8F73AC"><enum>1605.</enum><text>Notwithstanding 1101, section 747 of title VII of division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied through the date specified in section 1106 of this Act by— </text> 
<subsection id="H197F0586AC224929A8DE4E77F47ABA11"><enum>(1)</enum><text>substituting <quote>2024</quote> for <quote>2023</quote> each place it appears; </text></subsection> <subsection id="HBE7FB635EEE64FFD8C34FBF62936648E"><enum>(2)</enum><text>substituting <quote>2025</quote> for <quote>2024</quote> each place it appears; </text></subsection> 
<subsection id="H7B5C08F37C484C5DB0E83B01FDEF316D"><enum>(3)</enum><text>substituting <quote>2026</quote> for <quote>2025</quote>; and </text></subsection> <subsection id="H71467E603E974E82A338F7AD7A40FC0E"><enum>(4)</enum><text>substituting <quote>section 747 of division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>, as in effect on September 30, 2024</quote> for <quote>section 747 of division E of <external-xref legal-doc="public-law" parsable-cite="pl/117/328">Public Law 117–328</external-xref></quote> each place it appears. </text></subsection></section> 
<section id="HCFCD42C3B03B45BDAF9B6EF7021B1E4E"><enum>1606.</enum><text display-inline="yes-display-inline">Section 128 of division B of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall not apply for fiscal year 2025.</text></section> <section id="HA1FBCB7291814E7DB21B2C2ACD7883EC"><enum>1607.</enum><text>Section 302 of title III of <external-xref legal-doc="public-law" parsable-cite="pl/108/494">Public Law 108–494</external-xref> shall be applied by substituting the date specified in section 1106 of this Act for <quote>December 31, 2024</quote> each place it appears.</text></section> 
<section id="H580090EC181B4891B0AFB4B33A8246DB"><enum>1608.</enum><text display-inline="yes-display-inline">If, for fiscal year 2025, new budget authority provided in appropriations Acts exceeds the discretionary spending limit for any category set forth in section 251(c) of the Balanced Budget and Emergency Deficit Control Act of 1985 due to estimating differences with the Congressional Budget Office, an adjustment to the discretionary spending limit in such category for fiscal year 2025 shall be made by the Director of the Office of Management and Budget in the amount of the excess but the total of all such adjustments shall not exceed 0.25 percent of the sum of the adjusted discretionary spending limits for all categories for that fiscal year.</text></section></title> <title id="HDDFB2F5A717641B88FFFAFA73318BAED"><enum>VII</enum><header>Department of Homeland Security</header> <section id="H8A092901474A4D4DA52352536517AC87"><enum>1701.</enum><text>Notwithstanding section 1101, the level for the following accounts shall be as follows:</text> 
<subsection id="H9053B5096946418FA0C615B11F4BE57C"><enum>(1)</enum><text display-inline="yes-display-inline">$9,986,542,000 for <quote>U.S. Immigration and Customs Enforcement—Operations and Support</quote>.</text></subsection> <subsection id="HC1CC64303CFE4E0C987ABE3683372CEA"><enum>(2)</enum><text>$10,614,968,000 for <quote>Transportation Security Administration—Operations and Support</quote>.</text></subsection> 
<subsection id="H720FAD86C6FB4621AE51E977F0804528"><enum>(3)</enum><text display-inline="yes-display-inline">$10,415,271,000 for <quote>Coast Guard—Operations and Support</quote>.</text></subsection> <subsection id="HFA810CA6BE734B5D8284D6F38A341C4A"><enum>(4)</enum><text display-inline="yes-display-inline">$3,203,262,000 for <quote>Federal Emergency Management Agency—Federal Assistance</quote>: <italic>Provided,</italic> That the matter under such heading in division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds provided by this Act by substituting <quote>$0</quote> for each number in paragraph (12).</text></subsection> 
<subsection id="H8D7C1C8AC22A4D5480F61CB00D859A27"><enum>(5)</enum><text display-inline="yes-display-inline">$22,510,000,000 for <quote>Federal Emergency Management Agency—Disaster Relief Fund</quote>: <italic>Provided</italic>, That such amount shall be for major disasters declared pursuant to the Robert T. Stafford Disaster Relief and Emergency Assistance Act (<external-xref legal-doc="usc" parsable-cite="usc/42/5121">42 U.S.C. 5121 et seq.</external-xref>) and is designated by the Congress as being for disaster relief pursuant to section 251(b)(2)(D) of the Balanced Budget and Emergency Deficit Control Act of 1985.</text></subsection></section> <section id="HBAFE7E12AE5E433E8949F6E50846494D"><enum>1702.</enum><text>Section 11223(b)(2) of the Don Young Coast Guard Authorization Act of 2022 (division K of <external-xref legal-doc="public-law" parsable-cite="pl/117/263">Public Law 117–263</external-xref>) is amended by striking <quote>shall apply</quote> and inserting <quote>shall not apply</quote>.</text></section> 
<section id="H27C13951B05844BDABD93DB20110A337"><enum>1703.</enum><text>During the period covered by this Act, section 517 of title 10, United States Code, shall not apply with respect to the Coast Guard.</text></section> <section id="HC04C9E3B3D864F12A5435DC08576EE14"><enum>1704.</enum><text>Notwithstanding section 1101 of this Act, the matter preceding the first proviso under the heading <quote>United States Secret Service—Operations and Support</quote> in division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this Act by substituting <quote>$35,000,000</quote> for <quote>$24,000,000</quote> and substituting <quote>2024</quote> for <quote>2023</quote>.</text></section> 
<section id="H8943052AB3E047F4804E9CA514EB130C"><enum>1705.</enum><text>For fiscal year 2025, section 227 of the Department of Homeland Security Appropriations Act, 2024 (division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>) shall have no force or effect.</text></section><appropriations-small id="H911350B5310F4234856EA4F1A0B2E6BD"><header>(Rescission)</header></appropriations-small> <section id="HB9AC8643089249C18FCFD84BAA6AFE78"><enum>1706.</enum><text>The following unobligated balances made available to the Department of Homeland Security pursuant to section 505 of the Department of Homeland Security Appropriations Act, 2024 (division C of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>) are rescinded:</text> 
<subsection id="HF1FD8B8AEE2548C5BFB79D9A0C72E697"><enum>(1)</enum><text display-inline="yes-display-inline">$550,000 from <quote>Office of the Secretary and Executive Management—Operations and Support</quote>.</text></subsection> <subsection id="HDB2091C2C95349D2887C65F172DEF694"><enum>(2)</enum><text>$1,497,000 from <quote>Management Directorate—Operations and Support</quote>.</text></subsection> 
<subsection id="HDD88B17CDF814A729E3F15A597685D9A"><enum>(3)</enum><text display-inline="yes-display-inline">$1,309,000 from <quote>Intelligence, Analysis, and Situational Awareness—Operations and Support</quote>.</text></subsection> <subsection id="H3F839F3B485E4311A03BE4878BBD7E40"><enum>(4)</enum><text display-inline="yes-display-inline">$102,000 from <quote>Office of Inspector General—Operations and Support</quote>.</text></subsection> 
<subsection id="HA8EF92C0EED5461DBE6ADEEBE6AF321E"><enum>(5)</enum><text display-inline="yes-display-inline">$15,823,000 from <quote>Transportation Security Administration—Operations and Support</quote>.</text></subsection> <subsection id="HB27AB25005CB431F8CA2344130C25E17"><enum>(6)</enum><text display-inline="yes-display-inline">$4,321,000 from <quote>Cybersecurity and Infrastructure Security Agency—Operations and Support</quote>.</text></subsection> 
<subsection id="H609B03E475A549A88FAA66DE81F61F07"><enum>(7)</enum><text display-inline="yes-display-inline">$1,723,000 from <quote>Federal Emergency Management Agency—Operations and Support</quote>.</text></subsection> <subsection id="H34567E6D04224F99B8EC238C100B1272"><enum>(8)</enum><text display-inline="yes-display-inline">$2,514,000 from <quote>U.S. Citizenship and Immigration Services—Operations and Support</quote>.</text></subsection> 
<subsection id="H504EAE57A1094582B5360A3D5A47A96B"><enum>(9)</enum><text display-inline="yes-display-inline">$685,000 from <quote>Federal Law Enforcement Training Centers—Operations and Support</quote>.</text></subsection> <subsection id="H4A3B8301DB124962A1B0403C160D7700"><enum>(10)</enum><text display-inline="yes-display-inline">$1,051,000 from <quote>Countering Weapons of Mass Destruction Office—Operations and Support</quote>.</text></subsection></section><appropriations-small id="H4738883D46D2436D926BF6EF6EC63DCB"><header>(Rescission)</header></appropriations-small> 
<section id="HEB39DE22F5504C51B172D3E2EE220842"><enum>1707.</enum><text>Of the unobligated balances in the <quote>Department of Homeland Security Nonrecurring Expenses Fund</quote> established in section 538 of division F of <external-xref legal-doc="public-law" parsable-cite="pl/117/103">Public Law 117–103</external-xref>, $133,000,000 are hereby rescinded.</text></section><appropriations-small id="HE0B5BBE3DEB44CF39825A13A20018466"><header>(Including Transfer of Funds)</header></appropriations-small> <section id="H7E0C259DC09B4A76BB4398A583224D0A"><enum>1708.</enum> <subsection commented="no" display-inline="yes-display-inline" id="H59AF375710A64838850DA390A3A6F873"><enum>(a)</enum><text display-inline="yes-display-inline">Of the total amount provided by paragraph (4) of section 1701 of this Act under the heading <quote>Federal Emergency Management Agency—Federal Assistance</quote>, $115,000,000 shall be derived by transfer from the unobligated balances from amounts made available in paragraph (2) under such heading in title V of division J of the Infrastructure Investment and Jobs Act (<external-xref legal-doc="public-law" parsable-cite="pl/117/58">Public Law 117–58</external-xref>) and shall be merged with amounts provided under such heading by paragraph (4) of section 1701 of this Act.</text></subsection> 
<subsection id="HBA15C223231D4104B80EC1EE8BB4C727"><enum>(b)</enum><text display-inline="yes-display-inline">Amounts repurposed or transferred pursuant to this section that were previously designated by the Congress as an emergency requirement pursuant to a concurrent resolution on the budget shall continue to be treated as an amount specified in section 103(b) of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/5">Public Law 118–5</external-xref>. </text></subsection></section> <section id="HC53176AA4B6A4906B87E7C800E345E46"><enum>1709.</enum> <subsection commented="no" display-inline="yes-display-inline" id="H1AAD96136AD64D279BB028502CAF37F1"><enum>(a)</enum><text display-inline="yes-display-inline">Sections 1309(a) and 1319 of the National Flood Insurance Act of 1968 (<external-xref legal-doc="usc" parsable-cite="usc/42/4016">42 U.S.C. 4016(a)</external-xref> and 4026) shall be applied by substituting the date specified in section 1106 of this Act for <quote>September 30, 2023</quote>.</text></subsection> 
<subsection id="HDC7C268B4600495EB1C21217FD54BCC6"><enum>(b)</enum> 
<paragraph commented="no" display-inline="yes-display-inline" id="H13B3963DA65244F3BD65B8D0207B1D28"><enum>(1)</enum><text display-inline="yes-display-inline">Subject to paragraph (2), this section shall become effective immediately upon enactment of this Act. </text></paragraph> <paragraph id="H1424F189ADF94C66A46A6FA67EF163FE" display-inline="no-display-inline"><enum>(2)</enum><text display-inline="yes-display-inline">If this Act is enacted after March 14, 2025, this section shall be applied as if it were in effect on March 14, 2025.</text></paragraph></subsection></section></title> 
<title id="HD7A7F19A2D7E4D1CA49AB99B07DA5A96"><enum>VIII</enum><header>Department of the Interior, Environment, and Related Agencies</header> 
<section id="HF792DC41AA1847A39F61840B53FDB986"><enum>1801.</enum><text>Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows:</text> <subsection display-inline="no-display-inline" id="H4A82488609054324B2910AF37010BF82"><enum>(1)</enum><text display-inline="yes-display-inline">$1,294,766,000 for <quote>Department of the Interior—Bureau of Land Management—Management of Lands and Resources</quote>: <italic>Provided</italic>, That the amounts included under such heading in division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$1,294,766,000</quote> for <quote>$1,294,916,000</quote> the second place it appears.</text></subsection> 
<subsection id="H25B18B03C30C4097987BDE4CC4EA0864"><enum>(2)</enum><text>$1,475,353,000 for <quote>Department of the Interior—United States Fish and Wildlife Service—Resource Management</quote>.</text></subsection> <subsection id="H36369305606F4DCCB338863617C77CF2"><enum>(3)</enum><text display-inline="yes-display-inline">$89,593,000 for <quote>Department of the Interior—National Park Service—National Recreation and Preservation</quote>.</text></subsection> 
<subsection id="HBC230527D3F648E09B80C96D36759CDB"><enum>(4)</enum><text>$168,900,000 for <quote>Department of the Interior—National Park Service—Historic Preservation Fund</quote>. </text></subsection> <subsection id="H4883620D7AD243138146EF7A5C876DB7"><enum>(5)</enum><text>$1,450,197,000 for <quote>Department of the Interior—United States Geological Survey—Surveys, Investigations, and Research</quote>. </text></subsection> 
<subsection id="H61816809AB7742DAAE4463BCC1BCB034"><enum>(6)</enum><text>$1,897,709,000 for <quote>Department of the Interior—Bureau of Indian Affairs—Operation of Indian Programs</quote>. </text></subsection> <subsection id="HCA56A85916224B9FBF837DCDAAE920CC"><enum>(7)</enum><text>$756,073,000 for <quote>Environmental Protection Agency—Science and Technology</quote>: <italic>Provided</italic>, That the amounts included under such heading in division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall be applied to the funds appropriated by this division as follows: by substituting <quote>$17,500,000</quote> for <quote>$19,530,000</quote>; and by substituting <quote>$0</quote> for <quote>$2,030,000</quote>. </text></subsection> 
<subsection id="H548F2532379640C3BD91C16F624535EB"><enum>(8)</enum><text display-inline="yes-display-inline">$4,380,245,000 for <quote>State and Tribal Assistance Grants</quote>: <italic>Provided</italic>, That the amounts included under such heading in division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall be applied to the funds appropriated by this division as follows: by substituting <quote>$0</quote> for <quote>$787,652,267</quote>; by substituting <quote>$0</quote> for <quote>$631,659,905</quote>; and by substituting <quote>$0</quote> for <quote>$38,693,000</quote>: <italic>Provided further</italic>, That the second proviso under the paragraph numbered (1) of such heading in division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall not apply to the funds appropriated by this division. </text></subsection> <subsection id="H336E34CFB17B4CA4A904FFDB93ECC8A7"><enum>(9)</enum><text>$283,500,000 for <quote>Department of Agriculture—Forest Service—State, Private, and Tribal Forestry</quote>.</text></subsection> 
<subsection id="H09EFD4798A124B4F94CCA46E490DE8C1"><enum>(10)</enum><text>$151,000,000 for <quote>Department of Agriculture—Forest Service—Capital Improvement and Maintenance</quote>.</text></subsection></section> <section id="HA2DBEFEBE88148CF8DEBBCFBB0D19313"><enum>1802.</enum><text>Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows:</text> 
<subsection display-inline="no-display-inline" id="HD72462F7C70D4901B392575F82EC5512"><enum>(1)</enum><text display-inline="yes-display-inline">$2,894,424,000 for <quote>Department of the Interior—National Park Service—Operation of the National Park System</quote>.</text></subsection> <subsection id="H19CAFC9311364C2EBE8421F12B347007"><enum>(2)</enum><text>$1,147,171,000 for <quote>Department of the Interior—Department-Wide Programs—Wildland Fire Management</quote>.</text></subsection> 
<subsection id="HFCFAFF5669B84273AD9483E1D0DC0BF4"><enum>(3)</enum><text display-inline="yes-display-inline">$3,195,028,000 for <quote>Environmental Protection Agency—Environmental Programs and Management</quote>.</text></subsection> <subsection id="HD3CD549510DB4685B585C81ED02470FC"><enum>(4)</enum><text>$2,426,111,000 for <quote>Department of Agriculture—Forest Service—Wildland Fire Management</quote>.</text></subsection></section> 
<section id="H46AC420EBFFD400A8B57346923A1811D"><enum>1803.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="HD07F3FD6F3054267A56AA10D90AE5769"><enum>(a)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for <quote>Department of Health and Human Services—Indian Health Service—Indian Health Services</quote> shall be $38,709,000 for amounts in the first appropriation in the matter preceding the first proviso under such heading. </text></subsection> <subsection id="H24B77ACD9DBF4917A49AC4FF243BF699"><enum>(b)</enum><text display-inline="yes-display-inline">In addition to amounts otherwise made available in section 1112, $38,709,000 is appropriated for <quote>Department of Health and Human Services—Indian Health Service—Indian Health Services</quote>, which shall become available on October 1, 2025, and remain available through September 30, 2027. </text></subsection></section> 
<section id="H5C384DAF67BA492989ADAA1375279789"><enum>1804.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="H8047949242634901AE0B3733F88181E3"><enum>(a)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for <quote>Department of Health and Human Services—Indian Health Service—Indian Health Facilities</quote> shall be—</text> <paragraph id="H07267C2A695645C4B0D23A29BE95758C"><enum>(1)</enum><text display-inline="yes-display-inline">$3,920,000 for amounts in the first appropriation in the matter preceding the first proviso under such heading; and</text></paragraph> 
<paragraph id="H69C47409D6C341E3BF7BEB70F8276CF8"><enum>(2)</enum><text display-inline="yes-display-inline">$289,306,000 for Sanitation Facilities Construction and Health Care Facilities Construction: </text></paragraph><continuation-text indent="subsection" continuation-text-level="subsection"><italic>Provided</italic>, That amounts included in the fourth proviso under such heading in division E of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$0</quote> for <quote>$17,023,000</quote>.</continuation-text></subsection> <subsection id="H2F2A69F8110A4DC89CA63F2DE87985A7"><enum>(b)</enum><text display-inline="yes-display-inline">In addition to amounts otherwise made available in section 1112, $3,920,000 is appropriated for <quote>Department of Health and Human Services—Indian Health Service—Indian Health Facilities</quote>, which shall become available on October 1, 2025, and remain available until expended. </text></subsection></section> 
<section id="H46420593706144589499E8EF0D0F2F1C"><enum>1805.</enum><text>Notwithstanding section 1101 of this Act, there is appropriated $1,650,000 for the <quote>Office of Navajo and Hopi Indian Relocation—Salaries and Expenses</quote> account, which shall be subject to the same terms and conditions as amounts otherwise made available to that account in fiscal year 2024 consistent with section 1105.</text></section> <section id="HDFA3D46D03C148A4B98FDE25043C1C01"><enum>1806.</enum> <subsection commented="no" display-inline="yes-display-inline" id="H25B78AC13D13405BB81B003EC525452C"><enum>(a)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for <quote>Department of the Interior—Department-Wide Programs—Wildfire Suppression Operations Reserve Fund</quote> shall be $360,000,000 for additional new budget authority as specified for purposes of section 251(b)(2)(F) of the of the Balanced Budget and Emergency Deficit Control Act of 1985. </text></subsection> 
<subsection id="H8445AE8409294522A1A17D175C2189D9"><enum>(b)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level for <quote>Department of Agriculture—Forest Service—Wildfire Suppression Operations Reserve Fund</quote> shall be $2,390,000,000 for additional new budget authority as specified for purposes of section 251(b)(2)(F) of the of the Balanced Budget and Emergency Deficit Control Act of 1985. </text></subsection></section> <section id="H3DE5567687D4429BA40E782D39702E56"><enum>1807.</enum><text>Sections 456 and 457 of H.R. 8998 from the 118th Congress (Department of the Interior, Environment, and Related Agencies Appropriations Act, 2025), as passed by the House of Representatives on July 24, 2024, are hereby enacted into law.</text></section> 
<section id="HCC8D1DB737714FE7B5AB1EA2ABCCF960" display-inline="no-display-inline" section-type="subsequent-section"><enum>1808.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="HB1E129E9737242248300EF54053003F6"><enum>(a)</enum><text>Funds previously made available in the Further Additional Supplemental Appropriations for Disaster Relief Requirements Act, 2018 (subdivision 1 of division B of <external-xref legal-doc="public-law" parsable-cite="pl/115/123">Public Law 115–123</external-xref>) for the <quote>Department of the Interior—National Park Service—Historic Preservation Fund</quote> that were available for obligation through fiscal year 2019 are to remain available through fiscal year 2026 for the liquidation of valid obligations incurred in fiscal years 2018 and 2019: <italic>Provided</italic>, That amounts repurposed pursuant to this section that were previously designated by the Congress as an emergency requirement pursuant to the Balanced Budget and Emergency Deficit Control Act of 1985 are designated as an emergency requirement pursuant to section 251(b)(2)(A)(i) of the Balanced Budget and Emergency Deficit Control Act of 1985.</text></subsection> <subsection id="HA0BE551F2AC34345A1CDA003BB834219"><enum>(b)</enum><text display-inline="yes-display-inline">This section shall—</text> 
<paragraph id="H8C1BFFB701D54C208E1DE23CDFF0E43C"><enum>(1)</enum><text display-inline="yes-display-inline">take effect on the day of enactment of this Act; and</text></paragraph> <paragraph id="H95AC5FB97D934EE3AF34F6D6FE9C3F0B"><enum>(2)</enum><text>be applied as if it were in effect on September 30, 2024.</text></paragraph></subsection></section> 
<section id="HC07E770304BB4B639AACFEC93814EBE8"><enum>1809.</enum><text>Section 113 of division G of <external-xref legal-doc="public-law" parsable-cite="pl/113/76">Public Law 113–76</external-xref> shall be applied by substituting <quote>2025</quote> for <quote>2024</quote>.</text></section></title> <title id="H378C026C5C504255B5036C4A3EC72D45"><enum>IX</enum><header>Departments of Labor, Health and Human Services, and Education, and Related Agencies</header> <section id="H674766272ED449F39815D44290FBD768"><enum>1901.</enum><text>Notwithstanding section 1101 of this Act, the level for <quote>Department of Labor—Bureau of Labor Statistics—Salaries and Expenses</quote> shall be applied by substituting <quote>$635,952,000</quote> for <quote>$629,952,000</quote>.</text></section> 
<section id="HAFB68A73CA3A4B71A3C5EEF21198430B"><enum>1902.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="H2C7B328B600944C8847A930FF5185715"><enum>(a)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the level which may be expended from the Employment Security Administration Account of the Unemployment Trust Fund for administrative expenses of <quote>Department of Labor—State Unemployment Insurance and Employment Service Operations</quote> shall be $3,928,084,000: <italic>Provided,</italic> That the amount included under such heading in division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$3,147,635,000</quote> for <quote>$3,141,635,000</quote> and <quote>$388,000,000</quote> for <quote>$382,000,000</quote>: <italic>Provided further</italic>, That of the funds made available by section 1101 under such heading to carry out reemployment services and eligibility assessments under section 306 of the Social Security Act, $271,000,000 is additional new budget authority specified for purposes of section 251(b)(2)(E) of the Balanced Budget and Emergency Deficit Control Act of 1985.</text></subsection> <subsection id="H783B9E4C40094F09B4A0BD3F2AD6D27D"><enum>(b)</enum><text>Notwithstanding section 1101, the level for <quote>Department of Health and Human Services—Centers for Medicare &amp; Medicaid Services—Health Care Fraud and Abuse Control Account</quote> shall be $941,000,000: <italic>Provided</italic>, That the amount included under such heading in division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$699,058,000</quote> for <quote>$675,058,000</quote>, <quote>$108,735,000</quote> for <quote>$107,735,000</quote>, and <quote>$133,207,000</quote> for <quote>$132,207,000</quote>: <italic>Provided further</italic>, That of the funds made available by section 1101 under such heading, $630,000,000 is additional new budget authority specified for purposes of section 251(b)(2)(C) of the Balanced Budget and Emergency Deficit Control Act of 1985 for additional health care fraud and abuse control activities.</text></subsection> 
<subsection id="H8582AAF38E09481282E17F7AD81D4DCB"><enum>(c)</enum><text>Notwithstanding section 1101, the level for <quote>Social Security Administration—Limitation on Administrative Expenses</quote> shall be $14,127,978,000: <italic>Provided</italic>, That the amount included under such heading in division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$1,903,000,000</quote> for <quote>$1,851,000,000</quote>: <italic>Provided further</italic>, That of the funds made available by section 1101 under such heading, $1,630,000,000 is additional new budget authority specified for purposes of section 251(b)(2)(B) of the Balanced Budget and Emergency Deficit Control Act of 1985.</text></subsection></section><appropriations-small id="H13A96E35F08544B38BCF21961D8DB026"><header>(Rescission)</header></appropriations-small> <section id="H76DEFD015C304572A6BE40B746A461F9"><enum>1903.</enum><text display-inline="yes-display-inline">Of the funds made available under the heading <quote>Department of Labor—Employment and Training Administration—Training and Employment Services</quote> in division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>, $75,000,000 are hereby permanently rescinded from the amount specified in paragraph (2)(A) under such heading for the period October 1, 2024 through September 30, 2025. </text></section> 
<section id="H65C44F1109F54CA2BF494E7424EE839F"><enum>1904.</enum><text display-inline="yes-display-inline">Notwithstanding section 1104 of this Act, during the period covered by this Act, the Secretary of Health and Human Services may collect registration fees from members of the Organ Procurement and Transplantation Network (in this section referred to as <quote>OPTN</quote>), authorized under section 372 of the Public Health Service Act, for each transplant candidate such members place on the list described in subsection (b)(2)(A)(i) of such section, including directly or through awards made under subsection (b)(1)(A) of such section: <italic>Provided</italic>, That such fees may be credited to the <quote>Department of Health and Human Services—Health Resources and Services Administration—Health Systems</quote> account, to remain available until expended, to support the operation of the OPTN: <italic>Provided further</italic>, That the Secretary may distribute fees collected pursuant to this subsection among the awardee or awardees described in such subsection (b)(1)(A) as the Secretary deems appropriate. </text></section> <section id="HE5583C60E34349F5A3EE8AD4A1BD6E5F"><enum>1905.</enum><text>Notwithstanding section 1101 of this Act, the level for <quote>Department of Health and Human Services—National Institutes of Health—NIH Innovation Account, CURES Act</quote> shall be applied by substituting <quote>$127,000,000</quote> for <quote>$407,000,000</quote>.</text></section><appropriations-small id="H4DFDE14D63EC42A4AFE8045AF4860C18"><header>(Including Transfer of Funds)</header></appropriations-small> 
<section id="HA6C3C0585C3745C48E61E25163EE3565"><enum>1906.</enum><text display-inline="yes-display-inline">Notwithstanding any other provision of this Act, not later than 30 days after the date of enactment of this section, the Secretary of Health and Human Services shall transfer funds appropriated for fiscal year 2025 under section 4002 of <external-xref legal-doc="public-law" parsable-cite="pl/111/148">Public Law 111–148</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/42/300u-11">42 U.S.C. 300u–11</external-xref>) to the accounts specified, in the amounts specified, and for the activities specified in subsection (a) of section 222 of division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref>: <italic>Provided</italic>, That subsections (b) and (c) of such section 222 shall apply to amounts transferred under this section. </text></section> <section id="H9F3392573BD749C88DC3BA15995B3606"><enum>1907.</enum><text display-inline="yes-display-inline">Section 223 of division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> is amended by striking <quote>2026</quote> and inserting <quote>2027</quote>.</text></section> 
<section id="H98618583BD0142538CB4CDECAE5BEB2B"><enum>1908.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be applied as follows:</text> <subsection display-inline="no-display-inline" id="H154C8E3F2F0647B7865FE094699C9293"><enum> (1)</enum><text display-inline="yes-display-inline">Under the heading <quote>Department of Labor—Employment and Training Administration—Training and Employment Services</quote>, by substituting <quote>$3,898,587,000</quote> for <quote>$4,006,421,000</quote>, by substituting <quote>$969,255,000</quote> for <quote>$1,077,089,000</quote>, and by substituting <quote>$0</quote> for <quote>$107,834,000</quote>.</text></subsection> 
<subsection id="H71B74AAA11AC46A6BB99437F141EFA8C"><enum>(2)</enum><text display-inline="yes-display-inline">Under the heading <quote>Department of Health and Human Services—Health Resources and Services Administration—HRSA-Wide Activities and Program Support</quote>, by substituting <quote>$219,588,000</quote> for <quote>$1,110,376,000</quote> and by substituting <quote>$0</quote> for <quote>$890,788,000</quote>.</text></subsection> <subsection id="HAAB063C1F51E4C5CACD1DF54F2FCCBC6"><enum>(3)</enum><text>Under the heading <quote>Department of Health and Human Services—Substance Abuse and Mental Health Services Administration—Health Surveillance and Program Support</quote>, by substituting <quote>$138,155,000</quote> for <quote>$210,245,000</quote> and by substituting <quote>$0</quote> for <quote>$72,090,000</quote>.</text></subsection> 
<subsection id="HE7C6B922BA9A424B9AA9BAB64DD885DA"><enum>(4)</enum><text>Under the heading <quote>Department of Health and Human Services—Administration for Children and Families—Children and Families Services Programs</quote>, by substituting <quote>$14,789,089,000</quote> for <quote>$14,829,100,000</quote> and by substituting <quote>$0</quote> for <quote>$40,011,000</quote>.</text></subsection> <subsection id="H0D5571754A964C979FBBA3C163588F0E"><enum>(5)</enum><text>Under the heading <quote>Department of Health and Human Services—Administration for Community Living—Aging and Disability Services Programs</quote>, by substituting <quote>$2,435,832,000</quote> for <quote>$2,465,100,000</quote> and by substituting <quote>$0</quote> for <quote>$29,268,000</quote>.</text></subsection> 
<subsection id="HB0EE0A0D7192451BB46DF61CB9F9D854"><enum>(6)</enum><text>Under the heading <quote>Department of Education—Higher Education</quote>, by substituting <quote>$3,080,952,000</quote> for <quote>$3,283,296,000</quote> and by substituting <quote>$0</quote> for <quote>$202,344,000</quote>.</text></subsection></section> <section id="H661F76B9E5A34EC3961EA81BA7720D82"><enum>1909.</enum><text display-inline="yes-display-inline">Section 306 of division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> is amended by striking <quote>2024</quote> and inserting <quote>2026</quote>.</text></section><appropriations-small id="H952D0C2FA0F64B1DA2AABB5E6EECD59D"><header>(Including Rescission of Funds)</header></appropriations-small> 
<section id="H0144642DDC6B44DD9BE169D5AD718131"><enum>1910.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the amount under the heading <quote>Corporation for National and Community Service—Payment to the National Service Trust</quote> in division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$235,000,000</quote> for <quote>$243,000,000</quote>.</text></section> <section id="H5BC1C95946FA46C2931150724FB61F6B"><enum>1911.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the amount included in the third paragraph under the heading <quote>Social Security Administration—Limitation on Administrative Expenses</quote> in division D of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this division by substituting <quote>$170,000,000</quote> for <quote>$150,000,000</quote> each place it appears.</text></section> 
<section id="H5C42B8377641406BA7CEC176245CC1DC"><enum>1912.</enum><text display-inline="yes-display-inline">Activities authorized by part A of title IV (other than under section 403(c) or 418) and section 1108(b) of the Social Security Act shall continue through the date specified in section 1106 of this Act, in the manner authorized for fiscal year 2024, and out of any money in the Treasury of the United States not otherwise appropriated, there are hereby appropriated such sums as may be necessary for such purpose.</text></section></title> <title id="H7991C53F952E4595960B9B9EACD605B7"><enum>X</enum><header>Legislative Branch</header> <section id="HD9EEFE585C1A4272A26BBCE894D16F0F"><enum>11001.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for each of the following Senate accounts shall be as follows:</text> 
<subsection display-inline="no-display-inline" id="HD25C8CA01F80446CAD5ABCC22AAFA0A2"><enum> (1)</enum><text display-inline="yes-display-inline"><quote>Contingent Expenses of the Senate—Inquiries and Investigations</quote>, $189,200,000.</text></subsection> <subsection id="H3F3109CA275C41E9BBAE798B65D5F8DC"><enum>(2)</enum><text display-inline="yes-display-inline"><quote>Contingent Expenses of the Senate—Senators’ Official Personnel and Office Expense Account</quote>, $607,400,000.</text></subsection></section> 
<section id="H5ACAF75156B84FEFA4EE50D80FB1681B"><enum>11002.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for each of the following House of Representatives accounts shall be as follows:</text> <subsection display-inline="no-display-inline" id="HD81A16DFEB194FEDA7D457805BDC43CD"><enum> (1)</enum><text display-inline="yes-display-inline"><quote>Salaries and Expenses</quote>, $1,878,346,000.</text></subsection> 
<subsection display-inline="no-display-inline" id="HDB9C0D751D69434FA7A481568A2CCC60"><enum>(2)</enum><text display-inline="yes-display-inline"><quote>Members’ Representational Allowances</quote>, $850,000,000.</text></subsection> <subsection id="H28B8C257A4A2441FB18B55DCCCD96425"><enum>(3)</enum><text display-inline="yes-display-inline"><quote>Salaries, Officers and Employees</quote>, $320,227,000, and the level under that heading for the Office of the Sergeant at Arms, $34,141,000.</text></subsection> 
<subsection id="H7A5C8D1B821C4FE596F73F2420B522C8"><enum>(4)</enum><text><quote>House of Representatives Modernization Initiatives Account</quote>, $2,000,000.</text></subsection></section> <section id="HCFDFB059921D4A1CA1BFA096F6C903D9"><enum>11003.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for each of the following Joint Items accounts shall be as follows:</text> 
<subsection display-inline="no-display-inline" id="HDBA9697731E84975A27B6B84C5E0FB87"><enum> (1)</enum><text display-inline="yes-display-inline"><quote>Office of the Attending Physician</quote>, $4,292,000.</text></subsection> <subsection id="H71F8D21D93DD42FAB103840B54D45AE5"><enum>(2)</enum><text display-inline="yes-display-inline"><quote>Capitol Police—Salaries</quote>, $603,627,000: <italic>Provided</italic>, That of the amounts appropriated, $15,000,000 shall be available solely for tuition reimbursement and recruitment and retention focused salary related items.</text></subsection> 
<subsection id="H09D2393190CC490C9A0F50861DFB655D"><enum>(3)</enum><text display-inline="yes-display-inline"><quote>Architect of the Capitol—Capitol Building</quote>, $48,688,000, of which $6,599,000 shall remain available until September 30, 2029, and of which $10,000,000 shall remain available until expended.</text></subsection> <subsection id="H9F2FD04E14904DC9A0F728CF0E7D7CB4"><enum>(4)</enum><text><quote>Architect of the Capitol—Capitol Grounds</quote>, $21,600,000, of which $7,000,000 shall remain available until September 30, 2029.</text></subsection> 
<subsection id="H9E0857F7F0E744F196495C74539EC7DB"><enum>(5)</enum><text><quote>Architect of the Capitol—House Office Buildings</quote>, $146,174,000, of which $61,610,000 shall remain available until September 30, 2029, and of which $10,500,000 shall remain available until expended.</text></subsection> <subsection id="HDFDC2EE1CFD5421E903D4E2EAA05C219"><enum>(6)</enum><text><quote>Architect of the Capitol—Capitol Power Plant</quote>, $123,850,000, of which $11,000,000 shall remain available until September 30, 2029.</text></subsection> 
<subsection id="H9A16B7F2B2804150BABE177DE9D3741B"><enum>(7)</enum><text><quote>Architect of the Capitol—Library Buildings and Grounds</quote>, $64,978,000, of which $27,800,000 shall remain available until September 30, 2029, and the matter following <quote>September 20, 2028</quote> shall not apply.</text></subsection></section></title> <title id="H359C470F2C6846EE8F331523385FD59B"><enum>XI</enum><header>Military Construction, Veterans Affairs, and Related Agencies</header> <section id="H694EA5A5636D4D68BADE1357370E79DA"><enum>11101.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be applied as follows:</text> 
<subsection display-inline="no-display-inline" id="HBD5DA95B8F2643C6A41244FC99FF07FB"><enum> (1)</enum><text display-inline="yes-display-inline">$2,236,357,000 for <quote>Department of Defense—Military Construction, Army</quote>.</text></subsection> <subsection id="H07DA7F9C45CD41CAB87B1BF7DF9DED75"><enum>(2)</enum><text display-inline="yes-display-inline">$4,159,399,000 for <quote>Department of Defense—Military Construction, Navy and Marine Corps</quote>.</text></subsection> 
<subsection id="H7FEF4E32BA0143AE8C7229F3253E073B"><enum>(3)</enum><text>$3,347,126,000 for <quote>Department of Defense—Military Construction, Air Force</quote>. </text></subsection> <subsection id="H419FFFA804844BA8BB05C446CD02BBD6"><enum>(4)</enum><text>$3,881,383,000 for <quote>Department of Defense—Military Construction, Defense-Wide</quote>.</text></subsection> 
<subsection id="H3AC14D640A3343B6817AD1CC55205382"><enum>(5)</enum><text>$398,489,000 for <quote>Department of Defense—Military Construction, Army National Guard</quote>.</text></subsection> <subsection id="HE0AAFAFA5B0C4A6FAF504CEFDCFF1722"><enum>(6)</enum><text>$290,492,000 for <quote>Department of Defense—Military Construction, Air National Guard</quote>.</text></subsection> 
<subsection id="HC38585D495524B15B8B11EF223220B4A"><enum>(7)</enum><text>$295,032,000 for <quote>Department of Defense—Military Construction, Army Reserve</quote>.</text></subsection> <subsection id="H4AD0A6123D17474897526BCDA528F9AD"><enum>(8)</enum><text>$29,829,000 for <quote>Department of Defense—Military Construction, Navy Reserve</quote>. </text></subsection> 
<subsection id="H5739022287B34F03A7942499CA34C7DC"><enum>(9)</enum><text>$74,663,000 for <quote>Department of Defense—Military Construction, Air Force Reserve</quote>.</text></subsection></section> <section id="HD728F812944E40CCBAA3B4B99507FBA3"><enum>11102.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be applied as follows:</text> 
<subsection display-inline="no-display-inline" id="H41D7A71CD60742E8BF5DF27C56A4BD9C"><enum> (1)</enum><text display-inline="yes-display-inline">$276,647,000 for <quote>Department of Defense—Family Housing Construction—Army</quote>.</text></subsection> <subsection id="HBF00234ED72B452582F07FAB506221FB"><enum>(2)</enum><text display-inline="yes-display-inline">$245,742,000 for <quote>Department of Defense—Family Housing Construction—Navy and Marine Corps</quote>.</text></subsection> 
<subsection id="H4ED381A7D89046EB9E6EFC70A0F8930F"><enum>(3)</enum><text>$221,549,000 for <quote>Department of Defense—Family Housing Construction—Air Force</quote>. </text></subsection> <subsection id="H35BDCF32DB2F42C2AA1D9BF0F0FD63B8"><enum>(4)</enum><text>$8,195,000 for <quote>Department of Defense—Family Housing Improvement Fund</quote>.</text></subsection> 
<subsection id="HE4D12DC3F8F3434A8298528AB07CC4C3"><enum>(5)</enum><text>$497,000 for <quote>Department of Defense—Military Unaccompanied Housing Improvement Fund</quote>.</text></subsection></section> <section id="HBBE2738645F84A78A13F41344B68DD4C"><enum>11103.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for the following accounts shall be applied as follows:</text> 
<subsection display-inline="no-display-inline" id="H264C831F52E54192AC0A9C9ACDEF4287"><enum> (1)</enum><text display-inline="yes-display-inline">$485,611,000 for <quote>Department of Defense—Family Housing Operation and Maintenance—Army</quote>.</text></subsection> <subsection id="H2634C58187AA4E7C89B068793976F558"><enum>(2)</enum><text display-inline="yes-display-inline">$387,217,000 for <quote>Department of Defense—Family Housing Operation and Maintenance—Navy and Marine Corps</quote>.</text></subsection> 
<subsection id="HF42A33EF4AEB4A409902FB93B909AC8B"><enum>(3)</enum><text>$336,250,000 for <quote>Department of Defense—Family Housing Operation and Maintenance—Air Force</quote>. </text></subsection> <subsection id="H27F80A9216824771BDCC124C23FC4A5B"><enum>(4)</enum><text>$52,156,000 for <quote>Department of Defense—Family Housing Operation and Maintenance—Defense-Wide</quote>.</text></subsection></section> 
<section id="H792273A637CE4BCAB9C546589498E024"><enum>11104.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, section 126 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall be applied by substituting <quote>fiscal year 2017, 2018, 2019, and 2020</quote> for <quote>fiscal year 2017, 2018, and 2019</quote>.</text></section> <section id="H5EC3D9C2BF474717A901A1DB118FFF01"><enum>11105.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, sections 124, 128 through 137, 259, and 260 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall not apply for fiscal year 2025.</text></section> 
<section id="H531F2E1374CF40A8ADDE53A194BCCE6C"><enum>11106.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, section 123 of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> and the provisions carrying the same restriction in prior Acts making appropriations to the Department of Defense for military construction shall not apply to unobligated balances from prior year appropriations made available under the heading <quote>Department of Defense—Military Construction, Army</quote> and such balances may be obligated for an access road project at Arlington National Cemetery.</text></section> <section id="H709BC3EDD7F3461098B11319E6437748"><enum>11107.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, for expenses necessary to support efforts to complete the renovation of the Sheridan Building at the Armed Forces Retirement Home—Washington, District of Columbia, $31,000,000, to remain available until expended, shall be paid from the general fund of the Treasury to the Armed Forces Retirement Home Trust Fund.</text></section> 
<section id="HD6B7F62A6C4643C59505F2D3FBDC297E"><enum>11108.</enum><text display-inline="yes-display-inline">Notwithstanding any other provision of this Act, the following provisions included in title I of division A of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> shall not apply to funds made available by this Act: the first and last provisos under the heading <quote>Military Construction, Army</quote>; the first and last provisos under the heading <quote>Military Construction, Navy and Marine Corps</quote>; the first and last provisos under the heading <quote>Military Construction, Air Force</quote>; the second and third provisos under the heading <quote>Military Construction, Defense-Wide</quote>, the first and second provisos under the heading <quote>Military Construction, Army National Guard</quote>; the first and second provisos under the heading <quote>Military Construction, Air National Guard</quote>; the first and second provisos under the heading <quote>Military Construction, Army Reserve</quote>; the first proviso under the heading <quote>Military Construction, Navy Reserve</quote>; and the first and second provisos under the heading <quote>Military Construction, Air Force Reserve</quote>.</text></section> <section id="H910AC8D17633473099608000272883E8"><enum>11109.</enum><text display-inline="yes-display-inline">Notwithstanding section 1112, the levels for each of the following accounts for fiscal year 2026 shall be as follows:</text> 
<subsection display-inline="no-display-inline" id="HFC1D3EF176254B4F887818E5C235D788"><enum> (1)</enum><text display-inline="yes-display-inline">$75,039,000,000 for <quote>Department of Veterans Affairs—Medical Services</quote>, which shall become available on October 1, 2025, and of which $2,000,000,000 shall remain available until September 30, 2027.</text></subsection> <subsection id="H03C5250E64764488B98152709FC7A6B4"><enum>(2)</enum><text display-inline="yes-display-inline">$34,000,000,000 for <quote>Department of Veterans Affairs—Medical Community Care</quote>, which shall become available on October 1, 2025, and of which $2,000,000,000 shall remain available until September 30, 2027.</text></subsection> 
<subsection id="H5BCE08A665564678862C7F314EB9A745"><enum>(3)</enum><text>$12,700,000,000 for <quote>Department of Veterans Affairs—Medical Support and Compliance</quote>, which shall become available on October 1, 2025, and of which $350,000,000 shall remain available until September 30, 2027. </text></subsection> <subsection id="HBC77FEA6DAC040D680CDA673049BF555"><enum>(4)</enum><text>$9,700,000,000 for <quote>Department of Veterans Affairs—Medical Facilities</quote>, which shall become available on October 1, 2025, and of which $500,000,000 shall remain available until September 30, 2027. </text></subsection> 
<subsection id="H814925F6DB494B3AA0586E0E017775A2"><enum>(5)</enum><text>$227,240,071,000 for <quote>Department of Veterans Affairs—Veterans Benefits Administration—Compensation and Pensions</quote>, which shall become available on October 1, 2025, to remain available until expended. </text></subsection> <subsection id="H89846754291A4D8B8546CDB2D6399029"><enum>(6)</enum><text>$20,372,030,000 for <quote>Department of Veterans Affairs—Veterans Benefits Administration—Readjustment Benefits</quote>, which shall become available on October 1, 2025, to remain available until expended. </text></subsection> 
<subsection id="H22DE04C317D4415AB121679E111C7B8F"><enum>(7)</enum><text>$131,518,000 for <quote>Department of Veterans Affairs—Veterans Benefits Administration—Veterans Insurance and Indemnities</quote>, to remain available until expended. </text></subsection></section> <section id="H739AB390807744DDA7E20D3CE3A0F328"><enum>11110.</enum><text display-inline="yes-display-inline">In addition to amounts provided in this or other Acts, an additional amount is appropriated to the following accounts in the amounts specified:</text> 
<subsection display-inline="no-display-inline" id="H30E48B204E1848ED812D7B4061F0A8E9"><enum> (1)</enum><text display-inline="yes-display-inline">$30,242,064,000 for <quote>Department of Veterans Affairs—Veterans Benefits Administration—Compensation and Pensions</quote>, to remain available until expended.</text></subsection> <subsection id="HF628B4B8A0314917BF672EDC07FC81AF"><enum>(2)</enum><text display-inline="yes-display-inline">$4,864,566,000 for <quote>Department of Veterans Affairs—Veterans Benefits Administration—Readjustment Benefits</quote>, to remain available until expended.</text></subsection> 
<subsection id="HDC9F8B34F7FB4D04B9244325B8B056BF"><enum>(3)</enum><text>$6,000,000,000 for <quote>Department of Veterans Affairs—Cost of War Toxic Exposure Fund</quote>, to remain available until expended. </text></subsection></section></title> <title id="HF3D6715F3FA14D9BB97C8E17A043B09E"><enum>XII</enum><header>Department of State, Foreign Operations, and Related Programs</header> <section id="H00682BE1823C4EC79CA3D68D864195C1"><enum>11201.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the fifth and sixth provisos under the heading <quote>Millennium Challenge Corporation</quote> in title III of division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>December 31, 2025</quote> for <quote>December 31, 2024</quote> each place it appears.</text></section> 
<section id="HD39E11EF912D47A6A85416FF86D2EB86"><enum>11202.</enum><text display-inline="yes-display-inline"> Notwithstanding section 1101, the matter under the heading <quote>Office of Inspector General</quote> in title I of division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this Act by inserting <quote>up to</quote> before <quote>$24,835,000</quote>.</text></section> <section id="H4ED39A36B034490DBC829C6D645E5200"><enum>11203.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the amounts included under the heading <quote>International Boundary and Water Commission, United States and Mexico—Construction</quote> in title I of division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting <quote>$78,000,000</quote> for <quote>$156,050,000</quote> and <quote>$15,000,000</quote> for <quote>$5,000,000</quote> in the first proviso.</text></section> 
<section id="H44FA029B6BF34BDCA76048A120337315"><enum>11204.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the levels for the following accounts in division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be as follows: <quote>Other Commissions—Commission on Reform and Modernization of the Department of State</quote>, $0; <quote>International Organizations—Contributions for International Peacekeeping Activities</quote>, $1,234,144,000; <quote>Department of the Treasury—Debt Restructuring</quote>, $10,000,000; and <quote>International Financial Institutions—Contribution to the Asian Development Fund</quote>, $43,610,000.</text></section> <section id="HF6868998CAA3478EB3C5805CFB699CD7"><enum>11205.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the following provisions in title VII of division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall not apply to funds appropriated by this Act—</text> 
<subsection id="H40A82A7A1AC14285B51E9220F141418C"><enum>(1)</enum><text display-inline="yes-display-inline">section 7004(e);</text></subsection> <subsection id="H0E559E9CDC31427EBDB4BB0EF59F72C0"><enum>(2)</enum><text display-inline="yes-display-inline">section 7034(r); and</text></subsection> 
<subsection id="HD002483E44EC4CD38ED3D08B15843554"><enum>(3)</enum><text>section 7045(l)(2).</text></subsection></section> <section id="H6395561059D44696B48C4C200F85D546"><enum>11206.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, the following provisions in title VII of division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied to funds appropriated by this Act by substituting—</text> 
<subsection id="HA30C19346A3F4F67A93F83D14F29AE29"><enum>(1)</enum><text display-inline="yes-display-inline">in section 7041(d), <quote>$450,300,000</quote> for <quote>$725,300,000</quote>;</text></subsection> <subsection id="H40776DE118D74B0480B154D22C695308"><enum>(2)</enum><text display-inline="yes-display-inline">in section 7045(g)(2), <quote>January 1, 2026</quote> for <quote>January 1, 2025</quote>;</text></subsection> 
<subsection id="H8E6D0C673ADD4CEC85565E705A8ADE43"><enum>(3)</enum><text>in section 7053, <quote>September 30, 2024</quote> for <quote>September 30, 2023</quote>; and</text></subsection> <subsection id="H362D797F09004CE9B5B6D111105AE86A"><enum>(4)</enum><text display-inline="yes-display-inline">in section 7068(b), <quote>2020 through 2025</quote> for <quote>2020 through 2024</quote>: <italic>Provided</italic>, That amounts provided pursuant to this paragraph are designated by the Congress as being for an emergency requirement pursuant to section 251(b)(2)(A)(i) of the Balanced Budget and Emergency Deficit Control Act of 1985.</text></subsection></section><appropriations-small id="HDD096EDD15C347DD8474E5303320B97A"><header>(Including Rescission of Funds)</header></appropriations-small> 
<section id="H52E9E35701394E18972CFFC88950936A"><enum>11207.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, section 7075 in title VII of division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/47">Public Law 118–47</external-xref> shall be applied by substituting—</text> <subsection id="HD2335CAE954348BDBCCB38759876F445"><enum>(1)</enum><text display-inline="yes-display-inline">in subsection (c), <quote>$65,000,000</quote> for <quote>$50,000,000</quote>;</text></subsection> 
<subsection id="H1F392D8752DD4D3F81F123A991CB8092"><enum>(2)</enum><text display-inline="yes-display-inline">in subsection (e), <quote>$375,000,000</quote> for <quote>$902,340,000</quote>; and</text></subsection> <subsection id="H4F912704D17043F8910645F930E22A7C"><enum>(3)</enum><text>in lieu of subsection (f), the following new subsection:</text> 
<quoted-block style="OLC" id="H1EF10E1204964406AF4372EB002BAE6D" display-inline="no-display-inline"> 
<subsection id="H152A701C15BF4A0DA9BBA753A98694AA"><enum>(f)</enum><header>Debt Restructuring</header><text display-inline="yes-display-inline">Of the unobligated balances from amounts made available under the heading <quote>Debt Restructuring</quote> from prior Acts making appropriations for the Department of State, foreign operations, and related programs, $111,000,000 are rescinded.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section> <section id="HBA495EB108FA4661BD1AAF0175759B34"><enum>11208.</enum> <subsection commented="no" display-inline="yes-display-inline" id="H04D0A639748E4759943FA0E192A2D8CF"><enum>(a)</enum><text display-inline="yes-display-inline">The Foreign Operations, Export Financing, and Related Programs Appropriations Act, 1990 (<external-xref legal-doc="public-law" parsable-cite="pl/101/167">Public Law 101–167</external-xref>) is amended—</text> 
<paragraph id="H53E643B9A58D4EEAA6E19CD89A4EC6B9" indent="up1"><enum>(1)</enum><text>in section 599D (<external-xref legal-doc="usc" parsable-cite="usc/8/1157">8 U.S.C. 1157</external-xref> note)—</text> <subparagraph id="HDAFC564A221D4CDAACCAEDDFB0D7C22A"><enum>(A)</enum><text>in subsection (b)(3), by striking <quote>and 2024</quote> and inserting <quote>2024, and 2025</quote>; and</text></subparagraph> 
<subparagraph id="HAA766B8D92C44617BD4ECB24FA1D7BAD"><enum>(B)</enum><text> in subsection (e), by striking <quote>2024</quote> each place it appears and inserting <quote>2025</quote>; and</text></subparagraph></paragraph> <paragraph id="HA7707727330F4166843C8ADC5E47A2C4" indent="up1"><enum>(2)</enum><text>in section 599E(b)(2) (<external-xref legal-doc="usc" parsable-cite="usc/8/1255">8 U.S.C. 1255</external-xref> note), by striking <quote>2024</quote> and inserting <quote>2025</quote>.</text></paragraph></subsection> 
<subsection id="HA1E3D47DE09E410A85717A6F73C02513"><enum>(b)</enum><text display-inline="yes-display-inline">The heading of subparagraph (F) of section 602(b)(3) of the Afghan Allies Protection Act of 2009 (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101</external-xref> note) is amended by striking <quote><header-in-text level="subparagraph" style="OLC">2024</header-in-text></quote> and inserting <quote><header-in-text level="subparagraph" style="OLC">2025</header-in-text></quote>.</text></subsection> <subsection id="H36C403D990674B3E977F631CFF63DD15"><enum>(c)</enum><text>Chapter 5 of title I of the Emergency Wartime Supplemental Appropriations Act, 2003 (<external-xref legal-doc="public-law" parsable-cite="pl/108/11">Public Law 108–11</external-xref>; 117 Stat. 576) is amended under the heading <quote>Loan Guarantees to Israel</quote>—</text> 
<paragraph id="H164695C2E49F494291530C5D25E2F423"><enum>(1)</enum><text>in the matter preceding the first proviso, by striking <quote>September 30, 2029</quote> and inserting <quote>September 30, 2030</quote>; and</text></paragraph> <paragraph id="H76CF8FCE814E4A2AA604110BA565AFBB"><enum>(2)</enum><text>in the second proviso, by striking <quote>September 30, 2029</quote> and inserting <quote>September 30, 2030</quote>.</text></paragraph></subsection> 
<subsection id="HDC41C106AF0C4DBA877491AC6DF1FEB3"><enum>(d)</enum><text>Section 514(b)(2)(A) of the Foreign Assistance Act of 1961 (<external-xref legal-doc="usc" parsable-cite="usc/22/2321h">22 U.S.C. 2321h(b)(2)(A)</external-xref>) is amended by striking <quote>2023</quote> and all that follows through the end of the sentence and inserting <quote>2023 through 2027.</quote>.</text></subsection></section></title> <title id="H7403D9066CC74898BFB837156101DE82"><enum>XIII</enum><header>Transportation, Housing and Urban Development, and Related Agencies </header> <section id="HAF5BA801956E473FB5FF6935B4DD6222"><enum>11301.</enum><text>Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows:</text> 
<subsection id="H7AB05193369F4574A0B78EC46B0183C3"><enum>(1)</enum><text display-inline="yes-display-inline">$20,926,000 for <quote>Department of Transportation—Office of the Secretary—Transportation Planning, Research, and Development</quote>.</text></subsection> <subsection id="H342A1D560CBE4AB8A1A1B214CED349B4"><enum>(2)</enum><text>$3,176,250,000 for <quote>Department of Transportation—Federal Aviation Administration—Facilities and Equipment</quote>.</text></subsection> 
<subsection id="H11E78652AC2F4AC987B0509A06064B2D"><enum>(3)</enum><text display-inline="yes-display-inline">$50,000,000 for <quote>Department of Transportation—Federal Aviation Administration—Airport Improvement Program</quote>.</text></subsection> <subsection id="HEB21DFA8D83047609907C70B03FA065D"><enum>(4)</enum><text display-inline="yes-display-inline">$340,500,000 for <quote>Department of Transportation—Federal Highway Administration—Highway Infrastructure Programs</quote>.</text></subsection> 
<subsection id="HD6BEEE10E914441D86F7D1B0E34CFB45"><enum>(5)</enum><text display-inline="yes-display-inline">$100,000,000 for <quote>Department of Transportation—Federal Railroad Administration—Consolidated Rail Infrastructure and Safety Improvements</quote>.</text></subsection> <subsection id="HDC31773008AA483FBE6C5F8E9261EC76"><enum>(6)</enum><text display-inline="yes-display-inline">$45,568,868 for <quote>Department of Transportation—Federal Transit Administration—Transit Infrastructure Grants</quote>.</text></subsection> 
<subsection id="H3907BD868B8948198A3887914C2FB8CE"><enum>(7)</enum><text display-inline="yes-display-inline">$50,000,000 for <quote>Department of Transportation—Maritime Administration—Port Infrastructure Development Program</quote>.</text></subsection> <subsection id="H3D7837EB959D445BBA8D873C96CA1AD8"><enum>(8)</enum><text display-inline="yes-display-inline">$3,430,000,000 for <quote>Department of Housing and Urban Development—Community Planning and Development—Community Development Fund</quote>.</text></subsection></section> 
<section id="H7E6FDA2517E4404A9DFFCCEF593B38A9"><enum>11302.</enum> 
<subsection commented="no" display-inline="yes-display-inline" id="HE19714C5469145378244FE1896A02714"><enum>(a)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for limitations on obligation and liquidation of contract authority shall be available in the following accounts equal to the level of contract authority subject to such limitation appropriated out of the Highway Trust Fund in sections 11102, 11104, 11106, 23001, 24101, 24201, and 30017 of <external-xref legal-doc="public-law" parsable-cite="pl/117/58">Public Law 117–58</external-xref> for fiscal year 2025:</text> <paragraph indent="up1" id="H76B370B4FE2349BFA74A66A34780C909"><enum>(1)</enum><text display-inline="yes-display-inline"><quote>Department of Transportation—Federal Highway Administration—Limitation on Administrative Expenses—(Highway Trust Fund)</quote>.</text></paragraph> 
<paragraph indent="up1" id="H89AADDD3E2B743ABA6F29C6E02F24548"><enum>(2)</enum><text display-inline="yes-display-inline"><quote>Department of Transportation—Federal Highway Administration—Federal-Aid Highways—(Limitation on Obligations)—(Highway Trust Fund)—(Liquidation of Contract Authorization)—(Highway Trust Fund)</quote>.</text></paragraph> <paragraph id="HFD9DF73B3D614920BC6B2273E1DC426E" indent="up1"><enum>(3)</enum><text display-inline="yes-display-inline"><quote>Department of Transportation—Federal Motor Carrier Safety Administration—Motor Carrier Safety Operations and Programs—(Liquidation of Contract Authorization)—(Limitation on Obligations)—(Highway Trust Fund)</quote>.</text></paragraph> 
<paragraph id="H4199C7D9CB044802A5D7E8EA857C0D34" indent="up1"><enum>(4)</enum><text display-inline="yes-display-inline"><quote>Department of Transportation—Federal Motor Carrier Safety Administration—Motor Carrier Safety Grants—(Liquidation of Contract Authorization)—(Limitation on Obligations)—(Highway Trust Fund)</quote>.</text></paragraph> <paragraph id="HB9A023773A1C4513BA689A22B2BED082" indent="up1"><enum>(5)</enum><text><quote>Department of Transportation—National Highway Traffic Safety Administration—Operations and Research—(Liquidation of Contract Authorization)—(Limitation on Obligations)—(Highway Trust Fund)</quote>.</text></paragraph> 
<paragraph id="HEC544D4F140741B4A0BF9D52C3016001" indent="up1"><enum>(6)</enum><text><quote>Department of Transportation—National Highway Traffic Safety Administration—Highway Traffic Safety Grants—(Liquidation of Contract Authorization)—(Limitation on Obligations)—(Highway Trust Fund)</quote>.</text></paragraph> <paragraph id="HD603B8317D6B45AD9095E5CFBCEBDF9B" indent="up1"><enum>(7)</enum><text><quote>Department of Transportation—Federal Transit Administration—Transit Formula Grants—(Liquidation of Contract Authorization)—(Limitation on Obligations)—(Highway Trust Fund)</quote>.</text></paragraph></subsection> 
<subsection id="H292299F1582146B18D8EED2F8A0BD334"><enum>(b)</enum><text display-inline="yes-display-inline">Notwithstanding section 1101 of this Act, the level for limitations on obligation and liquidation of contract authority shall be available for <quote>Department of Transportation—Federal Aviation Administration—Grants-in-Aid for Airports—(Liquidation of Contract Authorization)—(Limitation on Obligations)—(Airport and Airway Trust Fund)—(Including Transfer of Funds)</quote> in amounts equal to the level of contract authority subject to such limitation in section 101(a) of <external-xref legal-doc="public-law" parsable-cite="pl/118/63">Public Law 118–63</external-xref>.</text></subsection></section> <section id="HA92CA62CE04C4387B48F2F494BD5DE0B"><enum>11303.</enum><text>Notwithstanding section 1101 of this Act, the level for the following accounts shall be as follows:</text> 
<subsection id="H1386FE05074C49369DCCA8B13F488A66"><enum>(1)</enum><text display-inline="yes-display-inline">$450,000,000 for <quote>Department of Transportation—Office of the Secretary—Payments to Air Carriers—(Airport and Airway Trust Fund)</quote>.</text></subsection> <subsection id="HD62C6CC838E74982A11F13FF0AF13939"><enum>(2)</enum><text display-inline="yes-display-inline">$13,482,783,000 for <quote>Department of Transportation—Federal Aviation Administration—Operations—(Airport and Airway Trust Fund)</quote>, of which not less than $1,832,078,000 shall be for aviation safety activities and not less than $10,105,678,000 shall be for air traffic organization activities.</text></subsection> 
<subsection id="HDCBD769C3BED40F4B3769C9A69FAC02D"><enum>(3)</enum><text display-inline="yes-display-inline">$45,150,000 for the fourth number under the heading <quote>Department of Transportation—Federal Aviation Administration—Facilities and Equipment—(Airport and Airway Trust Fund)</quote>.</text></subsection> <subsection id="H334452C773624C3BA6E7FE5995FECA5E"><enum>(4)</enum><text display-inline="yes-display-inline">$32,041,000,000 for <quote>Department of Housing and Urban Development—Public and Indian Housing—Tenant-Based Rental Assistance</quote> and $32,145,124,000 is the amount available under paragraph (1): <italic>Provided</italic>, That the Secretary of Housing and Urban Development may use amounts made available in the second, third, sixth, and seventh paragraphs under this heading in division F of <external-xref legal-doc="public-law" parsable-cite="pl/118/42">Public Law 118–42</external-xref> to support the purposes described in subparagraph (1)(D) and subparagraph (4)(B) of such heading.</text></subsection> 
<subsection id="H7DABF64CA7A24327911521A3259DA6B1"><enum>(5)</enum><text display-inline="yes-display-inline">$16,490,000,000 for <quote>Department of Housing and Urban Development—Housing Programs—Project-Based Rental Assistance</quote>.</text></subsection> <subsection id="H3554EAE8F854447AB05AFFFD33AA6966"><enum>(6)</enum><text display-inline="yes-display-inline">$931,400,000 for <quote>Department of Housing and Urban Development—Housing Programs—Housing for the Elderly</quote>.</text></subsection> 
<subsection id="H6BFC6E7C000B4EBCACE617A4FFE8B452"><enum>(7)</enum><text display-inline="yes-display-inline">$256,700,000 for <quote>Department of Housing and Urban Development—Housing Programs—Housing for Persons with Disabilities</quote>.</text></subsection> <subsection id="HA79BF4EE3AD0467D856CAAFDCDB3BBFA"><enum>(8)</enum><text display-inline="yes-display-inline">$145,000,000 for <quote>National Transportation Safety Board—Salaries and Expenses</quote>.</text></subsection></section> 
<section id="HE80D73D419954B69873A8AD0B857A577"><enum>11304.</enum><text>Notwithstanding section 1101 of this Act, the following provisions shall not apply:</text> <subsection id="HBF3207E6CB994E2A8E279FA6EE5B6A37"><enum>(1)</enum><text display-inline="yes-display-inline">Paragraph (3) under the heading <quote>Department of Transportation—Federal Aviation Administration—Grants-in-Aid for Airports</quote>. </text></subsection> 
<subsection id="H0F578E0DAC8E4FB59C3F51CB6D218CED"><enum>(2)</enum><text display-inline="yes-display-inline">The proviso under the heading <quote>Department of Transportation—Maritime Administration—Maritime Security Program</quote>.</text></subsection> <subsection id="H3ECF0991C89C4AE8B5F88E18BA281FB6"><enum>(3)</enum><text display-inline="yes-display-inline">The provisos under the heading <quote>Department of Transportation—Maritime Administration—Tanker Security Program</quote>.</text></subsection> 
<subsection id="H1ADCF92A57D74C9F93ED08B5BA37FA51"><enum>(4)</enum><text display-inline="yes-display-inline">The proviso under the heading <quote>Department of Transportation—Maritime Administration—Ship Disposal</quote>.</text></subsection></section> <section id="H2DDA3ED7F377497BA0131FC1629A2C45"><enum>11305.</enum><text display-inline="yes-display-inline">Notwithstanding section 1101, under the heading <quote>Department of Housing and Urban Development—Community Planning and Development—Homeless Assistance Grants</quote>, the Secretary may repurpose funds made available under paragraph (5) to provide additional amounts for the continuum of care program under paragraph (2) of such heading.</text></section> 
<section section-type="undesignated-section" display-inline="no-display-inline" id="HF150C97EAE33445D89B02C6B2289FE34"><text display-inline="yes-display-inline">This division may be cited as the <quote>Full-Year Continuing Appropriations Act, 2025</quote>.</text></section></title></division> <division id="H8DC01E05B3DF42C9A1B3EBADD98EAA87"><enum>B</enum><header>Health</header> <title id="HF7CE0CC2978648F7AE7D0864B87F91A4"><enum>I</enum><header>Public health extenders</header> <section id="H67BB6A856CDA4988BBA402B5BE442334" display-inline="no-display-inline" section-type="subsequent-section"><enum>2101.</enum><header>Extension for community health centers, National Health Service Corps, and teaching health centers that operate GME programs</header> <subsection id="H5B0C880DDAC141EBA87E0203E850A475"><enum>(a)</enum><header>Extension for community health centers</header><text display-inline="yes-display-inline">Section 10503(b)(1) of the Patient Protection and Affordable Care Act (<external-xref legal-doc="usc" parsable-cite="usc/42/254b-2">42 U.S.C. 254b–2(b)(1)</external-xref>) is amended—</text> 
<paragraph id="H25A67B2F57364DBC9DC7C5120B6ACCD3"><enum>(1)</enum><text>in subparagraph (H), by striking <quote>and</quote> at the end;</text></paragraph> <paragraph id="HDA10F4444D3F4CBAB4A31D9AE1058C65"><enum>(2)</enum><text>in subparagraph (I), by striking the period at the end and inserting and inserting <quote>; and</quote> ; and</text></paragraph> 
<paragraph id="H70D0095B26CF4D2EA46FFDCAA5476F80"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" id="HD37883821AD94B5AB65B2BCC0A1C8237" display-inline="no-display-inline"> <subparagraph id="HC3E6561F95E44F9792EF8759E30BA6EE"><enum>(J)</enum><text display-inline="yes-display-inline">$2,135,835,616 for the period beginning on April 1, 2025, and ending on September 30, 2025; and</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> 
<subsection id="H6A262D3836BB454398A9D46437B46164"><enum>(b)</enum><header>Extension for the National Health Service Corps</header><text display-inline="yes-display-inline">Section 10503(b)(2) of the Patient Protection and Affordable Care Act (<external-xref legal-doc="usc" parsable-cite="usc/42/254b-2">42 U.S.C. 254b–2(b)(2)</external-xref>) is amended—</text> <paragraph id="HC504627107844706BA9F348BC9EA6BA0"><enum>(1)</enum><text>in subparagraph (I), by striking <quote>and</quote> at the end; </text></paragraph> 
<paragraph id="H1A8E38990CBC4432A3BB0EAE93CA761E"><enum>(2)</enum><text>in subparagraph (J), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph> <paragraph id="HF5733F94585E466B946B1534947CDBDA"><enum>(3)</enum><text>by adding at the end the following:</text> 
<quoted-block style="OLC" id="H76FA342D22994118B9E402E717757C34" display-inline="no-display-inline"> 
<subparagraph id="H12AFBD3EC9D64E95A2A10644301057CE"><enum>(K)</enum><text display-inline="yes-display-inline">$172,972,603 for the period beginning on April 1, 2025, and ending on September 30, 2025.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H10D78644388D493DABB635DD49248383"><enum>(c)</enum><header>Teaching health centers that operate graduate medical education programs</header><text display-inline="yes-display-inline">Section 340H(g)(1) of the Public Health Service Act (<external-xref legal-doc="usc" parsable-cite="usc/42/256h">42 U.S.C. 256h(g)(1)</external-xref>) is amended—</text> 
<paragraph id="H7E9BA99C8A904F64BCC2AC66A825CAB6"><enum>(1)</enum><text>in subparagraph (D), by striking <quote>and</quote> at the end;</text></paragraph> <paragraph id="H22210C0343F74423A7B91789D86C6A96"><enum>(2)</enum><text>in subparagraph (E), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph> 
<paragraph id="H21D044AAA957444197634EFE7FB61F98"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" id="H247ADEF9C84F470FB385074807CA73CA" display-inline="no-display-inline"> <subparagraph id="HE47C56CF176642BE92D50ABF8B3C07C7"><enum>(F)</enum><text display-inline="yes-display-inline">$87,739,726 for the period beginning on April 1, 2025, and ending on September 30, 2025.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> 
<subsection id="H4CABEAA5DA8E4B07BACA78CF7870D689"><enum>(d)</enum><header>Application of provisions</header><text>Amounts appropriated pursuant to the amendments made by this section shall be subject to the requirements contained in <external-xref legal-doc="public-law" parsable-cite="pl/117/328">Public Law 117–328</external-xref> for funds for programs authorized under sections 330 through 340 of the Public Health Service Act (<external-xref legal-doc="usc" parsable-cite="usc/42/254b">42 U.S.C. 254b et seq.</external-xref>).</text></subsection> <subsection id="H2A2D0A44265C47CCA51D8809D8EB3E16"><enum>(e)</enum><header>Conforming amendment</header><text display-inline="yes-display-inline">Section 3014(h)(4) of title 18, United States Code, is amended by striking <quote>and section 3101(d) of the Health Extensions and Other Matters Act, 2025</quote> and inserting <quote>section 3101(d) of the Health Extensions and Other Matters Act, 2025, and section 2101(d) of division B of the Full-Year Continuing Appropriations and Extensions Act, 2025</quote>.</text></subsection></section> 
<section id="HD60E88ED6AE542A8B6ADCB1B513AB4AF" display-inline="no-display-inline" section-type="subsequent-section"><enum>2102.</enum><header>Extension of special diabetes programs</header> 
<subsection id="H042294000B484964810B15D7020BF2C4"><enum>(a)</enum><header>Extension of special diabetes programs for type I diabetes</header><text>Section 330B(b)(2) of the Public Health Service Act (<external-xref legal-doc="usc" parsable-cite="usc/42/254c-2">42 U.S.C. 254c–2(b)(2)</external-xref>) is amended—</text> <paragraph id="H8B474A406C414D08B559334B81AF81EF"><enum>(1)</enum><text>in subparagraph (E), by striking <quote>and</quote> at the end;</text></paragraph> 
<paragraph id="H066952C6A9C549B0B0CE83CE6B207998"><enum>(2)</enum><text>in subparagraph (F), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph> <paragraph id="H148AD2D63CF64A448DB0FDF6E0DE37AD"><enum>(3)</enum><text>by adding at the end the following:</text> 
<quoted-block style="OLC" id="H16E9695321FA470DB7EE30D511B05FAD" display-inline="no-display-inline"> 
<subparagraph id="H5A2A2C38409E468D8819F3774F1F1C6B"><enum>(G)</enum><text display-inline="yes-display-inline">$79,832,215 for the period beginning on April 1, 2025, and ending on September 30, 2025, to remain available until expended.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H18EEE9836E5248DE930A100655B0438E"><enum>(b)</enum><header>Extending funding for special diabetes programs for Indians</header><text>Section 330C(c)(2) of the Public Health Service Act (<external-xref legal-doc="usc" parsable-cite="usc/42/254c-3">42 U.S.C. 254c–3(c)(2)</external-xref>) is amended—</text> 
<paragraph id="H98BB7846AA4D4DAFB6ABCD9B63F3188F"><enum>(1)</enum><text>in subparagraph (E), by striking <quote>and</quote> at the end; </text></paragraph> <paragraph id="H0C32B3DD51EF4309B9B73EB0C16BD476"><enum>(2)</enum><text>in subparagraph (F), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph> 
<paragraph id="H2307F88ABC62411BA2BAFA3B4355E868"><enum>(3)</enum><text display-inline="yes-display-inline">by adding at the end the following:</text> <quoted-block style="OLC" id="H73A0A6BC27B742D8AA4EDC2B85F03715" display-inline="no-display-inline"> <subparagraph id="HDB559FA9C2C6499AB4A55E169B1C0001"><enum>(G)</enum><text display-inline="yes-display-inline">$79,832,215 for the period beginning on April 1, 2025, and ending on September 30, 2025, to remain available until expended.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection></section> 
<section id="H1E69C2818E244E908BEAD4E9ABE84B0C"><enum>2103.</enum><header>National health security extensions</header> 
<subsection id="H47AC2809A39843179B331D15CEC2AC10"><enum>(a)</enum><text>Section 319(e)(8) of the Public Health Service Act (<external-xref legal-doc="usc" parsable-cite="usc/42/247d">42 U.S.C. 247d(e)(8)</external-xref>) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></subsection> <subsection id="HB507BC39B939492AA777F5488E387EEE"><enum>(b)</enum><text display-inline="yes-display-inline">Section 319L(e)(1)(D) of the Public Health Service Act (42 U.S.C. 247d–7e(e)(1)(D)) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></subsection> 
<subsection id="H9270850431384D16B3FDC51ECD6756BD"><enum>(c)</enum><text display-inline="yes-display-inline">Section 319L–1(b) of the Public Health Service Act (42 U.S.C. 247d–7f(b)) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></subsection> <subsection id="H9A2083F9E46C4D42B696625091DBC211"><enum>(d)</enum> <paragraph commented="no" display-inline="yes-display-inline" id="HD01C39911C444BCC987B846C3953B9C1"><enum>(1)</enum><text display-inline="yes-display-inline">Section 2811A(g) of the Public Health Service Act (42 U.S.C. 300hh–10b(g)) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></paragraph> 
<paragraph id="HC694CB77E79B4C9F91824ACD6E6F5D9B" indent="up1"><enum>(2)</enum><text display-inline="yes-display-inline">Section 2811B(g)(1) of the Public Health Service Act (42 U.S.C. 300hh–10c(g)(1)) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></paragraph> <paragraph id="HA77DC3C2DDEF40E8B859A0B90FB08CA2" indent="up1"><enum>(3)</enum><text display-inline="yes-display-inline">Section 2811C(g)(1) of the Public Health Service Act (42 U.S.C. 300hh–10d(g)(1)) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></paragraph></subsection> 
<subsection id="HE10A68B1626B4B38B9C8771428800CDC"><enum>(e)</enum><text display-inline="yes-display-inline">Section 2812(c)(4)(B) of the Public Health Service Act (<external-xref legal-doc="usc" parsable-cite="usc/42/300hh-11">42 U.S.C. 300hh–11(c)(4)(B)</external-xref>) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></subsection></section></title> <title id="H7AC2185BD508466591A0422BF99AEADF"><enum>II</enum><header>Medicare</header> <section id="H6E95873D63854758BFC7F9D69633F932"><enum>2201.</enum><header>Extension of increased inpatient hospital payment adjustment for certain low-volume hospitals</header> <subsection id="H02E986E8F1D44609BB875467E83F0350"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1886(d)(12) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(d)(12)</external-xref>) is amended—</text> 
<paragraph id="H4369C1D8AC164BA59143AAB42B6B5B29"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (B), by striking <quote>during the portion of fiscal year 2025 beginning on April 1, 2025, and ending on September 30, 2025, and</quote>;</text></paragraph> <paragraph id="H40FAF17975134C319192BDF4B139E744"><enum>(2)</enum><text>in subparagraph (C)(i)—</text> 
<subparagraph id="H0333AD36D11A4173864103B932188802"><enum>(A)</enum><text>in the matter preceding subclause (I)—</text> <clause id="H606DFE8005614E74B47066F5015D23CE"><enum>(i)</enum><text>by striking <quote>or portion of a fiscal year</quote>; and</text></clause> 
<clause id="HA004DF19460E45EA9F855BD2FBCEC5A6"><enum>(ii)</enum><text>by striking <quote>2024 and the portion of fiscal year 2025 beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>2025</quote>;</text></clause></subparagraph> <subparagraph id="H992E370C13724938ADDF890A63DF5D45"><enum>(B)</enum><text>in subclause (III), by striking <quote>2024 and the portion of fiscal year 2025 beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>2025</quote>; and</text></subparagraph> 
<subparagraph id="HCA331163CF094D3AAF7D38B8F3572C06"><enum>(C)</enum><text>in subclause (IV), by striking <quote>the portion of fiscal year 2025 beginning on April 1, 2025, and ending on September 30, 2025, and</quote>; and</text></subparagraph></paragraph> <paragraph id="H6CD4CC942EB64F98AEBF077E5145DC6B"><enum>(3)</enum><text>in subparagraph (D)—</text> 
<subparagraph id="HD8ED2B6715814187AF1F3E68AEDA367A"><enum>(A)</enum><text>in the matter preceding clause (i), by striking <quote>2024 or during the portion of fiscal year 2025 beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>2025</quote>; and</text></subparagraph> <subparagraph id="HB24C60E30B14449ABBFDFB4D1D43408F"><enum>(B)</enum><text>in clause (ii), by striking <quote>2024 and the portion of fiscal year 2025 beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>2025</quote>.</text></subparagraph></paragraph></subsection> 
<subsection id="HB397D565283C4825A4E1CF3D4B4CD15B"><enum>(b)</enum><header>Implementation</header><text display-inline="yes-display-inline">Notwithstanding any other provision of law, the Secretary of Health and Human Services may implement the amendments made by this section by program instruction or otherwise.</text></subsection></section> <section id="H45808D7AB2984E6283C578938F9889CF"><enum>2202.</enum><header>Extension of the Medicare-dependent hospital (MDH) program</header> <subsection id="H8F40DD94A96B4A5BA81AE33D99D181CC"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1886(d)(5)(G) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(d)(5)(G)</external-xref>) is amended—</text> 
<paragraph id="HB8CE0D1A860346CA952535C327697E46"><enum>(1)</enum><text>in clause (i), by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>; and</text></paragraph> <paragraph id="H46FC8FAE65EE416B81F3F3DC7FFF7000"><enum>(2)</enum><text>in clause (ii)(II), by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>.</text></paragraph></subsection> 
<subsection id="H48F6B3B72E334FDA9BB9F5DBCD286E27"><enum>(b)</enum><header>Conforming amendments</header> 
<paragraph id="HE598B4C8A75C41F296A984BF465F6C71"><enum>(1)</enum><header>In general</header><text>Section 1886(b)(3)(D) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(b)(3)(D)</external-xref>) is amended—</text> <subparagraph id="HCFDA39A0CC104571BDE9ECD1E5A9A3AF"><enum>(A)</enum><text>in the matter preceding clause (i), by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>; and</text></subparagraph> 
<subparagraph id="HBDCF6F301B064D498FAC138B04C94561"><enum>(B)</enum><text>in clause (iv), by striking <quote>2024 and the portion of fiscal year 2025 beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>2025</quote>.</text></subparagraph></paragraph> <paragraph id="H3931254443F34B86938D5F8C1EEB1D19"><enum>(2)</enum><header>Permitting hospitals to decline reclassification</header><text display-inline="yes-display-inline">Section 13501(e)(2) of the Omnibus Budget Reconciliation Act of 1993 (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww</external-xref> note) is amended by striking <quote>2024, or the portion of fiscal year 2025 beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>2025</quote>.</text></paragraph></subsection></section> 
<section id="H88E32DDC1290420D9F87A2A1B41B8F4D"><enum>2203.</enum><header>Extension of add-on payments for ambulance services</header><text display-inline="no-display-inline">Section 1834(l) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(l)</external-xref>) is amended—</text> <paragraph id="H57A4134C02A3463A8BA9C4DEE707DEF0"><enum>(1)</enum><text>in paragraph (12)(A), by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>; and</text></paragraph> 
<paragraph id="HFA87C67F83C24CC29ECB59DD523EF3E1"><enum>(2)</enum><text>in paragraph (13), by striking <quote>April 1, 2025</quote> each place it appears and inserting <quote>October 1, 2025</quote> in each such place. </text></paragraph></section> <section id="HEBD0BA207AF74621977780477C6847FE"><enum>2204.</enum><header>Extension of funding for quality measure endorsement, input, and selection</header><text display-inline="no-display-inline">Section 1890(d)(2) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395aaa">42 U.S.C. 1395aaa(d)(2)</external-xref>) is amended—</text> 
<paragraph id="H409AAB170228454DB58B339F9A21B3CC"><enum>(1)</enum><text>in the first sentence—</text> <subparagraph id="HA8A96B8DA8884BC1BBBE338275539EF9"><enum>(A)</enum><text>by striking <quote>$11,030,000</quote> and inserting <quote>$14,030,000</quote>; and</text></subparagraph> 
<subparagraph id="H53301CE9BCD24480872C2F75E48BF512"><enum>(B)</enum><text>by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>; and</text></subparagraph></paragraph> <paragraph id="HB6D6F78B81C34DE69D2031307936419E"><enum>(2)</enum><text display-inline="yes-display-inline">in the third sentence, by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></paragraph></section> 
<section id="H1D1A5CDC14DF4CCC995128495145A53E"><enum>2205.</enum><header>Extension of funding outreach and assistance for low-income programs</header> 
<subsection id="H510F1B031E9E48A39721C0836C6730C0"><enum>(a)</enum><header>State health insurance assistance programs</header><text display-inline="yes-display-inline">Subsection (a)(1)(B)(xiv) of section 119 of the Medicare Improvements for Patients and Providers Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/42/1395b-3">42 U.S.C. 1395b–3</external-xref> note) is amended by striking <quote>March 31, 2025, $22,500,000</quote> and inserting <quote>September 30, 2025, $30,000,000</quote>.</text></subsection> <subsection id="H75DCF3FFDFD74CA6BB19958703EB5F9B"><enum>(b)</enum><header>Area agencies on aging</header><text display-inline="yes-display-inline">Subsection (b)(1)(B)(xiv) of such section 119 is amended by striking <quote>March 31, 2025, $22,500,000</quote> and inserting <quote>September 30, 2025, $30,000,000</quote>.</text></subsection> 
<subsection id="HCC55240873A942708DA53B8D29CA67E7"><enum>(c)</enum><header>Aging and disability resource centers</header><text display-inline="yes-display-inline">Subsection (c)(1)(B)(xiv) of such section 119 is amended by striking <quote>March 31, 2025, $8,500,000</quote> and inserting <quote>September 30, 2025, $10,000,000</quote>.</text></subsection> <subsection id="H4FFB589BEFFA468AB45C81C98F1B41EC"><enum>(d)</enum><header>Coordination of efforts to inform older Americans about benefits available under Federal and State programs</header><text display-inline="yes-display-inline">Subsection (d)(2)(xiv) of such section 119 is amended by striking <quote>March 31, 2025, $22,500,000</quote> and inserting <quote>September 30, 2025, $30,000,000</quote>.</text></subsection></section> 
<section id="H42EA3690279A434CAF43DBB936E1318C"><enum>2206.</enum><header>Extension of the work geographic index floor</header><text display-inline="no-display-inline">Section 1848(e)(1)(E) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395w-4">42 U.S.C. 1395w–4(e)(1)(E)</external-xref>) is amended by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>.</text></section> <section id="H16585DC82A3242EC94B1E8294985230D" section-type="subsequent-section" display-inline="no-display-inline"><enum>2207.</enum><header>Extension of certain telehealth flexibilities</header> <subsection id="H04523231FD4B4472B06A89A7F40B3E28"><enum>(a)</enum><header>Removing geographic requirements and expanding originating sites for telehealth services</header><text display-inline="yes-display-inline">Section 1834(m) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(m)</external-xref>) is amended—</text> 
<paragraph id="HEE9AA566994B4150ABBD430416CCEED8"><enum>(1)</enum><text>in paragraph (2)(B)(iii), by striking <quote>ending March 31, 2025</quote> and inserting <quote>ending September 30, 2025</quote>; and</text></paragraph> <paragraph id="HC27C49D9D75B483EB950685C8746A3A1"><enum>(2)</enum><text>in paragraph (4)(C)(iii), by striking <quote>ending on March 31, 2025</quote> and inserting <quote>ending on September 30, 2025</quote>.</text></paragraph></subsection> 
<subsection id="HE6F94BB24F404028B02AC639D466C447"><enum>(b)</enum><header>Expanding practitioners eligible To furnish telehealth services</header><text>Section 1834(m)(4)(E) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(m)(4)(E)</external-xref>) is amended by striking <quote>ending on March 31, 2025</quote> and inserting <quote>ending on September 30, 2025</quote>.</text></subsection> <subsection id="HD50F4CFBBF024986B9D15447A8678339"><enum>(c)</enum><header>Extending telehealth services for federally qualified health centers and rural health clinics</header><text>Section 1834(m)(8)(A) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(m)(8)(A)</external-xref>) is amended by striking <quote>ending on March 31, 2025</quote> and inserting <quote>ending on September 30, 2025</quote>.</text></subsection> 
<subsection id="H3EFB8807DCE34046A8C95144462CDD27"><enum>(d)</enum><header>Delaying the in-Person requirements under Medicare for mental health services furnished through telehealth and telecommunications technology</header> 
<paragraph id="H2EF89A56CDB948018C0FF7A88004FA18"><enum>(1)</enum><header>Delay in requirements for mental health services furnished through telehealth</header><text display-inline="yes-display-inline">Section 1834(m)(7)(B)(i) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(m)(7)(B)(i)</external-xref>) is amended, in the matter preceding subclause (I), by striking <quote>on or after April 1, 2025</quote> and inserting <quote>on or after October 1, 2025,</quote>.</text></paragraph> <paragraph id="HC7D0DFA8ABB64894AA40CD07E2135E44"><enum>(2)</enum><header>Mental health visits furnished by rural health clinics</header><text display-inline="yes-display-inline">Section 1834(y)(2) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(y)(2)</external-xref>) is amended by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>.</text></paragraph> 
<paragraph id="H972C2F53B9384942945A754B463A771A"><enum>(3)</enum><header>Mental health visits furnished by Federally qualified health centers</header><text display-inline="yes-display-inline">Section 1834(o)(4)(B) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(o)(4)(B)</external-xref>) is amended by striking <quote>April 1, 2025</quote> and inserting <quote>October 1, 2025</quote>.</text></paragraph></subsection> <subsection id="HAB9D9F500C6B4063A9A492A3D4D57E27"><enum>(e)</enum><header>Allowing for the furnishing of audio-only telehealth services</header><text display-inline="yes-display-inline">Section 1834(m)(9) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395m">42 U.S.C. 1395m(m)(9)</external-xref>) is amended by striking <quote>ending on March 31, 2025</quote> and inserting <quote>ending on September 30, 2025</quote>.</text></subsection> 
<subsection id="H4DBF0B412D8A421B8C24CD5333912D3F"><enum>(f)</enum><header>Extending use of telehealth To conduct face-to-Face encounter prior to recertification of eligibility for hospice care</header><text display-inline="yes-display-inline">Section 1814(a)(7)(D)(i)(II) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395f">42 U.S.C. 1395f(a)(7)(D)(i)(II)</external-xref>) is amended by striking <quote>ending on March 31, 2025</quote> and inserting <quote>ending on September 30, 2025</quote>.</text></subsection> <subsection id="H3303D03EE00845999FFE5B095A3D280A"><enum>(g)</enum><header>Program instruction authority</header><text display-inline="yes-display-inline">The Secretary of Health and Human Services may implement the amendments made by this section through program instruction or otherwise.</text></subsection></section> 
<section id="HFB96D54BE1E24586B0ACC8752F1FA825"><enum>2208.</enum><header>Extending acute hospital care at home waiver authorities</header><text display-inline="no-display-inline">Section 1866G(a)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395cc-7">42 U.S.C. 1395cc–7(a)(1)</external-xref>) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> <section id="H1F30CBF4643D4490A42FFE115B4F5604"><enum>2209.</enum><header>Extension of temporary inclusion of authorized oral antiviral drugs as covered part D drugs</header><text display-inline="no-display-inline">Section 1860D–2(e)(1)(C) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395w-102">42 U.S.C. 1395w–102(e)(1)(C)</external-xref>) is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> 
<section id="H1605045683F94C959D531FAF6124375C"><enum>2210.</enum><header>Medicare improvement fund</header><text display-inline="no-display-inline">Section 1898(b)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395iii">42 U.S.C. 1395iii(b)(1)</external-xref>) is amended by striking <quote>$1,251,000,000</quote> and inserting <quote>$1,804,000,000</quote>. </text></section> <section id="HC622665FAF1E4C8891AECF9C25D08455" display-inline="no-display-inline" section-type="subsequent-section"><enum>2211.</enum><header>Medicare sequestration</header><text display-inline="no-display-inline">Section 251A(6)(D) of the Balanced Budget and Emergency Deficit Control Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/2/901a">2 U.S.C. 901a(6)(D)</external-xref>) is amended—</text> 
<paragraph commented="no" display-inline="no-display-inline" id="H4BFCECC804EF41E49D4B7ADD6808D841"><enum>(1)</enum><text>in clause (i), by striking <quote>8 months</quote> and inserting <quote>10 months</quote>; and</text></paragraph> <paragraph id="H3CB647278C92403AA70D345698E55476"><enum>(2)</enum><text>in clause (ii), by striking <quote>4 months</quote> and inserting <quote>2 months</quote>.</text></paragraph></section></title> 
<title id="HFB257B942BBE402C8DDA3FB99A90FFAB"><enum>III</enum><header>Human services</header> 
<section id="HEF77BACFBE144089964F6EC8FE413679"><enum>2301.</enum><header>Sexual risk avoidance education extension</header><text display-inline="no-display-inline">Section 510 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/710">42 U.S.C. 710</external-xref>) is amended—</text> <paragraph id="H1BE84D09ABF54268AF4003DE62B6D616"><enum>(1)</enum><text>in subsection (a)(1)—</text> 
<subparagraph id="HC1291D67F42B4933A7108C5D2C94E4E4"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>the period beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>fiscal year 2025</quote>; and</text></subparagraph> <subparagraph id="H5FF240F8DC4B46A1B6F8CCC762567919"><enum>(B)</enum><text>by striking <quote>or 2025</quote>; and</text></subparagraph></paragraph> 
<paragraph id="H74220F2BECAC4969B54C3551F153A982"><enum>(2)</enum><text>in subsection (f)(1), by striking <quote>the period beginning on October 1, 2024, and ending on March 31, 2025, an amount equal to the pro rata portion of the amount appropriated for the corresponding period for</quote> and inserting <quote>for fiscal year 2025, an amount equal to the amount appropriated for</quote>.</text></paragraph></section> <section id="H4D6453E6C25D487DABE297FFB315FDDC"><enum>2302.</enum><header>Personal responsibility education extension</header><text display-inline="no-display-inline">Section 513 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/713">42 U.S.C. 713</external-xref>) is amended—</text> 
<paragraph id="HBE588B58B35F4D1EBC3F354A3371588E"><enum>(1)</enum><text>in subsection (a)(1)—</text> <subparagraph id="H454A66CC9E7B4FF6A1535A439C0ED1B4"><enum>(A)</enum><text display-inline="yes-display-inline">in subparagraph (A), in the matter preceding clause (i), by striking <quote>the period beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>fiscal year 2025</quote>; and</text></subparagraph> 
<subparagraph id="HA17A7EA56C28402F95FC56A7863DDD91"><enum>(B)</enum><text display-inline="yes-display-inline">in subparagraph (B)(i), by striking <quote>the period beginning on October 1, 2024, and ending on March 31, 2025</quote> and inserting <quote>fiscal year 2025</quote>; and</text></subparagraph></paragraph> <paragraph id="H245E6C2208BE439A85C76A4DC7F69B63"><enum>(2)</enum><text display-inline="yes-display-inline">in subsection (f), by striking <quote>the period beginning on October 1, 2024, and ending on March 31, 2025, an amount equal to the pro rata portion of the amount appropriated for the corresponding period</quote> and inserting <quote>fiscal year 2025, an amount equal to the amount appropriated for fiscal year 2024</quote>.</text></paragraph></section> 
<section id="HF1A1D0EEAF3F4F0C81E978FBD5121AB1"><enum>2303.</enum><header>Extension of funding for family-to-family health information centers</header><text display-inline="no-display-inline">Section 501(c)(1)(A)(viii) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/701">42 U.S.C. 701(c)(1)(A)(viii)</external-xref>) is amended by striking <quote>$3,000,000 for the portion of fiscal year 2025 before April 1, 2025.</quote> and inserting <quote>$6,000,000 for fiscal year 2025</quote>. </text></section></title> <title id="H85880A3547CB447D8D5A730E8720ED3D"><enum>IV</enum><header>Medicaid</header> <section id="HA4E065E508544BD189F6D9F797B10D69"><enum>2401.</enum><header>Delaying Medicaid DSH reductions</header><text display-inline="no-display-inline">Section 1923(f)(7)(A) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396r-4">42 U.S.C. 1396r–4(f)(7)(A)</external-xref>) is amended—</text> 
<paragraph id="HF4B91782BEE54664A8F35C78DB7C1C1E"><enum>(1)</enum><text>in clause (i)—</text> <subparagraph id="HB196B0ED84F94D018C47C8AEFF1CF3DB"><enum>(A)</enum><text>in the matter preceding subclause (I)—</text> 
<clause id="HFD1A85C4F2AF4F7C9C821CB3CA95F56B"><enum>(i)</enum><text>by striking <quote>For the period beginning April 1, 2025, and ending September 30, 2025, and for</quote> and inserting <quote>For</quote>; and</text></clause> <clause id="HFB642B2DB7B8486D9D8B8CC32002FD25"><enum>(ii)</enum><text>by striking <quote>through 2027</quote> and inserting <quote>through 2028</quote>; </text></clause></subparagraph> 
<subparagraph id="HB9CCED44D6A44AF2AE4DF587E9D32439"><enum>(B)</enum><text>in subclause (I), by striking <quote>or period</quote>; and</text></subparagraph> <subparagraph id="H7932D693476342AE9E14DC78D1B177CB"><enum>(C)</enum><text>in subclause (II), by striking <quote>or period</quote>; and</text></subparagraph></paragraph> 
<paragraph id="HA0129691E28B4382AAF603A03470D825"><enum>(2)</enum><text>in clause (ii)—</text> <subparagraph id="HA5BB39BE089944658B5485C42F388C87"><enum>(A)</enum><text>by striking <quote>for the period beginning April 1, 2025, and ending September 30, 2025, and</quote>; and</text></subparagraph> 
<subparagraph id="H13DB3CD54DD94A9DA84B21377D942448"><enum>(B)</enum><text>by striking <quote>through 2027</quote> and inserting <quote>through 2028</quote>. </text></subparagraph></paragraph></section></title></division> <division id="HBB86ABDD143B4BE8AA3DA22E60351343"><enum>C</enum><header>Other Matters</header> <section id="HA7500BD7906C49C2A60B2B8BA8839BC1"><enum>3101.</enum><header>Commodity futures trading commission whistleblower program</header><text display-inline="no-display-inline">Section 1(b) of <external-xref legal-doc="public-law" parsable-cite="pl/117/25">Public Law 117–25</external-xref> (135 Stat. 297; 136 Stat. 2133; 136 Stat. 5984) is amended in each of paragraphs (3) and (4) by striking <quote>March 14, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> 
<section id="HA7FDB28F7C214B52A05B179B91D81F78"><enum>3102.</enum><header>Protection of certain facilities and assets from unmanned aircraft</header><text display-inline="no-display-inline">Section 210G(i) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/124n">6 U.S.C. 124n(i)</external-xref>) is amended by striking <quote>March 14, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> <section id="HCC2038159A5442199A54BE75A9CD97DE"><enum>3103.</enum><header>Additional special assessment</header><text display-inline="no-display-inline">Section 3014 of title 18, United States Code, is amended by striking <quote>March 14, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> 
<section id="H4519B1A8A64F4FE8AC66CA4D8BD76220"><enum>3104.</enum><header>National cybersecurity protection system authorization</header><text display-inline="no-display-inline">Section 227(a) of the Federal Cybersecurity Enhancement Act of 2015 (<external-xref legal-doc="usc" parsable-cite="usc/6/1525">6 U.S.C. 1525(a)</external-xref>) is amended by striking <quote>March 14, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> <section id="H578CBB7C116B4133AB01A9E827AAD7B5"><enum>3105.</enum><header>Extension of temporary order for fentanyl-related substances</header><text display-inline="no-display-inline">Effective as if included in the enactment of the Temporary Reauthorization and Study of the Emergency Scheduling of Fentanyl Analogues Act (<external-xref legal-doc="public-law" parsable-cite="pl/116/114">Public Law 116–114</external-xref>), section 2 of such Act is amended by striking <quote>March 31, 2025</quote> and inserting <quote>September 30, 2025</quote>.</text></section> 
<section id="H1BCAC964C0CC4BB899737B049667213F"><enum>3106.</enum><header>Budgetary effects</header> 
<subsection id="H1D3ED3A98023458C8095044C4CDF1F37"><enum>(a)</enum><header>Statutory PAYGO scorecards</header><text>The budgetary effects of divisions B and C shall not be entered on either PAYGO scorecard maintained pursuant to section 4(d) of the Statutory Pay-As-You-Go Act of 2010.</text></subsection> <subsection id="HC0C16AD965C447DBAB1BB13C269D1658"><enum>(b)</enum><header>Senate PAYGO scorecards</header><text>The budgetary effects of divisions B and C shall not be entered on any PAYGO scorecard maintained for purposes of section 4106 of H. Con. Res. 71 (115th Congress).</text></subsection> 
<subsection id="H8AE178794FF3406F82ED048B997C55AC"><enum>(c)</enum><header>Classification of budgetary effects</header><text>Notwithstanding Rule 3 of the Budget Scorekeeping Guidelines set forth in the joint explanatory statement of the committee of conference accompanying Conference Report 105–217 and section 250(c)(8) of the Balanced Budget and Emergency Deficit Control Act of 1985, the budgetary effects of divisions B and C shall not be estimated—</text> <paragraph id="HE451DC2974DC4F7385D06AA6C9AB5E7D"><enum>(1)</enum><text>for purposes of section 251 of such Act;</text></paragraph> 
<paragraph id="H98A04D8E129042A793B4933F3C0EB59E"><enum>(2)</enum><text>for purposes of an allocation to the Committee on Appropriations pursuant to section 302(a) of the Congressional Budget Act of 1974; and</text></paragraph> <paragraph id="HE0B0B1CC01D54E3F934B24588E020A11"><enum>(3)</enum><text>for purposes of paragraph (4)(C) of section 3 of the Statutory Pay-As-You-Go Act of 2010 as being included in an appropriation Act.</text></paragraph></subsection></section></division> 
</legis-body> <attestation><attestation-group><role>Speaker of the House of Representatives.</role></attestation-group><attestation-group><role>Vice President of the United States and President of the Senate.</role></attestation-group></attestation>
</bill> 


", "parsed_json": {"title": "Making further continuing appropriations and other extensions for the fiscal year ending September 30, 2025, and for other purposes.", "sponsors": null, "actions": null}}
{"source_domain": "govinfo.gov", "source_collection": "BILLS", "source_congress": "119", "source_session": null, "source_filename": "BILLS-119hr1enr.xml", "source_url": "https://www.govinfo.gov/content/pkg/BILLS-119hr1enr/xml/BILLS-119hr1enr.xml", "doc_type": "hr", "published_at": null, "received_at": null, "canonical_id": "BILLS-119hr1enr", "title": "To provide for reconciliation pursuant to title II of H. Con. Res. 14.", "sponsors": null, "actions": null, "text_versions": null, "raw_xml_base64": "<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="billres.xsl"?>
<!DOCTYPE bill PUBLIC "-//US Congress//DTDs/bill.dtd//EN" "bill.dtd">
<bill bill-stage="Enrolled-Bill" dms-id="HB8C1B4B3D7794E10822C18569F995256" public-private="public" key="H" bill-type="olc"> 
<metadata xmlns:dc="http://purl.org/dc/elements/1.1/">
<dublinCore>
<dc:title> HR 1 ENR: FEHB Protection Act of 2025</dc:title>
<dc:publisher>U.S. House of Representatives</dc:publisher>
<dc:date></dc:date>
<dc:format>text/xml</dc:format>
<dc:language>EN</dc:language>
<dc:rights>Pursuant to Title 17 Section 105 of the United States Code, this file is not subject to copyright protection and is in the public domain.</dc:rights>
</dublinCore>
</metadata>
<form>
<distribution-code display="no">I</distribution-code> 
<congress>One Hundred Nineteenth Congress of the United States of America</congress> <session>At the First Session</session><enrolled-dateline>Begun and held at the City of Washington on Friday, the third day of January, two thousand and twenty-five</enrolled-dateline> 
<legis-num>H. R. 1</legis-num> 
<current-chamber display="no"></current-chamber> 
<legis-type>AN ACT</legis-type> 
<official-title display="yes">To provide for reconciliation pursuant to title II of H. Con. Res. 14.</official-title> 
</form> 
<legis-body id="H3528B90E02D34697AC43DADE851B717C" style="OLC"> 
<section id="HFEA9FCA81B1D47B59CE8DFDFDDD15719" section-type="section-one"><enum>1.</enum><header>Table of contents</header><text display-inline="no-display-inline">The table of contents of this Act is as follows:</text> <toc> <toc-entry level="section" idref="HFEA9FCA81B1D47B59CE8DFDFDDD15719">Sec. 1. Table of contents.</toc-entry> <toc-entry level="title" idref="HB35BD6CD41BE46399A962DCB7B215A0A">TITLE I—Committee on Agriculture, Nutrition, and Forestry </toc-entry> <toc-entry level="subtitle" idref="H4013BBCF9ABA4877B2F2983A13C5A382">Subtitle A—Nutrition</toc-entry> <toc-entry level="section" idref="H6F04C5423A664BE08EF13DD2EF7BF66F">Sec. 10101. Re-evaluation of thrifty food plan.</toc-entry> <toc-entry level="section" idref="HD116E890205E4ADEB171FB138BCBCE7E">Sec. 10102. Modifications to SNAP work requirements for able-bodied adults.</toc-entry> <toc-entry level="section" idref="HABEA79FE9BBA4A098BB2092C32F4892F">Sec. 10103. Availability of standard utility allowances based on receipt of energy assistance.</toc-entry> <toc-entry level="section" idref="H59F072435B864760BE9461577D3DC68C">Sec. 10104. Restrictions on internet expenses.</toc-entry> <toc-entry level="section" idref="H5833F8985FE94B9EA7035F26C34B2DD2">Sec. 10105. Matching funds requirements.</toc-entry> <toc-entry level="section" idref="H13FE371F4A424C59B2E81D73CB5FA3DC">Sec. 10106. Administrative cost sharing.</toc-entry> <toc-entry level="section" idref="HF8EA7F980FC64C5B93802E69905B4A44">Sec. 10107. National education and obesity prevention grant program.</toc-entry> <toc-entry level="section" idref="HDEA4B8BF31644CAC9054738E8FF22026">Sec. 10108. Alien SNAP eligibility.</toc-entry> <toc-entry level="subtitle" idref="HA41282286BE84636AFA2C659F70B6D5F">Subtitle B—Forestry</toc-entry> <toc-entry level="section" idref="H2BA57E0D96C144BF9303F533EB30E468">Sec. 10201. Rescission of amounts for forestry.</toc-entry> <toc-entry level="subtitle" idref="H0626BB81CB8E41798B65C8EDEDAD38D7">Subtitle C—Commodities</toc-entry> <toc-entry level="section" idref="H6421118AB0E742188429FBEC84EFA36D">Sec. 10301. Effective reference price; reference price.</toc-entry> <toc-entry level="section" idref="H6AFAA72AE31C4D4F8C62F2E7AFE17D54">Sec. 10302. Base acres.</toc-entry> <toc-entry level="section" idref="HEF0102538DDD4393BF155DFB3BBB45F1">Sec. 10303. Producer election.</toc-entry> <toc-entry level="section" idref="H0896EE52E3324BEFB4BF830CA3C71172">Sec. 10304. Price loss coverage.</toc-entry> <toc-entry level="section" idref="H841C78595EF54460B3A709FF506DB8CF">Sec. 10305. Agriculture risk coverage.</toc-entry> <toc-entry level="section" idref="H25356453FCB94A068C1E2974ACD7A336">Sec. 10306. Equitable treatment of certain entities.</toc-entry> <toc-entry level="section" idref="H54CD9C93E46249F4A118AEAE531D4134">Sec. 10307. Payment limitations.</toc-entry> <toc-entry level="section" idref="H52F2DB4AD02E438C82C71945E3E924FC">Sec. 10308. Adjusted gross income limitation.</toc-entry> <toc-entry level="section" idref="H88E662DACFB544CF956B9C7DF34F2A0D">Sec. 10309. Marketing loans.</toc-entry> <toc-entry level="section" idref="HC1345ADA7CAA4A469A669F8BEE4EEF1D">Sec. 10310. Repayment of marketing loans.</toc-entry> <toc-entry level="section" idref="HCD2E8D986D784010A62FC295422F5B31">Sec. 10311. Economic adjustment assistance for textile mills.</toc-entry> <toc-entry level="section" idref="HFC6AF482BAEE499D8997022F684A1D63">Sec. 10312. Sugar program updates.</toc-entry> <toc-entry level="section" idref="H19C7E75E2E84432A9D9C6DF65B4B53EC">Sec. 10313. Dairy policy updates.</toc-entry> <toc-entry level="section" idref="H28FE808A73B6452B9040FEB21AC73EFF">Sec. 10314. Implementation.</toc-entry> <toc-entry level="subtitle" idref="H791FCAE1152E4C4E99A8667F4A62B2C9">Subtitle D—Disaster assistance programs</toc-entry> <toc-entry level="section" idref="H6A6BB05BE6A1446FAD13EA0E1797DDCA">Sec. 10401. Supplemental agricultural disaster assistance.</toc-entry> <toc-entry level="subtitle" idref="H3CC9316629A544D6BDFCDE9726515AEB">Subtitle E—Crop insurance</toc-entry> <toc-entry level="section" idref="H39E68B0A42724380B9CFAEE4F107DF09">Sec. 10501. Beginning farmer and rancher benefit.</toc-entry> <toc-entry level="section" idref="HB6DA399E7AF44BE8ABAF471AB12B1980">Sec. 10502. Area-based crop insurance coverage and affordability.</toc-entry> <toc-entry level="section" idref="H422E1042FBAA49159A59127C72156A79">Sec. 10503. Administrative and operating expense adjustments.</toc-entry> <toc-entry level="section" idref="H18DE8C26E4B84BF4B696F4AAD50D7F84">Sec. 10504. Premium support.</toc-entry> <toc-entry level="section" idref="HC1B9B9203E8D4BC597F9FFBA32A5171C">Sec. 10505. Program compliance and integrity.</toc-entry> <toc-entry level="section" idref="H40627973589840608790A348FD98B00B">Sec. 10506. Reviews, compliance, and integrity.</toc-entry> <toc-entry level="section" idref="H7867691E65FB41E38062EE1F5863DE64">Sec. 10507. Poultry insurance pilot program.</toc-entry> <toc-entry level="subtitle" idref="H372661F49BAC4B509A02E6F1C076C488">Subtitle F—Additional investments in rural America</toc-entry> <toc-entry level="section" idref="H3D38296C180E445EA5690E6B23141C6F">Sec. 10601. Conservation.</toc-entry> <toc-entry level="section" idref="HD4BDFD923B4D416E9F79566AC78253CE">Sec. 10602. Supplemental agricultural trade promotion program.</toc-entry> <toc-entry level="section" idref="HC3ABF1FF4AFE44F48FE70D1816FD5772">Sec. 10603. Nutrition.</toc-entry> <toc-entry level="section" idref="H664B592E0BD04704AC164F67BC56BE9A">Sec. 10604. Research.</toc-entry> <toc-entry level="section" idref="H4B769B13A5B245A6A371A4D408B171D3">Sec. 10605. Energy.</toc-entry> <toc-entry level="section" idref="H6CAAC535B3B34AAAA0BA22731095C55F">Sec. 10606. Horticulture.</toc-entry> <toc-entry level="section" idref="HB3D90843DB12433FA902ECC46E95F3DD">Sec. 10607. Miscellaneous.</toc-entry> <toc-entry level="title" idref="HE6B2C9A05C6043A5A00F0A0BFC8E1B57">TITLE II—Committee on Armed Services</toc-entry> <toc-entry level="section" idref="H2A574BD91FF249CEA5B2477E88CB1DBC">Sec. 20001. Enhancement of Department of Defense resources for improving the quality of life for military personnel.</toc-entry> <toc-entry level="section" idref="H9AE51F2D2B50476A8B8358D34BE39040">Sec. 20002. Enhancement of Department of Defense resources for shipbuilding.</toc-entry> <toc-entry level="section" idref="H8DD0B922DB0D4F35918F68B77F18CEA8">Sec. 20003. Enhancement of Department of Defense resources for integrated air and missile defense.</toc-entry> <toc-entry level="section" idref="H751783CB9AF4414993A31823597D45D1">Sec. 20004. Enhancement of Department of Defense resources for munitions and defense supply chain resiliency.</toc-entry> <toc-entry level="section" idref="H9A945C2274C0440097A05521AD3E1A06">Sec. 20005. Enhancement of Department of Defense resources for scaling low-cost weapons into production.</toc-entry> <toc-entry level="section" idref="H710D58DC5C574CF79E53DD1166DE3F3E">Sec. 20006. Enhancement of Department of Defense resources for improving the efficiency and cybersecurity of the Department of Defense.</toc-entry> <toc-entry level="section" idref="H6EDFDAD14C364744B56168AC7B649F5F">Sec. 20007. Enhancement of Department of Defense resources for air superiority.</toc-entry> <toc-entry level="section" idref="H1436E021BB3146D8904347966AB242D2">Sec. 20008. Enhancement of resources for nuclear forces.</toc-entry> <toc-entry level="section" idref="HC379F7F710334C2FAB6E6F27AB6241BA">Sec. 20009. Enhancement of Department of Defense resources to improve capabilities of United States Indo-Pacific Command.</toc-entry> <toc-entry level="section" idref="H466D9F4311E845499D18FEA430BE5CDB">Sec. 20010. Enhancement of Department of Defense resources for improving the readiness of the Department of Defense.</toc-entry> <toc-entry level="section" idref="HE6CC3B36F9B94F118051243C8031F787">Sec. 20011. Improving Department of Defense border support and counter-drug missions.</toc-entry> <toc-entry level="section" idref="HF3676486AA0D43DF945902EBB34776DC">Sec. 20012. Department of Defense oversight.</toc-entry> <toc-entry level="section" idref="HFF36FA8CF804435A9F7FA6E38AB996EC">Sec. 20013. Military construction projects authorized.</toc-entry> <toc-entry level="title" idref="HAFCE4253E9484C58B8E5FFCAFA0F6046">TITLE III—Committee on Banking, Housing, and Urban Affairs</toc-entry> <toc-entry level="section" idref="H9ED22D71F9474090A33D3DE1FC3540DB">Sec. 30001. Funding cap for the Bureau of Consumer Financial Protection.</toc-entry> <toc-entry level="section" idref="H7470A4A5A72749EBACEE916A326B1AD5">Sec. 30002. Rescission of funds for Green and Resilient Retrofit Program for Multifamily Housing.</toc-entry> <toc-entry level="section" idref="HB584672373EC4E7097D212BCA67D6434">Sec. 30003. Securities and Exchange Commission Reserve Fund.</toc-entry> <toc-entry level="section" idref="H88791FC25F70455BB6FDE368B66EC6FD">Sec. 30004. Appropriations for Defense Production Act.</toc-entry> <toc-entry level="title" idref="H37A96C7C4AAF4F96A77F1F1BA401DCBE">TITLE IV—Committee on Commerce, Science, and Transportation</toc-entry> <toc-entry level="section" idref="H3D6FBE1C60794F909BA5CE180FF383FE">Sec. 40001. Coast Guard mission readiness.</toc-entry> <toc-entry level="section" idref="H29B71ED8B92F4C9985BB7D3E041F99F0">Sec. 40002. Spectrum auctions.</toc-entry> <toc-entry level="section" idref="H132F7E447AF94E2FA76E606C593D5BA0">Sec. 40003. Air traffic control improvements.</toc-entry> <toc-entry level="section" idref="H65613700A57B4A05B6D7BB37CD99D764">Sec. 40004. Space launch and reentry licensing and permitting user fees.</toc-entry> <toc-entry level="section" idref="HF7C52C9A108C4D27BFD47DDFA1CEAB4B">Sec. 40005. Mars missions, Artemis missions, and Moon to Mars program.</toc-entry> <toc-entry level="section" idref="H75512780012B493B9F400A6D924EAE1B">Sec. 40006. Corporate average fuel economy civil penalties.</toc-entry> <toc-entry level="section" idref="H47AA601A68894420863A376043620379">Sec. 40007. Payments for lease of Metropolitan Washington Airports.</toc-entry> <toc-entry level="section" idref="H193E283821E24A35877D2819F52210FB">Sec. 40008. Rescission of certain amounts for the National Oceanic and Atmospheric Administration.</toc-entry> <toc-entry level="section" idref="H020D3A4921CA4CA4B90F47C945F9DD70">Sec. 40009. Reduction in annual transfers to Travel Promotion Fund.</toc-entry> <toc-entry level="section" idref="HEC16E2B85A704BFE889706256A218EDB">Sec. 40010. Treatment of unobligated funds for alternative fuel and low-emission aviation technology.</toc-entry> <toc-entry level="section" idref="HBC10CCAFC8C54EE187FCD3E6F727F818">Sec. 40011. Rescission of amounts appropriated to Public Wireless Supply Chain Innovation Fund.</toc-entry> <toc-entry level="title" idref="H97EF3ADEFF15496CBE2EA43753098AAB">TITLE V—Committee on Energy and Natural Resources</toc-entry> <toc-entry level="subtitle" idref="H223F5113C3974666838372A8FA53A9B2">Subtitle A—Oil and gas leasing</toc-entry> <toc-entry level="section" idref="HA5264AB74F1741D08C61AD57D817903B">Sec. 50101. Onshore oil and gas leasing.</toc-entry> <toc-entry level="section" idref="H3D87C96700A2414CB68EC64A77D2D444">Sec. 50102. Offshore oil and gas leasing.</toc-entry> <toc-entry level="section" idref="H046A717E27B5441CA215C67BF68E844A">Sec. 50103. Royalties on extracted methane.</toc-entry> <toc-entry level="section" idref="HD14A18E5A7664A74AEF5BF0B1E8721B1">Sec. 50104. Alaska oil and gas leasing.</toc-entry> <toc-entry level="section" idref="H1FDBC51E1A514F91A43E2C9F510CB4CA">Sec. 50105. National Petroleum Reserve–Alaska.</toc-entry> <toc-entry level="subtitle" idref="H44521F362E804FFF98AB5D5DC3EF205C">Subtitle B—Mining</toc-entry> <toc-entry level="section" idref="HDC47A0A1AF954172A89DDBC2D3B84993">Sec. 50201. Coal leasing.</toc-entry> <toc-entry level="section" idref="HB7431570DA5B4FC2B124C59C798C6922">Sec. 50202. Coal royalty.</toc-entry> <toc-entry level="section" idref="HBAFDC3949CF64424B80F866A42743C41">Sec. 50203. Leases for known recoverable coal resources.</toc-entry> <toc-entry level="section" idref="H18DBD35B3A1A4D8F9144BF8D10193BBB">Sec. 50204. Authorization to mine Federal coal.</toc-entry> <toc-entry level="subtitle" idref="H688649181E75452395F8438130E78B4C">Subtitle C—Lands</toc-entry> <toc-entry level="section" idref="H39C8C34D9499400BB75521AA1357B578">Sec. 50301. Timber sales and long-term contracting for the Forest Service and the Bureau of Land Management.</toc-entry> <toc-entry level="section" idref="H6BE0EBD048D04A9A93EC7F5DCAFF51D9">Sec. 50302. Renewable energy fees on Federal land.</toc-entry> <toc-entry level="section" idref="HFC05672EF2324523B4298D4C3605FD6A">Sec. 50303. Renewable energy revenue sharing.</toc-entry> <toc-entry level="section" idref="H8BD50C1DAA404BB1A4D9234EB53B07B1">Sec. 50304. Rescission of National Park Service and Bureau of Land Management funds.</toc-entry> <toc-entry level="section" idref="H6A350BF6D7FC4E32A8FE6E7AEA52C592">Sec. 50305. Celebrating America's 250th anniversary.</toc-entry> <toc-entry level="subtitle" idref="H74F9175AA1B84A2FBE44AE22AA3EE48C">Subtitle D—Energy</toc-entry> <toc-entry level="section" idref="HAD69D55934D348768942C297082C5D89">Sec. 50401. Strategic Petroleum Reserve.</toc-entry> <toc-entry level="section" idref="H41167DCEB4004B91BB6E924B2C8754DB">Sec. 50402. Repeals; rescissions.</toc-entry> <toc-entry level="section" idref="H90C144D45E2F4F4BAABEC2900F29E77D">Sec. 50403. Energy dominance financing.</toc-entry> <toc-entry level="section" idref="HA04EEE3CBA974F9C98234FF9F7725DD7">Sec. 50404. Transformational artificial intelligence models.</toc-entry> <toc-entry level="subtitle" idref="H118ECAAADB0540D8BBE8042029E0AD72">Subtitle E—Water</toc-entry> <toc-entry level="section" idref="H78F42AF3A1BC48AFBA551DDB89803627">Sec. 50501. Water conveyance and surface water storage enhancement.</toc-entry> <toc-entry level="title" idref="HB3E0583E617B4C2F803D5A0B2ECBA657">TITLE VI—Committee on Environment and Public Works</toc-entry> <toc-entry level="section" idref="HE76AEF2DAE7E44BAAEFAFBDC0E104759">Sec. 60001. Rescission of funding for clean heavy-duty vehicles.</toc-entry> <toc-entry level="section" idref="H03E9D5A4EEAA460DB574C2826B6B0A52">Sec. 60002. Repeal of Greenhouse Gas Reduction Fund.</toc-entry> <toc-entry level="section" idref="HD6EC74935A184C04B575B812582DD63F">Sec. 60003. Rescission of funding for diesel emissions reductions.</toc-entry> <toc-entry level="section" idref="H520A1A366047469EA716F2A4789CC4F4">Sec. 60004. Rescission of funding to address air pollution.</toc-entry> <toc-entry level="section" idref="H595EE741A7FF4301848B3C612CCD9068">Sec. 60005. Rescission of funding to address air pollution at schools.</toc-entry> <toc-entry level="section" idref="HDD7CDF21C4814B79A64AEF1E82777F89">Sec. 60006. Rescission of funding for the low emissions electricity program.</toc-entry> <toc-entry level="section" idref="H7FCA5625672D4241861288A7A0107D9E">Sec. 60007. Rescission of funding for section 211(o) of the Clean Air Act.</toc-entry> <toc-entry level="section" idref="HDABFC0F4A3EA4B72959F71B0B8C427E8">Sec. 60008. Rescission of funding for implementation of the American Innovation and Manufacturing Act.</toc-entry> <toc-entry level="section" idref="H2CB5706C0A724D8B9E7B6A382797CFEF">Sec. 60009. Rescission of funding for enforcement technology and public information.</toc-entry> <toc-entry level="section" idref="H03711F620F41415C9E562B3B7987C91F">Sec. 60010. Rescission of funding for greenhouse gas corporate reporting.</toc-entry> <toc-entry level="section" idref="H46CF21C5943B4A92A6AA057ED3C9506E">Sec. 60011. Rescission of funding for environmental product declaration assistance.</toc-entry> <toc-entry level="section" idref="H773191F2541648A980B9E0D5A14B844C">Sec. 60012. Rescission of funding for methane emissions and waste reduction incentive program for petroleum and natural gas systems.</toc-entry> <toc-entry level="section" idref="H880AEA31C92346129B434AA58023CB04">Sec. 60013. Rescission of funding for greenhouse gas air pollution plans and implementation grants.</toc-entry> <toc-entry level="section" idref="HFE5B9D5A4856471AAD38B7655FA53C02">Sec. 60014. Rescission of funding for environmental protection agency efficient, accurate, and timely reviews.</toc-entry> <toc-entry level="section" idref="H8A49ECBA3E1B4B7EB97F21C378A1B8A1">Sec. 60015. Rescission of funding for low-embodied carbon labeling for construction materials.</toc-entry> <toc-entry level="section" idref="H1162BDFFF1F24F6FA6015A28C16B32C1">Sec. 60016. Rescission of funding for environmental and climate justice block grants.</toc-entry> <toc-entry level="section" idref="H23E5B6CF64214DE1BF49208E00DF55CA">Sec. 60017. Rescission of funding for ESA recovery plans.</toc-entry> <toc-entry level="section" idref="HC91BE13D8CF241828C2735A4BF58D1F1">Sec. 60018. Rescission of funding for environmental and climate data collection.</toc-entry> <toc-entry level="section" idref="H6D43447CC6F446E7B7C24E5FD60381CF">Sec. 60019. Rescission of neighborhood access and equity grant program.</toc-entry> <toc-entry level="section" idref="H1E18498420814410AED05BA284A9BC98">Sec. 60020. Rescission of funding for Federal building assistance.</toc-entry> <toc-entry level="section" idref="HBCF6AEAE661345CDAE61B80E0E76346A">Sec. 60021. Rescission of funding for low-carbon materials for Federal buildings.</toc-entry> <toc-entry level="section" idref="H221175771B10478A8975E5A17BD43104">Sec. 60022. Rescission of funding for GSA emerging and sustainable technologies.</toc-entry> <toc-entry level="section" idref="H826E914A862E4F20BBB5495F7402D096">Sec. 60023. Rescission of environmental review implementation funds.</toc-entry> <toc-entry level="section" idref="H7318E3B1D28C477583E2256E967E263C">Sec. 60024. Rescission of low-carbon transportation materials grants.</toc-entry> <toc-entry level="section" idref="H7A7BF0BDE02C4C74B41C8CA1E033802E">Sec. 60025. John F. Kennedy Center for the Performing Arts.</toc-entry> <toc-entry level="section" idref="H95C86ABC9DF84C618EFAB6E6F991F9AD">Sec. 60026. Project sponsor opt-in fees for environmental reviews.</toc-entry> <toc-entry level="title" idref="HE7EAEF8A10F5420C9F2B2B2B6F103CF3">TITLE VII—Finance</toc-entry> <toc-entry level="subtitle" idref="H7A9DBBFFDCDC4FDA93D4DF9AC49BB8BE">Subtitle A—Tax</toc-entry> <toc-entry level="section" idref="HEC21CA540D674953986DE38DE16762AE">Sec. 70001. References to the Internal Revenue Code of 1986, etc.</toc-entry> <toc-entry level="chapter" idref="H64DFEB6022624DDD992B468DDA806578">Chapter 1—Providing permanent tax relief for middle-class families and workers</toc-entry> <toc-entry level="section" idref="H359E7CA602554D94AEA83C1DEA1C6A78">Sec. 70101. Extension and enhancement of reduced rates.</toc-entry> <toc-entry level="section" idref="H27A3BF740ED140CCAB4076FDF19F61FC">Sec. 70102. Extension and enhancement of increased standard deduction.</toc-entry> <toc-entry level="section" idref="HA96376C924794FBDA210A0A6E18FC9D4">Sec. 70103. Termination of deduction for personal exemptions other than temporary senior deduction.</toc-entry> <toc-entry level="section" idref="H2172B34E4322422AA7D836F8AC2286B1">Sec. 70104. Extension and enhancement of increased child tax credit.</toc-entry> <toc-entry level="section" idref="HFA2E2B5875B74DFF8E8855A85560A214">Sec. 70105. Extension and enhancement of deduction for qualified business income.</toc-entry> <toc-entry level="section" idref="H3FB5F11D4ECF41B8AEAFAB40DD675841">Sec. 70106. Extension and enhancement of increased estate and gift tax exemption amounts.</toc-entry> <toc-entry level="section" idref="HC4EBA15A87C049B2892CBDC96BB93D75">Sec. 70107. Extension of increased alternative minimum tax exemption amounts and modification of phaseout thresholds.</toc-entry> <toc-entry level="section" idref="H5FDFC6CE67B647499A2210D320A8D01C">Sec. 70108. Extension and modification of limitation on deduction for qualified residence interest.</toc-entry> <toc-entry level="section" idref="H1FE97CD7FCD949CAAC185793E3AA658D">Sec. 70109. Extension and modification of limitation on casualty loss deduction.</toc-entry> <toc-entry level="section" idref="HF3AE4F8BAF36462D9087CB1C9F525221">Sec. 70110. Termination of miscellaneous itemized deductions other than educator expenses.</toc-entry> <toc-entry level="section" idref="H8D3F6723F81F49C3B78F2131BCD82ADE">Sec. 70111. Limitation on tax benefit of itemized deductions.</toc-entry> <toc-entry level="section" idref="HE8DFF77C81F34C2097D12E48258CCA39">Sec. 70112. Extension and modification of qualified transportation fringe benefits.</toc-entry> <toc-entry level="section" idref="HB834B26BC9CC4FC7AB03368B28845A35">Sec. 70113. Extension and modification of limitation on deduction and exclusion for moving expenses.</toc-entry> <toc-entry level="section" idref="HE5A1A56BF0B3448299B1FA1923057009">Sec. 70114. Extension and modification of limitation on wagering losses.</toc-entry> <toc-entry level="section" idref="HACEAABCCE488486EB4CC8BAE5BD4B906">Sec. 70115. Extension and enhancement of increased limitation on contributions to ABLE accounts.</toc-entry> <toc-entry level="section" idref="H71B97128E41E40F8B21F9A47F0393745">Sec. 70116. Extension and enhancement of savers credit allowed for ABLE contributions.</toc-entry> <toc-entry level="section" idref="HD198C5EAFAB54139A72C8E2AFB54BE5C">Sec. 70117. Extension of rollovers from qualified tuition programs to ABLE accounts permitted.</toc-entry> <toc-entry level="section" idref="HE34B5D54C635425E85D49D83B35F6E51">Sec. 70118. Extension of treatment of certain individuals performing services in the Sinai Peninsula and enhancement to include additional areas.</toc-entry> <toc-entry level="section" idref="H52200465FA964D868EF55ACA486D8EEB">Sec. 70119. Extension and modification of exclusion from gross income of student loans discharged on account of death or disability.</toc-entry> <toc-entry level="section" idref="H6FC13F4AFDDF42EB85828BEDF10BF168">Sec. 70120. Limitation on individual deductions for certain state and local taxes, etc.</toc-entry> <toc-entry level="chapter" idref="H7B620E2F273940579F5B0CF7B3E3CCF3">Chapter 2—Delivering on Presidential priorities to provide new middle-class tax relief</toc-entry> <toc-entry level="section" idref="H09E767340DAF4779B6187FE3B3FF9181">Sec. 70201. No tax on tips.</toc-entry> <toc-entry level="section" idref="H64A819C578BE4D5DBC70283E620C965A">Sec. 70202. No tax on overtime.</toc-entry> <toc-entry level="section" idref="H51E83848E8E445EFBB291A40500A395B">Sec. 70203. No tax on car loan interest.</toc-entry> <toc-entry level="section" idref="HE8E9B790C001499EB3FF92D36A483700">Sec. 70204. Trump accounts and contribution pilot program.</toc-entry> <toc-entry level="chapter" idref="HA3F1E0B52CAB4E16BE52D0D235E8238B">Chapter 3—Establishing certainty and competitiveness for American job creators</toc-entry> <toc-entry level="subchapter" idref="H0B0D913C9C404477B1FCCD64C8BE367B">SUBCHAPTER A—Permanent U.S. business tax reform and boosting domestic investment</toc-entry> <toc-entry level="section" idref="H3431B677F5F04A5786EEBFFA134970BE">Sec. 70301. Full expensing for certain business property.</toc-entry> <toc-entry level="section" idref="H61D7F1F10C9748539D7ED61A79A0B744">Sec. 70302. Full expensing of domestic research and experimental expenditures.</toc-entry> <toc-entry level="section" idref="HBFD83D672DEF4B97A956EDD6412A146B">Sec. 70303. Modification of limitation on business interest.</toc-entry> <toc-entry level="section" idref="H9BA2C1D6233D41769EEEFEDAFDD04D5F">Sec. 70304. Extension and enhancement of paid family and medical leave credit.</toc-entry> <toc-entry level="section" idref="HA047F4109EF442B791EB8EF8E4C557B1">Sec. 70305. Exceptions from limitations on deduction for business meals.</toc-entry> <toc-entry level="section" idref="HCB131D4E4C82433B89E42D99B7FB5411">Sec. 70306. Increased dollar limitations for expensing of certain depreciable business assets.</toc-entry> <toc-entry level="section" idref="HFE5672670E604A94920DD08EB95F4E12">Sec. 70307. Special depreciation allowance for qualified production property.</toc-entry> <toc-entry level="section" idref="HDD8E78B145DA4809970233B9C139C0FA">Sec. 70308. Enhancement of advanced manufacturing investment credit.</toc-entry> <toc-entry level="section" idref="H14832A6B35CC4AF99EAB68DA29570449">Sec. 70309. Spaceports are treated like airports under exempt facility bond rules.</toc-entry> <toc-entry level="subchapter" idref="HCE654B8B55E74C9190A063F743466515">SUBCHAPTER B—Permanent America-first international tax reforms</toc-entry> <toc-entry level="part" idref="H110FEC247C964D14A4FCD5525626171F">PART I—Foreign tax credit</toc-entry> <toc-entry level="section" idref="H71B4DF499F4949D18000A499231D494D">Sec. 70311. Modifications related to foreign tax credit limitation.</toc-entry> <toc-entry level="section" idref="H89CFF6E142C544ABB6E6F5A163BDDDA3">Sec. 70312. Modifications to determination of deemed paid credit for taxes properly attributable to tested income.</toc-entry> <toc-entry level="section" idref="HC2B8EBA84BF642668F85688D7D192A2C">Sec. 70313. Sourcing certain income from the sale of inventory produced in the United States.</toc-entry> <toc-entry level="part" idref="H2A85AB20F5FF4B1DBC8FF1C46CAD8362">PART II—Foreign-derived deduction eligible income and net CFC tested income</toc-entry> <toc-entry level="section" idref="HBD86FA7F9BFA4232B4F8399EEE613A5C">Sec. 70321. Modification of deduction for foreign-derived deduction eligible income and net CFC tested income.</toc-entry> <toc-entry level="section" idref="H4A328453591D4BD0BC5ACD76349E7FD9">Sec. 70322. Determination of deduction eligible income.</toc-entry> <toc-entry level="section" idref="HB9B1B8607A964251BA2E405E8E1B2C58">Sec. 70323. Rules related to deemed intangible income.</toc-entry> <toc-entry level="part" idref="H3DF8E5121ED34E0F80CFCAE58E3EF7A9">PART III—Base erosion minimum tax</toc-entry> <toc-entry level="section" idref="H68A48C27063C4211BF84FE3111C57F05">Sec. 70331. Extension and modification of base erosion minimum tax amount.</toc-entry> <toc-entry level="part" idref="H6A09138925F3423380B5959EAD9C62C6">PART IV—Business interest limitation</toc-entry> <toc-entry level="section" idref="H742123E361E34C61BC75EFC59A5F6A9B">Sec. 70341. Coordination of business interest limitation with interest capitalization provisions.</toc-entry> <toc-entry level="section" idref="H846A14CF19DA47EFBD4E18812554213C">Sec. 70342. Definition of adjusted taxable income for business interest limitation.</toc-entry> <toc-entry level="part" idref="HDB805EA5C081465383B89EFF33B2D22F">PART V—Other international tax reforms</toc-entry> <toc-entry level="section" idref="HB2F6E73CE3104748B78F99B2094CCDDA">Sec. 70351. Permanent extension of look-thru rule for related controlled foreign corporations.</toc-entry> <toc-entry level="section" idref="H6447A82B14074C1DB294B6D445054B70">Sec. 70352. Repeal of election for 1-month deferral in determination of taxable year of specified foreign corporations.</toc-entry> <toc-entry level="section" idref="HBAF853DB6E5F4DEA9899BB61F3583A22">Sec. 70353. Restoration of limitation on downward attribution of stock ownership in applying constructive ownership rules.</toc-entry> <toc-entry level="section" idref="H19FD9C55E1864F009ABCE76929C240E7">Sec. 70354. Modifications to pro rata share rules.</toc-entry> <toc-entry level="chapter" idref="HB5B199C7BE984DD0B3F98F3C233683B4">Chapter 4—Investing in American families, communities, and small businesses</toc-entry> <toc-entry level="subchapter" idref="H77EBFE69203D4D8E8DA1EF46FED4D68A">SUBCHAPTER A—Permanent investments in families and children</toc-entry> <toc-entry level="section" idref="HEE9B461E459A44CEA7400D92A604A4C0">Sec. 70401. Enhancement of employer-provided child care credit.</toc-entry> <toc-entry level="section" idref="HF0DA8F9F997E47FC9838F92B7CA9C2A7">Sec. 70402. Enhancement of adoption credit.</toc-entry> <toc-entry level="section" idref="HDFE455A066624D67B5650F99E2C7A2C7">Sec. 70403. Recognizing Indian tribal governments for purposes of determining whether a child has special needs for purposes of the adoption credit.</toc-entry> <toc-entry level="section" idref="H6AC4021E141E4481B9686406753BBE56">Sec. 70404. Enhancement of the dependent care assistance program.</toc-entry> <toc-entry level="section" idref="H9EB00F7D93974B22A2B859DB25AF7FBD">Sec. 70405. Enhancement of child and dependent care tax credit.</toc-entry> <toc-entry level="subchapter" idref="H72E82A2B355942EA9F48CD11C1F8C8E8">SUBCHAPTER B—Permanent investments in students and reforms to tax-exempt institutions</toc-entry> <toc-entry level="section" idref="H40B0CC84AB51493B91EA37B02915C60E">Sec. 70411. Tax credit for contributions of individuals to scholarship granting organizations.</toc-entry> <toc-entry level="section" idref="HB97CDED887BE47ABBFFFF65F74682722">Sec. 70412. Exclusion for employer payments of student loans.</toc-entry> <toc-entry level="section" idref="HA7642B36F3C84E89A85C08B5270DD9F5">Sec. 70413. Additional expenses treated as qualified higher education expenses for purposes of 529 accounts.</toc-entry> <toc-entry level="section" idref="HA38FF97DCB0A41158B3CCDD35B115064">Sec. 70414. Certain postsecondary credentialing expenses treated as qualified higher education expenses for purposes of 529 accounts.</toc-entry> <toc-entry level="section" idref="H5942BE80BF4E4BF8904995213D712BF0">Sec. 70415. Modification of excise tax on investment income of certain private colleges and universities.</toc-entry> <toc-entry level="section" idref="HF5542DCA1A504B0A899B4C0728712093">Sec. 70416. Expanding application of tax on excess compensation within tax-exempt organizations.</toc-entry> <toc-entry level="subchapter" idref="HD35921F56E5F4E2785E21BB28768CC2B">SUBCHAPTER C—Permanent investments in community development</toc-entry> <toc-entry level="section" idref="HEFF0D0991580495ABFAE89F239623E78">Sec. 70421. Permanent renewal and enhancement of opportunity zones.</toc-entry> <toc-entry level="section" idref="H36557B26CC17434CA62F7B92CF38DA76">Sec. 70422. Permanent enhancement of low-income housing tax credit.</toc-entry> <toc-entry level="section" idref="HAF72FA0841EB47079813350ADDB4D923">Sec. 70423. Permanent extension of new markets tax credit.</toc-entry> <toc-entry level="section" idref="H554B87EA6F5742A792B7362A9C13F1BB">Sec. 70424. Permanent and expanded reinstatement of partial deduction for charitable contributions of individuals who do not elect to itemize.</toc-entry> <toc-entry level="section" idref="H4A3AAA7E686546BC93A18D28A87EA284">Sec. 70425. 0.5 percent floor on deduction of contributions made by individuals.</toc-entry> <toc-entry level="section" idref="H565E8326D21B4578AE996793C06265F6">Sec. 70426. 1-percent floor on deduction of charitable contributions made by corporations.</toc-entry> <toc-entry level="section" idref="H2B15520D01C94A7A9990AED91D82D63C">Sec. 70427. Permanent increase in limitation on cover over of tax on distilled spirits.</toc-entry> <toc-entry level="section" idref="H3BE72A608E5A4B2E8FE538227DF60125">Sec. 70428. Nonprofit community development activities in remote native villages.</toc-entry> <toc-entry level="section" idref="H6385D0FAD5B141368FBFB6806ED911DA">Sec. 70429. Adjustment of charitable deduction for certain expenses incurred in support of Native Alaskan subsistence whaling.</toc-entry> <toc-entry level="section" idref="H461C8E6EAE044E17A3CA8F2CEB0BE71F">Sec. 70430. Exception to percentage of completion method of accounting for certain residential construction contracts.</toc-entry> <toc-entry level="subchapter" idref="H020D2D68938246608C6D660BFE10B94A">SUBCHAPTER D—Permanent investments in small business and rural America</toc-entry> <toc-entry level="section" idref="H8C7BBB6132E84634896675D8AC771FDD">Sec. 70431. Expansion of qualified small business stock gain exclusion.</toc-entry> <toc-entry level="section" idref="H6448B72F3C5843B59978668EB63CF233">Sec. 70432. Repeal of revision to de minimis rules for third party network transactions.</toc-entry> <toc-entry level="section" idref="H794D9A63A94540BAB37B084DE0966075">Sec. 70433. Increase in threshold for requiring information reporting with respect to certain payees.</toc-entry> <toc-entry level="section" idref="H5C54534E2C0344EA85412227D556A42D">Sec. 70434. Treatment of certain qualified sound recording productions.</toc-entry> <toc-entry level="section" idref="HCF9EB26A2DF34FA6A88BB84FF8207E3A">Sec. 70435. Exclusion of interest on loans secured by rural or agricultural real property.</toc-entry> <toc-entry level="section" idref="HAB10C06BE45140649020370A1C0B3E65">Sec. 70436. Reduction of transfer and manufacturing taxes for certain devices.</toc-entry> <toc-entry level="section" idref="H5DE7C262E69C44458F20EFA88A8F10EA">Sec. 70437. Treatment of capital gains from the sale of certain farmland property.</toc-entry> <toc-entry level="section" idref="H36E3CF48C3FE4BF6A36D536547DCE942">Sec. 70438. Extension of rules for treatment of certain disaster-related personal casualty losses.</toc-entry> <toc-entry level="section" idref="H5AB3E8F5C44943FC86D4AE8568E6D725">Sec. 70439. Restoration of taxable REIT subsidiary asset test.</toc-entry> <toc-entry level="chapter" idref="HB9E397B6F01947F0B2527430E65A644E">Chapter 5—Ending Green New Deal spending, promoting America-first energy, and other reforms</toc-entry> <toc-entry level="subchapter" idref="H396ED1AC30564C119F328D817071E19B">SUBCHAPTER A—Termination of Green New Deal subsidies</toc-entry> <toc-entry level="section" idref="H2396365E65244C9880FEA63E0C5F973A">Sec. 70501. Termination of previously-owned clean vehicle credit.</toc-entry> <toc-entry level="section" idref="H72E7F1597BE24B8288EC64EA912EDC63">Sec. 70502. Termination of clean vehicle credit.</toc-entry> <toc-entry level="section" idref="HD4641741D44742F6BCB1ADA27FAF16B2">Sec. 70503. Termination of qualified commercial clean vehicles credit.</toc-entry> <toc-entry level="section" idref="HF291377854D142CC8CA425A598AD84F5">Sec. 70504. Termination of alternative fuel vehicle refueling property credit.</toc-entry> <toc-entry level="section" idref="H2471A3F2005F4E7C83DB4B90BC08775C">Sec. 70505. Termination of energy efficient home improvement credit.</toc-entry> <toc-entry level="section" idref="H41057BDED5544D4FBD27A4ABFAE3E3CC">Sec. 70506. Termination of residential clean energy credit.</toc-entry> <toc-entry level="section" idref="H3D8B9C0FE3DF4642992B55D4452512EC">Sec. 70507. Termination of energy efficient commercial buildings deduction.</toc-entry> <toc-entry level="section" idref="H9E3BE194EF5A49B8996E9EF6D24CC043">Sec. 70508. Termination of new energy efficient home credit.</toc-entry> <toc-entry level="section" idref="H4ABBEFBD7B774E028E2DC3FC4BD15C6E">Sec. 70509. Termination of cost recovery for energy property.</toc-entry> <toc-entry level="section" idref="HAC4357D4B1B2461E9299422BB48292A6">Sec. 70510. Modifications of zero-emission nuclear power production credit.</toc-entry> <toc-entry level="section" idref="H6E2AADA860494E70A75DC92B80DC2CD5">Sec. 70511. Termination of clean hydrogen production credit.</toc-entry> <toc-entry level="section" idref="H4B1A78567FFE4137AF415D615AF739F5">Sec. 70512. Termination and restrictions on clean electricity production credit.</toc-entry> <toc-entry level="section" idref="H60250DEDD6B24F62ADA57282F5CDC2B0">Sec. 70513. Termination and restrictions on clean electricity investment credit.</toc-entry> <toc-entry level="section" idref="H827ABA44BCE141F38FBD5C9ABF03112D">Sec. 70514. Phase-out and restrictions on advanced manufacturing production credit.</toc-entry> <toc-entry level="section" idref="HEF90412961CE4B118B9CFC6372F64A5B">Sec. 70515. Restriction on the extension of advanced energy project credit program.</toc-entry> <toc-entry level="subchapter" idref="H885E63E6C4694079BBAABB7E8E448B00">SUBCHAPTER B—Enhancement of America-first energy policy</toc-entry> <toc-entry level="section" idref="H9F06A560226E4FC095B9F8E450294630">Sec. 70521. Extension and modification of clean fuel production credit.</toc-entry> <toc-entry level="section" idref="H34AD160D1FC244DCAA088F69D8528045">Sec. 70522. Restrictions on carbon oxide sequestration credit.</toc-entry> <toc-entry level="section" idref="H16A0E94B27074CEDB978D66867F11868">Sec. 70523. Intangible drilling and development costs taken into account for purposes of computing adjusted financial statement income.</toc-entry> <toc-entry level="section" idref="H9986F4D603CC476EB8599D2BC4670181">Sec. 70524. Income from hydrogen storage, carbon capture, advanced nuclear, hydropower, and geothermal energy added to qualifying income of certain publicly traded partnerships.</toc-entry> <toc-entry level="section" idref="HC1F97789CDD0448A8E444D51279B6906">Sec. 70525. Allow for payments to certain individuals who dye fuel.</toc-entry> <toc-entry level="subchapter" idref="H6BCC948F9E374F9D8306D108F5D54DAF">SUBCHAPTER C—Other reforms</toc-entry> <toc-entry level="section" idref="HE668B518BC504862B8F66BDCFC45F32B">Sec. 70531. Modifications to de minimis entry privilege for commercial shipments.</toc-entry> <toc-entry level="chapter" idref="H4D125D5D1F5F4D24BB6D3DA77FF8009D">Chapter 6—Enhancing deduction and income tax credit guardrails, and other reforms</toc-entry> <toc-entry level="section" idref="HA1E94CBC08074FE19917DDE0C55E8122">Sec. 70601. Modification and extension of limitation on excess business losses of noncorporate taxpayers.</toc-entry> <toc-entry level="section" idref="HF07766DB7A04421F8B3E14A14DBAEF8C">Sec. 70602. Treatment of payments from partnerships to partners for property or services.</toc-entry> <toc-entry level="section" idref="H536EEE8ACC2647D895E60830C3E23FA8">Sec. 70603. Excessive employee remuneration from controlled group members and allocation of deduction.</toc-entry> <toc-entry level="section" idref="HDA29F425664B4EC992FBA6EC18E2A804">Sec. 70604. Excise tax on certain remittance transfers.</toc-entry> <toc-entry level="section" idref="H58B241BFAFD64CC3A07341BFB15F8196">Sec. 70605. Enforcement provisions with respect to COVID-related employee retention credits.</toc-entry> <toc-entry level="section" idref="H916A4A9C594B48EAB48EDBF632D981AE">Sec. 70606. Social security number requirement for American Opportunity and Lifetime Learning credits.</toc-entry> <toc-entry level="section" idref="HAD3BC6E95D0C4ACCBDCD5F4DBBF0924C">Sec. 70607. Task force on the replacement of Direct File.</toc-entry> <toc-entry level="subtitle" idref="H00A124B5E74D481E9C40B11626C9DADE">Subtitle B—Health</toc-entry> <toc-entry level="chapter" idref="H1F2AC7DAAC144B50AAB0E9E039D9BE3C">Chapter 1—Medicaid</toc-entry> <toc-entry level="subchapter" idref="H92BA8B5040914BF4B6F9A50225F8E976">SUBCHAPTER A—Reducing fraud and improving enrollment processes</toc-entry> <toc-entry level="section" idref="H8DEEC3F1F40E4CD390DAC8E9F3F90B6C">Sec. 71101. Moratorium on implementation of rule relating to eligibility and enrollment in Medicare Savings Programs.</toc-entry> <toc-entry level="section" idref="H6CCF8B8A04E04A36847FD683A259E8DC">Sec. 71102. Moratorium on implementation of rule relating to eligibility and enrollment for Medicaid, CHIP, and the Basic Health Program.</toc-entry> <toc-entry level="section" idref="HA52179FF1EA542DA88936E2159BEFC99">Sec. 71103. Reducing duplicate enrollment under the Medicaid and CHIP programs.</toc-entry> <toc-entry level="section" idref="H968D7B63B96D4B7F849C3F7D820864FE">Sec. 71104. Ensuring deceased individuals do not remain enrolled.</toc-entry> <toc-entry level="section" idref="HCA190EE79A494B7B807E4370E04565D6">Sec. 71105. Ensuring deceased providers do not remain enrolled.</toc-entry> <toc-entry level="section" idref="HE4C5D821764A4ED89B23CB28D9795390">Sec. 71106. Payment reduction related to certain erroneous excess payments under Medicaid.</toc-entry> <toc-entry level="section" idref="H606041EC9E7F4E47BF27FA785F990CD4">Sec. 71107. Eligibility redeterminations.</toc-entry> <toc-entry level="section" idref="HAC580CB2660842A98524C26BC39A0B5D">Sec. 71108. Revising home equity limit for determining eligibility for long-term care services under the Medicaid program.</toc-entry> <toc-entry level="section" idref="H81AF8E812F034407AFF9A4E9B8533848">Sec. 71109. Alien Medicaid eligibility.</toc-entry> <toc-entry level="section" idref="H01B260BD1A734C8384AF364D82D3132E">Sec. 71110. Expansion FMAP for emergency Medicaid.</toc-entry> <toc-entry level="subchapter" idref="H7D8B025C07364BD8B6BD2B6E5C3D1861">SUBCHAPTER B—Preventing wasteful spending</toc-entry> <toc-entry level="section" idref="H72D966A2232743E5A94F076C68AE84D0">Sec. 71111. Moratorium on implementation of rule relating to staffing standards for long-term care facilities under the Medicare and Medicaid programs.</toc-entry> <toc-entry level="section" idref="H917F6C03CA464B319B70F26A163C0EE0">Sec. 71112. Reducing State Medicaid costs.</toc-entry> <toc-entry level="section" idref="H4C4222AD5DC6485391D3BF42FAE4785C">Sec. 71113. Federal payments to prohibited entities.</toc-entry> <toc-entry level="subchapter" idref="H33AAEB14AE494C8981C870486D3E3901">SUBCHAPTER C—Stopping abusive financing practices</toc-entry> <toc-entry level="section" idref="H027BCCE030064EC1801736510E3BFF79">Sec. 71114. Sunsetting increased FMAP incentive.</toc-entry> <toc-entry level="section" idref="HC5CF4567712D420786321990FC6F05A3">Sec. 71115. Provider taxes.</toc-entry> <toc-entry level="section" idref="H5095A31A390141E1AF3A2DAD32DD6532">Sec. 71116. State directed payments.</toc-entry> <toc-entry level="section" idref="HFC9712978086448A884AD4DA6242CFF0">Sec. 71117. Requirements regarding waiver of uniform tax requirement for Medicaid provider tax.</toc-entry> <toc-entry level="section" idref="H3DFC92C358834F5B82DE8AB81465692A">Sec. 71118. Requiring budget neutrality for Medicaid demonstration projects under section 1115.</toc-entry> <toc-entry level="subchapter" idref="H41B4BE6053784F329BB924FD89F29721">SUBCHAPTER D—Increasing personal accountability</toc-entry> <toc-entry level="section" idref="HE10C293F1AD14FEE88FED90835BFBB2D">Sec. 71119. Requirement for States to establish Medicaid community engagement requirements for certain individuals.</toc-entry> <toc-entry level="section" idref="H4ADCA385302C45CCBDC2C4550A5A6759">Sec. 71120. Modifying cost sharing requirements for certain expansion individuals under the Medicaid program.</toc-entry> <toc-entry level="subchapter" idref="H2388F94754554D3C9E54A32152DEE520">SUBCHAPTER E—Expanding Access to Care</toc-entry> <toc-entry level="section" idref="H09652BCC85234E4FAAAC9D9A805494AF">Sec. 71121. Making certain adjustments to coverage of home or community-based services under Medicaid.</toc-entry> <toc-entry level="chapter" idref="H0F6BE84D0E484ECC820551A723645343">Chapter 2—Medicare</toc-entry> <toc-entry level="subchapter" idref="H40A3361DE5DE41DEA746973A9F8270A2">SUBCHAPTER A—Strengthening eligibility requirements</toc-entry> <toc-entry level="section" idref="HBADD51A327A4442F8B7A9E6672CB26B1">Sec. 71201. Limiting Medicare coverage of certain individuals.</toc-entry> <toc-entry level="subchapter" idref="HC61E3909B28640129FDBACDF67E74C0F">SUBCHAPTER B—Improving services for seniors</toc-entry> <toc-entry level="section" idref="H939C1EA9EBBB47908144469089750643">Sec. 71202. Temporary payment increase under the medicare physician fee schedule to account for exceptional circumstances.</toc-entry> <toc-entry level="section" idref="H3A5A92FFF47442A88014667D746B4153">Sec. 71203. Expanding and clarifying the exclusion for orphan drugs under the Drug Price Negotiation Program.</toc-entry> <toc-entry level="chapter" idref="HF7D5851D6EC541FA8563B265F55022FF">Chapter 3—Health Tax</toc-entry> <toc-entry level="subchapter" idref="HBD59F3368CF442968B3E309DEBE39F12">SUBCHAPTER A—Improving eligibility criteria</toc-entry> <toc-entry level="section" idref="HF9BF90F31BF149ECA2DF04FD665537E6">Sec. 71301. Permitting premium tax credit only for certain individuals.</toc-entry> <toc-entry level="section" idref="HF39E434A453D45FF8070051C09D58588">Sec. 71302. Disallowing premium tax credit during periods of medicaid ineligibility due to alien status.</toc-entry> <toc-entry level="subchapter" idref="H536B8D00570A4224BF3C986B48355F13">SUBCHAPTER B—Preventing waste, fraud, and abuse</toc-entry> <toc-entry level="section" idref="HD02E5EFE487E4B7C9A69A483910C12BF">Sec. 71303. Requiring verification of eligibility for premium tax credit.</toc-entry> <toc-entry level="section" idref="HD06E51E88E5145D093AE1069D09A464D">Sec. 71304. Disallowing premium tax credit in case of certain coverage enrolled in during special enrollment period.</toc-entry> <toc-entry level="section" idref="HEFCBD63BC16C44AEBBF79F94FDE12819">Sec. 71305. Eliminating limitation on recapture of advance payment of premium tax credit.</toc-entry> <toc-entry level="subchapter" idref="HB9E9DEFEE2304ACBB815E833E661F4AA">SUBCHAPTER C—Enhancing choice for patients</toc-entry> <toc-entry level="section" idref="HA79550199F794ED69EACEDD1E6B65603">Sec. 71306. Permanent extension of safe harbor for absence of deductible for telehealth services.</toc-entry> <toc-entry level="section" idref="HBA505986FC0E4EB995CC956B70E31E5C">Sec. 71307. Allowance of bronze and catastrophic plans in connection with health savings accounts.</toc-entry> <toc-entry level="section" idref="H43D429C4F05F438381D41C5A5CE0769E">Sec. 71308. Treatment of direct primary care service arrangements.</toc-entry> <toc-entry level="chapter" idref="H505671F5D7A34FEE8419A8C2EAB8421A">Chapter 4—Protecting Rural Hospitals and Providers</toc-entry> <toc-entry level="section" idref="HCA291F196BF24A6CBBE70E3E328B0D01">Sec. 71401. Rural Health Transformation Program.</toc-entry> <toc-entry level="subtitle" idref="HB6EA32170C0C48E2B4865BDE2408F841">Subtitle C—Increase in debt limit</toc-entry> <toc-entry level="section" idref="H90D0EF7EC4064497B13A2C345BC929D5">Sec. 72001. Modification of limitation on the public debt.</toc-entry> <toc-entry level="subtitle" idref="H3E28ABE96E8E49CAAA77B7BA1BF2054D">Subtitle D—Unemployment</toc-entry> <toc-entry level="section" idref="HD36FAEBCD604424399880BAB5C5F0879">Sec. 73001. Ending unemployment payments to jobless millionaires.</toc-entry> <toc-entry level="title" idref="H6CB3A03743B74CB3858DCE66A1185468">TITLE VIII—Committee on Health, Education, Labor, and Pensions</toc-entry> <toc-entry level="subtitle" idref="H5F81287CAA1C454C92C54F697F4E698F">Subtitle A—Exemption of certain assets</toc-entry> <toc-entry level="section" idref="H9E5D5AD48D724F18B20F6A9DA0279369">Sec. 80001. Exemption of certain assets.</toc-entry> <toc-entry level="subtitle" idref="H47A75A7D73BA44F18F058F9DBD5896D6">Subtitle B—Loan Limits</toc-entry> <toc-entry level="section" idref="H3EB57E1DAE0E479EB4257C1DC912FAF9">Sec. 81001. Establishment of loan limits for graduate and professional students and parent borrowers; termination of graduate and professional PLUS loans.</toc-entry> <toc-entry level="subtitle" idref="H55CB9F5B02BD4002B19BC323F746B573">Subtitle C—Loan Repayment</toc-entry> <toc-entry level="section" idref="H4FA6F4CA465D407CB6A4D17CD61059FF">Sec. 82001. Loan repayment.</toc-entry> <toc-entry level="section" idref="H6E78655D58EB496685B70829A2DCA312">Sec. 82002. Deferment; forbearance.</toc-entry> <toc-entry level="section" idref="H85DF783522E342F7A1647D9FC3038E38">Sec. 82003. Loan rehabilitation.</toc-entry> <toc-entry level="section" idref="H4D29182962D349E3818B4E05EE9779E2">Sec. 82004. Public service loan forgiveness.</toc-entry> <toc-entry level="section" idref="HE933CF7D725C45DD92A17B9DC67AD1F5">Sec. 82005. Student loan servicing.</toc-entry> <toc-entry level="subtitle" idref="HF8209129CBCE437290C70EEE80058FF4">Subtitle D—Pell Grants</toc-entry> <toc-entry level="section" idref="H622F49281B5B48158232D80027FCBA9C">Sec. 83001. Eligibility.</toc-entry> <toc-entry level="section" idref="H2BC52620F64B44A6A2997E18F3DF70AB">Sec. 83002. Workforce Pell Grants.</toc-entry> <toc-entry level="section" idref="HBE363CD700B241249DD08621D65A4716">Sec. 83003. Pell shortfall.</toc-entry> <toc-entry level="section" idref="H9B94BAC36B664511BF8DD143FD652196">Sec. 83004. Federal Pell Grant exclusion relating to other grant aid.</toc-entry> <toc-entry level="subtitle" idref="H75A5946E4DF0416E938173EBE49355B9">Subtitle E—Accountability</toc-entry> <toc-entry level="section" idref="H6A331BD3314348A28CB63C70D8E51444">Sec. 84001. Ineligibility based on low earning outcomes.</toc-entry> <toc-entry level="subtitle" idref="H0E1AC748B95245958454F0128C041C92">Subtitle F—Regulatory Relief</toc-entry> <toc-entry level="section" idref="HBAFDC61E49B5483193F83325D1D94800">Sec. 85001. Delay of rule relating to borrower defense to repayment.</toc-entry> <toc-entry level="section" idref="H30450FB67D8240E88170C6ABA329D231">Sec. 85002. Delay of rule relating to closed school discharges.</toc-entry> <toc-entry level="subtitle" idref="HB4EFEDBFF0B04FD48CBDAFFBAD88F4F4">Subtitle G—Garden of Heroes</toc-entry> <toc-entry level="section" idref="H6041F8B262D2454E9EE5C2B7146E94E3">Sec. 86001. Garden of Heroes.</toc-entry> <toc-entry level="subtitle" idref="HB8B813D1B7B446069E9BB2282FE78731">Subtitle H—Office of Refugee Resettlement</toc-entry> <toc-entry level="section" idref="H3156ED56FA474F96B3E7821B011A54AA">Sec. 87001. Potential sponsor vetting for unaccompanied alien children appropriation.</toc-entry> <toc-entry level="title" idref="H1FCC00619DF945BC92F14EA791B54B51">TITLE IX—Committee on Homeland Security and Governmental Affairs</toc-entry> <toc-entry level="subtitle" idref="H991619CEBD344B4CB0AE6158431ACAB4">Subtitle A—Homeland security provisions</toc-entry> <toc-entry level="section" idref="H8E47C753B78A4DE69F8D5372F8441B02">Sec. 90001. Border infrastructure and wall system.</toc-entry> <toc-entry level="section" idref="H9E6D5F8EE85C455AB4BEF8C9658EFB12">Sec. 90002. U.S. Customs and Border Protection personnel, fleet vehicles, and facilities.</toc-entry> <toc-entry level="section" idref="H1D6C2B6287664D3D8500DCAD0F320833">Sec. 90003. Detention capacity.</toc-entry> <toc-entry level="section" idref="HA0A03EEF72984E6D98377B73E3300823">Sec. 90004. Border security, technology, and screening.</toc-entry> <toc-entry level="section" idref="HD696A7496A394E2EA13A025AF3413AA2">Sec. 90005. State and local assistance.</toc-entry> <toc-entry level="section" idref="H5B360C569A4248929E822C6032D80B5B">Sec. 90006. Presidential residence protection.</toc-entry> <toc-entry level="section" idref="HC233F521EF6A4656B42F33EA4F310A63">Sec. 90007. Department of Homeland Security appropriations for border support.</toc-entry> <toc-entry level="subtitle" idref="HD52098B979894FEB86B548B8DDEE7D7A">Subtitle B—Governmental affairs provisions</toc-entry> <toc-entry level="section" idref="HC25F58579B464A8C840EA0A660A4F42C">Sec. 90101. FEHB improvements.</toc-entry> <toc-entry level="section" idref="H09B28BCE092A4CDE833DCF320A2D8BF6">Sec. 90102. Pandemic Response Accountability Committee.</toc-entry> <toc-entry level="section" idref="HDCB96DAB6FE24CE4AEEBA045837DED10">Sec. 90103. Appropriation for the Office of Management and Budget.</toc-entry> <toc-entry level="title" idref="H4FF1093A86C741008750037AFCD0421A">TITLE X—Committee on the Judiciary</toc-entry> <toc-entry level="subtitle" idref="H744021F7614B4D638536C181F841DECA">Subtitle A—Immigration and law enforcement matters</toc-entry> <toc-entry level="part" idref="HB02EAE328EFE424A8A95C33032DE2880">PART I—Immigration fees</toc-entry> <toc-entry level="section" idref="H9E9066AE5B604717AF32531A80313328">Sec. 100001. Applicability of the immigration laws.</toc-entry> <toc-entry level="section" idref="HD0253485FCD347A7B66999A09301507D">Sec. 100002. Asylum fee.</toc-entry> <toc-entry level="section" idref="H8F10482E78B24D7FA554BE200A7E460E">Sec. 100003. Employment authorization document fees.</toc-entry> <toc-entry level="section" idref="H6F326F8651A64F769D4F3F8C27F3330E">Sec. 100004. Immigration parole fee.</toc-entry> <toc-entry level="section" idref="H40144A2BADA5453D9709257FD13484AC">Sec. 100005. Special immigrant juvenile fee.</toc-entry> <toc-entry level="section" idref="H17AFC7F6A524418D97409DBE192B19DA">Sec. 100006. Temporary protected status fee.</toc-entry> <toc-entry level="section" idref="HDEFA86C4350446FD838E476CC6F0E9FB">Sec. 100007. Visa integrity fee.</toc-entry> <toc-entry level="section" idref="H4332DE23919749A0AE86FE367BC5BD81">Sec. 100008. Form I–94 fee.</toc-entry> <toc-entry level="section" idref="H5AEEAF283CF7433EAAF19683479B905E">Sec. 100009. Annual asylum fee.</toc-entry> <toc-entry level="section" idref="H9DC71478800F4E04B74E980632335CF1">Sec. 100010. Fee relating to renewal and extension of employment authorization for parolees.</toc-entry> <toc-entry level="section" idref="H3BCF134F78F84855B2190D52C81D5A22">Sec. 100011. Fee relating to renewal or extension of employment authorization for asylum applicants.</toc-entry> <toc-entry level="section" idref="HFAEF4184C08F46F7AE1309A7D65275E7">Sec. 100012. Fee relating to renewal and extension of employment authorization for aliens granted temporary protected status.</toc-entry> <toc-entry level="section" idref="HE0641B275AA844BD8C4B6893D2B6C3D5">Sec. 100013. Fees relating to applications for adjustment of status.</toc-entry> <toc-entry level="section" idref="H2069E89A13734C9C9FC5CC35BB95F120">Sec. 100014. Electronic System for Travel Authorization fee.</toc-entry> <toc-entry level="section" idref="H84041769EF3844F8ACEFB2012722C91C">Sec. 100015. Electronic Visa Update System fee.</toc-entry> <toc-entry level="section" idref="H450F7A95C2374D61941C77BC53922C33">Sec. 100016. Fee for aliens ordered removed in absentia.</toc-entry> <toc-entry level="section" idref="HDD7453798A4140C8BE57DB17E780BBFE">Sec. 100017. Inadmissible alien apprehension fee.</toc-entry> <toc-entry level="section" idref="HC33600E3B16E46E8B4DC4731C9850C13">Sec. 100018. Amendment to authority to apply for asylum.</toc-entry> <toc-entry level="part" idref="H2949220EB780479788A58F0B5F7C198B">PART II—Immigration and law enforcement funding</toc-entry> <toc-entry level="section" idref="HCF7A89A27C5B4F03B40F6051A8D96C3D">Sec. 100051. Appropriation for the Department of Homeland Security.</toc-entry> <toc-entry level="section" idref="H47F26C8C13F044A19B6F489E46CF0ADA">Sec. 100052. Appropriation for U.S. Immigration and Customs Enforcement.</toc-entry> <toc-entry level="section" idref="HDB0633D433D44A4A9C411B12102B7BAF">Sec. 100053. Appropriation for Federal Law Enforcement Training Centers.</toc-entry> <toc-entry level="section" idref="H313D2E37B978467A9445E87ACD267A01">Sec. 100054. Appropriation for the Department of Justice.</toc-entry> <toc-entry level="section" idref="H5AA1A74E5C2A48F78E868A547133BAFB">Sec. 100055. Bridging Immigration-related Deficits Experienced Nationwide Reimbursement Fund.</toc-entry> <toc-entry level="section" idref="HDCC4580D90FA4839BFA98C94DB6125D2">Sec. 100056. Appropriation for the Bureau of Prisons.</toc-entry> <toc-entry level="section" idref="H542A0F73A9D24A9DB202B07D5ABD0B02">Sec. 100057. Appropriation for the United States Secret Service.</toc-entry> <toc-entry level="subtitle" idref="H39E87AE25D6A4F4E8149A05D3BD8FF45">Subtitle B—Judiciary Matters</toc-entry> <toc-entry level="section" idref="H44595049859C493784E6188B7D58CF4D">Sec. 100101. Appropriation to the Administrative Office of the United States Courts.</toc-entry> <toc-entry level="section" idref="HCACC31E4C31149B4A2F3A31E7A89AA75">Sec. 100102. Appropriation to the Federal Judicial Center.</toc-entry> <toc-entry level="subtitle" idref="H7073EB6AF0EE48689FDA1E4BCF9F3EDB">Subtitle C—Radiation exposure compensation matters</toc-entry> <toc-entry level="section" idref="H94747EF0D71D4A948E3FA3CE045D7BC3">Sec. 100201. Extension of fund.</toc-entry> <toc-entry level="section" idref="H5AD1E8B8F1BE4815A81FEF7402C35225">Sec. 100202. Claims relating to atmospheric testing.</toc-entry> <toc-entry level="section" idref="H7871E98F6F8245C4A12014DC0D102AB0">Sec. 100203. Claims relating to uranium mining.</toc-entry> <toc-entry level="section" idref="H754F42C0C4C247E19AA8BF461D441BF0">Sec. 100204. Claims relating to Manhattan Project waste.</toc-entry> <toc-entry level="section" idref="H6E895D9CA2834DB7B22C96DB7C3FDBD0">Sec. 100205. Limitations on claims.</toc-entry></toc></section> <title id="HB35BD6CD41BE46399A962DCB7B215A0A" style="OLC"><enum>I</enum><header>Committee on Agriculture, Nutrition, and Forestry </header> <subtitle id="H4013BBCF9ABA4877B2F2983A13C5A382" style="OLC"><enum>A</enum><header>Nutrition</header> <section id="H6F04C5423A664BE08EF13DD2EF7BF66F"><enum>10101.</enum><header>Re-evaluation of thrifty food plan</header> <subsection id="HBEE2CC04A58042E5B8BBA68866F21C94"><enum>(a)</enum><header>In general</header><text>Section 3 of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2012">7 U.S.C. 2012</external-xref>) is amended by striking subsection (u) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H7016D81E72A041569A260D65C97EA9E0">
<subsection id="HBC49D1818DCA426AADEF3C6A6450C3B1"><enum>(u)</enum><header>Thrifty food plan</header>
<paragraph id="H42E868AA9F0D4C31A664A40595D198E8"><enum>(1)</enum><header>In general</header><text>The term <term>thrifty food plan</term> means the diet required to feed a family of 4 persons consisting of a man and a woman ages 20 through 50, a child ages 6 through 8, and a child ages 9 through 11 using the items and quantities of food described in the report of the Department of Agriculture entitled <quote>Thrifty Food Plan, 2021</quote>, and each successor report updated pursuant to this subsection, subject to the conditions that—</text> <subparagraph id="H00A3B78356974E4F923A0A734ED371EA"><enum>(A)</enum><text>the relevant market baskets of the thrifty food plan shall only be changed pursuant to paragraph (4);</text></subparagraph>
<subparagraph id="H576B75F95CCA4C4D9A35D588E4D178CE"><enum>(B)</enum><text>the cost of the thrifty food plan shall be the basis for uniform allotments for all households, regardless of the actual composition of the household; and</text></subparagraph> <subparagraph id="H98A8C38794444F88B71D12C981964E6B"><enum>(C)</enum><text>the cost of the thrifty food plan may only be adjusted in accordance with this subsection.</text></subparagraph></paragraph>
<paragraph id="H154584F216814F4ABEDD338AFD45B0C4"><enum>(2)</enum><header>Household adjustments</header><text>The Secretary shall make household adjustments using the following ratios of household size as a percentage of the maximum 4-person allotment:</text> <subparagraph id="H371C295D8C484BD4A01685EBB74AB793"><enum>(A)</enum><text>For a 1-person household, 30 percent.</text></subparagraph>
<subparagraph id="H909FA579FB7C4AA98D6647ED9ADA7DFB"><enum>(B)</enum><text>For a 2-person household, 55 percent.</text></subparagraph> <subparagraph id="H1476AA5C8E1D4DB29CD62448FF8183D8"><enum>(C)</enum><text>For a 3-person household, 79 percent.</text></subparagraph>
<subparagraph id="H3EC29F176E214D6B8D885B4DDEB00172"><enum>(D)</enum><text>For a 4-person household, 100 percent.</text></subparagraph> <subparagraph id="HAD1FF818299149009E840D8E2201FA7C"><enum>(E)</enum><text>For a 5-person household, 119 percent.</text></subparagraph>
<subparagraph id="H84D317B5182C40B78F36B2C88B87CFFA"><enum>(F)</enum><text>For a 6-person household, 143 percent.</text></subparagraph> <subparagraph id="H03DE820F11844F9F9B6136F3F7E84BBF"><enum>(G)</enum><text>For a 7-person household, 158 percent.</text></subparagraph>
<subparagraph id="H2097510F8DBD4EDEB9167FD567BC9A99"><enum>(H)</enum><text>For an 8-person household, 180 percent.</text></subparagraph> <subparagraph id="HA4AC53EB8D224EE5985C39863F8CF0C2"><enum>(I)</enum><text>For a household of 9 persons or more, an additional 22 percent per person, which additional percentage shall not total more than 200 percent.</text></subparagraph></paragraph>
<paragraph id="H3E48F3159F6642B8A81728C96CAE91AA"><enum>(3)</enum><header>Allowable cost adjustments</header><text>The Secretary shall—</text> <subparagraph id="H8615396D9EF44B598942EDE1008983AE"><enum>(A)</enum><text>make cost adjustments in the thrifty food plan for Hawaii and the urban and rural parts of Alaska to reflect the cost of food in Hawaii and urban and rural Alaska;</text></subparagraph>
<subparagraph id="H1F0DFD604ADE41CEBA14052942450F58"><enum>(B)</enum><text>make cost adjustments in the separate thrifty food plans for Guam and the Virgin Islands of the United States to reflect the cost of food in those States, but not to exceed the cost of food in the 50 States and the District of Columbia; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HA67E12E1C51C43F1920FDF4FA6470052"><enum>(C)</enum><text display-inline="yes-display-inline">on October 1, 2025, and on each October 1 thereafter, adjust the cost of the thrifty food plan to reflect changes in the Consumer Price Index for All Urban Consumers, published by the Bureau of Labor Statistics of the Department of Labor, for the most recent 12-month period ending in June.</text></subparagraph></paragraph>
<paragraph id="H384C53CC1B4047D081C62A9A9A9F28CB"><enum>(4)</enum><header>Re-evaluation of market baskets</header>
<subparagraph id="HFAD222C3CC784C9D93B328BB17CDC1F3"><enum>(A)</enum><header>Re-evaluation</header><text>Not earlier than October 1, 2027, the Secretary may re-evaluate the market baskets of the thrifty food plan based on current food prices, food composition data, consumption patterns, and dietary guidance.</text></subparagraph> <subparagraph id="H9EA03A1C2B2946F0928E570F25FC0AA0"><enum>(B)</enum><header>Cost neutrality</header><text>The Secretary shall not increase the cost of the thrifty food plan based on a re-evaluation under this paragraph.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HFB6FD7BA16C4495EB56536538009565F"><enum>(b)</enum><header>Conforming amendments</header>
<paragraph id="H303EFB5C6ECE4651B537136D5B56E1FF"><enum>(1)</enum><text>Section 16(c)(1)(A)(ii)(II) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2025">7 U.S.C. 2025(c)(1)(A)(ii)(II)</external-xref>) is amended by striking <quote>section 3(u)(4)</quote> and inserting <quote>section 3(u)(3)</quote>.</text></paragraph> <paragraph id="H3EC42D839750400F85B03F8CD858B400"><enum>(2)</enum><text>Section 19(a)(2)(A)(ii) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2028">7 U.S.C. 2028(a)(2)(A)(ii)</external-xref>) is amended by striking <quote>section 3(u)(4)</quote> and inserting <quote>section 3(u)(3)</quote>.</text></paragraph>
<paragraph id="H7522C130B64A48C8B12A54FBC9CC3E3D"><enum>(3)</enum><text>Section 27(a)(2) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2036">7 U.S.C. 2036(a)(2)</external-xref>)) is amended by striking <quote>section 3(u)(4)</quote> each place it appears and inserting <quote>section 3(u)(3)</quote>.</text></paragraph></subsection></section> <section id="HD116E890205E4ADEB171FB138BCBCE7E"><enum>10102.</enum><header>Modifications to SNAP work requirements for able-bodied adults</header> <subsection id="HB2EC541CC51246378CB92070C3C86FF2"><enum>(a)</enum><header>Exceptions</header><text>Section 6(o) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2015">7 U.S.C. 2015(o)</external-xref>) is amended by striking paragraph (3) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H86AD5BD56DFF480F8653FA3ECF4F7A64">
<paragraph id="HDD7BBDA29B4B4C98A2D23211D690AB73"><enum>(3)</enum><header>Exceptions</header><text>Paragraph (2) shall not apply to an individual if the individual is—</text> <subparagraph id="H8F46AD645B0246C6BBAECED034180D73"><enum>(A)</enum><text>under 18, or over 65, years of age;</text></subparagraph>
<subparagraph id="H3148FC64BDE3497BA1E89A188EB9E837"><enum>(B)</enum><text>medically certified as physically or mentally unfit for employment;</text></subparagraph> <subparagraph id="H017F8F172A224967A56C66C81904B614"><enum>(C)</enum><text>a parent or other member of a household with responsibility for a dependent child under 14 years of age;</text></subparagraph>
<subparagraph id="HEB86BCB0A23841E0B3F7353114AFE6C0"><enum>(D)</enum><text>otherwise exempt under subsection (d)(2);</text></subparagraph> <subparagraph id="H3A3AE6BE817B4629AA5C8D86107BB82A"><enum>(E)</enum><text>a pregnant woman;</text></subparagraph>
<subparagraph id="HBDFE28740BC84DA49D67519D978370DE"><enum>(F)</enum><text>an Indian or an Urban Indian (as such terms are defined in paragraphs (13) and (28) of section 4 of the Indian Health Care Improvement Act); or</text></subparagraph> <subparagraph id="H104E35E578CB418C981BE51B157CD723"><enum>(G)</enum><text>a California Indian described in section 809(a) of the Indian Health Care Improvement Act.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H18C1DC73E3B145D0943286E1472EB30A"><enum>(b)</enum><header>Standardizing enforcement</header><text>Section 6(o)(4) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2015">7 U.S.C. 2015(o)(4)</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H8BE8F7C6FDF845CB90AC0416DCB17CBB"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (A), by striking clause (ii) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H587AB7C557EE472C9A818B3F5E56DAE3">
<clause id="H164256C836564FE3AB7741A9FDB3E996"><enum>(ii)</enum><text>is in a noncontiguous State and has an unemployment rate that is at or above 1.5 times the national unemployment rate.</text></clause><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="H8836E0D8089A408EA47391C66BF5144E"><enum>(2)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H588086BF655A45608A646433F8924C6F">
<subparagraph id="HC200901194EF4E9B86AEA6368427E93B"><enum>(C)</enum><header>Definition of noncontiguous state</header>
<clause id="H578A00652BB940E99D04772722F4DC3C"><enum>(i)</enum><header>In general</header><text>In this paragraph, the term <term>noncontiguous State</term> means a State that is not 1 of the contiguous 48 States or the District of Columbia.</text></clause> <clause id="H29D875770F454400BE891E4AE7A48576"><enum>(ii)</enum><header>Exclusions</header><text>The term <term>noncontiguous State</term> does not include Guam or the Virgin Islands of the United States.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H4720DDCB399444BA8907F20BECE7E119"><enum>(c)</enum><header>Waiver for noncontiguous states</header><text>Section 6(o) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2015">7 U.S.C. 2015(o)</external-xref>) is amended—</text> <paragraph id="HE0CE64C763894624A427BE46FCFCDBC6"><enum>(1)</enum><text>by redesignating paragraph (7) as paragraph (8); and</text></paragraph>
<paragraph id="H9796FA983E3747829395E62F73532181"><enum>(2)</enum><text>by inserting after paragraph (6) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H7F80F593E7E04BCA95EDA588889AF8BE"> <paragraph id="HA4973B5377954479BACB0B26B59F2456"><enum>(7)</enum><header>Exemption for noncontiguous States</header> <subparagraph id="H85A45D6FAB01415AAEDE8D90587C5EB1"><enum>(A)</enum><header>Definition of noncontiguous State</header> <clause id="HC85BF774B8614846AA3D824BE279C880"><enum>(i)</enum><header>In general</header><text>In this paragraph, the term <term>noncontiguous State</term> means a State that is not 1 of the contiguous 48 States or the District of Columbia.</text></clause>
<clause id="HBF87E736A3504836B1E15B68839A30DB"><enum>(ii)</enum><header>Exclusions</header><text>In this paragraph, the term <term>noncontiguous State</term> does not include Guam or the Virgin Islands of the United States.</text></clause></subparagraph> <subparagraph id="H8676293042524874A399D16594416782"><enum>(B)</enum><header>Exemption</header><text>Subject to subparagraph (D), the Secretary may exempt individuals in a noncontiguous State from compliance with the requirements of paragraph (2) if—</text>
<clause id="H2CD9E10396944198B8AB62D56766C5C6"><enum>(i)</enum><text>the State agency submits to the Secretary a request for that exemption, made in such form and at such time as the Secretary may require, and including the information described in subparagraph (C); and</text></clause> <clause id="H1E68614B54DF4428A35F2084ED7E1ABA"><enum>(ii)</enum><text>the Secretary determines that based on that request, the State agency is demonstrating a good faith effort to comply with the requirements of paragraph (2).</text></clause></subparagraph>
<subparagraph id="H93D0E88E8991433AA48ABA884B24FACB"><enum>(C)</enum><header>Good faith effort determination</header><text>In determining whether a State agency is demonstrating a good faith effort for purposes of subparagraph (B)(ii), the Secretary shall consider—</text> <clause id="H6E0E082BA3274DA192742B1982FCED35"><enum>(i)</enum><text>any actions taken by the State agency toward compliance with the requirements of paragraph (2);</text></clause>
<clause id="HD560592BC20F4CD9949095AF6DF82FB8"><enum>(ii)</enum><text>any significant barriers to or challenges in meeting those requirements, including barriers or challenges relating to funding, design, development, procurement, or installation of necessary systems or resources;</text></clause> <clause id="HE7948A3DCFB44FF4A6BCD5F1E332F38E"><enum>(iii)</enum><text>the detailed plan and timeline of the State agency for achieving full compliance with those requirements, including any milestones (as defined by the Secretary); and</text></clause>
<clause id="H8F0BA80D45224245A25C25F6198887B9"><enum>(iv)</enum><text>any other criteria determined appropriate by the Secretary.</text></clause></subparagraph> <subparagraph id="HE43DDEF7C7074772B7467DEEAA564865"><enum>(D)</enum><header>Duration of exemption</header> <clause id="H632F147EA59941FF8C700F73829F3BF7"><enum>(i)</enum><header>In general</header><text>An exemption granted under subparagraph (B) shall expire not later than December 31, 2028, and may not be renewed beyond that date.</text></clause>
<clause id="H90BAD58BEA834019BA5FB386BBA4243B"><enum>(ii)</enum><header>Early termination</header><text>The Secretary may terminate an exemption granted under subparagraph (B) prior to the expiration date of that exemption if the Secretary determines that the State agency—</text> <subclause id="H8F299C14567D48F49B142C12241BE4DD"><enum>(I)</enum><text>has failed to comply with the reporting requirements described in subparagraph (E); or</text></subclause>
<subclause id="H1A26203087644964BE71C265AA43C23C"><enum>(II)</enum><text>based on the information provided pursuant to subparagraph (E), failed to make continued good faith efforts toward compliance with the requirements of this subsection.</text></subclause></clause></subparagraph> <subparagraph id="HB92C116316754DFF9C7B0462810A8700"><enum>(E)</enum><header>Reporting requirements</header><text>A State agency granted an exemption under subparagraph (B) shall submit to the Secretary—</text>
<clause id="HAD9A781C40E44B4DB392C9F29BD59948"><enum>(i)</enum><text>quarterly progress reports on the status of the State agency in achieving the milestones toward full compliance described in subparagraph (C)(iii); and</text></clause> <clause id="H96A6DB536CDB4A0B97381F3B9DC1A218"><enum>(ii)</enum><text>information on specific risks or newly identified barriers or challenges to full compliance, including the plan of the State agency to mitigate those risks, barriers, or challenges.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection></section>
<section id="HABEA79FE9BBA4A098BB2092C32F4892F"><enum>10103.</enum><header>Availability of standard utility allowances based on receipt of energy assistance</header>
<subsection id="H3DC4215BD1554327B0B110838B77015C"><enum>(a)</enum><header>Standard utility allowance</header><text>Section 5(e)(6)(C)(iv)(I) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2014">7 U.S.C. 2014(e)(6)(C)(iv)(I)</external-xref>) is amended by inserting <quote>with an elderly or disabled member</quote> after <quote>households</quote>.</text></subsection> <subsection id="H862CA81FFE7C49F49B1DF93B2AACBE29"><enum>(b)</enum><header>Third-party energy assistance payments</header><text>Section 5(k)(4) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2014">7 U.S.C. 2014(k)(4)</external-xref>) is amended—</text>
<paragraph id="H34B574070EE04D61A44AEBD088D3AFD6"><enum>(1)</enum><text>in subparagraph (A), by inserting <quote>without an elderly or disabled member</quote> before <quote>shall be</quote>; and</text></paragraph> <paragraph id="H4958FC28BB3B45DD9E6151700CC3525D"><enum>(2)</enum><text>in subparagraph (B), by inserting <quote>with an elderly or disabled member</quote> before <quote>under a State law</quote>.</text></paragraph></subsection></section>
<section id="H59F072435B864760BE9461577D3DC68C"><enum>10104.</enum><header>Restrictions on internet expenses</header><text display-inline="no-display-inline">Section 5(e)(6) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2014">7 U.S.C. 2014(e)(6)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HBF45BB056C664FAAA7F51A5C55F43372"> <subparagraph id="H354B21EFC54A40A0BF63B4916507C039"><enum>(E)</enum><header>Restrictions on internet expenses</header><text>Any service fee associated with internet connection shall not be used in computing the excess shelter expense deduction under this paragraph.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></section>
<section id="H5833F8985FE94B9EA7035F26C34B2DD2"><enum>10105.</enum><header>Matching funds requirements</header>
<subsection id="HD327770F52204DF9AD4C5435A0DEE41D"><enum>(a)</enum><header>In general</header><text>Section 4(a) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2013">7 U.S.C. 2013(a)</external-xref>) is amended—</text> <paragraph id="H9C8032B513B34478A5197C68F8B53C48"><enum>(1)</enum><text>by striking <quote>(a) Subject to</quote> and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H96F32470D4E4425AAAD78037D8CA9481">
<subsection id="H6693C7F6FC1A421CA7A08ADF0F0DEA4F"><enum>(a)</enum><header>Program</header>
<paragraph id="H5B94AEF67C95430B86FD3443B8A68E73"><enum>(1)</enum><header>Establishment</header><text>Subject to</text></paragraph></subsection><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="HF05EDA17694B4204BADC95BD46434BBE"><enum>(2)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H1E6C08F03CE6453C897AA4F40AD08A7D">
<paragraph id="HF8B8EFAF1D1C46B5976748A991DC7FB9"><enum>(2)</enum><header>State quality control incentive</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H23538B0409FF49719DB031DDD2B5D2B3"><enum>(A)</enum><header display-inline="yes-display-inline">Definition of payment error rate</header><text>In this paragraph, the term <quote>payment error rate</quote> has the meaning given the term in section 16(c)(2).</text></subparagraph> <subparagraph id="H16DD8F4D4A4C4E27ABDED8C17DD75313"><enum>(B)</enum><header>State cost share</header> <clause commented="no" display-inline="no-display-inline" id="H119297B4F2094F7C95DCCECCA66193A3"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">Subject to clause (iii), beginning in fiscal year 2028, if the payment error rate of a State as determined under clause (ii) is—</text>
<subclause id="H980A405F497640669FBBE3BB7DE64959"><enum>(I)</enum><text>less than 6 percent, the Federal share of the cost of the allotment described in paragraph (1) for that State in a fiscal year shall be 100 percent, and the State share shall be 0 percent;</text></subclause> <subclause id="H26339FE378F94773803B28D4F14C418A"><enum>(II)</enum><text>equal to or greater than 6 percent but less than 8 percent, the Federal share of the cost of the allotment described in paragraph (1) for that State in a fiscal year shall be 95 percent, and the State share shall be 5 percent;</text></subclause>
<subclause id="H8195D85C8BF64AECB0DE485DAE7C3480"><enum>(III)</enum><text>equal to or greater than 8 percent but less than 10 percent, the Federal share of the cost of the allotment described in paragraph (1) for that State in a fiscal year shall be 90 percent, and the State share shall be 10 percent; and</text></subclause> <subclause id="H1061DA0E36DA407F851D558AE139E34E"><enum>(IV)</enum><text>equal to or greater than 10 percent, the Federal share of the cost of the allotment described in paragraph (1) for that State in a fiscal year shall be 85 percent, and the State share shall be 15 percent.</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H2D0E97746D3C4338B7F977E3DCB38BF1"><enum>(ii)</enum><header>Elections</header>
<subclause id="HAB1DB45D52C4460FBE13869F6603753F"><enum>(I)</enum><header>Fiscal year 2028</header><text>For fiscal year 2028, to calculate the applicable State share under clause (i), a State may elect to use the payment error rate of the State from fiscal year 2025 or 2026.</text></subclause> <subclause id="H810E2C614913487AA646AB4A0227E45E"><enum>(II)</enum><header>Fiscal year 2029 and thereafter</header><text>For fiscal year 2029 and each fiscal year thereafter, to calculate the applicable State share under clause (i), the Secretary shall use the payment error rate of the State for the third fiscal year preceding the fiscal year for which the State share is being calculated.</text></subclause></clause>
<clause id="H9EBEA2465A114F6BACE1B4C50EE39BEC"><enum>(iii)</enum><header>Delayed implementation</header>
<subclause commented="no" display-inline="no-display-inline" id="HA7A3A7C2A1CC4758A0AF625AA0B4DB71"><enum>(I)</enum><header>Fiscal year 2025</header><text display-inline="yes-display-inline">If, for fiscal year 2025, the payment error rate of a State multiplied by 1.5 is equal to or above 20 percent, the implementation date under clause (i) for that State shall be fiscal year 2029.</text></subclause> <subclause id="H484CBE01FF8A42A9A543560DAE974A51"><enum>(II)</enum><header>Fiscal year 2026</header><text>If, for fiscal year 2026, the payment error rate of a State multiplied by 1.5 is equal to or above 20 percent, the implementation date under clause (i) for that State shall be fiscal year 2030.</text></subclause></clause></subparagraph></paragraph>
<paragraph id="H2AADC26EAF27428191B0D6927A68DEC4"><enum>(3)</enum><header>Maximum federal payment</header><text>The Secretary may not pay towards the cost of an allotment described in paragraph (1) an amount that is greater than the applicable Federal share under paragraph (2).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H5FA866A90C5C474D9BE7A0957F26D721"><enum>(b)</enum><header>Limitation on authority</header><text>Section 13(a)(1) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2022">7 U.S.C. 2022(a)(1)</external-xref>) is amended in the first sentence by inserting <quote>or the payment or disposition of a State share under section 4(a)(2)</quote> after <quote>16(c)(1)(D)(i)(II)</quote>.</text></subsection></section>
<section id="H13FE371F4A424C59B2E81D73CB5FA3DC"><enum>10106.</enum><header>Administrative cost sharing</header><text display-inline="no-display-inline">Section 16(a) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2025">7 U.S.C. 2025(a)</external-xref>) is amended in the matter preceding paragraph (1) by striking <quote>agency an amount equal to 50 per centum</quote> and inserting <quote>agency, through fiscal year 2026, 50 percent, and for fiscal year 2027 and each fiscal year thereafter, 25 percent,</quote>.</text></section> <section id="HF8EA7F980FC64C5B93802E69905B4A44"><enum>10107.</enum><header>National education and obesity prevention grant program</header><text display-inline="no-display-inline">Section 28(d)(1)(F) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2036a">7 U.S.C. 2036a(d)(1)(F)</external-xref>) is amended by striking <quote>for fiscal year 2016 and each subsequent fiscal year</quote> and inserting <quote>for each of fiscal years 2016 through 2025</quote>.</text></section>
<section id="HDEA4B8BF31644CAC9054738E8FF22026"><enum>10108.</enum><header>Alien SNAP eligibility</header><text display-inline="no-display-inline">Section 6(f) of the Food and Nutrition Act of 2008 (<external-xref legal-doc="usc" parsable-cite="usc/7/2015">7 U.S.C. 2015(f)</external-xref>) is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H6677E973CDF240C6B393772A8E8DAF0E"> <subsection id="H0A1DD9677F824B8CA669C307E220778C"><enum>(f)</enum><text>No individual who is a member of a household otherwise eligible to participate in the supplemental nutrition assistance program under this section shall be eligible to participate in the supplemental nutrition assistance program as a member of that or any other household unless he or she is—</text>
<paragraph id="HFB49FC787148451D8A251E1A54260576"><enum>(1)</enum><text>a resident of the United States; and</text></paragraph> <paragraph id="HA7185214D6D3418182DC5348294D426B"><enum>(2)</enum><text>either—</text>
<subparagraph id="H5181B48DDA0245F7A4C126C29268CCB6"><enum>(A)</enum><text>a citizen or national of the United States;</text></subparagraph> <subparagraph id="H358919ACEFCD49F581F1F2E21918D449"><enum>(B)</enum><text>an alien lawfully admitted for permanent residence as an immigrant as defined by sections 101(a)(15) and 101(a)(20) of the Immigration and Nationality Act, excluding, among others, alien visitors, tourists, diplomats, and students who enter the United States temporarily with no intention of abandoning their residence in a foreign country;</text></subparagraph>
<subparagraph id="H3B826DFA43F5487FA75D06A849257C8D"><enum>(C)</enum><text>an alien who has been granted the status of Cuban and Haitian entrant, as defined in section 501(e) of the Refugee Education Assistance Act of 1980 (<external-xref legal-doc="public-law" parsable-cite="pl/96/422">Public Law 96–422</external-xref>); or</text></subparagraph> <subparagraph id="HD6FF3D7EFF2349149244A24452BBB75B"><enum>(D)</enum><text>an individual who lawfully resides in the United States in accordance with a Compact of Free Association referred to in section 402(b)(2)(G) of the Personal Responsibility and Work Opportunity Reconciliation Act of 1996.</text></subparagraph><continuation-text continuation-text-level="paragraph">The income (less, at State option, a pro rata share) and financial resources of the individual rendered ineligible to participate in the supplemental nutrition assistance program under this subsection shall be considered in determining the eligibility and the value of the allotment of the household of which such individual is a member.</continuation-text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></section></subtitle>
<subtitle style="OLC" commented="no" level-type="subsequent" id="HA41282286BE84636AFA2C659F70B6D5F"><enum>B</enum><header>Forestry</header>
<section id="H2BA57E0D96C144BF9303F533EB30E468" section-type="subsequent-section"><enum>10201.</enum><header>Rescission of amounts for forestry</header><text display-inline="no-display-inline">The unobligated balances of amounts appropriated by the following provisions of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> are rescinded:</text> <paragraph id="HE922B3A8D54A447EA152AC4B76521418"><enum>(1)</enum><text>Paragraphs (3) and (4) of section 23001(a) (136 Stat. 2023).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H402A82E1C8A4488794A808D4EEDB8957"><enum>(2)</enum><text display-inline="yes-display-inline">Paragraphs (1) through (4) of section 23002(a) (136 Stat. 2025).</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H015FF9C6DC3A4FC3B2FAC4C6C7B5AA04"><enum>(3)</enum><text>Section 23003(a)(2) (136 Stat. 2026).</text></paragraph>
<paragraph id="H2A8113CF52B5458EBF4F5F820D29B684" commented="no" display-inline="no-display-inline"><enum>(4)</enum><text display-inline="yes-display-inline">Section 23005 (136 Stat. 2027).</text></paragraph></section></subtitle> <subtitle id="H0626BB81CB8E41798B65C8EDEDAD38D7" style="OLC"><enum>C</enum><header>Commodities</header> <section id="H6421118AB0E742188429FBEC84EFA36D"><enum>10301.</enum><header>Effective reference price; reference price</header> <subsection commented="no" display-inline="no-display-inline" id="HD923158CC42F44E39890FB1198FA1D37"><enum>(a)</enum><header display-inline="yes-display-inline">Effective reference price</header><text>Section 1111(8)(B)(ii) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9011">7 U.S.C. 9011(8)(B)(ii)</external-xref>) is amended by striking <quote>85</quote> and inserting <quote>beginning with the crop year 2025, 88</quote>.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H0ED075F6AA904BA8ADB43DE6A52438E1"><enum>(b)</enum><header>Reference price</header><text display-inline="yes-display-inline">Section 1111 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9011">7 U.S.C. 9011</external-xref>) is amended by striking paragraph (19) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H54DFF5D6600A40E29412D723D1702EF6"> <paragraph id="HB192896D875F4CB9BCB7AFCC623D1DC1"><enum>(19)</enum><header>Reference price</header> <subparagraph commented="no" display-inline="no-display-inline" id="H81273A61BEE34D23BA40F68C62F74270"><enum>(A)</enum><header>In general</header><text>Effective beginning with the 2025 crop year, subject to subparagraphs (B) and (C), the term <term>reference price</term>, with respect to a covered commodity for a crop year, means the following:</text>
<clause id="HE535CF6451A04E2DB0D3CDF8BA3E2E57"><enum>(i)</enum><text>For wheat, $6.35 per bushel.</text></clause> <clause id="HF9352E079D0144A682F553F75ADDA079"><enum>(ii)</enum><text>For corn, $4.10 per bushel.</text></clause>
<clause id="HDF0E2F18F45041C6902B54FD74BE4EF8"><enum>(iii)</enum><text>For grain sorghum, $4.40 per bushel.</text></clause> <clause id="H300097C011B9478EA25C91AD3090DB3C"><enum>(iv)</enum><text>For barley, $5.45 per bushel.</text></clause>
<clause id="H6EADAA2D57FF4BDAA8DD310BDC671122"><enum>(v)</enum><text>For oats, $2.65 per bushel.</text></clause> <clause id="HFCE130BAC4814C4A9E9078A453F6085F"><enum>(vi)</enum><text>For long grain rice, $16.90 per hundredweight.</text></clause>
<clause id="HDFA3AC270A174E90871E6C0734C43B98"><enum>(vii)</enum><text>For medium grain rice, $16.90 per hundredweight.</text></clause> <clause id="H2CD7A898BE69422BBCC0C70BA9583C71"><enum>(viii)</enum><text>For soybeans, $10.00 per bushel.</text></clause>
<clause id="H845789BE8E4C404EA36B7107C71653A6"><enum>(ix)</enum><text>For other oilseeds, $23.75 per hundredweight.</text></clause> <clause id="H28E3B44578D443B8940F9A9883420F72"><enum>(x)</enum><text>For peanuts, $630.00 per ton.</text></clause>
<clause id="HF588F65ABF824E3A9A9159BC281B8FFA"><enum>(xi)</enum><text>For dry peas, $13.10 per hundredweight.</text></clause> <clause id="H84EEF035BB4D42998CEE7FC02E8A21FB"><enum>(xii)</enum><text>For lentils, $23.75 per hundredweight.</text></clause>
<clause id="H19D542DB18A945E383D6C0D6F913EB70"><enum>(xiii)</enum><text>For small chickpeas, $22.65 per hundredweight.</text></clause> <clause id="HC423F64D311C4B98BF2EF694619491B9"><enum>(xiv)</enum><text>For large chickpeas, $25.65 per hundredweight.</text></clause>
<clause id="H94254E9315A945B89AA017CD96E6F407"><enum>(xv)</enum><text>For seed cotton, $0.42 per pound.</text></clause></subparagraph> <subparagraph id="HA7DEDA9B4DC448909BA7BB78A7373CB5"><enum>(B)</enum><header>Effectiveness</header><text>Effective beginning with the 2031 crop year, the reference prices defined in subparagraph (A) with respect to a covered commodity shall equal the reference price in the previous crop year multiplied by 1.005.</text></subparagraph>
<subparagraph id="HE14605BD44FE4AB989C574E92699A568"><enum>(C)</enum><header>Limitation</header><text>In no case shall a reference price for a covered commodity exceed 113 percent of the reference price for such covered commodity listed in subparagraph (A).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section> <section commented="no" display-inline="no-display-inline" id="H6AFAA72AE31C4D4F8C62F2E7AFE17D54"><enum>10302.</enum><header>Base acres</header><text display-inline="no-display-inline">Section 1112 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9012">7 U.S.C. 9012</external-xref>) is amended—</text>
<paragraph id="H84D8DC016A8F4A92A46D3DD0BDB006CA"><enum>(1)</enum><text>in subsection (d)(3)(A), by striking <quote>2023</quote> and inserting <quote>2031</quote>; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA3F89858CC334D34A239AE9D79E6512D"><enum>(2)</enum><text display-inline="yes-display-inline">by adding at the end the following: </text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H5B6995A26C064141969DF8B59FBB9F58">
<subsection id="H1B3C5B8968474708AC59E42B6CD08968"><enum>(e)</enum><header>Additional base acres</header>
<paragraph id="H21F6F1EAD7A44404A5491DD5939F3094"><enum>(1)</enum><header>In general</header><text>As soon as practicable after the date of enactment of this subsection, and notwithstanding subsection (a), the Secretary shall provide notice to owners of eligible farms pursuant to paragraph (3) and allocate to those eligible farms a total of not more than an additional 30,000,000 base acres in the manner provided in this subsection. An owner of a farm that is eligible to receive an allocation of base acres may elect to not receive that allocation by notifying the Secretary not later than 90 days after receipt of the notice provided by the Secretary under this paragraph.</text></paragraph> <paragraph id="H01498E8F92B04F6C9C85C19645BEBA4A" commented="no"><enum>(2)</enum><header>Content of notice</header><text>The notice under paragraph (1) shall include the following:</text>
<subparagraph id="HE052A3D4C71B4E3AB471F68303892098" commented="no"><enum>(A)</enum><text>Information that the allocation is occurring.</text></subparagraph> <subparagraph id="H7E0FF8C3108341518ABE7FA8478AE38E" commented="no"><enum>(B)</enum><text>Information regarding the eligibility of the farm for an allocation of base acres under paragraph (3).</text></subparagraph>
<subparagraph id="H0A9BDC1766214266A4773A53692D58CB" commented="no"><enum>(C)</enum><text>Information regarding how an owner may appeal a determination of ineligibility for an allocation of base acres under paragraph (3) through an appeals process established by the Secretary.</text></subparagraph></paragraph> <paragraph id="HFE30ADAC742F4244BBEB3E54A12F2310"><enum>(3)</enum><header>Eligibility</header> <subparagraph id="HACD45BE890B845A4958C2EAE657EBAAF"><enum>(A)</enum><header>In general</header><text>Subject to subparagraph (D), effective beginning with the 2026 crop year, a farm is eligible to receive an allocation of base acres if, with respect to the farm, the amount described in subparagraph (B) exceeds the amount described in subparagraph (C).</text></subparagraph>
<subparagraph id="HD61EF10BE5BB4C2AA77E4B80A06C0C1F"><enum>(B)</enum><header>5-year average sum</header><text>The amount described in this subparagraph, with respect to a farm, is the sum of—</text> <clause id="HFE266457D89148799ACA118232AF7E86"><enum>(i)</enum><text>the 5-year average of—</text>
<subclause id="HC960F4F19157401AA0BEC88BA38AFA64"><enum>(I)</enum><text>the acreage planted on the farm to all covered commodities for harvest, grazing, haying, silage or other similar purposes for the 2019 through 2023 crop years; and</text></subclause> <subclause id="H4E182D18BB56464DA05127DF9D6C55C9"><enum>(II)</enum><text>any acreage on the farm that the producers were prevented from planting during the 2019 through 2023 crop years to covered commodities because of drought, flood, or other natural disaster, or other condition beyond the control of the producers, as determined by the Secretary; plus</text></subclause></clause>
<clause id="H78E40240F7B34163A9819434F0F1184A"><enum>(ii)</enum><text>the lesser of—</text> <subclause id="HDDA4C02434BF4BB38D160FB04A7F28F9"><enum>(I)</enum><text>15 percent of the total acres on the farm; and</text></subclause>
<subclause id="H86733D446E464B41BB16BA6F415BFF1D"><enum>(II)</enum><text>the 5-year average of—</text> <item id="H9E6D291983F5417C85263EB2DC25D4E0"><enum>(aa)</enum><text>the acreage planted on the farm to eligible noncovered commodities for harvest, grazing, haying, silage, or other similar purposes for the 2019 through 2023 crop years; and</text></item>
<item id="HFA23C3406A1C478C9951423FC391550C"><enum>(bb)</enum><text>any acreage on the farm that the producers were prevented from planting during the 2019 through 2023 crop years to eligible noncovered commodities because of drought, flood, or other natural disaster, or other condition beyond the control of the producers, as determined by the Secretary.</text></item></subclause></clause></subparagraph> <subparagraph id="HAFE21F3B7B1B47F794F9FABEBE97FE19"><enum>(C)</enum><header>Total number of base acres for covered commodities</header><text>The amount described in this subparagraph, with respect to a farm, is the total number of base acres for covered commodities on the farm (excluding unassigned crop base), as in effect on September 30, 2024.</text></subparagraph>
<subparagraph id="H1D76890FD899451D9C9292FBAB03C7A0"><enum>(D)</enum><header>Effect of no recent plantings of covered commodities</header><text>In the case of a farm for which the amount determined under clause (i) of subparagraph (B) is equal to zero, that farm shall be ineligible to receive an allocation of base acres under this subsection.</text></subparagraph> <subparagraph id="H17ADE22A1AEB4D76AA043005E6BDF689"><enum>(E)</enum><header>Acreage planted on the farm to eligible noncovered commodities defined</header><text>In this paragraph, the term <term>acreage planted on the farm to eligible noncovered commodities</term> means acreage planted on a farm to commodities other than covered commodities, trees, bushes, vines, grass, or pasture (including cropland that was idle or fallow), as determined by the Secretary.</text></subparagraph></paragraph>
<paragraph id="H8DB9F7F506B842D6AB1D862E932B449B"><enum>(4)</enum><header>Number of base acres</header><text>Subject to paragraphs (3) and (8), the number of base acres allocated to an eligible farm shall—</text> <subparagraph id="H8B606EA47D654F08AA2A6DD9FA8B14BF"><enum>(A)</enum><text>be equal to the difference obtained by subtracting the amount determined under subparagraph (C) of paragraph (3) from the amount determined under subparagraph (B) of that paragraph; and</text></subparagraph>
<subparagraph id="HB0C32138A8004DB6B27D5122A51E683A"><enum>(B)</enum><text>include unassigned crop base.</text></subparagraph></paragraph> <paragraph id="HBE8C3DAB8B954876903954F32A049ED2"><enum>(5)</enum><header>Allocation of acres</header> <subparagraph id="H2D13516B88124E4CA86E0207F34F7DDD"><enum>(A)</enum><header>Allocation</header><text>The Secretary shall allocate the number of base acres under paragraph (4) among those covered commodities planted on the farm at any time during the 2019 through 2023 crop years.</text></subparagraph>
<subparagraph id="H1910589602244A28A4F61FFE0809767E"><enum>(B)</enum><header>Allocation formula</header><text>The allocation of additional base acres for covered commodities shall be in proportion to the ratio of—</text> <clause id="H8AFB0798A95849DD985192B691AA2B03"><enum>(i)</enum><text>the 5-year average of—</text>
<subclause id="H8D17CB4FDA6B432DACCD1AA0845B5EBB"><enum>(I)</enum><text>the acreage planted on the farm to each covered commodity for harvest, grazing, haying, silage, or other similar purposes for the 2019 through 2023 crop years; and</text></subclause> <subclause id="HC401A1C8527B4C2ABF0FCA580F75E8C5"><enum>(II)</enum><text>any acreage on the farm that the producers were prevented from planting during the 2019 through 2023 crop years to that covered commodity because of drought, flood, or other natural disaster, or other condition beyond the control of the producers, as determined by the Secretary; to</text></subclause></clause>
<clause id="H338962C1507D4F0ABE33251AF19C02A3"><enum>(ii)</enum><text>the 5-year average determined under paragraph (3)(B)(i).</text></clause></subparagraph> <subparagraph id="HB36B7CBEDAED44B4B9A22A9D3D7BCB3F"><enum>(C)</enum><header>Inclusion of all 5 years in average</header><text>For the purpose of determining a 5-year acreage average under subparagraph (B) for a farm, the Secretary shall not exclude any crop year in which a covered commodity was not planted.</text></subparagraph>
<subparagraph id="H92384411A733497687738006356671DA"><enum>(D)</enum><header>Treatment of multiple planting or prevented planting</header><text>For the purpose of determining under subparagraph (B) the acreage on a farm that producers planted or were prevented from planting during the 2019 through 2023 crop years to covered commodities, if the acreage that was planted or prevented from being planted was devoted to another covered commodity in the same crop year (other than a covered commodity produced under an established practice of double cropping), the owner may elect the covered commodity to be used for that crop year in determining the 5-year average, but may not include both the initial covered commodity and the subsequent covered commodity.</text></subparagraph> <subparagraph id="H12CDB44967EE491088654A672BCC678F"><enum>(E)</enum><header>Limitation</header><text>The allocation of additional base acres among covered commodities on a farm under this paragraph may not result in a total number of base acres for the farm in excess of the total number of acres on the farm.</text></subparagraph></paragraph>
<paragraph id="H85235B7E550840CC847F1B4F40B4A37E"><enum>(6)</enum><header>Reduction by the Secretary</header><text>In carrying out this subsection, if the total number of eligible acres allocated to base acres across all farms in the United States under this subsection would exceed 30,000,000 acres, the Secretary shall apply an across-the-board, pro-rata reduction to the number of eligible acres to ensure the number of allocated base acres under this subsection is equal to 30,000,000 acres.</text></paragraph> <paragraph id="HDC2337A74AEE44DE8C1AD8F80E46507F"><enum>(7)</enum><header>Payment yield</header><text>Beginning with crop year 2026, for the purpose of making price loss coverage payments under section 1116, the Secretary shall establish payment yields to base acres allocated under this subsection equal to—</text>
<subparagraph id="H614A7FC93F5D405782D888E257948256"><enum>(A)</enum><text>the payment yield established on the farm for the applicable covered commodity; and</text></subparagraph> <subparagraph id="H5EA355EFD31444FE8EB8BB45A7435C0A"><enum>(B)</enum><text>if no such payment yield for the applicable covered commodity exists, a payment yield—</text>
<clause id="H95C8A559ED124880822743E4DAD8C8B6"><enum>(i)</enum><text>equal to the average payment yield for the covered commodity for the county in which the farm is situated; or</text></clause> <clause id="H4A4BCF2F581244BAA25F0C9C2E3E28CA"><enum>(ii)</enum><text>determined pursuant to section 1113(c).</text></clause></subparagraph></paragraph>
<paragraph id="HB3CA2631570A4E46B5EF7BC2041937A8"><enum>(8)</enum><header>Treatment of new owners</header><text>In the case of a farm for which the owner on the date of enactment of this subsection was not the owner for the 2019 through 2023 crop years, the Secretary shall use the planting history of the prior owner or owners of that farm for purposes of determining—</text> <subparagraph id="HD4DCE26A7B7F49A4BE6BE438616AB13D"><enum>(A)</enum><text>eligibility under paragraph (3);</text></subparagraph>
<subparagraph id="HAE7C2749F34D4FEC914457C9A00B13C8"><enum>(B)</enum><text>eligible acres under paragraph (4); and</text></subparagraph> <subparagraph id="H3690DDB5C4C6402C84FD4FE6E5ED5CB2"><enum>(C)</enum><text>the allocation of acres under paragraph (5).</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section>
<section commented="no" display-inline="no-display-inline" id="HEF0102538DDD4393BF155DFB3BBB45F1"><enum>10303.</enum><header>Producer election</header>
<subsection commented="no" display-inline="no-display-inline" id="HAD349D950153435EA1598ADED5253F2E"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1115 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9015">7 U.S.C. 9015</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H7B6141116D304C1C961CDE869F89D7BE"><enum>(1)</enum><text display-inline="yes-display-inline">in subsection (a), in the matter preceding paragraph (1), by striking <quote>2023</quote> and inserting <quote>2031</quote>;</text></paragraph>
<paragraph id="H3E4921C3B07C4EF39278FE802990CBAE"><enum>(2)</enum><text>in subsection (c)—</text> <subparagraph id="HCFE8CADEAFBD43E889C04EF61D43BD57"><enum>(A)</enum><text>in the matter preceding paragraph (1)—</text>
<clause commented="no" display-inline="no-display-inline" id="HE6E08DB25AA8413AA6F4D6438F1BD96D"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>crop year or</quote> and inserting <quote>crop year,</quote>; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H22800B43B26D4E7D83C253722584B1DE"><enum>(ii)</enum><text>by inserting <quote>or the 2026 crop year,</quote> after <quote>2019 crop year,</quote>;</text></clause></subparagraph>
<subparagraph id="H2309C4F6381844379FFCA5F6125D83D8"><enum>(B)</enum><text>in paragraph (1)—</text> <clause commented="no" display-inline="no-display-inline" id="HB42FDD39ED0445FAB10ECEBEAF368E5A"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>crop year or</quote> and inserting <quote>crop year,</quote>; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H830AD0A29CCA40ABAC24DF09BBAF6C74"><enum>(ii)</enum><text>by inserting <quote>or the 2026 crop year,</quote> after <quote>2019 crop year,</quote>; and</text></clause></subparagraph> <subparagraph id="H73FB68B34DE84E6EB7395B70409C3EC3"><enum>(C)</enum><text>in paragraph (2)—</text>
<clause id="H4C3ABEBD3C8B4031AB86A275B3964484"><enum>(i)</enum><text>in subparagraph (A), by striking <quote>and</quote> at the end;</text></clause> <clause id="HCC36C86D8DC24791AF4C0F6EA50C0B1B"><enum>(ii)</enum><text>in subparagraph (B), by striking the period at the end and inserting <quote>; and</quote>; and</text></clause>
<clause id="H35D46D7BC7B8420C8393609CBB9DBB84"><enum>(iii)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HC7F5BE38D19A476AACA99D6CC8920F32"> <subparagraph id="H2871AEFFB93148EDAB4261457CAE7CFD"><enum>(C)</enum><text>the same coverage for each covered commodity on the farm for the 2027 through 2031 crop years as was applicable for the 2025 crop year.</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HE8F607C15A404B5D86FA63DEFBD59FA0"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HE5576454D2E7438D8B80052459C99725"> <subsection id="H45561711156743469DAE5F5F8D6B76BB" commented="no"><enum>(i)</enum><header>Higher of price loss coverage payments and agriculture risk coverage payments</header><text>For the 2025 crop year, the Secretary shall, on a covered commodity-by-covered commodity basis, make the higher of price loss coverage payments under section 1116 and agriculture risk coverage county coverage payments under section 1117 to the producers on a farm for the payment acres for each covered commodity on the farm.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HE65CFDD78E67490E925906CDAF29E070"><enum>(b)</enum><header>Federal crop insurance supplemental coverage option</header><text>Section 508(c)(4)(C)(iv) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1508">7 U.S.C. 1508(c)(4)(C)(iv)</external-xref>) is amended by striking <quote>Crops for which the producer has elected under section 1116 of the Agricultural Act of 2014 to receive agriculture risk coverage and acres</quote> and inserting <quote>Acres</quote> .</text></subsection></section> <section id="H0896EE52E3324BEFB4BF830CA3C71172"><enum>10304.</enum><header>Price loss coverage</header><text display-inline="no-display-inline">Section 1116 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9016">7 U.S.C. 9016</external-xref>) is amended—</text>
<paragraph id="H7DE147C5AB5B46C4B7827D6BFEB9089F"><enum>(1)</enum><text display-inline="yes-display-inline">in subsection (a)(2), in the matter preceding subparagraph (A), by striking <quote>2023</quote> and inserting <quote>2031</quote>; </text></paragraph> <paragraph id="H528E64583DF94EB7B46CC961DEFA3122"><enum>(2)</enum><text>in subsection (c)(1)(B)—</text>
<subparagraph id="H9F6E0EC92526456E8D4D682B9EDF65DC"><enum>(A)</enum><text>in the subparagraph heading, by striking <quote><header-in-text level="subparagraph" style="OLC">2023</header-in-text></quote> and inserting <quote><header-in-text level="subparagraph" style="OLC">2031</header-in-text></quote>; and</text></subparagraph> <subparagraph id="H9316F05A68E74FA4ADABEE55A2623B34"><enum>(B)</enum><text>in the matter preceding clause (i), by striking <quote>2023</quote> and inserting <quote>2031</quote>; </text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HB04167E34A364B8091CDC7DECF2096C7"><enum>(3)</enum><text>in subsection (d), in the matter preceding paragraph (1), by striking <quote>2025</quote> and inserting <quote>2031</quote>; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H558553D9B2A8471ABB0F8A70FBB7E680"><enum>(4)</enum><text>in subsection (g)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HFB641AA945D4410D911399CE5458EB1B"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>subparagraph (F) of section 1111(19)</quote> and inserting <quote>paragraph (19)(A)(vi) of section 1111</quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H576334B33CD147B69255967FF9966A89"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>2012 through 2016</quote> each place it appears and inserting <quote>2017 through 2021</quote>.</text></subparagraph></paragraph></section>
<section id="H841C78595EF54460B3A709FF506DB8CF"><enum>10305.</enum><header>Agriculture risk coverage</header><text display-inline="no-display-inline">Section 1117 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9017">7 U.S.C. 9017</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H6698BF446E394D0CA8C3494AA45CFC9A"><enum>(1)</enum><text>in subsection (a), in the matter preceding paragraph (1), by striking <quote>2023</quote> and inserting <quote>2031</quote>;</text></paragraph>
<paragraph id="H064464A40C424D0CBE9682334E82B4EB"><enum>(2)</enum><text>in subsection (c)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H833ED15C3C3A4DCE959F30DAB081228A"><enum>(A)</enum><text display-inline="yes-display-inline">in paragraph (1), by inserting <quote>for each of the 2014 through 2024 crop years and 90 percent of the benchmark revenue for each of the 2025 through 2031 crop years</quote> before the period at the end;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H10BE71D1DCA649A5911E90D0959252ED"><enum>(B)</enum><text>by striking <quote>2023</quote> each place it appears and inserting <quote>2031</quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H5346E4D3927A44BE822D94994D52DFFF"><enum>(C)</enum><text>in paragraph (4)(B), in the subparagraph heading, by striking <quote><header-in-text level="subparagraph" style="OLC">2023</header-in-text></quote> and inserting <quote><header-in-text level="subparagraph" style="OLC">2031</header-in-text></quote>;</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HFD211BAE2A5D49DD8111D848CB6A7993"><enum>(3)</enum><text display-inline="yes-display-inline">in subsection (d)(1), by striking subparagraph (B) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HE6A97885220640F69F579E20BE4D2459"> <subparagraph id="H72E994929BFB4DF8B48CD311EF2AAA2C"><enum>(B)</enum> <clause commented="no" display-inline="yes-display-inline" id="H08237849418847B7A4428F625FBBC534"><enum>(i)</enum><text>for each of the 2014 through 2024 crop years, 10 percent of the benchmark revenue for the crop year applicable under subsection (c); and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H889A1330B7944F97BF786C48E3C7EE13" indent="up1"><enum>(ii)</enum><text display-inline="yes-display-inline">for each of the 2025 through 2031 crop years, 12 percent of the benchmark revenue for the crop year applicable under subsection (c).</text></clause></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="HA0E9B1D6522F4695906E70D043F7773B"><enum>(4)</enum><text>in subsections (e), (g)(5), and (i)(5), by striking <quote>2023</quote> each place it appears and inserting <quote>2031</quote>. </text></paragraph></section>
<section id="H25356453FCB94A068C1E2974ACD7A336"><enum>10306.</enum><header>Equitable treatment of certain entities</header>
<subsection id="HFF9D4FD1278A49F5B490EB354DE14EBC"><enum>(a)</enum><header>In general</header><text>Section 1001 of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/7/1308">7 U.S.C. 1308</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H2A9BAA66BFE0445BB65EDB13A81F7E7A"><enum>(1)</enum><text display-inline="yes-display-inline">in subsection (a)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HE74FBCDEE03C4C31BA63F746254C3096"><enum>(A)</enum><text display-inline="yes-display-inline">by redesignating paragraph (5) as paragraph (6); and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H199F135811654DB9BA945CC913D138DB"><enum>(B)</enum><text display-inline="yes-display-inline">by inserting after paragraph (4) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H1592D3DA2CA94FD3A6C577440182C65B">
<paragraph id="H13441DAEFF234BA9865223A3597BFBED"><enum>(5)</enum><header>Qualified pass-through entity</header><text>The term <term>qualified pass-through entity</term> means—</text> <subparagraph id="H5683BD4F2975471B8D12C270338D0495"><enum>(A)</enum><text>a partnership (within the meaning of subchapter K of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> of the Internal Revenue Code of 1986);</text></subparagraph>
<subparagraph id="HA57FD219951B44B09C72E137E99076AF"><enum>(B)</enum><text>an S corporation (as defined in section 1361 of that Code);</text></subparagraph> <subparagraph id="H2BD724E5E9E94EAD83E43EBA18D02364"><enum>(C)</enum><text>a limited liability company that does not affirmatively elect to be treated as a corporation; and</text></subparagraph>
<subparagraph id="H4077A329DDC844A8862C4746A879F154"><enum>(D)</enum><text>a joint venture or general partnership.</text></subparagraph></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H603292BEBF4749A1AE142D8E5F36C06A"><enum>(2)</enum><text>in subsections (b) and (c), by striking <quote>except a joint venture or general partnership</quote> each place it appears and inserting <quote>except a qualified pass-through entity</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HB53E0555B1EE40BDA1D2192E02BA3624"><enum>(3)</enum><text>in subsection (d), by striking <quote>subtitle B of title I of the Agricultural Act of 2014 or</quote>.</text></paragraph></subsection> <subsection id="H619305C6678C4082AD871E41D6EAF71A"><enum>(b)</enum><header>Attribution of payments</header><text>Section 1001(e)(3)(B)(ii) of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/7/1308">7 U.S.C. 1308(e)(3)(B)(ii)</external-xref>) is amended—</text>
<paragraph id="H44FCA5445DD44F6D85268EC1544F049A"><enum>(1)</enum><text>in the clause heading, by striking <quote><header-in-text style="OLC" level="clause">joint ventures and general partnerships</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="clause">qualified pass-through entities</header-in-text></quote>;</text></paragraph> <paragraph id="HC997BAFBF2B344448445C0B2D389C146"><enum>(2)</enum><text>by striking <quote>a joint venture or a general partnership</quote> and inserting <quote>a qualified pass-through entity</quote>;</text></paragraph>
<paragraph id="HB63AB14A48D64CD9904CFA1FC92FC8FA"><enum>(3)</enum><text>by striking <quote>joint ventures and general partnerships</quote> and inserting <quote>qualified pass-through entities</quote>; and</text></paragraph> <paragraph id="HEEB089E6482D478CA3C15E3AB0BB3DEF"><enum>(4)</enum><text>by striking <quote>the joint venture or general partnership</quote> and inserting <quote>the qualified pass-through entity</quote>.</text></paragraph></subsection>
<subsection id="HC48B5146B42C45C19F2CCD8F1716E2FB" commented="no"><enum>(c)</enum><header>Persons actively engaged in farming</header><text>Section 1001A(b)(2) of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/7/1308-1">7 U.S.C. 1308–1(b)(2)</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H9CF9D14E55AB479CAC01A72309ED1946"><enum>(1)</enum><text display-inline="yes-display-inline">subparagraphs (A) and (B), by striking <quote>a general partnership, a participant in a joint venture</quote> each place it appears and inserting <quote>a qualified pass-through entity</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HA070EDA5FEB148458982ECABC4ED0D96"><enum>(2)</enum><text display-inline="yes-display-inline">in subparagraph (C), by striking <quote>a general partnership, joint venture, or similar entity</quote> and inserting <quote>a qualified pass-through entity or a similar entity</quote>.</text></paragraph></subsection> <subsection id="H195BA81BA989471C8B0D1F016B960C67" commented="no"><enum>(d)</enum><header>Joint and several liability</header><text>Section 1001B(d) of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/7/1308-2">7 U.S.C. 1308–2(d)</external-xref>) is amended by striking <quote>partnerships and joint ventures</quote> and inserting <quote>qualified pass-through entities</quote>.</text></subsection>
<subsection id="H2E7765C3A9914BB78A82C8FC1E7BC9AE"><enum>(e)</enum><header>Exclusion from AGI calculation</header><text>Section 1001D(d) of the Food Security Act of 1985 (7 U.S.C. 1308–3a(d)) is amended by striking <quote>, general partnership, or joint venture</quote> each place it appears.</text></subsection></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H54CD9C93E46249F4A118AEAE531D4134"><enum>10307.</enum><header>Payment limitations</header><text display-inline="no-display-inline">Section 1001 of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/7/1308">7 U.S.C. 1308</external-xref>) is amended—</text>
<paragraph id="H88F3EB1437684A51BADDE994CF434D2B"><enum>(1)</enum><text>in subsection (b)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HA2CFEA796A0046468EEBC6136BB41BCE"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>The</quote> and inserting <quote>Subject to subsection (i), the</quote>; and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H780E2867871A40DAB848DEAF8187A43C"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>$125,000</quote> and inserting <quote>$155,000</quote>;</text></subparagraph></paragraph> <paragraph id="H9FBDD97E025A41FC9396FB55A19C60FE"><enum>(2)</enum><text>in subsection (c)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H1CFC3000233D48DDB2D3C3062FBED25B"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>The</quote> and inserting <quote>Subject to subsection (i), the</quote>; and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB2F265F591CD40FA8225B8A522BA3924"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>$125,000</quote> and inserting <quote>$155,000</quote>; and</text></subparagraph></paragraph>
<paragraph id="H82348D1DE15C43E4BA7269EC1B35C9BC"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H4598E731DA6C4A3AADB9CF782734A0C8"> <subsection id="H7630457150A5441D8BD1D346EE3C8CB6"><enum>(i)</enum><header>Adjustment</header><text>For the 2025 crop year and each crop year thereafter, the Secretary shall annually adjust the amounts described in subsections (b) and (c) for inflation based on the Consumer Price Index for All Urban Consumers published by the Bureau of Labor Statistics of the Department of Labor.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section>
<section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H52F2DB4AD02E438C82C71945E3E924FC"><enum>10308.</enum><header display-inline="yes-display-inline">Adjusted gross income limitation</header><text display-inline="no-display-inline">Section 1001D(b) of the Food Security Act of 1985 (7 U.S.C. 1308–3a(b)) is amended—</text> <paragraph id="HD467A9AD797347118410A21BEBA5B5D9"><enum>(1)</enum><text>in paragraph (1), by striking <quote>paragraph (3)</quote> and inserting <quote>paragraphs (3) and (4)</quote>; and</text></paragraph>
<paragraph id="H6A12F7BC921A4617918041369079F440"><enum>(2)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HE9E09C3DAB7449DE805099364FB4EC96"> <paragraph id="H19B14773A37D4011ACE18D6DA6A5ED1C"><enum>(4)</enum><header>Exception for certain operations</header> <subparagraph commented="no" display-inline="no-display-inline" id="H16CCD40713F649FABCEA30DAA7363FF2"><enum>(A)</enum><header display-inline="yes-display-inline">Definitions</header><text>In this paragraph:</text>
<clause id="H814857C53C1E43C5BE363D2F09A448FB"><enum>(i)</enum><header>Excepted payment or benefit</header><text>The term <term>excepted payment or benefit</term> means—</text> <subclause id="H04BC9DE326E44A909A16054A7DA1DAA5"><enum>(I)</enum><text>a payment or benefit under subtitle E of title I of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9081">7 U.S.C. 9081 et seq.</external-xref>);</text></subclause>
<subclause id="H9FB13712C25E4AC1BDC1739C4F8B17A0"><enum>(II)</enum><text>a payment or benefit under section 196 of the Federal Agriculture Improvement and Reform Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/7/7333">7 U.S.C. 7333</external-xref>); and</text></subclause> <subclause id="H7E9ED1AE4FAF45E4A28583140587A119"><enum>(III)</enum><text>a payment or benefit described in paragraph (2)(C) received on or after October 1, 2024.</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H14624FDF9984409BAF85C9CFAD49742B"><enum>(ii)</enum><header>Farming, ranching, or silviculture activities</header><text display-inline="yes-display-inline">The term <term>farming, ranching, or silviculture activities</term> includes agri-tourism, direct-to-consumer marketing of agricultural products, the sale of agricultural equipment owned by the person or legal entity, and other agriculture-related activities, as determined by the Secretary.</text></clause></subparagraph> <subparagraph id="H18AE731A429F47868EAC8B9BBE35833E"><enum>(B)</enum><header>Exception</header><text>In the case of an excepted payment or benefit, the limitation established by paragraph (1) shall not apply to a person or legal entity during a crop, fiscal, or program year, as appropriate, if greater than or equal to 75 percent of the average gross income of the person or legal entity derives from farming, ranching, or silviculture activities.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section>
<section id="H88E662DACFB544CF956B9C7DF34F2A0D" commented="no"><enum>10309.</enum><header>Marketing loans</header>
<subsection commented="no" display-inline="no-display-inline" id="HBF707B7FEA954B1A96678F2A73FE87A4"><enum>(a)</enum><header>Availability of nonrecourse marketing assistance loans for loan commodities</header><text display-inline="yes-display-inline">Section 1201(b)(1) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9031">7 U.S.C. 9031(b)(1)</external-xref>) is amended by striking <quote>2023</quote> and inserting <quote>2031</quote>.</text></subsection> <subsection id="HE9380A91C4CB46248E7F03D8C68CB3A9" commented="no"><enum>(b)</enum><header>Loan rates for nonrecourse marketing assistance loans</header><text display-inline="yes-display-inline">Section 1202 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9032">7 U.S.C. 9032</external-xref>) is amended—</text>
<paragraph id="HC8D4AEC75A0E4D0CAE8EAF693A03945D"><enum>(1)</enum><text>in subsection (b)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H82F8226DE5804428A9BF479BA353BD7F"><enum>(A)</enum><text display-inline="yes-display-inline">in the subsection heading, by striking <quote><header-in-text style="OLC" level="subsection">2023</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="subsection">2025</header-in-text></quote>; and</text></subparagraph>
<subparagraph id="HFE63DC50DC0B4FB28363E0DFB2F6158D"><enum>(B)</enum><text>in the matter preceding paragraph (1), by striking <quote>2023</quote> and inserting <quote>2025</quote>;</text></subparagraph></paragraph> <paragraph id="H2D2D99767B9A47E3A7A3CFEE8EFDA2D9"><enum>(2)</enum><text>by redesignating subsections (c) and (d) as subsections (d) and (e), respectively;</text></paragraph>
<paragraph id="HA07DA531C6C84FD3992C6706EC1B620F"><enum>(3)</enum><text>by inserting after subsection (b) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF63388D4BC3545A7B06F6DF0839CAAC3"> <subsection id="H3D81BB93A1604D00B5CA6DE64A829240"><enum>(c)</enum><header>2026 through 2031 crop years</header><text>For purposes of each of the 2026 through 2031 crop years, the loan rate for a marketing assistance loan under section 1201 for a loan commodity shall be equal to the following:</text>
<paragraph id="HF873B91435FA43E3B3EEA687256418EE"><enum>(1)</enum><text>In the case of wheat, $3.72 per bushel.</text></paragraph> <paragraph id="H122B7374CF0748FB9389921AC86917D9"><enum>(2)</enum><text>In the case of corn, $2.42 per bushel.</text></paragraph>
<paragraph id="H82B1EED9CD834B8DB06170D9132ADF3E"><enum>(3)</enum><text>In the case of grain sorghum, $2.42 per bushel.</text></paragraph> <paragraph id="HFA1C181B66EF4E5A9E8F729DF6BD7647"><enum>(4)</enum><text>In the case of barley, $2.75 per bushel.</text></paragraph>
<paragraph id="HF226B31F24984EC3AF26A2DA3FBA7EC6"><enum>(5)</enum><text>In the case of oats, $2.20 per bushel.</text></paragraph> <paragraph id="H143DCCAE65B6484484566A81F8BC9674"><enum>(6)</enum><text>In the case of upland cotton, $0.55 per pound.</text></paragraph>
<paragraph id="HE6F197D216B7461E877AC31C4A89FA43"><enum>(7)</enum><text>In the case of extra long staple cotton, $1.00 per pound.</text></paragraph> <paragraph id="H5676FAD9524D429DBE27C85DB7C90FC0"><enum>(8)</enum><text>In the case of long grain rice, $7.70 per hundredweight.</text></paragraph>
<paragraph id="HF02E2DE0225848E3958776E222E40C9E"><enum>(9)</enum><text>In the case of medium grain rice, $7.70 per hundredweight.</text></paragraph> <paragraph id="HDAC9B9F78D9F4539951831B7330CBE0D"><enum>(10)</enum><text>In the case of soybeans, $6.82 per bushel.</text></paragraph>
<paragraph id="HDB0900289F56404EBC521FB22F8E492A"><enum>(11)</enum><text>In the case of other oilseeds, $11.10 per hundredweight for each of the following kinds of oilseeds:</text> <subparagraph id="HF18D2732543048939C0F69CF9793EC87"><enum>(A)</enum><text>Sunflower seed.</text></subparagraph>
<subparagraph id="H08EDE9ED7DB349F9A834BFA51BAC3B15"><enum>(B)</enum><text>Rapeseed.</text></subparagraph> <subparagraph id="HFBBB89AF3AC94C5B8ACB69753D14B57F"><enum>(C)</enum><text>Canola.</text></subparagraph>
<subparagraph id="H68DAA9688C764392B5B3175CBB08EC34"><enum>(D)</enum><text>Safflower.</text></subparagraph> <subparagraph id="HC5306894E9A7464E9176704C9139674E"><enum>(E)</enum><text>Flaxseed.</text></subparagraph>
<subparagraph id="H2C2DACC69CE64D6AA79F28AA5FAE496F"><enum>(F)</enum><text>Mustard seed.</text></subparagraph> <subparagraph id="H778AD1117AA34E3180A2FBAEC7A31F24"><enum>(G)</enum><text>Crambe.</text></subparagraph>
<subparagraph id="H2C12CBD19B364561A6ED733589BC8EDB"><enum>(H)</enum><text>Sesame seed.</text></subparagraph> <subparagraph id="HDC5BA22E0ED44F5799278AC17AFD6614"><enum>(I)</enum><text>Other oilseeds designated by the Secretary.</text></subparagraph></paragraph>
<paragraph id="H7282CDFD5B10471581E5A06B0603F140"><enum>(12)</enum><text>In the case of dry peas, $6.87 per hundredweight.</text></paragraph> <paragraph id="HFB3B3129F3E64A599AC1DE6517320F1C"><enum>(13)</enum><text>In the case of lentils, $14.30 per hundredweight.</text></paragraph>
<paragraph id="H04551ECC0D154627BBBFD2C810FBE69A"><enum>(14)</enum><text>In the case of small chickpeas, $11.00 per hundredweight.</text></paragraph> <paragraph id="H764290AD2201423384F4C02F70A23FB4"><enum>(15)</enum><text>In the case of large chickpeas, $15.40 per hundredweight.</text></paragraph>
<paragraph id="H72A103D5B6A14E08AD6B6B3D94379272"><enum>(16)</enum><text>In the case of graded wool, $1.60 per pound.</text></paragraph> <paragraph id="H33B13294357242419CB23871FF365ABA"><enum>(17)</enum><text>In the case of nongraded wool, $0.55 per pound.</text></paragraph>
<paragraph id="H3431B56EA41747EEAC0ED963B8F6462C"><enum>(18)</enum><text>In the case of mohair, $5.00 per pound.</text></paragraph> <paragraph id="H2BFB863D381240BFABC1C63D0C4F9191"><enum>(19)</enum><text>In the case of honey, $1.50 per pound.</text></paragraph>
<paragraph id="HA22E02D708464A62ABA5310D2666CA20"><enum>(20)</enum><text>In the case of peanuts, $390 per ton.</text></paragraph></subsection><after-quoted-block>;</after-quoted-block></quoted-block></paragraph> <paragraph id="H21A0C414571944DC8D5D6AEDE0FE5035"><enum>(4)</enum><text>in subsection (d) (as so redesignated), by striking <quote>(a)(11) and (b)(11)</quote> and inserting <quote>(a)(11), (b)(11), and (c)(11)</quote>; and</text></paragraph>
<paragraph id="H1E208C3DCF764F7C84A44482023B3C1C"><enum>(5)</enum><text>in subsection (e) (as so redesignated), in paragraph (1), by striking <quote>$0.25</quote> and inserting <quote>$0.30</quote>.</text></paragraph></subsection> <subsection id="HFDBB6DC21A6746E8A2106397DF15BEC3" commented="no"><enum>(c)</enum><header>Payment of cotton storage costs</header><text display-inline="yes-display-inline">Section 1204(g) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9034">7 U.S.C. 9034(g)</external-xref>) is amended—</text>
<paragraph id="H37177335E32B4696A2A2FD4FD1430FDD" commented="no"><enum>(1)</enum><text>by striking <quote>Effective</quote> and inserting the following:</text> <quoted-block id="H65A26029B00D424296E63B2803601350" style="OLC"> <paragraph id="H102C9A28C59A4EBD8DE9A279A14436E8" commented="no"><enum>(1)</enum><header>Crop years 2014 through 2025</header><text>Effective</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></paragraph>
<paragraph id="HF6A60309A23B45AB9379AB9D69910A53" commented="no"><enum>(2)</enum><text>in paragraph (1) (as so designated), by striking <quote>2023</quote> and inserting <quote>2025</quote>; and </text></paragraph> <paragraph id="H1463C385CAA04ED0BBC21ED3BAE1AEBA" commented="no"><enum>(3)</enum><text>by adding at the end the following:</text>
<quoted-block id="H6D228367DF044818984E3BBC33F69370" display-inline="no-display-inline" style="OLC">
<paragraph id="HEED9AAF00C4D4967BA2BCBA267381E4B" commented="no"><enum>(2)</enum><header>Payment of cotton storage costs</header><text>Effective for each of the 2026 through 2031 crop years, the Secretary shall make cotton storage payments for upland cotton and extra long staple cotton available in the same manner as the Secretary provided storage payments for the 2006 crop of upland cotton, except that the payment rate shall be equal to the lesser of—</text> <subparagraph id="H6E86C5B225C84307AD6947AED2EDB853" commented="no"><enum>(A)</enum><text>the submitted storage charge for the current marketing year; and</text></subparagraph>
<subparagraph id="H24805BA95C46474ABA624B30BA5F5953" commented="no"><enum>(B)</enum><text>in the case of storage in—</text> <clause id="HAB0474391514461D89F67C5FADB4EEDB" commented="no"><enum>(i)</enum><text>California or Arizona, a payment rate of $4.90; and</text></clause>
<clause id="H4CCDBD7508F448A199CD08119FAB7592" commented="no" display-inline="no-display-inline"><enum>(ii)</enum><text>any other State, a payment rate of $3.00.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HC75D9060226B40E1AE176391EBA6376C" commented="no"><enum>(d)</enum><header>Loan deficiency payments</header> <paragraph id="HC15C148B776D4DDDBA560AA603CD0C6A" commented="no"><enum>(1)</enum><header>Continuation</header><text>Section 1205(a)(2)(B) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9035">7 U.S.C. 9035(a)(2)(B)</external-xref>) is amended by striking <quote>2023</quote> and inserting <quote>2031</quote>.</text></paragraph>
<paragraph id="HC77E42D148DA41E99530F2413CD2892C" commented="no"><enum>(2)</enum><header>Payments in lieu of LDPs</header><text>Section 1206 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9036">7 U.S.C. 9036</external-xref>) is amended, in subsections (a) and (d), by striking <quote>2023</quote> each place it appears and inserting <quote>2031</quote>. </text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HF379BBF562FF43C9A75CEDDEFF9396D1"><enum>(e)</enum><header>Special competitive provisions for extra long staple cotton</header><text display-inline="yes-display-inline">Section 1208(a) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9038">7 U.S.C. 9038(a)</external-xref>) is amended, in the matter preceding paragraph (1), by striking <quote>2026</quote> and inserting <quote>2032</quote>.</text></subsection>
<subsection id="H46A0A0C0DEC546F28E4DCDCD9E1948DA" commented="no" display-inline="no-display-inline"><enum>(f)</enum><header>Availability of recourse loans</header><text display-inline="yes-display-inline">Section 1209 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9039">7 U.S.C. 9039</external-xref>) is amended, in subsections (a)(2), (b), and (c), by striking <quote>2023</quote> each place it appears and inserting <quote>2031</quote>. </text></subsection></section> <section id="HC1345ADA7CAA4A469A669F8BEE4EEF1D"><enum>10310.</enum><header>Repayment of marketing loans</header><text display-inline="no-display-inline">Section 1204 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9034">7 U.S.C. 9034</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HC3976F154E774ACB9A13CD8B2B10072D"><enum>(1)</enum><text>in subsection (b)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H9D0CFA11340A4B0BAD54243E4FC3230E"><enum>(A)</enum><text>by redesignating paragraph (1) as subparagraph (A) and indenting appropriately;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H3A82FAC1B86B41A48356EFACD2628E5B"><enum>(B)</enum><text>in the matter preceding subparagraph (A) (as so redesignated), by striking <quote>The Secretary</quote> and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HC318C9AC0EFE417D92027DBC20BA9E99"> <paragraph commented="no" display-inline="no-display-inline" id="H12A67A712B7A4D28894DA873A42E2DAA"><enum>(1)</enum><header>In general</header><text>The Secretary</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H1DE4FC2F474640088A95EAA5785F0D9F"><enum>(C)</enum><text>by striking paragraph (2) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF1CE015A40214448BA5EA59BE1E976C1"> <subparagraph commented="no" display-inline="no-display-inline" id="HE799DE375D8A4F7184822522B07C18C8"><enum>(B)</enum> <clause commented="no" display-inline="yes-display-inline" id="H56B83284C11B4DE3A796CB715385B702"><enum>(i)</enum><text>in the case of long grain rice and medium grain rice, the prevailing world market price for the commodity, as determined and adjusted by the Secretary in accordance with this section; or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HA6FF05C58BA148A9878B10805140A931" indent="up1"><enum>(ii)</enum><text>in the case of upland cotton, the prevailing world market price for the commodity, as determined and adjusted by the Secretary in accordance with this section.</text></clause></subparagraph> <paragraph commented="no" display-inline="no-display-inline" id="H5730EDF110FF404E97E329571D0BAE65"><enum>(2)</enum><header>Refund for upland cotton</header><text display-inline="yes-display-inline">In the case of a repayment for a marketing assistance loan for upland cotton at a rate described in paragraph (1)(B)(ii), the Secretary shall provide to the producer a refund (if any) in an amount equal to the difference between the lowest prevailing world market price, as determined and adjusted by the Secretary in accordance with this section, during the 30-day period following the date on which the producer repays the marketing assistance loan and the repayment rate.</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H06BE4CBABA404AA0BA34D9B44D2E5102"><enum>(2)</enum><text>in subsection (c)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H450CE29DF4704DF0BF809DEC537FE9ED"><enum>(A)</enum><text display-inline="yes-display-inline">by striking the period at the end and inserting <quote>; and</quote>;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HA14AE1038B6E42A48D711C1F3483F36E"><enum>(B)</enum><text>by striking <quote>at the loan rate</quote> and inserting the following: "at a rate that is the lesser of—</text> <quoted-block style="OLC" display-inline="yes-display-inline" id="HEEF0E69C18C14DA69528E88E22ABFDCA"> <paragraph commented="no" display-inline="no-display-inline" id="H45586DE57DE240E9BC8F0DF06C65CA6A"><enum>(1)</enum><text>the loan rate</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H8A87B770ED8E4A40A030D4A058E318EF"><enum>(C)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HA9C53D83F7BA4AE9971EBF03E1F5CAC3"> <paragraph commented="no" display-inline="no-display-inline" id="H1CE8130668F84221959E6FF0A1D82A19"><enum>(2)</enum><text display-inline="yes-display-inline">the prevailing world market price for the commodity, as determined and adjusted by the Secretary in accordance with this section.</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H94CD2DDDED5D406F9A2DCFEF674551AB"><enum>(3)</enum><text>in subsection (d)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HDEF873C745764037A76FE2D55F01866A"><enum>(A)</enum><text>in paragraph (1), by striking <quote>and medium grain rice</quote> and inserting <quote>medium grain rice, and extra long staple cotton</quote>;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H47775B0E2FF244A691F85D04001EBF57"><enum>(B)</enum><text display-inline="yes-display-inline">by redesignating paragraphs (1) and (2) as subparagraphs (A) and (B), respectively, and indenting appropriately;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H00FE6406E26C4CC6A547B0D39F6DCDF6"><enum>(C)</enum><text>in the matter preceding subparagraph (A) (as so redesignated), by striking <quote>For purposes</quote> and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H091ADC54CDF64A6A9B1A80BDB6A017F1">
<paragraph commented="no" display-inline="no-display-inline" id="H862B866B1AA148EB8BDA7676DBEC3DF7"><enum>(1)</enum><header>In general</header><text>For purposes</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H3CDCF70C255142C18BEB47D3448DBC8E"><enum>(D)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HD705CA1CFBDF4F6DA9649231673BDA5A">
<paragraph commented="no" display-inline="no-display-inline" id="HFC37AEFFEBD9496FA1888ECECDDF82CA"><enum>(2)</enum><header>Upland cotton</header><text>In the case of upland cotton, for any period when price quotations for Middling (M) 1<fraction>3/32</fraction>-inch cotton are available, the formula under paragraph (1)(A) shall be based on the average of the 3 lowest-priced growths that are quoted.</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="HA138D6B7F5694FD2A6B6CD8F51FE6AFF"><enum>(4)</enum><text>in subsection (e)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HCD6143BDDD124D5D938D10019396FA05"><enum>(A)</enum><text display-inline="yes-display-inline">in the subsection heading, by inserting <quote><header-in-text style="OLC" level="subsection">extra long staple cotton,</header-in-text></quote> after <quote><header-in-text style="OLC" level="subsection">Upland cotton,</header-in-text></quote>;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H504D110BCF7B4588A8A87B350C9CC16B"><enum>(B)</enum><text>in paragraph (2)—</text>
<clause commented="no" display-inline="no-display-inline" id="HC1BFB65E112848368CA96C116986887A"><enum>(i)</enum><text display-inline="yes-display-inline">in the paragraph heading, by inserting <quote><header-in-text style="OLC" level="paragraph">Upland</header-in-text></quote> before <quote><header-in-text style="OLC" level="paragraph">Cotton</header-in-text></quote>; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H1CACF143581F42F38E0777AC58060788"><enum>(ii)</enum><text>in subparagraph (B), in the matter preceding clause (i), by striking <quote>2024</quote> and inserting <quote>2032</quote>;</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HB0DC3564E0EF47049982FF50D32836BC"><enum>(C)</enum><text>by redesignating paragraph (3) as paragraph (4); and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HAE094FF097AD407E8F0AE0CB50C34198"><enum>(D)</enum><text>by inserting after paragraph (2) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H581CDF5476BF4D9280D876EC86A14047">
<paragraph id="HA28F8805ED1A4D2E963E9D1C3F28CEEA"><enum>(3)</enum><header>Extra long staple cotton</header><text>The prevailing world market price for extra long staple cotton determined under subsection (d)—</text> <subparagraph id="H880F9E31BD134A91BE71D4406AF0AEBC"><enum>(A)</enum><text>shall be adjusted to United States quality and location, with the adjustment to include the average costs to market the commodity, including average transportation costs, as determined by the Secretary; and</text></subparagraph>
<subparagraph id="H62F9709059FB4A699E0C5E9FC1D7E562"><enum>(B)</enum><text>may be further adjusted, during the period beginning on the date of enactment of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote> (119th Congress) and ending on July 31, 2032, if the Secretary determines the adjustment is necessary—</text> <clause id="H1104C3FC48E645D9B96B942672BE04C9"><enum>(i)</enum><text>to minimize potential loan forfeitures;</text></clause>
<clause id="H33E70712F49545A3839562E1764FA6D4"><enum>(ii)</enum><text>to minimize the accumulation of stocks of extra long staple cotton by the Federal Government;</text></clause> <clause id="HD15688604F4E44F98CAF53CF40F0105E"><enum>(iii)</enum><text>to ensure that extra long staple cotton produced in the United States can be marketed freely and competitively; and</text></clause>
<clause id="H546C33C930534983A6379B3934BEE6DE"><enum>(iv)</enum><text>to ensure an appropriate transition between current-crop and forward-crop price quotations, except that the Secretary may use forward-crop price quotations prior to July 31 of a marketing year only if—</text> <subclause id="H0886D3A18896460AA02F304C1963805E"><enum>(I)</enum><text>there are insufficient current-crop price quotations; and</text></subclause>
<subclause id="H49F4A6E163FD418DB43798D5FBC4C24C"><enum>(II)</enum><text>the forward-crop price quotation is the lowest such quotation available.</text></subclause></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></section> <section id="HCD2E8D986D784010A62FC295422F5B31"><enum>10311.</enum><header>Economic adjustment assistance for textile mills</header><text display-inline="no-display-inline">Section 1207(c) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9037">7 U.S.C. 9037(c)</external-xref>) is amended by striking paragraph (2) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H57549D0048204648963AE6DB38848056">
<paragraph id="HA008BE09005749BBB9E1DE1B7CF74A0A"><enum>(2)</enum><header>Value of assistance</header><text>The value of the assistance provided under paragraph (1) shall be—</text> <subparagraph id="HA5FB293CDDD44073B61D479825909F67"><enum>(A)</enum><text>for the period beginning on August 1, 2013, and ending on July 31, 2025, 3 cents per pound; and</text></subparagraph>
<subparagraph id="H94BA45A621C7479DB2F4001D364DE11A"><enum>(B)</enum><text>beginning on August 1, 2025, 5 cents per pound.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HFC6AF482BAEE499D8997022F684A1D63"><enum>10312.</enum><header>Sugar program updates</header> <subsection id="HE0D81956CE1A4780B05BF04E6F2FAF95" commented="no"><enum>(a)</enum><header>Loan rate modifications</header><text display-inline="yes-display-inline">Section 156 of the Federal Agriculture Improvement and Reform Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/7/7272">7 U.S.C. 7272</external-xref>) is amended—</text>
<paragraph id="H28B34066545C4EF5BAACF55D59347CAE" commented="no"><enum>(1)</enum><text>in subsection (a)—</text> <subparagraph id="HD41B1A7C0C184C09B55D4B8289A50169" commented="no"><enum>(A)</enum><text>in paragraph (4), by striking <quote>and</quote> at the end;</text></subparagraph>
<subparagraph id="H1B8D6EF1CC8B4264B44380BFA459FD06" commented="no"><enum>(B)</enum><text>in paragraph (5), by striking <quote>2023 crop years.</quote> and inserting <quote>2024 crop years; and</quote>; and </text></subparagraph> <subparagraph id="H20DD15A178FA46ABA13382273CCC7F81" commented="no"><enum>(C)</enum><text>by adding at the end the following:</text>
<quoted-block id="H4EC731C92CA44314A62DF9383E574B40" style="OLC">
<paragraph id="H1CA05127665A4846B1226CB7979FA4F9" commented="no"><enum>(6)</enum><text>24.00 cents per pound for raw cane sugar for each of the 2025 through 2031 crop years.</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H5A76D329864B485693DF9DA613BFB9F9" commented="no"><enum>(2)</enum><text>in subsection (b)—</text>
<subparagraph id="H220C9B6CAEC648A0B5206836A0086AB6" commented="no"><enum>(A)</enum><text>in paragraph (1), by striking <quote>and</quote> at the end;</text></subparagraph> <subparagraph id="HFE34650B94A84BF4AB7D6601B8CD80DA" commented="no"><enum>(B)</enum><text>in paragraph (2), by striking <quote>2023 crop years.</quote> and inserting <quote>2024 crop years; and</quote>; and </text></subparagraph>
<subparagraph id="H4682D571D5F04A0489DA88776D90701C" commented="no"><enum>(C)</enum><text>by adding at the end the following:</text> <quoted-block id="H2D943E7F36A14FCBBEDFC92657716B59" style="OLC"> <paragraph id="HB8F2A3D428DC4D8FA3345E38CA85A159" commented="no"><enum>(3)</enum><text>a rate that is equal to 136.55 percent of the loan rate per pound of raw cane sugar under subsection (a)(6) for each of the 2025 through 2031 crop years.</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H6D4110C01948495B8BB72134248294FF"><enum>(3)</enum><text>in subsection (i), by striking <quote>2023</quote> and inserting <quote>2031</quote>.</text></paragraph></subsection> <subsection id="HA21F58BA51F347E9BE49A49F7FAE272D" commented="no"><enum>(b)</enum><header>Adjustments to Commodity Credit Corporation storage rates</header><text display-inline="yes-display-inline">Section 167 of the Federal Agriculture Improvement and Reform Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/7/7287">7 U.S.C. 7287</external-xref>) is amended—</text>
<paragraph id="HCD0E8B6469D14F99BA20D6FEC90D5E66" commented="no"><enum>(1)</enum><text>by striking subsection (a) and inserting the following:</text> <quoted-block style="OLC" id="H7C3C6B38A9F7404D892EAEFEEAEA8000"> <subsection id="HA551A60C8EB14E47809F7FDD18D69902" commented="no"><enum>(a)</enum><header>In general</header><text>For the 2025 crop year and each subsequent crop year, the Commodity Credit Corporation shall establish rates for the storage of forfeited sugar in an amount that is not less than—</text>
<paragraph id="H16177889AE964DFEA3F270A6BC4BD086" commented="no"><enum>(1)</enum><text display-inline="yes-display-inline">in the case of refined sugar, 34 cents per hundredweight per month; and</text></paragraph> <paragraph id="H40C213D2D672402E8F136F2B6CAA8C0C" commented="no"><enum>(2)</enum><text>in the case of raw cane sugar, 27 cents per hundredweight per month.</text></paragraph></subsection><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph id="HD6C50129188C4492B430204EEB3FFEB2" commented="no"><enum>(2)</enum><text>in subsection (b)—</text> <subparagraph id="H4B57DC96F4C144388AF3C1FC27B02F92" commented="no"><enum>(A)</enum><text>in the subsection heading, by striking <quote><header-in-text level="subsection" style="OLC">Subsequent</header-in-text></quote> and inserting <quote><header-in-text level="subsection" style="OLC">Prior</header-in-text></quote>; and</text></subparagraph>
<subparagraph id="H9E188FF1DB534718B9FCF58CA0DF0FC0" commented="no"><enum>(B)</enum><text>by striking <quote>and subsequent</quote> and inserting <quote>through 2024</quote>. </text></subparagraph></paragraph></subsection> <subsection id="H46CE538500BC4F7B8635EC01C412CEEE" commented="no"><enum>(c)</enum><header>Modernizing beet sugar allotments</header> <paragraph id="H7397CC9B68484D18977F89D8343DCC28" commented="no"><enum>(1)</enum><header>Sugar estimates</header><text>Section 359b(a)(1) of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359bb">7 U.S.C. 1359bb(a)(1)</external-xref>) is amended by striking <quote>2023</quote> and inserting <quote>2031</quote>.</text></paragraph>
<paragraph id="HC3E43742DD5D498690F56CD554CB7DC7" commented="no"><enum>(2)</enum><header>Allocation to processors</header><text display-inline="yes-display-inline">Section 359c(g)(2) of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359cc">7 U.S.C. 1359cc(g)(2)</external-xref>) is amended—</text> <subparagraph id="H4923CD9BA58648A49B0D73BAA3AEEC7B" commented="no"><enum>(A)</enum><text>by striking <quote>In the case</quote> and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB8DC564311B4424DAACC849B0E40ED48">
<subparagraph commented="no" display-inline="no-display-inline" id="H7EC54379D6BB4A82AF5FCEBF624E2C29"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Except as provided in subparagraph (B), in the case</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="H5388739A579D49DCBEE5947B22B6DC2F" commented="no"><enum>(B)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" id="H892DE1E07F704587A3314BFA5518363D" display-inline="no-display-inline">
<subparagraph id="H75F8EB5DF860490296BA7CA8FD87D086" commented="no"><enum>(B)</enum><header>Exception</header><text display-inline="yes-display-inline">If the Secretary makes an upward adjustment under paragraph (1)(A), in adjusting allocations among beet sugar processors, the Secretary shall give priority to beet sugar processors with available sugar.</text></subparagraph><after-quoted-block>. </after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H6CA075580E634679AB5C2F0E9BF96793" commented="no"><enum>(3)</enum><header>Timing of reassignment</header><text display-inline="yes-display-inline">Section 359e(b)(2) of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359ee">7 U.S.C. 1359ee(b)(2)</external-xref>) is amended—</text>
<subparagraph id="HA54200FD4F7240258B2214434F1171E9" commented="no"><enum>(A)</enum><text>by redesignating subparagraphs (A) through (C) as clauses (i) through (iii), respectively, and indenting appropriately;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H599962CBA32F416EA74D925F83ED6E58"><enum>(B)</enum><text>in the matter preceding clause (i) (as so redesignated), by striking <quote>If the Secretary</quote> and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H50B6F368FC574F43BE1AE3F6D822AE28">
<subparagraph commented="no" display-inline="no-display-inline" id="H485B996E920B4DEDBB899D63A9E02104"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">If the Secretary</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="H8F6DF0F443BF4523A562A0ED31FEB341" commented="no"><enum>(C)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" id="H63AAAFF3253742E9A8DEFD7B3DBEB2D2" display-inline="no-display-inline">
<subparagraph id="HE2449349F97D4EC8B12BA2FAA4547131" commented="no"><enum>(B)</enum><header>Timing</header><text display-inline="yes-display-inline">In carrying out subparagraph (A), the Secretary shall—</text> <clause id="HF7CF23481516448E97F00183DFEB5BFB" commented="no"><enum>(i)</enum><text>make an initial determination based on the World Agricultural Supply and Demand Estimates approved by the World Agricultural Outlook Board for January that shall be applicable to the crop year for which allotments are required; and</text></clause>
<clause id="H2915FB6D49054992A1AEB7253D4FFF74" commented="no"><enum>(ii)</enum><text>provide for an initial reassignment under subparagraph (A)(i) not later than 30 days after the date on which the World Agricultural Supply and Demand Estimates described in clause (i) is released.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H52F25C328B5A42218A20B34D092BF55F" commented="no"><enum>(d)</enum><header>Reallocations of tariff-rate quota shortfall</header><text display-inline="yes-display-inline">Section 359k of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359kk">7 U.S.C. 1359kk</external-xref>) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H26B3ACB0F1784CF1813D05B292BC2859">
<subsection id="H7F75123F1FBE46468350FB0BDBD08ACF" commented="no"><enum>(c)</enum><header>Reallocation</header>
<paragraph id="H5CB98CEB62F744069802AF2E7A54DAB2" commented="no"><enum>(1)</enum><header>Initial reallocation</header><text display-inline="yes-display-inline">Subject to paragraph (3), following the establishment of the tariff-rate quotas under subsection (a) for a quota year, the Secretary shall—</text> <subparagraph id="H85AA0E2F522D49C9A3EEA0898A2A6B65" commented="no"><enum>(A)</enum><text>determine which countries do not intend to fulfill their allocation for the quota year; and</text></subparagraph>
<subparagraph id="H19EC559E6F5A42FFB1A0047567C78363" commented="no"><enum>(B)</enum><text>reallocate any forecasted shortfall in the fulfillment of the tariff-rate quotas as soon as practicable. </text></subparagraph></paragraph> <paragraph id="HAA662A960BFE4C84B3A5159DD398F09A" commented="no"><enum>(2)</enum><header>Subsequent reallocation</header><text>Subject to paragraph (3), not later than March 1 of a quota year, the Secretary shall reallocate any additional forecasted shortfall in the fulfillment of the tariff-rate quotas for raw cane sugar established under subsection (a)(1) for that quota year.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HCE58EE857F84499CB5BFE0316EF9B5DC"><enum>(3)</enum><header>Cessation of effectiveness</header><text display-inline="yes-display-inline">Paragraphs (1) and (2) shall cease to be in effect if—</text> <subparagraph id="HFE2D5C6306B74CFD84640298B1CF028A" commented="no"><enum>(A)</enum><text>the Agreement Suspending the Countervailing Duty Investigation on Sugar from Mexico, signed December 19, 2014, is terminated; and </text></subparagraph>
<subparagraph id="H3C3A42F95A5C4830A15C31800ECC8F31" commented="no"><enum>(B)</enum><text>no countervailing duty order under subtitle A of title VII of the Tariff Act of 1930 (<external-xref legal-doc="usc" parsable-cite="usc/19/1671">19 U.S.C. 1671 et seq.</external-xref>) is in effect with respect to sugar from Mexico. </text></subparagraph></paragraph></subsection> <subsection id="HAB1C648F8C854CC0B0336EA886BB2C74" commented="no"><enum>(d)</enum><header>Refined sugar</header> <paragraph id="H09C41DFF2DE74C5CAA1E0AB04E9999EA" commented="no"><enum>(1)</enum><header>Definition of domestic sugar industry</header><text display-inline="yes-display-inline">In this subsection, the term <term>domestic sugar industry</term> means domestic—</text>
<subparagraph id="HDB26097DF0494FBA8024C6C046F17D17" commented="no"><enum>(A)</enum><text>sugar beet producers and processors;</text></subparagraph> <subparagraph id="HF2F3B98B18AC4280BAA6C37FA225DBE4" commented="no"><enum>(B)</enum><text>producers and processors of sugar cane; and</text></subparagraph>
<subparagraph id="HF4A8ACB845A54AAD87D2080E4DD8A74B" commented="no"><enum>(C)</enum><text>refiners of raw cane sugar.</text></subparagraph></paragraph> <paragraph id="H68AFD89A86AB4FF8945DD526C0004EF0" commented="no"><enum>(2)</enum><header>Study required</header> <subparagraph id="H4667B85AEBE4406881C271A46641CA5F" commented="no"><enum>(A)</enum><header>In general</header><text>Not later than 180 days after the date of enactment of this subsection, the Secretary shall conduct a study on whether the establishment of additional terms and conditions with respect to refined sugar imports is necessary and appropriate.</text></subparagraph>
<subparagraph id="HFCDAD5D8525C4C948B54E1F7234F4C0C" commented="no"><enum>(B)</enum><header>Elements</header><text>In conducting the study under subparagraph (A), the Secretary shall examine the following:</text> <clause id="HF3CCE7872C5E466D96507A323E60F8F5" commented="no"><enum>(i)</enum><text>The need for—</text>
<subclause id="H0900714209AE40C3BA7DCADBA4E10BBD" commented="no"><enum>(I)</enum><text>defining <quote>refined sugar</quote> as having a minimum polarization of 99.8 degrees or higher;</text></subclause> <subclause id="HF49BFFE77B0C4359A83BAFC62D63CE7B" commented="no"><enum>(II)</enum><text>establishing a standard for color- or reflectance-based units for refined sugar such as those utilized by the International Commission of Uniform Methods of Sugar Analysis;</text></subclause>
<subclause id="H5A9F35869612446EB099EC88FE683AAB" commented="no"><enum>(III)</enum><text>prescribing specifications for packaging type for refined sugar;</text></subclause> <subclause id="HDE58E826426341049CAE45EA0524967D" commented="no"><enum>(IV)</enum><text>prescribing specifications for transportation modes for refined sugar;</text></subclause>
<subclause id="HD36178CCE89444E1A1D2197F0D187CC8" commented="no"><enum>(V)</enum><text>requiring evidence that sugar imported as refined sugar will not undergo further refining in the United States;</text></subclause> <subclause id="H170C6117E9694084910D45CB3C75AF69" commented="no"><enum>(VI)</enum><text>prescribing appropriate terms and conditions to avoid unlawful sugar imports; and</text></subclause>
<subclause id="HECF813D76EFB43DB81998223CA5C729B" commented="no"><enum>(VII)</enum><text>establishing other definitions, terms and conditions, or other requirements.</text></subclause></clause> <clause id="H3656E2CE59D14F6DBFDC1D5E1FB5B9C0" commented="no"><enum>(ii)</enum><text display-inline="yes-display-inline">The potential impact of modifications described in each of subclauses (I) through (VII) of clause (i) on the domestic sugar industry.</text></clause>
<clause id="H479023D884824300902BEEDB464DFD7A" commented="no"><enum>(iii)</enum><text>Whether, based on the needs described in clause (i) and the impact described in clause (ii), the establishment of additional terms and conditions is appropriate.</text></clause></subparagraph> <subparagraph id="H4C60CADF9C0C4CFBA7CD17004B6AAF18" commented="no"><enum>(C)</enum><header>Consultation</header><text>In conducting the study under subparagraph (A), the Secretary shall consult with representatives of the domestic sugar industry and users of refined sugar.</text></subparagraph>
<subparagraph id="H64D0CAFE40984942A199E54AB63E2DFA" commented="no"><enum>(D)</enum><header>Report</header><text>Not later than 1 year after the date of enactment of this subsection, the Secretary shall submit to the Committee on Agriculture of the House of Representatives and the Committee on Agriculture, Nutrition, and Forestry of the Senate a report that describes the findings of the study conducted under subparagraph (A).</text></subparagraph></paragraph> <paragraph id="H74DAF4620A314658BC0493B417F84AD5" commented="no"><enum>(3)</enum><header>Establishment of additional terms and conditions permitted</header> <subparagraph id="HDF1AB206E2F442A4857FB16C9CF31095" commented="no"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Based on the findings in the report submitted under paragraph (2)(D), and after providing notice to the Committee on Agriculture of the House of Representatives and the Committee on Agriculture, Nutrition, and Forestry of the Senate, the Secretary may issue regulations in accordance with subparagraph (B) to establish additional terms and conditions with respect to refined sugar imports that are necessary and appropriate.</text></subparagraph>
<subparagraph id="H80625073434544308E9EDF0ED6F86C31" commented="no"><enum>(B)</enum><header>Promulgation of regulations</header><text>The Secretary may issue regulations under subparagraph (A) if the regulations—</text> <clause id="H75B58C0EB0474A6A8DCCC1683D5AFC3F" commented="no"><enum>(i)</enum><text>do not have an adverse impact on the domestic sugar industry; and</text></clause>
<clause id="HC4B4E7D9ACAC45D88CCBE1F0770045C6" commented="no"><enum>(ii)</enum><text display-inline="yes-display-inline">are consistent with the requirements of this part, section 156 of the Federal Agriculture Improvement and Reform Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/7/7272">7 U.S.C. 7272</external-xref>), and obligations under international trade agreements that have been approved by Congress.</text></clause></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HCB5FB737BBE245C2B0D8E066AAAA61CB" commented="no"><enum>(e)</enum><header>Clarification of tariff-rate quota adjustments</header><text display-inline="yes-display-inline">Section 359k(b)(1) of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359kk">7 U.S.C. 1359kk(b)(1)</external-xref>) is amended, in the matter preceding subparagraph (A), by striking <quote>if there is an</quote> and inserting <quote>for the sole purpose of responding directly to an</quote>. </text></subsection>
<subsection id="HCEDCA6D04C334F96887CC84E477E544B" commented="no"><enum>(f)</enum><header>Period of effectiveness</header><text display-inline="yes-display-inline">Section 359l(a) of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359ll">7 U.S.C. 1359ll(a)</external-xref>) is amended by striking <quote>2023</quote> and inserting <quote>2031</quote>.</text></subsection></section> <section id="H19C7E75E2E84432A9D9C6DF65B4B53EC" commented="no"><enum>10313.</enum><header>Dairy policy updates</header> <subsection id="H1D21E19747A14228AF940B008F5C6591" commented="no"><enum>(a)</enum><header>Dairy margin coverage production history</header> <paragraph id="HB9525E7C33E1479C99578FDC3930BFC9" commented="no"><enum>(1)</enum><header>Definition</header><text>Section 1401(8) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9051">7 U.S.C. 9051(8)</external-xref>) is amended by striking <quote>when the participating dairy operation first registers to participate in dairy margin coverage</quote>.</text></paragraph>
<paragraph id="H0080C5055E794A90A9B11C5CB4A3AE9E" commented="no"><enum>(2)</enum><header>Production history of participating dairy operations</header><text>Section 1405 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9055">7 U.S.C. 9055</external-xref>) is amended by striking subsections (a) and (b) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HA8BF2AD4064344D1A6549996C7ECD840"> <subsection id="HBE71CCCA1E06416C9911EAE9AE2FBDE4" commented="no"><enum>(a)</enum><header>Production history</header><text>Except as provided in subsection (b), the production history of a dairy operation for dairy margin coverage is equal to the highest annual milk marketings of the participating dairy operation during any 1 of the 2021, 2022, or 2023 calendar years.</text></subsection>
<subsection id="H515C08F172A848509AF83F59716C61BC" commented="no"><enum>(b)</enum><header>Election by new dairy operations</header><text>In the case of a participating dairy operation that has been in operation for less than a year, the participating dairy operation shall elect 1 of the following methods for the Secretary to determine the production history of the participating dairy operation:</text> <paragraph id="H75E6A159AA454763BD546E04E29B77ED" commented="no"><enum>(1)</enum><text>The volume of the actual milk marketings for the months the participating dairy operation has been in operation extrapolated to a yearly amount.</text></paragraph>
<paragraph id="HD0EEE9D3E0E840C1816DE9D6156A6728" commented="no"><enum>(2)</enum><text>An estimate of the actual milk marketings of the participating dairy operation based on the herd size of the participating dairy operation relative to the national rolling herd average data published by the Secretary.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H97FB7735C9CE486982972362D21D39A5" commented="no"><enum>(b)</enum><header>Dairy margin coverage payments</header><text>Section 1406(a)(1)(C) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9056">7 U.S.C. 9056(a)(1)(C)</external-xref>) is amended by striking <quote>5,000,000</quote> each place it appears and inserting <quote>6,000,000</quote>.</text></subsection>
<subsection id="HFC13F89C99A94B64BFAAE985A01ECD90" commented="no"><enum>(c)</enum><header>Premiums for dairy margins</header>
<paragraph id="H0D3B62CF8E1141EB9C4FE9EF27BECF27" commented="no"><enum>(1)</enum><header>Tier i</header><text>Section 1407(b) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9057">7 U.S.C. 9057(b)</external-xref>) is amended—</text> <subparagraph id="HDF33B6EB89A14451B53278981CB4B96E" commented="no"><enum>(A)</enum><text>in the subsection heading, by striking <quote><header-in-text style="OLC" level="subsection">5,000,000</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="subsection">6,000,000</header-in-text></quote>; and</text></subparagraph>
<subparagraph id="H2C9E842B655644FFAC231F8F13A0CAB2" commented="no"><enum>(B)</enum><text>in paragraph (1), by striking <quote>5,000,000</quote> and inserting <quote>6,000,000</quote>.</text></subparagraph></paragraph> <paragraph id="H80304C9668064245A4A5B4D94A768608" commented="no"><enum>(2)</enum><header>Tier ii</header><text>Section 1407(c) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9057">7 U.S.C. 9057(c)</external-xref>) is amended—</text>
<subparagraph id="H3BF99F8158EF4FCB95A9932F5F54824F" commented="no"><enum>(A)</enum><text>in the subsection heading, by striking <quote><header-in-text style="OLC" level="subsection">5,000,000</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="subsection">6,000,000</header-in-text></quote>; and</text></subparagraph> <subparagraph id="HA11A15D1009C4A12B11FDD40EB669C92" commented="no"><enum>(B)</enum><text>in paragraph (1), by striking <quote>5,000,000</quote> and inserting <quote>6,000,000</quote>.</text></subparagraph></paragraph>
<paragraph id="H8BFD4AD984364F799B9453175EB2E01A" commented="no"><enum>(3)</enum><header>Premium discounts</header><text>Section 1407(g) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9057">7 U.S.C. 9057(g)</external-xref>) is amended—</text> <subparagraph id="H5575438CF87A43A2895E6E2820FFE9C7" commented="no"><enum>(A)</enum><text>in paragraph (1)—</text>
<clause id="H31BEE2F6F63447E08DE0D553334903AD" commented="no"><enum>(i)</enum><text>by striking <quote>2019 through 2023</quote> and inserting <quote>2026 through 2031</quote>; and</text></clause> <clause id="H6915A17F65204B3B9C56743720A12B33" commented="no"><enum>(ii)</enum><text>by striking <quote>January 2019</quote> and inserting <quote>January 2026</quote>; and</text></clause></subparagraph>
<subparagraph id="H2EDE7C97C3F049C6B645F7E61081F395" commented="no"><enum>(B)</enum><text>in paragraph (2), by striking <quote>2023</quote> each place it appears and inserting <quote>2031</quote>.</text></subparagraph></paragraph></subsection> <subsection id="HFBA0BA1A53944C9881A2FA8230EAACB3" commented="no"><enum>(d)</enum><header>Duration</header><text>Section 1409 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9059">7 U.S.C. 9059</external-xref>) is amended by striking <quote>2025</quote> and inserting <quote>2031</quote>.</text></subsection></section>
<section id="H28FE808A73B6452B9040FEB21AC73EFF" commented="no"><enum>10314.</enum><header>Implementation</header><text display-inline="no-display-inline">Section 1614(c) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9097">7 U.S.C. 9097(c)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB01FC3525036479494A2F2BB651B0EEC"> <paragraph id="H8523970360D14FFF93AC8BD68E361C7A" commented="no"><enum>(5)</enum><header>Further funding</header><text>The Secretary shall make available to carry out subtitle C of title I of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote> (119th Congress) and the amendments made by that subtitle $50,000,000, to remain available until expended, of which—</text>
<subparagraph id="H05EACFDD87E04B14AF66B76C2A1888A5" commented="no"><enum>(A)</enum><text>not less than $5,000,000 shall be used to carry out paragraphs (3) and (4) of subsection (b);</text></subparagraph> <subparagraph id="H070A0ED6D5134C72947820ED9D0E4BC9" commented="no"><enum>(B)</enum><text>$3,000,000 shall be used for activities described in paragraph (3)(A);</text></subparagraph>
<subparagraph id="HA91AF76AD67B4EFA8C598ACEE9E70B18" commented="no"><enum>(C)</enum><text>$3,000,000 shall be used for activities described in paragraph (3)(B);</text></subparagraph> <subparagraph id="HD3F76EED39684A58828739BA3A309F0F" commented="no"><enum>(D)</enum><text>$9,000,000 shall be used—</text>
<clause id="H008171E064EA4BD0A3066372E984BF97" commented="no"><enum>(i)</enum><text>to carry out mandatory surveys of dairy production cost and product yield information to be reported by manufacturers required to report under section 273 of the Agricultural Marketing Act of 1946 (<external-xref legal-doc="usc" parsable-cite="usc/7/1637b">7 U.S.C. 1637b</external-xref>), for all products processed in the same facility or facilities; and</text></clause> <clause id="H09DBED2B252642DF960A442952D42139" commented="no"><enum>(ii)</enum><text>to publish the results of such surveys biennially; and</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H312A72E8016E4864A69402373D69746A"><enum>(E)</enum><text display-inline="yes-display-inline">$1,000,000 shall be used to conduct the study under subsection (d) of section 359k of the Agricultural Adjustment Act of 1938 (<external-xref legal-doc="usc" parsable-cite="usc/7/1359kk">7 U.S.C. 1359kk</external-xref>).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></section></subtitle> <subtitle style="OLC" commented="no" level-type="subsequent" id="H791FCAE1152E4C4E99A8667F4A62B2C9"><enum>D</enum><header>Disaster assistance programs</header> <section id="H6A6BB05BE6A1446FAD13EA0E1797DDCA"><enum>10401.</enum><header>Supplemental agricultural disaster assistance</header> <subsection id="H17EE325F5B2A4EF4826E6CACCCC9E062"><enum>(a)</enum><header>Livestock indemnity payments</header><text>Section 1501(b) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9081">7 U.S.C. 9081(b)</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H827905AA37A14CFCAAE534C5FB75B045"><enum>(1)</enum><text display-inline="yes-display-inline">by striking paragraph (2) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H837665E63C864A52BC2C96F79C7BBD56"> <paragraph id="H16289AEBE90C4A878D57EB6CA3B3A9D9"><enum>(2)</enum><header>Payment rates</header> <subparagraph id="H7E7FC12FFA244C2A9F44EE844EA6151A"><enum>(A)</enum><header>Losses due to predation</header><text>Indemnity payments to an eligible producer on a farm under paragraph (1)(A) shall be made at a rate of 100 percent of the market value of the affected livestock on the applicable date, as determined by the Secretary.</text></subparagraph>
<subparagraph id="H371E5FA4296E4E218749C9184E1D504C"><enum>(B)</enum><header>Losses due to adverse weather or disease</header><text>Indemnity payments to an eligible producer on a farm under subparagraph (B) or (C) of paragraph (1) shall be made at a rate of 75 percent of the market value of the affected livestock on the applicable date, as determined by the Secretary.</text></subparagraph> <subparagraph id="HB702043CA856470C9D25535046BF3665"><enum>(C)</enum><header>Determination of market value</header><text>In determining the market value described in subparagraphs (A) and (B), the Secretary may consider the ability of eligible producers to document regional price premiums for affected livestock that exceed the national average market price for those livestock.</text></subparagraph>
<subparagraph id="HF1815ED5665C4C84AEC2E84D7998467A"><enum>(D)</enum><header>Applicable date defined</header><text>In this paragraph, the term <term>applicable date</term> means, with respect to livestock, as applicable—</text> <clause id="H2D2DAC3AFA544E73BEA73C7EA934A33A"><enum>(i)</enum><text>the day before the date of death of the livestock; or</text></clause>
<clause id="HE8E7F2ADEEEF4BA1ACD45812BD69807C"><enum>(ii)</enum><text>the day before the date of the event that caused the harm to the livestock that resulted in a reduced sale price.</text></clause></subparagraph></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="H248B221C4D394541B3A567B07D603128"><enum>(2)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H267289A411B74E0E93816B3944E91254">
<paragraph id="HA16B8BAAF1F04777AD4EFF592897D982"><enum>(5)</enum><header>Additional payment for unborn livestock</header>
<subparagraph id="H13B1C07E1EA44B0696BD10BF05D056C1"><enum>(A)</enum><header>In general</header><text>In the case of unborn livestock death losses incurred on or after January 1, 2024, the Secretary shall make an additional payment to eligible producers on farms that have incurred such losses in excess of the normal mortality due to a condition specified in paragraph (1).</text></subparagraph> <subparagraph id="H6307883D0ED24AEA906912D1FA81FCF8"><enum>(B)</enum><header>Payment rate</header><text>Additional payments under subparagraph (A) shall be made at a rate—</text>
<clause id="H7C10B42249D34C07B2A414218025F345"><enum>(i)</enum><text>determined by the Secretary; and</text></clause> <clause id="H760D6FD31ACB4F3CB3B872B24022BDC7"><enum>(ii)</enum><text>less than or equal to 85 percent of the payment rate established with respect to the lowest weight class of the livestock, as determined by the Secretary, acting through the Administrator of the Farm Service Agency.</text></clause></subparagraph>
<subparagraph id="HA93C83AB448E4F97A89FFC86C736B494"><enum>(C)</enum><header>Payment amount</header><text>The amount of a payment to an eligible producer that has incurred unborn livestock death losses shall be equal to the payment rate determined under subparagraph (B) multiplied, in the case of livestock described in—</text> <clause id="HF5DD3ADF36634BCFA0759D78813507C1"><enum>(i)</enum><text>subparagraph (A), (B), or (F) of subsection (a)(4), by 1;</text></clause>
<clause id="H5BCA1512F8AD46D0A9725BECCD27EA49"><enum>(ii)</enum><text>subparagraph (D) of such subsection, by 2;</text></clause> <clause id="H779FA96901BB436BB9C60D51ABE13101"><enum>(iii)</enum><text>subparagraph (E) of such subsection, by 12; and</text></clause>
<clause id="HBB086FF4E91240358BDDFBE1D2E57ED5"><enum>(iv)</enum><text>subparagraph (G) of such subsection, by the average number of birthed animals (for one gestation cycle) for the species of each such livestock, as determined by the Secretary.</text></clause></subparagraph> <subparagraph id="H899B5A526DF443FBBF846FC220A203E8"><enum>(D)</enum><header>Unborn livestock death losses defined</header><text>In this paragraph, the term <term>unborn livestock death losses</term> means losses of any livestock described in subparagraph (A), (B), (D), (E), (F), or (G) of subsection (a)(4) that was gestating on the date of the death of the livestock.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HF573E05F8368499799F63E70050254A3"><enum>(b)</enum><header>Livestock forage disaster program</header><text>Section 1501(c)(3)(D)(ii)(I) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9081">7 U.S.C. 9081(c)(3)(D)(ii)(I)</external-xref>) is amended—</text> <paragraph id="H45D0FBF880E94A5AA7DCE5E2A5B94600" commented="no"><enum>(1)</enum><text>by striking <quote>1 monthly payment</quote> and inserting <quote>2 monthly payments</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H73E4270943BA40F196F56E083A74477D"><enum>(2)</enum><text>by striking <quote>county for at least 8 consecutive</quote> and inserting the following: "county for not less than—</text> <quoted-block style="OLC" display-inline="yes-display-inline" id="H3C7D7274DA59487DBBE3C2B2BCCB65DF"> <item id="H2846349B08894DBAA6EA7DECA567A4CC" commented="no"><enum>(aa)</enum><text>4 consecutive weeks during the normal grazing period for the county, as determined by the Secretary, shall be eligible to receive assistance under this paragraph in an amount equal to 1 monthly payment using the monthly payment rate determined under subparagraph (B); or</text></item>
<item commented="no" display-inline="no-display-inline" id="H2DE7C1812F604831ABF285419A5942F2"><enum>(bb)</enum><text display-inline="yes-display-inline">7 of the previous 8 consecutive</text></item><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H3FB447C7D82E489A8C21E41804A5510F"><enum>(c)</enum><header>Emergency assistance for livestock, honey bees, and farm-raised fish</header> <paragraph commented="no" display-inline="no-display-inline" id="H7D91ABAD3B0D4E97945356537CAC4AB8"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1501(d) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9081">7 U.S.C. 9081(d)</external-xref>) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H00339E3E7945469AB2C72EDB85A04E47">
<paragraph id="H391EBC2E63B74FD6ABE8AAC1F2D246E5" commented="no"><enum>(5)</enum><header>Assistance for losses due to bird depredation</header>
<subparagraph id="H44E5FC7B05EC4617847527B41225DDA5" commented="no"><enum>(A)</enum><header>Definition of farm-raised fish</header><text>In this paragraph, the term <term>farm-raised fish</term> means fish propagated and reared in a controlled fresh water environment.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H17CB0A4373E54A8193A410A0DC2CAF42"><enum>(B)</enum><header>Payments</header><text>Eligible producers of farm-raised fish, including fish grown as food for human consumption, shall be eligible to receive payments under this subsection to aid in the reduction of losses due to piscivorous birds.</text></subparagraph>
<subparagraph id="H3F19F5B40CD044FAB8A60F2DDA5F7409" commented="no"><enum>(C)</enum><header>Payment rate</header>
<clause id="H87E2E1E9EFF74935B8BCB7298794026D" commented="no"><enum>(i)</enum><header>In general</header><text>The payment rate for payments under subparagraph (B) shall be determined by the Secretary, taking into account—</text> <subclause id="HE7E2185697E341AD86499CC4C20CC18F" commented="no"><enum>(I)</enum><text>costs associated with the deterrence of piscivorous birds;</text></subclause>
<subclause id="H8E714D81A4ED45838CC78D77792D0EB4" commented="no"><enum>(II)</enum><text>the value of lost fish and revenue due to bird depredation; and</text></subclause> <subclause id="HC85E382095034C6DB3B4BFE45B9F4CD4" commented="no"><enum>(III)</enum><text>costs associated with disease loss from bird depredation.</text></subclause></clause>
<clause id="HA60F750CCAE74D799912EAE449D479F5" commented="no"><enum>(ii)</enum><header>Minimum rate</header><text>The payment rate for payments under subparagraph (B) shall be not less than $600 per acre of farm-raised fish.</text></clause></subparagraph> <subparagraph id="HEE6215F1979240CE81D9BAB97D448BDC" commented="no"><enum>(D)</enum><header>Payment amount</header><text>The amount of a payment under subparagraph (B) shall be the product obtained by multiplying—</text>
<clause id="H8AAB22C0CEAA4FFCBA5E8468DD297893" commented="no"><enum>(i)</enum><text>the applicable payment rate under subparagraph (C); and</text></clause> <clause id="HD8CAE96FE5F54E9D9C1405E1EC9D3956" commented="no"><enum>(ii)</enum><text>85 percent of the total number of acres of farm-raised fish farms that the eligible producer has in production for the calendar year.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HE25A741DB8DC424F8C5BD74A1C045704" commented="no"><enum>(2)</enum><header>Emergency assistance for honeybees</header><text>In determining honeybee colony losses eligible for assistance under section 1501(d) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9081">7 U.S.C. 9081(d)</external-xref>), the Secretary shall utilize a normal mortality rate of 15 percent.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HE320D7F57E98450582014D8A4EE22381"><enum>(d)</enum><header>Tree assistance program</header><text>Section 1501(e) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/9081">7 U.S.C. 9081(e)</external-xref>) is amended—</text>
<paragraph id="H362891B6A01A48B79A61F7BBF04C2A81" commented="no"><enum>(1)</enum><text display-inline="yes-display-inline">in paragraph (2)(B), by striking <quote>15 percent (adjusted for normal mortality)</quote> and inserting <quote>normal mortality</quote>; and</text></paragraph> <paragraph id="H6FADA908376743F28C748EC435FF6ACF" commented="no"><enum>(2)</enum><text>in paragraph (3)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HFE11970C41194B58A5294287CA66EADF"><enum>(A)</enum><text display-inline="yes-display-inline">in subparagraph (A)(i), by striking <quote>15 percent mortality (adjusted for normal mortality)</quote> and inserting <quote>normal mortality</quote>; and</text></subparagraph> <subparagraph id="H73DFE9D0C2FB466199ABED80E6BC671B" commented="no"><enum>(B)</enum><text>in subparagraph (B)—</text>
<clause commented="no" id="HD98754702EB5467ABAE75C4B9BAF9836"><enum>(i)</enum><text>by striking <quote>50</quote> and inserting <quote>65</quote>; and</text></clause> <clause commented="no" id="H7C1E69054ABD4175994D3C3647863AE7"><enum>(ii)</enum><text>by striking <quote>15 percent damage or mortality (adjusted for normal tree damage and mortality)</quote> and inserting <quote>normal tree damage or mortality</quote>.</text></clause></subparagraph></paragraph></subsection></section></subtitle>
<subtitle id="H3CC9316629A544D6BDFCDE9726515AEB" style="OLC"><enum>E</enum><header>Crop insurance</header>
<section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H39E68B0A42724380B9CFAEE4F107DF09"><enum>10501.</enum><header>Beginning farmer and rancher benefit</header>
<subsection id="H972057EBF92F4B7E9FF0C863AD856149"><enum>(a)</enum><header>Definitions</header>
<paragraph id="HD228711EAF5F40AB9B1D99F6CE4EAB64"><enum>(1)</enum><header>In general</header><text>Section 502(b)(3) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1502">7 U.S.C. 1502(b)(3)</external-xref>) is amended by striking <quote>5</quote> and inserting <quote>10</quote>.</text></paragraph> <paragraph id="HAC3C27CDEBF043C5AF491C997513D9AC"><enum>(2)</enum><header>Conforming amendment</header><text>Section 522(c)(7) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1522">7 U.S.C. 1522(c)(7)</external-xref>) is amended by striking subparagraph (F).</text></paragraph></subsection>
<subsection id="H2F95E5ACD28E4C43B8B2669F5EFCDD69" commented="no"><enum>(b)</enum><header>Increase in assistance</header><text>Section 508(e) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1508">7 U.S.C. 1508(e)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HBF9E8339312A4872AD986595E3F22876"> <paragraph id="HECD4C706B1EE4E33A6BACE3271777236" commented="no"><enum>(9)</enum><header>Additional support</header> <subparagraph id="HD1232A51CA2A43AA9D254958F9A00D54"><enum>(A)</enum><header>In general</header><text>In addition to any other provision of this subsection (except paragraph (2)(A)) regarding payment of a portion of premiums, a beginning farmer or rancher shall receive additional premium assistance that is the number of percentage points specified in subparagraph (B) greater than the premium assistance that would otherwise be available for the applicable policy, plan of insurance, and coverage level selected by the beginning farmer or rancher.</text></subparagraph>
<subparagraph id="HF3255A98D00B46F88B0706C12B9F7AC3"><enum>(B)</enum><header>Percentage points adjustments</header><text>The percentage points referred to in subparagraph (A) are the following:</text> <clause id="HAF0D02326E004D03B28F43786A028A71"><enum>(i)</enum><text>For each of the first and second reinsurance years that a beginning farmer or rancher participates as a beginning farmer or rancher in the applicable policy or plan of insurance, 5 percentage points.</text></clause>
<clause id="HF1C18BF23EEB4AC2A2F863B4920A6DA5"><enum>(ii)</enum><text>For the third reinsurance year that a beginning farmer or rancher participates as a beginning farmer or rancher in the applicable policy or plan of insurance, 3 percentage points.</text></clause> <clause id="H094F61DDC2BF45E7B5C2595A08F6F906"><enum>(iii)</enum><text>For the fourth reinsurance year that a beginning farmer or rancher participates as a beginning farmer or rancher in the applicable policy or plan of insurance, 1 percentage point.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section>
<section commented="no" display-inline="no-display-inline" id="HB6DA399E7AF44BE8ABAF471AB12B1980"><enum>10502.</enum><header>Area-based crop insurance coverage and affordability</header>
<subsection id="H8C38D1AD6643487AA27AED6A65BCDCF4"><enum>(a)</enum><header>Coverage level</header><text>Section 508(c)(4) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1508">7 U.S.C. 1508(c)(4)</external-xref>) is amended—</text> <paragraph id="H71633B89AEE34C9BB86D46B7512A1544" commented="no"><enum>(1)</enum><text>in subparagraph (A), by striking clause (ii) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H021813D959AD408CAB2C1B576F439BDB">
<clause id="HAB1F731102594E059FC6184E643A0B5B" commented="no"><enum>(ii)</enum><text>may be purchased at any level not to exceed—</text> <subclause id="H0D37A945D0B347479F7F366314B2EFA0" commented="no"><enum>(I)</enum><text>in the case of the individual yield or revenue coverage, 85 percent;</text></subclause>
<subclause id="H3DDF96C1067245CEA9B6C539CB98A088" commented="no"><enum>(II)</enum><text>in the case of individual yield or revenue coverage aggregated across multiple commodities, 90 percent; and</text></subclause> <subclause id="H7C5073B7E7B6428CA04E28F863E4C744" commented="no"><enum>(III)</enum><text>in the case of area yield or revenue coverage (as determined by the Corporation), 95 percent.</text></subclause></clause><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H1B56CD76A2014CAB92852F88B1EB76AF"><enum>(2)</enum><text>in subparagraph (C)—</text> <subparagraph id="H1881F4A454D74F368CE88EC0D1022CBD"><enum>(A)</enum><text>in clause (ii), by striking <quote>14</quote> and inserting <quote>10</quote>; and</text></subparagraph>
<subparagraph id="HF54DA3BC432748549A38DC2A84E8A276"><enum>(B)</enum><text>in clause (iii)(I), by striking <quote>86</quote> and inserting <quote>90</quote>.</text></subparagraph></paragraph></subsection> <subsection id="HB362D8B5BB0243F4A0F9FE7502933FCC"><enum>(b)</enum><header>Premium subsidy</header><text>Section 508(e)(2)(H)(i) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1508">7 U.S.C. 1508(e)(2)(H)(i)</external-xref>) is amended by striking <quote>65</quote> and inserting <quote>80</quote>.</text></subsection></section>
<section commented="no" display-inline="no-display-inline" id="H422E1042FBAA49159A59127C72156A79"><enum>10503.</enum><header>Administrative and operating expense adjustments</header><text display-inline="no-display-inline">Section 508(k) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1508">7 U.S.C. 1508(k)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H95A6B0A9549349F383DB7E9DCE2F726D"> <paragraph id="H02FF79EE64C94EA7AD616047FF611884" commented="no"><enum>(10)</enum><header>Additional expenses</header> <subparagraph id="HC503FE1144B44BEBAAB157D69866BE6D" commented="no"><enum>(A)</enum><header>In general</header><text>Beginning with the 2026 reinsurance year, and for each reinsurance year thereafter, in addition to the terms and conditions of the Standard Reinsurance Agreement, to cover additional expenses for loss adjustment procedures, the Corporation shall pay an additional administrative and operating expense subsidy to approved insurance providers for eligible contracts.</text></subparagraph>
<subparagraph id="HD3365198DDB94CFCBF273528A2270E87" commented="no"><enum>(B)</enum><header>Payment amount</header><text>In the case of an eligible contract, the payment to an approved insurance provider required under subparagraph (A) shall be the amount equal to 6 percent of the net book premium.</text></subparagraph> <subparagraph id="HDAB332881D7A48E798C2C8AFFA4AE7B3" commented="no"><enum>(C)</enum><header>Definitions</header><text>In this paragraph:</text>
<clause id="HA033E9E0005F423F94937965964E3A1A" commented="no"><enum>(i)</enum><header>Eligible contract</header><text>The term <term>eligible contract</term>—</text> <subclause id="H21FF010B7D464E48834BC0AB28050465" commented="no"><enum>(I)</enum><text>means a crop insurance contract entered into by an approved insurance provider in an eligible State; and</text></subclause>
<subclause id="H8219504728584480B851EE6D997B00FD" commented="no"><enum>(II)</enum><text>does not include a contract for—</text> <item id="H53901ADAAC42430383B2B51C587589CB" commented="no"><enum>(aa)</enum><text>catastrophic risk protection under subsection (b);</text></item>
<item id="H94AB04E427824926BB3A848AFCE5C857" commented="no"><enum>(bb)</enum><text>an area-based plan of insurance or similar plan of insurance, as determined by the Corporation; or</text></item> <item id="H25BFE3096CF542288CB8FE6E4C198A78" commented="no"><enum>(cc)</enum><text>a policy under which an approved insurance provider does not incur loss adjustment expenses, as determined by the Corporation.</text></item></subclause></clause>
<clause id="H7930129DDBEE4F288AAB1A6D780313B4" commented="no"><enum>(ii)</enum><header>Eligible State</header><text>The term <term>eligible State</term> means a State in which, with respect to an insurance year, the loss ratio for eligible contracts is greater than 120 percent of the total net book premium written by all approved insurance providers.</text></clause></subparagraph></paragraph> <paragraph id="H0D30F38CD9534AF2BB989FD25FBBFF2B" commented="no"><enum>(11)</enum><header>Specialty crops</header> <subparagraph id="H2FA500A482B743CF97AA4B8687BC6ED7" commented="no"><enum>(A)</enum><header>Minimum reimbursement</header><text>Beginning with the 2026 reinsurance year, and for each reinsurance year thereafter, the rate of reimbursement to approved insurance providers and agents for administrative and operating expenses with respect to crop insurance contracts covering agricultural commodities described in section 101 of the Specialty Crops Competitiveness Act of 2004 (<external-xref legal-doc="usc" parsable-cite="usc/7/1621">7 U.S.C. 1621</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/108/465">Public Law 108–465</external-xref>) shall be equal to or greater than the percentage that is the greater of the following:</text>
<clause id="HF3D60320B41A4ADCBD97B5AD0C557544" commented="no"><enum>(i)</enum><text>17 percent of the premium used to define loss ratio.</text></clause> <clause id="HFE7C735C2B0E4817AA4AB7320C196180" commented="no"><enum>(ii)</enum><text>The percent of the premium used to define loss ratio that is otherwise applicable for the reinsurance year under the terms of the Standard Reinsurance Agreement in effect for the reinsurance year.</text></clause></subparagraph>
<subparagraph id="H1D8F88B3CDD04894BFC1FAE4F6C33AF6" commented="no"><enum>(B)</enum><header>Other contracts</header><text>In carrying out subparagraph (A), the Corporation shall not reduce, with respect to any reinsurance year, the amount or the rate of reimbursement to approved insurance providers and agents under the Standard Reinsurance Agreement described in clause (ii) of such subparagraph for administrative and operating expenses with respect to contracts covering agricultural commodities that are not subject to such subparagraph.</text></subparagraph> <subparagraph id="HEAD05F5CFF534E0F9B019C9FDA56F73C" commented="no"><enum>(C)</enum><header>Administration</header><text>The requirements of this paragraph and the adjustments made pursuant to this paragraph shall not be considered a renegotiation under paragraph (8)(A).</text></subparagraph></paragraph>
<paragraph id="HC551DB61A59C487AB7E4EE758D63AFCB" commented="no"><enum>(12)</enum><header>A&amp;O inflation adjustment</header>
<subparagraph id="H770AFC3EA4184C83B1BC9AE251A5819B" commented="no"><enum>(A)</enum><header>In general</header><text>Subject to subparagraph (B), beginning with the 2026 reinsurance year, and for each reinsurance year thereafter, the Corporation shall increase the total administrative and operating expense reimbursements otherwise required under the Standard Reinsurance Agreement in effect for the reinsurance year in order to account for inflation, in a manner consistent with the increases provided with respect to the 2011 through 2015 reinsurance years under the enclosure included in Risk Management Agency Bulletin numbered MGR–10–007 and dated June 30, 2010.</text></subparagraph> <subparagraph id="H5023B7E3ADA1411DA2935E47C5D03B19" commented="no"><enum>(B)</enum><header>Special rule for 2026 reinsurance year</header><text>The increase under subparagraph (A) for the 2026 reinsurance year shall not exceed the percentage change for the preceding reinsurance year included in the Consumer Price Index for All Urban Consumers published by the Bureau of Labor Statistics of the Department of Labor.</text></subparagraph>
<subparagraph id="HD2C477FF17BD47859355E2E0D512EC79" commented="no"><enum>(C)</enum><header>Administration</header><text>An increase under subparagraph (A)—</text> <clause id="H095572DB081548F0AF241629D63946B6" commented="no"><enum>(i)</enum><text>shall apply with respect to all contracts covering agricultural commodities that were subject to an increase during the period of the 2011 through 2015 reinsurance years under the enclosure referred to in that subparagraph; and</text></clause>
<clause id="H8BC6EAD0044347E9B07224736A5F5EB2" commented="no"><enum>(ii)</enum><text>shall not be considered a renegotiation under paragraph (8)(A).</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></section> <section id="H18DE8C26E4B84BF4B696F4AAD50D7F84"><enum>10504.</enum><header>Premium support</header><text display-inline="no-display-inline">Section 508(e)(2) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1508">7 U.S.C. 1508(e)(2)</external-xref>) is amended—</text>
<paragraph id="HE3DFF4941C434680881B09FDAB0CB6DF"><enum>(1)</enum><text>in subparagraph (C)(i), by striking <quote>64</quote> and inserting <quote>69</quote>;</text></paragraph> <paragraph id="H4ED6CF160C654289962CA38F6B0EFFA4"><enum>(2)</enum><text>in subparagraph (D)(i), by striking <quote>59</quote> and inserting <quote>64</quote>;</text></paragraph>
<paragraph id="H44200F1D7BF042769151EE073EC75876"><enum>(3)</enum><text>in subparagraph (E)(i), by striking <quote>55</quote> and inserting <quote>60</quote>;</text></paragraph> <paragraph id="H486EB2EA0F844B28A96BF89228F2A0C9"><enum>(4)</enum><text>in subparagraph (F)(i), by striking <quote>48</quote> and inserting <quote>51</quote>; and</text></paragraph>
<paragraph id="H553D2B310ED94218A407F9E75B513043"><enum>(5)</enum><text>in subparagraph (G)(i), by striking <quote>38</quote> and inserting <quote>41</quote>.</text></paragraph></section> <section id="HC1B9B9203E8D4BC597F9FFBA32A5171C" commented="no"><enum>10505.</enum><header>Program compliance and integrity</header><text display-inline="no-display-inline">Section 515(l)(2) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1515">7 U.S.C. 1515(l)(2)</external-xref>) is amended by striking <quote>than</quote> and all that follows through the period at the end and inserting the following: “than—</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HC0A469F5B3084F3A87BFF9C94EA353E1">
<subparagraph id="H34B8AB181FEC4C4B9A2C2D58153557F4" commented="no"><enum>(A)</enum><text>$4,000,000 for each of fiscal years 2009 through 2025; and</text></subparagraph> <subparagraph id="H869FEBD8371E493A8CA6EED614E12AFA" commented="no"><enum>(B)</enum><text>$6,000,000 for fiscal year 2026 and each subsequent fiscal year.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></section>
<section id="H40627973589840608790A348FD98B00B" commented="no"><enum>10506.</enum><header>Reviews, compliance, and integrity</header><text display-inline="no-display-inline">Section 516(b)(2)(C)(i) of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1516">7 U.S.C. 1516(b)(2)(C)(i)</external-xref>) is amended, in the matter preceding subclause (I), by striking <quote>for each fiscal year</quote> and inserting <quote>for each of fiscal years 2014 through 2025 and $10,000,000 for fiscal year 2026 and each fiscal year thereafter</quote>.</text></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H7867691E65FB41E38062EE1F5863DE64"><enum>10507.</enum><header>Poultry insurance pilot program</header><text display-inline="no-display-inline">Section 523 of the Federal Crop Insurance Act (<external-xref legal-doc="usc" parsable-cite="usc/7/1523">7 U.S.C. 1523</external-xref>) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HDC915AB1B3194C65BDD38EC6519C97CF">
<subsection id="HAE64B58EF1C143B3913F89097F8FAE9D"><enum>(j)</enum><header>Poultry insurance pilot program</header>
<paragraph id="H64E0F595E5CF42ACA64001196096BC50"><enum>(1)</enum><header>In general</header><text>Notwithstanding subsection (a)(2), the Corporation shall establish a pilot program under which contract poultry growers, including growers of broilers and laying hens, may elect to receive index-based insurance from extreme weather-related risk resulting in increased utility costs (including costs of natural gas, propane, electricity, water, and other appropriate costs, as determined by the Corporation) associated with poultry production.</text></paragraph> <paragraph id="H2B740FFE67EB43C2A2578BC9AC2B5BE2"><enum>(2)</enum><header>Stakeholder engagement</header><text>The Corporation shall engage with poultry industry stakeholders in establishing the pilot program under paragraph (1).</text></paragraph>
<paragraph id="H867D39C13C8C42B9AB8F1B7B0D49A872" commented="no" display-inline="no-display-inline"><enum>(3)</enum><header display-inline="yes-display-inline">Location</header><text display-inline="yes-display-inline">The pilot program established under paragraph (1) shall be conducted in a sufficient number of counties to provide a comprehensive evaluation of the feasibility, effectiveness, and demand among producers in the top poultry producing States, as determined by the Corporation. </text></paragraph> <paragraph id="H7CA24B09262D413B8EB3A44E473FA610"><enum>(4)</enum><header>Approval of policy or plan</header><text>Notwithstanding section 508(l), the Board shall approve a policy or plan of insurance based on the pilot program under paragraph (1)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HE5564708F2AF4B629BDFB30BCDEA469A"><enum>(A)</enum><text display-inline="yes-display-inline">in accordance with section 508(h); and</text></subparagraph> <subparagraph id="H5C30DB02BEFC4426B1A54F8A92FE887F"><enum>(B)</enum><text>not later than 2 years after the date of enactment of this subsection.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></section></subtitle>
<subtitle id="H372661F49BAC4B509A02E6F1C076C488" style="OLC"><enum>F</enum><header>Additional investments in rural America</header>
<section id="H3D38296C180E445EA5690E6B23141C6F"><enum>10601.</enum><header>Conservation</header>
<subsection id="HF01F53C8EDC942BEB71A670330B98B07"><enum>(a)</enum><header>In general</header><text>Section 1241(a) of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/16/3841">16 U.S.C. 3841(a)</external-xref>) is amended—</text> <paragraph id="H44D117C88A724C5EAF02A5B1EC18AFED"><enum>(1)</enum><text>in paragraph (2), by striking subparagraphs (A) through (F) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HBFC4390F86964C2A93E4463E580E10A8">
<subparagraph id="H4A911841A70944B6B1ADBADCA527E3FE"><enum>(A)</enum><text>$625,000,000 for fiscal year 2026;</text></subparagraph> <subparagraph id="H46DDBB143600471AB95A10432B9F260E"><enum>(B)</enum><text>$650,000,000 for fiscal year 2027;</text></subparagraph>
<subparagraph id="HAF42A89157AD404097D2F383DE3A3F57"><enum>(C)</enum><text>$675,000,000 for fiscal year 2028;</text></subparagraph> <subparagraph id="HE668D58725544B348784D09127011E3E"><enum>(D)</enum><text>$700,000,000 for fiscal year 2029;</text></subparagraph>
<subparagraph id="HF7B2D165D112497DA722B5850980B5DC"><enum>(E)</enum><text>$700,000,000 for fiscal year 2030; and</text></subparagraph> <subparagraph id="HA60326C4EB3E42FC8DF9B1F1D381E999"><enum>(F)</enum><text>$700,000,000 for fiscal year 2031.</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph id="H949933C6F5444157B45AD12A2F972F6F"><enum>(2)</enum><text>in paragraph (3)—</text> <subparagraph id="H34906BC945324539ADBBFD18F626F0C6"><enum>(A)</enum><text>in subparagraph (A), by striking clauses (i) through (v) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H62FA785C62964F8484736E07F043B9D1">
<clause id="H0B3D3E4A13C14A208C42F827FE1A0763"><enum>(i)</enum><text>$2,655,000,000 for fiscal year 2026;</text></clause> <clause id="H766972A610884CB6B1EFA2984E8E8B88"><enum>(ii)</enum><text>$2,855,000,000 for fiscal year 2027;</text></clause>
<clause id="HE3E5B9F349764F54BAA18DEBDF0BC72B"><enum>(iii)</enum><text>$3,255,000,000 for fiscal year 2028;</text></clause> <clause id="H7C59BF8480A34A02AAA944E3C209CF0F"><enum>(iv)</enum><text>$3,255,000,000 for fiscal year 2029;</text></clause>
<clause id="H93A1BA1B15EE4BD79ACBFED7BC62D17D"><enum>(v)</enum><text>$3,255,000,000 for fiscal year 2030; and</text></clause> <clause id="H2BF0D2169C8148BFAD601C37E9B2AC45"><enum>(vi)</enum><text>$3,255,000,000 for fiscal year 2031; and</text></clause><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="HE6B720E016F64E3C947C5255B3DCD589"><enum>(B)</enum><text>in subparagraph (B), by striking clauses (i) through (v) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H3B670EFD7A474B43884D438D11035EA4"> <clause id="H606C3A1EED4A4B12AF625BDF1B8CECF6"><enum>(i)</enum><text>$1,300,000,000 for fiscal year 2026;</text></clause>
<clause id="H72838A9B73A8456CA30C1E0D1FA955B2"><enum>(ii)</enum><text>$1,325,000,000 for fiscal year 2027;</text></clause> <clause id="H9F815F55953E45CB963E4E20299DF19C"><enum>(iii)</enum><text>$1,350,000,000 for fiscal year 2028;</text></clause>
<clause id="H76368D4253DC480D95F02DF58401131B"><enum>(iv)</enum><text>$1,375,000,000 for fiscal year 2029;</text></clause> <clause id="H070506ECF8BE4E8CBB598E3C957B84A6"><enum>(v)</enum><text>$1,375,000,000 for fiscal year 2030; and</text></clause>
<clause id="HE72EDE83E0D642C88DF6CFE144B2B57F"><enum>(vi)</enum><text>$1,375,000,000 for fiscal year 2031.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="HF3625BCC69524ED8A31870123A45FAC2"><enum>(b)</enum><header>Regional conservation partnership program</header><text>Section 1271D of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/16/3871d">16 U.S.C. 3871d</external-xref>) is amended by striking subsection (a) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HFA8E6533E47D400AB0988770F8E896BF">
<subsection id="HBE1B38D562F14313A6D7C7367B0143A4"><enum>(a)</enum><header>Availability of funding</header><text>Of the funds of the Commodity Credit Corporation, the Secretary shall use to carry out the program, to the maximum extent practicable—</text> <paragraph id="H8C2FCCDA2A254C119CEB510161F31B09"><enum>(1)</enum><text>$425,000,000 for fiscal year 2026;</text></paragraph>
<paragraph id="H175103F9F5564A00ABA981AFB4689679"><enum>(2)</enum><text>$450,000,000 for fiscal year 2027;</text></paragraph> <paragraph id="H648BA0277F854A2484F262D9217A379D"><enum>(3)</enum><text>$450,000,000 for fiscal year 2028;</text></paragraph>
<paragraph id="HB65EEBCF2D3B444CB414DF8F9C017DB4"><enum>(4)</enum><text>$450,000,000 for fiscal year 2029;</text></paragraph> <paragraph id="HE6D512DFD6554466A68F9C7DFA3878BB"><enum>(5)</enum><text>$450,000,000 for fiscal year 2030; and</text></paragraph>
<paragraph id="H13FE45D3F69F4C59A30FB78457CF3E9A"><enum>(6)</enum><text>$450,000,000 for fiscal year 2031.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H8CA6A4D6C69E4C0BB95555509F2C3E6B"><enum>(c)</enum><header>Grassroots source water protection program</header><text>Section 1240O(b) of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/16/3839bb-2">16 U.S.C. 3839bb–2(b)</external-xref>) is amended—</text>
<paragraph id="H541610C35CED4837BD4A4D0C0F19648C"><enum>(1)</enum><text>in paragraph (1), by striking <quote>2023</quote> and inserting <quote>2031</quote>; and</text></paragraph> <paragraph id="HC8AFF881FAB14E8C902CFF830F1A9508"><enum>(2)</enum><text>in paragraph (3)—</text>
<subparagraph id="H5D404A7FDB36457C86027605067EB8A0"><enum>(A)</enum><text>in subparagraph (A), by striking <quote>and</quote> at the end;</text></subparagraph> <subparagraph id="H0A390695FE33419EB0EFAB1F0DF3DCDB"><enum>(B)</enum><text>in subparagraph (B), by striking the period at the end and inserting <quote>; and</quote>; and</text></subparagraph>
<subparagraph id="HF904A370BD6C4EB1962CB31693133C38"><enum>(C)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H30B07776220B46B6A5753A28962AE5FD"> <subparagraph id="H0D2D46845B624CBBBA1F1878AAF93530"><enum>(C)</enum><text>$1,000,000 beginning in fiscal year 2026, to remain available until expended.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection>
<subsection id="H559CB895E2194F2CB632D22345A76A29"><enum>(d)</enum><header>Voluntary public access and habitat incentive program</header><text>Section 1240R(f)(1) of the Food Security Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/16/3839bb-5">16 U.S.C. 3839bb–5(f)(1)</external-xref>) is amended—</text> <paragraph id="H13F546E726AE4B41900BA40B0B0124EA"><enum>(1)</enum><text>by striking <quote>2023, and</quote> and inserting <quote>2023,</quote>; and</text></paragraph>
<paragraph id="HED7D4246238F49A0B276E2844E7FA8D4"><enum>(2)</enum><text>by inserting <quote>, and $70,000,000 for the period of fiscal years 2025 through 2031</quote> before the period at the end.</text></paragraph></subsection> <subsection id="H7752A1128C8740BA8C287DFFDEABDFE5"><enum>(e)</enum><header>Watershed protection and flood prevention</header><text>Section 15 of the Watershed Protection and Flood Prevention Act (<external-xref legal-doc="usc" parsable-cite="usc/16/1012a">16 U.S.C. 1012a</external-xref>) is amended by striking <quote>$50,000,000 for fiscal year 2019 and each fiscal year thereafter</quote> and inserting <quote>$150,000,000 for fiscal year 2026 and each fiscal year thereafter, to remain available until expended</quote>.</text></subsection>
<subsection id="H82FC89BF71F14EDBA1A821180976BC17"><enum>(f)</enum><header>Feral swine eradication and control pilot program</header><text>Section 2408(g)(1) of the Agriculture Improvement Act of 2018 (<external-xref legal-doc="usc" parsable-cite="usc/7/8351">7 U.S.C. 8351</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/115/334">Public Law 115–334</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H0D6E8A64284446A8AD3BF791E20060D8"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>2023 and</quote> and inserting <quote>2023,</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H6448259EEB704B4B8AF599FB2F8EE95D"><enum>(2)</enum><text>by inserting <quote>, and $105,000,000 for the period of fiscal years 2025 through 2031</quote> before the period at the end.</text></paragraph></subsection> <subsection id="H38484277F9FE4D5A8E4947376F0C0BA5"><enum>(g)</enum><header>Rescission</header><text>The unobligated balances of amounts appropriated by section 21001(a) of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2015) are rescinded. </text></subsection></section>
<section id="HD4BDFD923B4D416E9F79566AC78253CE"><enum>10602.</enum><header>Supplemental agricultural trade promotion program</header>
<subsection id="H26B96A81B2F0429DA7DF3E6B26557B7F"><enum>(a)</enum><header>In general</header><text>The Secretary of Agriculture shall carry out a program to encourage the accessibility, development, maintenance, and expansion of commercial export markets for United States agricultural commodities.</text></subsection> <subsection id="HD841CD1632DE4F8DAFE358FE77548B5B"><enum>(b)</enum><header>Funding</header><text>Of the funds of the Commodity Credit Corporation, the Secretary of Agriculture shall make available to carry out this section $285,000,000 for fiscal year 2027 and each fiscal year thereafter.</text></subsection></section>
<section id="HC3ABF1FF4AFE44F48FE70D1816FD5772"><enum>10603.</enum><header>Nutrition</header><text display-inline="no-display-inline">Section 203D(d)(5) of the Emergency Food Assistance Act of 1983 (<external-xref legal-doc="usc" parsable-cite="usc/7/7507">7 U.S.C. 7507(d)(5)</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2031</quote>.</text></section> <section commented="no" display-inline="no-display-inline" id="H664B592E0BD04704AC164F67BC56BE9A"><enum>10604.</enum><header>Research</header> <subsection id="H28865D61B7564F179929D66DD9F02AF1"><enum>(a)</enum><header>Urban, indoor, and other emerging agricultural production research, education, and extension initiative</header><text>Section 1672E(d)(1)(B) of the Food, Agriculture, Conservation, and Trade Act of 1990 (<external-xref legal-doc="usc" parsable-cite="usc/7/5925g">7 U.S.C. 5925g(d)(1)(B)</external-xref>) is amended by striking <quote>fiscal year 2024, to remain available until expended</quote> and inserting <quote>each of fiscal years 2024 through 2031</quote>.</text></subsection>
<subsection id="H6E594D7133F9487D8A9B99886C578339"><enum>(b)</enum><header>Foundation for Food and Agriculture Research</header><text>Section 7601(g)(1)(A) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/5939">7 U.S.C. 5939(g)(1)(A)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H68153C0465DC4FABAE85E1DF811E4BF9"> <clause id="HAF88844AD052415A9DC3E54661BBBA86"><enum>(iv)</enum><header>Further funding</header><text>Not later than 30 days after the date of enactment of this clause, of the funds of the Commodity Credit Corporation, the Secretary shall transfer to the Foundation to carry out this section $37,000,000, to remain available until expended.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HF92E21B3D8A842338BB3CB8D03E92453"><enum>(c)</enum><header>Scholarships for students at 1890 Institutions</header><text>Section 1446(b)(1) of the National Agricultural Research, Extension, and Teaching Policy Act of 1977 (<external-xref legal-doc="usc" parsable-cite="usc/7/3222a">7 U.S.C. 3222a(b)(1)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H8EA1301FC63644B8B39AA08FFE1EF626"> <subparagraph id="HF1089AF532D8491DB0BF3E78DFE77490"><enum>(C)</enum><header>Further funding</header><text>Of the funds of the Commodity Credit Corporation, the Secretary shall make available to carry out this section $60,000,000 for fiscal year 2026, to remain available until expended.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H3DF29B1D872B4AF29241AD07648EFAD5"><enum>(d)</enum><header>Assistive technology program for farmers with disabilities</header><text>Section 1680 of the Food, Agriculture, Conservation, and Trade Act of 1990 (<external-xref legal-doc="usc" parsable-cite="usc/7/5933">7 U.S.C. 5933</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HD35F65C47E5849EDA041B91CBCA9B986"><enum>(1)</enum><text>in subsection (c)(2), by inserting <quote>and subsection (d)</quote> after <quote>paragraph (1)</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H6902694FA5694FC28BAFB44B8C0FD7F4"><enum>(2)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H9274B4E53DEF41EEBDC7764DB189D41B"> <subsection commented="no" display-inline="no-display-inline" id="HD617F37E12EC48279D9F2F9E7ACFB19A"><enum>(d)</enum><header>Mandatory funding</header><text>Subject to subsection (c)(2), of the funds of the Commodity Credit Corporation, the Secretary shall use to carry out this section $8,000,000 for fiscal year 2026, to remain available until expended.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H5949850EA64B4731B96BCADF3C3AF36E"><enum>(e)</enum><header>Specialty crop research initiative</header><text>Section 412(k)(1)(B) of the Agricultural Research, Extension, and Education Reform Act of 1998 (<external-xref legal-doc="usc" parsable-cite="usc/7/7632">7 U.S.C. 7632(k)(1)(B)</external-xref>) is amended by striking <quote>section $80,000,000 for fiscal year 2014</quote> and inserting the following: “section—</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H02E9C1A2BB9244C19A039AF8462B50FC"> <clause id="H7C1AEB77FA224DE98A0AE674AC94E99A"><enum>(i)</enum><text>$80,000,000 for each of fiscal years 2014 through 2025; and</text></clause>
<clause id="HCE3D62FC1DE3452A9ECA7FF608CE241B"><enum>(ii)</enum><text>$175,000,000 for fiscal year 2026</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H2D886C2642E84343965FF0B4CB79FF0F"><enum>(f)</enum><header>Research Facilities Act</header><text>Section 6 of the Research Facilities Act (<external-xref legal-doc="usc" parsable-cite="usc/7/390d">7 U.S.C. 390d</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HDD192110C54B424F93E3AFBF0D0A43F2"><enum>(1)</enum><text display-inline="yes-display-inline">in subsection (c), by striking <quote>subsection (a)</quote> and inserting <quote>subsections (a) and (e)</quote>; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H839668A9469F4FD4B137F617CE65DB7A"><enum>(2)</enum><text display-inline="yes-display-inline">by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H6E0CC400BC1D4FE2A2CDC33329B86193">
<subsection id="H77AF84164ED745C5B7626603EF999182"><enum>(e)</enum><header>Mandatory funding</header><text>Subject to subsections (b), (c), and (d), of the funds of the Commodity Credit Corporation, the Secretary shall make available to carry out the competitive grant program under section 4 $125,000,000 for fiscal year 2026 and each fiscal year thereafter.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection></section> <section id="H4B769B13A5B245A6A371A4D408B171D3"><enum>10605.</enum><header>Energy</header><text display-inline="no-display-inline">Section 9005(g)(1)(F) of the Farm Security and Rural Investment Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/7/8105">7 U.S.C. 8105(g)(1)(F)</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2031</quote>.</text></section>
<section commented="no" display-inline="no-display-inline" id="H6CAAC535B3B34AAAA0BA22731095C55F"><enum>10606.</enum><header>Horticulture</header>
<subsection id="HE7E27EE337684B7DA165C14525C28732"><enum>(a)</enum><header>Plant pest and disease management and disaster prevention</header><text>Section 420(f) of the Plant Protection Act (<external-xref legal-doc="usc" parsable-cite="usc/7/7721">7 U.S.C. 7721(f)</external-xref>) is amended—</text> <paragraph id="H05D64500272B4BD0B0FE536820423880"><enum>(1)</enum><text>in paragraph (5), by striking <quote>and</quote> at the end;</text></paragraph>
<paragraph id="H26703B2335BD4ED08A7BEF742DE0E9DA"><enum>(2)</enum><text>by redesignating paragraph (6) as paragraph (7);</text></paragraph> <paragraph id="H434A653E15654BFE9400382965EE3553"><enum>(3)</enum><text>by inserting after paragraph (5) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H22160E9984AD4D89B2FD39D2278CBE2A">
<paragraph id="H51AAE29352A045E7AA35C8C67A3738E8"><enum>(6)</enum><text>$75,000,000 for each of fiscal years 2018 through 2025; and</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="HC3749B3F85A24343A5EAED6ADE374C03"><enum>(4)</enum><text>in paragraph (7) (as so redesignated), by striking <quote>$75,000,000 for fiscal year 2018</quote> and inserting <quote>$90,000,000 for fiscal year 2026</quote>.</text></paragraph></subsection>
<subsection id="H08AD5F4485074FB0ACE07427D94B5DB9"><enum>(b)</enum><header>Specialty crop block grants</header><text>Section 101(l)(1) of the Specialty Crops Competitiveness Act of 2004 (<external-xref legal-doc="usc" parsable-cite="usc/7/1621">7 U.S.C. 1621</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/108/465">Public Law 108–465</external-xref>) is amended—</text> <paragraph id="HED63C048943A410C83548D51D413238E"><enum>(1)</enum><text>in subparagraph (D), by striking <quote>and</quote> at the end;</text></paragraph>
<paragraph id="H737BB77C54EB4AB9B8416C4296C6C1D9"><enum>(2)</enum><text>by redesignating subparagraph (E) as subparagraph (F);</text></paragraph> <paragraph id="HE3C37958C84445879CEEEFC2537C4FA3"><enum>(3)</enum><text>by inserting after subparagraph (D) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HC1FA5A61204040DB8AD8788BC28C6C25">
<subparagraph id="H8752EA84A9294E7EB83E1C0F661DD575"><enum>(E)</enum><text>$85,000,000 for each of fiscal years 2018 through 2025; and</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="H6E32F382254D40519BEBE62931190BE6"><enum>(4)</enum><text>in subparagraph (F) (as so redesignated), by striking <quote>$85,000,000 for fiscal year 2018</quote> and inserting <quote>$100,000,000 for fiscal year 2026</quote>.</text></paragraph></subsection>
<subsection id="HCC5990DA65354A0F857DA18E38276455"><enum>(c)</enum><header>Organic production and market data initiative</header><text>Section 7407(d)(1) of the Farm Security and Rural Investment Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/7/5925c">7 U.S.C. 5925c(d)(1)</external-xref>) is amended—</text> <paragraph id="HB7D1B60F27A94C84B035016E6303F237"><enum>(1)</enum><text>in subparagraph (B), by striking <quote>and</quote> at the end;</text></paragraph>
<paragraph id="HC818E1F6943A46D2BC24B202904C1672"><enum>(2)</enum><text>in subparagraph (C), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph> <paragraph id="H4168BB1E96CF4ACDAE1ED588CD444433"><enum>(3)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HC5E62C8614584DD090C78F877ADCB105">
<subparagraph id="H7FDA7140C00342B185975A59A1DB9656"><enum>(D)</enum><text>$10,000,000 for the period of fiscal years 2026 through 2031.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H277B5B9D2FCC482EB013D88CDECF695D"><enum>(d)</enum><header>Modernization and improvement of international trade technology systems and data collection</header><text>Section 2123(c)(4) of the Organic Foods Production Act of 1990 (<external-xref legal-doc="usc" parsable-cite="usc/7/6522">7 U.S.C. 6522(c)(4)</external-xref>) is amended, in the matter preceding subparagraph (A), by striking <quote>and $1,000,000 for fiscal year 2024</quote> and inserting <quote>, $1,000,000 for fiscal years 2024 and 2025, and $5,000,000 for fiscal year 2026</quote>.</text></subsection>
<subsection id="HE5CDB6E33257460FB2AB3BD81E2B9E9F"><enum>(e)</enum><header>National organic certification cost-share program</header><text>Section 10606(d)(1)(C) of the Farm Security and Rural Investment Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/7/6523">7 U.S.C. 6523(d)(1)(C)</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2031</quote>.</text></subsection> <subsection id="HFC33841A36ED47B48CA2EB9DE7A1907A"><enum>(f)</enum><header>Multiple crop and pesticide use survey</header><text>Section 10109(c) of the Agriculture Improvement Act of 2018 (<external-xref legal-doc="public-law" parsable-cite="pl/115/334">Public Law 115–334</external-xref>; 132 Stat. 4907) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H563924B22CBC473980F0162FA512FA22">
<paragraph id="HBF710C771EFF4EF39DD26C794F6D59D8"><enum>(3)</enum><header>Further mandatory funding</header><text>Of the funds of the Commodity Credit Corporation, the Secretary shall use to carry out this section $5,000,000 for fiscal year 2026, to remain available until expended.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section> <section commented="no" display-inline="no-display-inline" id="HB3D90843DB12433FA902ECC46E95F3DD"><enum>10607.</enum><header>Miscellaneous</header> <subsection id="H7DAF9C25AF3043DA9850B51D6AFD111B"><enum>(a)</enum><header>Animal disease prevention and management</header><text>Section 10409A(d)(1) of the Animal Health Protection Act (<external-xref legal-doc="usc" parsable-cite="usc/7/8308a">7 U.S.C. 8308a(d)(1)</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H0CFA1A0E94654667B64E92E004440B15"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (B)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HFD3F581EAB4E4302BF490E72D179A6DA"><enum>(A)</enum><text display-inline="yes-display-inline">in the heading, by striking <quote><header-in-text style="OLC" level="subparagraph">Subsequent fiscal years</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="subparagraph">Fiscal years 2023 through 2025</header-in-text></quote>; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF99B74030AC54C55B4F23054470B851C"><enum>(B)</enum><text>by striking <quote>fiscal year 2023 and each fiscal year thereafter</quote> and inserting <quote>each of fiscal years 2023 through 2025</quote>; and</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H2709648F2678480BBB7C554A580A27DE"><enum>(2)</enum><text display-inline="yes-display-inline">by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE9AE9C3D63D34879A627085F6B321446">
<subparagraph id="HCBB6BBF0AC004C288586A60286718F2E"><enum>(C)</enum><header>Fiscal years 2026 through 2030</header><text>Of the funds of the Commodity Credit Corporation, the Secretary shall make available to carry out this section $233,000,000 for each of fiscal years 2026 through 2030, of which—</text> <clause id="H23305B9291E64743BCF61953AA3885B1"><enum>(i)</enum><text>not less than $10,000,000 shall be made available for each such fiscal year to carry out subsection (a);</text></clause>
<clause id="HBE702A6248D747B6AEDD401905E3B84C"><enum>(ii)</enum><text>not less than $70,000,000 shall be made available for each such fiscal year to carry out subsection (b); and</text></clause> <clause id="HFFBBEA94F8314A7DA6C2E70F74BFCE23"><enum>(iii)</enum><text>not less than $153,000,000 shall be made available for each such fiscal year to carry out subsection (c).</text></clause></subparagraph>
<subparagraph id="H28C22483105C492799E68E62D566BB2B"><enum>(D)</enum><header>Subsequent fiscal years</header><text>Of the funds of the Commodity Credit Corporation, the Secretary shall make available to carry out this section $75,000,000 for fiscal year 2031 and each fiscal year thereafter, of which not less than $45,000,000 shall be made available for each of those fiscal years to carry out subsection (b).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H47F9C10CDDA9417CB6EBAFC797CA518D"><enum>(b)</enum><header>Sheep production and marketing grant program</header><text>Section 209(c) of the Agricultural Marketing Act of 1946 (<external-xref legal-doc="usc" parsable-cite="usc/7/1627a">7 U.S.C. 1627a(c)</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HADD3CBBBD294475BA40C1E99854F1451"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>2019, and</quote> and inserting <quote>2019,</quote>; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HFA082D06311D443C84EBB63074771E9B"><enum>(2)</enum><text display-inline="yes-display-inline">by inserting <quote>and $3,000,000 for fiscal year 2026,</quote> after <quote>fiscal year 2024,</quote></text></paragraph></subsection>
<subsection id="H2B4D83A083734786A336CFCD2DB701E8"><enum>(c)</enum><header>Pima Agriculture Cotton Trust Fund</header><text>Section 12314 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/2101">7 U.S.C. 2101</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/113/79">Public Law 113–79</external-xref>) is amended—</text> <paragraph id="H51463B4FB5964E3B8AC57D085649839F"><enum>(1)</enum><text>in subsection (b), in the matter preceding paragraph (1), by striking <quote>2024</quote> and inserting <quote>2031</quote>; and</text></paragraph>
<paragraph id="H5F61158E3C484FC79ABCE70D50982EB1"><enum>(2)</enum><text>in subsection (h), by striking <quote>2024</quote>and inserting <quote>2031</quote>.</text></paragraph></subsection> <subsection id="H3FAF6C5045AB41DB824042DC66B77886"><enum>(d)</enum><header>Agriculture Wool Apparel Manufacturers Trust Fund</header><text>Section 12315 of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/7101">7 U.S.C. 7101</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/113/79">Public Law 113–79</external-xref>) is amended by striking <quote>2024</quote> each place it appears and inserting <quote>2031</quote>.</text></subsection>
<subsection id="H32C375001DB14C649886345CB000EA2F"><enum>(e)</enum><header>Wool research and promotion</header><text>Section 12316(a) of the Agricultural Act of 2014 (<external-xref legal-doc="usc" parsable-cite="usc/7/7101">7 U.S.C. 7101</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/113/79">Public Law 113–79</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2031</quote>.</text></subsection> <subsection id="HE0044EB36AFB44CB9C30823D28EE0C78"><enum>(f)</enum><header>Emergency Citrus Disease Research and Development Trust Fund</header><text display-inline="yes-display-inline">Section 12605(d) of the Agriculture Improvement Act of 2018 (<external-xref legal-doc="usc" parsable-cite="usc/7/7632">7 U.S.C. 7632</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/115/334">Public Law 115–334</external-xref>) is amended by striking <quote>2024</quote> and inserting <quote>2031</quote>.</text></subsection></section></subtitle></title>
<title id="HE6B2C9A05C6043A5A00F0A0BFC8E1B57"><enum>II</enum><header>Committee on Armed Services</header>
<section id="H2A574BD91FF249CEA5B2477E88CB1DBC"><enum>20001.</enum><header>Enhancement of Department of Defense resources for improving the quality of life for military personnel</header>
<subsection id="H1BDF7BF388E245A68918994D490CCD6F"><enum>(a)</enum><header>Appropriations</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="H2098BC61B5FC4831B7713C78741C2964"><enum>(1)</enum><text>$230,480,000 for restoration and modernization costs under the Marine Corps Barracks 2030 initiative;</text></paragraph>
<paragraph id="H75A22DA51A454BC4A960D23000C71D99"><enum>(2)</enum><text>$119,000,000 for base operating support costs under the Marine Corps;</text></paragraph> <paragraph id="H3D2232EADB86472CA33D6D8EAF94DF33"><enum>(3)</enum><text display-inline="yes-display-inline">$1,000,000,000 for Army, Navy, Air Force, and Space Force sustainment, restoration, and modernization of military unaccompanied housing;</text></paragraph>
<paragraph id="HAF87EDB463F442A5B2018232B0549D17" commented="no"><enum>(4)</enum><text>$2,000,000,000 for the Defense Health Program;</text></paragraph> <paragraph id="H4DC9AF4E381B4D089BE7AF4B08837024"><enum>(5)</enum><text display-inline="yes-display-inline">$2,900,000,000 to supplement the basic allowance for housing payable to members of the Army, Air Force, Navy, Marine Corps, and Space Force , notwithstanding section 403 of title 37, United States Code;</text></paragraph>
<paragraph id="HCA4929B870494C1DA09CFE524BD81449"><enum>(6)</enum><text>$50,000,000 for bonuses, special pays, and incentive pays for members of the Army, Air Force, Navy, Marine Corps, and Space Force pursuant to titles 10 and 37, United States Code;</text></paragraph> <paragraph id="HF1BB0D330374495EB08F23ACB541FEB9"><enum>(7)</enum><text display-inline="yes-display-inline">$10,000,000 for the Defense Activity for Non-Traditional Education Support’s Online Academic Skills Course program for members of the Army, Air Force, Navy, Marine Corps, and Space Force;</text></paragraph>
<paragraph id="H5AB145F002ED49C99994890DB643CDB3"><enum>(8)</enum><text display-inline="yes-display-inline">$100,000,000 for tuition assistance for members of the Army, Air Force, Navy, Marine Corps, and Space Force pursuant to title 10, United States Code;</text></paragraph> <paragraph id="HFA29E62D851D4A369F9B5CE8BF4EC3A9"><enum>(9)</enum><text display-inline="yes-display-inline">$100,000,000 for child care fee assistance for members of the Army, Air Force, Navy, Marine Corps, and Space Force under part II of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/10/88">chapter 88</external-xref> of title 10, United States Code;</text></paragraph>
<paragraph id="HB0E9E8FCD0D741E18CB16D69439928C8"><enum>(10)</enum><text>$590,000,000 to increase the Temporary Lodging Expense Allowance under <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/37/8">chapter 8</external-xref> of title 37, United States Code, to 21 days;</text></paragraph> <paragraph id="H7CFA67CE9D814BDCA62CE487C74172A9"><enum>(11)</enum><text display-inline="yes-display-inline">$100,000,000 for Department of Defense Impact Aid payments to local educational agencies under section 2008 of title 10, United States Code;</text></paragraph>
<paragraph id="H2A94C98314F04A1C892C3C1296A9E797"><enum>(12)</enum><text>$10,000,000 for military spouse professional licensure under section 1784 of title 10, United States Code;</text></paragraph> <paragraph id="HABF1617007C949C1B0B18C27C3732310"><enum>(13)</enum><text>$6,000,000 for Armed Forces Retirement Home facilities;</text></paragraph>
<paragraph id="H4A129F0A5FEE4049B9D7524057ADD5DB"><enum>(14)</enum><text>$100,000,000 for the Defense Community Infrastructure Program;</text></paragraph> <paragraph id="HE736F2B4E0BC4CD482B3AC99FEA6BD00"><enum>(15)</enum><text>$100,000,000 for Defense Advanced Research Projects Agency (DARPA) casualty care research; and</text></paragraph>
<paragraph id="H0C245C4EE88B4342A202550E8A42A37E"><enum>(16)</enum><text>$62,000,000 for modernization of Department of Defense childcare center staffing.</text></paragraph></subsection> <subsection id="H89804BA7634A49D7B607A3F990A7D924"><enum>(b)</enum><header>Temporary increase in percentage of value of authorized investment in certain privatized military housing projects</header> <paragraph id="H564C45A66A5E4EE8959461C317809BB1"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">During the period beginning on the date of the enactment of this section and ending on September 30, 2029, the Secretary concerned shall apply—</text>
<subparagraph id="HBDD4AD696E59461C8CCBDF63A1DE3C9F"><enum>(A)</enum><text>paragraph (1) of subsection (c) of section 2875 of title 10, United States Code, by substituting <quote>60 percent</quote> for <quote>33 <fraction>1/3</fraction> percent</quote>; and</text></subparagraph> <subparagraph id="HA522CFC9DD8D4585B3EF760E0D2DC3D9"><enum>(B)</enum><text>paragraph (2) of such subsection by substituting <quote>60 percent</quote> for <quote>45 percent</quote>.</text></subparagraph></paragraph>
<paragraph id="HA33B4AB822CA4461B2FBCCA02D3146B7"><enum>(2)</enum><header>Secretary concerned defined</header><text>In this subsection, the term <quote>Secretary concerned</quote> has the meaning given such term in section 101 of title 10, United States Code.</text></paragraph></subsection> <subsection id="H0022067868C54F41ACBE5DE07F9523F2"><enum>(c)</enum><header>Temporary authority for acquisition or construction of privatized military unaccompanied housing</header><text>Section 2881a of title 10, United States Code, is amended—</text>
<paragraph id="HF7F1ED5BF9E44BD29CA772CFD124196A"><enum>(1)</enum><text>by striking the heading and inserting <quote><header-in-text level="section" style="USC">Temporary authority for acquisition or construction of privatized military unaccompanied housing</header-in-text></quote>;</text></paragraph> <paragraph id="HB8E74D0FBAF64545AD0F1F8598E71D95"><enum>(2)</enum><text>by striking <quote>Secretary of the Navy</quote> each place it appears and inserting <quote>Secretary concerned</quote>;</text></paragraph>
<paragraph id="H2BB1B667C8874A3C898BA95DE95ABB61"><enum>(3)</enum><text>by striking <quote>under the pilot projects</quote> each place it appears and inserting <quote>pursuant to this section</quote>;</text></paragraph> <paragraph id="H55C3D2F4192049E4B8E25B9F8933B258"><enum>(4)</enum><text>in subsection (a)—</text>
<subparagraph id="HD5A999716DDA4B01BD5AA13FCB495C95"><enum>(A)</enum><text>by striking the heading and inserting <quote><header-in-text level="subsection" style="USC">In general</header-in-text></quote>; and</text></subparagraph> <subparagraph id="H29502AA123E84651BA268D036877F894" commented="no"><enum>(B)</enum><text>by striking <quote>carry out not more than three pilot projects under the authority of this section or another provision of this subchapter to use the private sector</quote> and inserting <quote>use the authority under this subchapter to enter into contracts with appropriate private sector entities</quote>;</text></subparagraph></paragraph>
<paragraph id="HF00D956144CE40F5A453886D12AD1BAA"><enum>(5)</enum><text>in subsection (c), by striking <quote>privatized housing</quote> and inserting <quote>privatized housing units</quote>;</text></paragraph> <paragraph id="H3C4A1EDC935F49B787859F09FFF3878E"><enum>(6)</enum><text>by redesignating subsection (f) as subsection (e); and</text></paragraph>
<paragraph id="H8078254110724BBCA6A355E3C1F6FEFE"><enum>(7)</enum><text>in subsection (e) (as so redesignated)—</text> <subparagraph id="HB0BB430DC93D4EBD88BAFA4C184D4188"><enum>(A)</enum><text>by striking <quote>under the pilot programs</quote> and inserting <quote>under this section</quote>; and</text></subparagraph>
<subparagraph id="H09321D0703D940E5B083559660A26972"><enum>(B)</enum><text>by striking <quote>September 30, 2009</quote> and inserting <quote>September 30, 2029</quote>. </text></subparagraph></paragraph></subsection></section> <section id="H9AE51F2D2B50476A8B8358D34BE39040"><enum>20002.</enum><header>Enhancement of Department of Defense resources for shipbuilding</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text>
<paragraph id="HF55B3188F1774B829C40E13613F8756D"><enum>(1)</enum><text>$250,000,000 for the expansion of accelerated Training in Defense Manufacturing program;</text></paragraph> <paragraph id="HB9AAAEA69E1E46B392C1D009002F7BBB"><enum>(2)</enum><text>$250,000,000 for United States production of turbine generators for shipbuilding industrial base;</text></paragraph>
<paragraph id="HCF5ED0545AB54375ABDA8943A35227BE"><enum>(3)</enum><text>$450,000,000 for United States additive manufacturing for wire production and machining capacity for shipbuilding industrial base;</text></paragraph> <paragraph id="H9C4EC46E0F9D4AACAC4A29577A414417"><enum>(4)</enum><text>$492,000,000 for next-generation shipbuilding techniques;</text></paragraph>
<paragraph id="HD30B61C593D64F80B4DB2765FA3DF067"><enum>(5)</enum><text>$85,000,000 for United States-made steel plate for shipbuilding industrial base;</text></paragraph> <paragraph id="H1136C3D2B2304E3A8AE668AD3480953A"><enum>(6)</enum><text>$50,000,000 for machining capacity for naval propellers for shipbuilding industrial base;</text></paragraph>
<paragraph id="H3E675F97E6CE486AA1C4EBF3D2E1ABE6"><enum>(7)</enum><text>$110,000,000 for rolled steel and fabrication facility for shipbuilding industrial base;</text></paragraph> <paragraph id="H88EE415B71484C23AA2B1CBA95A6F8D8"><enum>(8)</enum><text display-inline="yes-display-inline">$400,000,000 for expansion of collaborative campus for naval shipbuilding; </text></paragraph>
<paragraph id="H8602A81549F4474892242F157BBD6F78"><enum>(9)</enum><text>$450,000,000 for application of autonomy and artificial intelligence to naval shipbuilding;</text></paragraph> <paragraph id="HB9FB74FDDEC3489D9419A6BC057690CD"><enum>(10)</enum><text>$500,000,000 for the adoption of advanced manufacturing techniques in the shipbuilding industrial base; </text></paragraph>
<paragraph id="H957EF45BE40F4196A389E21A882F1625"><enum>(11)</enum><text>$500,000,000 for additional dry-dock capability; </text></paragraph> <paragraph id="H359B3B4F37844FD5B75207098D8B85B5"><enum>(12)</enum><text>$50,000,000 for the expansion of cold spray repair technologies; </text></paragraph>
<paragraph id="H3A72DDA5E5CD4D12A8EC766851F1BBA2"><enum>(13)</enum><text>$450,000,000 for additional maritime industrial workforce development programs; </text></paragraph> <paragraph id="HC3E2E584B3514B299AFEFAE34659CBCA"><enum>(14)</enum><text>$750,000,000 for additional supplier development across the naval shipbuilding industrial base; </text></paragraph>
<paragraph id="HBED351E3F65F468D9BCF2B5BD8F1DCCA"><enum>(15)</enum><text>$250,000,000 for additional advanced manufacturing processes across the naval shipbuilding industrial base;</text></paragraph> <paragraph id="HE08E6563E5364900A559D89714F4A8F9"><enum>(16)</enum><text>$4,600,000,000 for a second Virginia-class submarine in fiscal year 2026;</text></paragraph>
<paragraph id="HAEF20E62729D4661A35160AB4EFBDA60"><enum>(17)</enum><text>$5,400,000,000 for two additional Guided Missile Destroyer (DDG) ships;</text></paragraph> <paragraph id="H434B9E91C5474D42BC67E594894D7C17"><enum>(18)</enum><text>$160,000,000 for advanced procurement for Landing Ship Medium;</text></paragraph>
<paragraph id="H0E23E3E49E5C47CD8D9CD470AFFB4E61"><enum>(19)</enum><text>$1,803,941,000 for procurement of Landing Ship Medium;</text></paragraph> <paragraph id="H1E72239FB33747EEA9DDAD4D652E0C07"><enum>(20)</enum><text>$295,000,000 for development of a second Landing Craft Utility shipyard and production of additional Landing Craft Utility;</text></paragraph>
<paragraph id="HFBDF60B3964A4D81872276EACCBB861E"><enum>(21)</enum><text>$100,000,000 for advanced procurement for light replenishment oiler program;</text></paragraph> <paragraph id="H47A95519E5B44745AAE96A375E69E728"><enum>(22)</enum><text display-inline="yes-display-inline">$600,000,000 for the lease or purchase of new ships through the National Defense Sealift Fund;</text></paragraph>
<paragraph id="H7A8CDF7E59BC4562A3DF925EDBABDC43"><enum>(23)</enum><text display-inline="yes-display-inline">$2,725,000,000 for the procurement of T-AO oilers;</text></paragraph> <paragraph id="HD8D805427C824CD894DAF45DE015C6E8"><enum>(24)</enum><text>$500,000,000 for cost-to-complete for rescue and salvage ships;</text></paragraph>
<paragraph id="HD7CA51264FDB48A4808DF135D5BF042F"><enum>(25)</enum><text>$300,000,000 for production of ship-to-shore connectors;</text></paragraph> <paragraph id="H03C4FB509791445BA535A08E30E613F9"><enum>(26)</enum><text>$1,470,000,000 for the implementation of a multi-ship amphibious warship contract;</text></paragraph>
<paragraph id="H779DA201F6CC466096A19FDE35625BBE"><enum>(27)</enum><text>$80,000,000 for accelerated development of vertical launch system reloading at sea;</text></paragraph> <paragraph id="H23BEEEAB2B9741BFA4FDF77F6105AB09"><enum>(28)</enum><text>$250,000,000 for expansion of Navy corrosion control programs;</text></paragraph>
<paragraph id="HEA43B8BC565144F2AF2DAE4D4399EC78"><enum>(29)</enum><text>$159,000,000 for leasing of ships for Marine Corps operations;</text></paragraph> <paragraph id="HAD0CA51F73CA484BBD4AF629D17F73BD"><enum>(30)</enum><text>$1,534,000,000 for expansion of small unmanned surface vessel production;</text></paragraph>
<paragraph id="H990530108C3240BA94D108179DC3BFB3"><enum>(31)</enum><text display-inline="yes-display-inline">$2,100,000,000 for development, procurement, and integration of purpose-built medium unmanned surface vessels;</text></paragraph> <paragraph id="HFCD2CB85ACE44546ADFB2469E8417F82"><enum>(32)</enum><text>$1,300,000,000 for expansion of unmanned underwater vehicle production;</text></paragraph>
<paragraph id="HCCA03991B0BC4551A83D4501243B5EEE"><enum>(33)</enum><text>$188,360,000 for the development and testing of maritime robotic autonomous systems and enabling technologies;</text></paragraph> <paragraph id="HB6C42667A2F045A880652D2719479607"><enum>(34)</enum><text>$174,000,000 for the development of a Test Resource Management Center robotic autonomous systems proving ground; </text></paragraph>
<paragraph id="HBAA1039F6636473694B78F40EC4BDF88"><enum>(35)</enum><text display-inline="yes-display-inline">$250,000,000 for the development, production, and integration of wave-powered unmanned underwater vehicles; and</text></paragraph> <paragraph id="H38176FE6BFCD4A4C88D68F9A7199E2B8"><enum>(36)</enum><text>$150,000,000 for retention of inactive reserve fleet ships.</text></paragraph></section>
<section id="H8DD0B922DB0D4F35918F68B77F18CEA8"><enum>20003.</enum><header>Enhancement of Department of Defense resources for integrated air and missile defense</header>
<subsection id="H6867B843C645496B8A615085AE5B126B"><enum>(a)</enum><header>Next generation missile defense technologies</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="HDBC127A3D57749F9936795B167C7A945"><enum>(1)</enum><text>$250,000,000 for development and testing of directed energy capabilities by the Under Secretary for Research and Engineering;</text></paragraph>
<paragraph id="H3B6929959A7A48EFB021A0F5FB85EA16"><enum>(2)</enum><text>$500,000,000 for national security space launch infrastructure;</text></paragraph> <paragraph id="HA3BC70E8DDCB4F2A8150A2C5D188B121"><enum>(3)</enum><text>$2,000,000,000 for air moving target indicator military satellites;</text></paragraph>
<paragraph id="HA9396E45BE984BCFA8EBC17064784057"><enum>(4)</enum><text>$400,000,000 for expansion of Multi-Service Advanced Capability Hypersonic Test Bed program;</text></paragraph> <paragraph id="HB1144DB38A64414F90A08F7FE400C80C"><enum>(5)</enum><text>$5,600,000,000 for development of space-based and boost phase intercept capabilities;</text></paragraph>
<paragraph id="H5A683D89131D4E928D5E45E6BDCECD74"><enum>(6)</enum><text display-inline="yes-display-inline">$7,200,000,000 for the development, procurement, and integration of military space-based sensors; and</text></paragraph> <paragraph id="HBAD38CA33768405BB8FE18832D733125"><enum>(7)</enum><text>$2,550,000,000 for the development, procurement, and integration of military missile defense capabilities.</text></paragraph></subsection>
<subsection id="H23EC0120BA1349AE9768CB4E54BD2EF2"><enum>(b)</enum><header>Layered homeland defense</header><text>In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="HE0BDA9C08831431CABE359075E3A208D"><enum>(1)</enum><text>$2,200,000,000 for acceleration of hypersonic defense systems;</text></paragraph>
<paragraph id="HFA1B62DBA62C416B848FE1857CF64E51"><enum>(2)</enum><text>$800,000,000 for accelerated development and deployment of next-generation intercontinental ballistic missile defense systems;</text></paragraph> <paragraph id="HD327CA44E00749279C3FF181EE728E71"><enum>(3)</enum><text display-inline="yes-display-inline">$408,000,000 for Army space and strategic missile test range infrastructure restoration and modernization in the United States Indo-Pacific Command area of operations west of the international dateline;</text></paragraph>
<paragraph id="HDBD05D54796345EBB43672F71EBDA7DA"><enum>(4)</enum><text>$1,975,000,000 for improved ground-based missile defense radars; and</text></paragraph> <paragraph id="HEC0F0F41BCD94EBA8BB93ABCDFAB76E6"><enum>(5)</enum><text>$530,000,000 for the design and construction of Missile Defense Agency missile instrumentation range safety ship.</text></paragraph></subsection></section>
<section id="H751783CB9AF4414993A31823597D45D1"><enum>20004.</enum><header>Enhancement of Department of Defense resources for munitions and defense supply chain resiliency</header>
<subsection id="H090BFF11FF6943DAB3FA479239601F46"><enum>(a)</enum><header>Appropriations</header><text>In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="HCEA59FD8FDC5495CB389D06B88D8F150"><enum>(1)</enum><text>$400,000,000 for the development, production, and integration of Navy and Air Force long-range anti-ship missiles;</text></paragraph>
<paragraph id="HF3BBF0421E24446C8091EE4D2AC43F32"><enum>(2)</enum><text display-inline="yes-display-inline">$380,000,000 for production capacity expansion for Navy and Air Force long-range anti-ship missiles;</text></paragraph> <paragraph id="H8786EE41A2F044AA949D4C6BE277738C"><enum>(3)</enum><text display-inline="yes-display-inline">$490,000,000 for the development, production, and integration of Navy and Air Force long-range air-to-surface missiles;</text></paragraph>
<paragraph id="HA5A1BF5E440240C4A138B3E54498D253"><enum>(4)</enum><text>$94,000,000 for the development, production, and integration of alternative Navy and Air Force long-range air-to-surface missiles;</text></paragraph> <paragraph id="HAAB17ABBC98F48518DDA846AE0F81D68"><enum>(5)</enum><text>$630,000,000 for the development, production, and integration of long-range Navy air defense and anti-ship missiles;</text></paragraph>
<paragraph id="H9B0F605A0BE1495C91DA9BA384A72B5D"><enum>(6)</enum><text>$688,000,000 for the development, production, and integration of long-range multi-service cruise missiles;</text></paragraph> <paragraph id="H3E01ED2BC78D47CB925B9CC104FE0305"><enum>(7)</enum><text>$250,000,000 for production capacity expansion and supplier base strengthening of long-range multi-service cruise missiles;</text></paragraph>
<paragraph id="HE00F0F7514F34ACFBF49B57C3C9887A4"><enum>(8)</enum><text>$70,000,000 for the development, production, and integration of short-range Navy and Marine Corps anti-ship missiles;</text></paragraph> <paragraph id="H288CA0C5543D4F6D94DDEF25981F7F8A"><enum>(9)</enum><text>$100,000,000 for the development of an anti-ship seeker for short-range Army ballistic missiles;</text></paragraph>
<paragraph id="H2A31389014FF40B984D7A38B91248A0E"><enum>(10)</enum><text>$175,000,000 for production capacity expansion for next-generation Army medium-range ballistic missiles;</text></paragraph> <paragraph id="H545C1F30963F43E1AACEE23E85A905E8"><enum>(11)</enum><text display-inline="yes-display-inline">$50,000,000 for the mitigation of diminishing manufacturing sources for medium-range air-to-air missiles; </text></paragraph>
<paragraph id="HC656DF55DED74C53ACFDFF7EE1F13474"><enum>(12)</enum><text display-inline="yes-display-inline">$250,000,000 for the procurement of medium-range air-to-air missiles; </text></paragraph> <paragraph id="H4E9F7E903BB5460C9AFBAA37EB8A2E4D"><enum>(13)</enum><text>$225,000,000 for the expansion of production capacity for medium-range air-to-air missiles; </text></paragraph>
<paragraph id="H35B5FBAD5E1A4CC6A4C253EF320F4241"><enum>(14)</enum><text>$50,000,000 for the development of second sources for components of short-range air-to-air missiles; </text></paragraph> <paragraph id="H57BA9E56FEFC4734A4C5191012F1635F"><enum>(15)</enum><text>$325,000,000 for production capacity improvements for air-launched anti-radiation missiles;</text></paragraph>
<paragraph id="H8A54B4ECF72B45E2ADC7567AF5528D8F"><enum>(16)</enum><text>$50,000,000 for the accelerated development of Army next-generation medium-range anti-ship ballistic missiles;</text></paragraph> <paragraph id="HB1B3EF7492364143BE1A40E427FF593D"><enum>(17)</enum><text>$114,000,000 for the production of Army next-generation medium-range ballistic missiles;</text></paragraph>
<paragraph id="H5AAC3A8D4C1D431B9DE2A61DA7F1EAE6"><enum>(18)</enum><text>$300,000,000 for the production of Army medium-range ballistic missiles;</text></paragraph> <paragraph id="H3AF99DFABF304AC4AD092D21B60956D4"><enum>(19)</enum><text>$85,000,000 for the accelerated development of Army long-range ballistic missiles;</text></paragraph>
<paragraph id="HF2F7F6D418D549F0BAA6C6AC1C85A6F1"><enum>(20)</enum><text>$400,000,000 for the production of heavyweight torpedoes;</text></paragraph> <paragraph id="HC5141CFC5B4340E5956A9F06FDB8A55D"><enum>(21)</enum><text>$200,000,000 for the development, procurement, and integration of mass-producible autonomous underwater munitions;</text></paragraph>
<paragraph id="HE71023695D7A4C82A6DDC51461CA5A38"><enum>(22)</enum><text>$70,000,000 for the improvement of heavyweight torpedo maintenance activities;</text></paragraph> <paragraph id="HF84920C484EB4B4DA0DDE6D0279AF4A4"><enum>(23)</enum><text display-inline="yes-display-inline">$200,000,000 for the production of lightweight torpedoes;</text></paragraph>
<paragraph id="H9D07C2A04A9D4944A3506B631406B6AD"><enum>(24)</enum><text>$500,000,000 for the development, procurement, and integration of maritime mines;</text></paragraph> <paragraph id="HCDE96ED94C52469F843E18827F7B5E6B"><enum>(25)</enum><text>$50,000,000 for the development, procurement, and integration of new underwater explosives;</text></paragraph>
<paragraph id="H4B676A2CDFF043FE87D1D881D11D0C69"><enum>(26)</enum><text>$55,000,000 for the development, procurement, and integration of lightweight multi-mission torpedoes;</text></paragraph> <paragraph id="HBF26E32013E24391B7019680167EFB5B"><enum>(27)</enum><text>$80,000,000 for the production of sonobuoys;</text></paragraph>
<paragraph id="HEA5F5ADDE5D84FA790486FBFAE179C55"><enum>(28)</enum><text>$150,000,000 for the development, procurement, and integration of air-delivered long-range maritime mines;</text></paragraph> <paragraph id="H172DCE9EC4394B96AE0FCF3C20A95243"><enum>(29)</enum><text>$61,000,000 for the acceleration of Navy expeditionary loitering munitions deployment;</text></paragraph>
<paragraph id="H0FBE39CCA01C4671B63CE17ECF2C0B3D"><enum>(30)</enum><text>$50,000,000 for the acceleration of one-way attack unmanned aerial systems with advanced autonomy;</text></paragraph> <paragraph id="HD56611428993431EB7D55AFBB63800DF"><enum>(31)</enum><text>$1,000,000,000 for the expansion of the one-way attack unmanned aerial systems industrial base;</text></paragraph>
<paragraph id="HA0D10A54F9214497A0D23088255B6F0E"><enum>(32)</enum><text>$200,000,000 for investments in solid rocket motor industrial base through the Industrial Base Fund established under section 4817 of title 10, United States Code;</text></paragraph> <paragraph id="H32AFA0EF8852498D81D558C1400EC5C9"><enum>(33)</enum><text>$400,000,000 for investments in the emerging solid rocket motor industrial base through the Industrial Base Fund established under section 4817 of title 10, United States Code;</text></paragraph>
<paragraph id="HE370A14AFCE94F25AEC3BAF5905368F0"><enum>(34)</enum><text>$42,000,000 for investments in second sources for large-diameter solid rocket motors for hypersonic missiles;</text></paragraph> <paragraph id="H7F3C70EFB26A46D59DB46C842AF67DA6"><enum>(35)</enum><text>$1,000,000,000 for the creation of next-generation automated munitions production factories;</text></paragraph>
<paragraph id="H5CB10509881141CC991583DD2C66FA14"><enum>(36)</enum><text>$170,000,000 for the development of advanced radar depot for repair, testing, and production of radar and electronic warfare systems;</text></paragraph> <paragraph id="H4D43174B38304030AD0D9914E99B12B9"><enum>(37)</enum><text>$25,000,000 for the expansion of the Department of Defense industrial base policy analysis workforce;</text></paragraph>
<paragraph id="H3671B1FD2E5D4480897D82F1C080E931"><enum>(38)</enum><text>$30,300,000 for the repair of Army missiles;</text></paragraph> <paragraph id="H252D7563B7A54DF0B451EBEC22E099CC"><enum>(39)</enum><text>$100,000,000 for the production of small and medium ammunition;</text></paragraph>
<paragraph id="H511B111533494AB8B21AEA19410F7D97"><enum>(40)</enum><text display-inline="yes-display-inline">$2,000,000,000 for additional activities to improve the United States stockpile of critical minerals through the National Defense Stockpile Transaction Fund, authorized by subchapter III of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/50/5">chapter 5</external-xref> of title 50, United States Code;</text></paragraph> <paragraph id="HB3D9D8FAAD3240BA86B16E48E722F9E5"><enum>(41)</enum><text>$10,000,000 for the expansion of the Department of Defense armaments cooperation workforce;</text></paragraph>
<paragraph id="H05547F8B561E4393B4F70DE422E0C764"><enum>(42)</enum><text>$500,000,000 for the expansion of the Defense Exportability Features program;</text></paragraph> <paragraph id="HC3A66145081C45A192893BFA79B8A738"><enum>(43)</enum><text display-inline="yes-display-inline">$350,000,000 for production of Navy long-range air and missile defense interceptors;</text></paragraph>
<paragraph id="H33E6A3B53C664920983CB998B80B5476"><enum>(44)</enum><text>$93,000,000 for replacement of Navy long-range air and missile defense interceptors;</text></paragraph> <paragraph id="HA222BBF318DF4F8A8D67FDA626303F7D"><enum>(45)</enum><text>$100,000,000 for development of a second solid rocket motor source for Navy air defense and anti ship missiles;</text></paragraph>
<paragraph id="HE872739A687C473484809C8182E849AF"><enum>(46)</enum><text>$65,000,000 for expansion of production capacity of Missile Defense Agency long-range anti-ballistic missiles;</text></paragraph> <paragraph id="HE052F782E40F4F02AC75A8B2FC7C7D67"><enum>(47)</enum><text>$225,000,000 for expansion of production capacity for Navy air defense and anti-ship missiles;</text></paragraph>
<paragraph id="HC1E2D8D966124B1693273EF44FE80B08"><enum>(48)</enum><text>$103,300,000 for expansion of depot level maintenance facility for Navy long-range air and missile defense interceptors;</text></paragraph> <paragraph id="H2EC3BDD86D5C474DB483C4D8546AE1C9"><enum>(49)</enum><text>$18,000,000 for creation of domestic source for guidance section of Navy short-range air defense missiles;</text></paragraph>
<paragraph id="H62A2EF1E42704259B538A871DBDFAEA3"><enum>(50)</enum><text>$65,000,000 for integration of Army medium-range air and missile defense interceptor with Navy ships;</text></paragraph> <paragraph id="HC3C5AA127FDE4173AA6358A32D787880"><enum>(51)</enum><text>$176,100,000 for production of Army long-range movable missile defense radar;</text></paragraph>
<paragraph id="H3305A4F1625C46E6AC55856978AE1BE4"><enum>(52)</enum><text>$167,000,000 for accelerated fielding of Army short-range gun-based air and missile defense system;</text></paragraph> <paragraph id="H915BA438F8294BC4A0444D1F1D4E916E"><enum>(53)</enum><text>$40,000,000 for development of low-cost alternatives to air and missile defense interceptors;</text></paragraph>
<paragraph id="HC6F405C4E7E64E079419BDD37C2E5267"><enum>(54)</enum><text>$50,000,000 for acceleration of Army next-generation shoulder-fired air defense system;</text></paragraph> <paragraph id="HB93D61DDE96B4756BED958CE9DC9E0C0"><enum>(55)</enum><text>$91,000,000 for production of Army next-generation shoulder-fired air defense system;</text></paragraph>
<paragraph id="HBAA1D09B7BB6436E9B60470015821407"><enum>(56)</enum><text display-inline="yes-display-inline">$500,000,000 for development, production, and integration of counter-unmanned aerial systems programs;</text></paragraph> <paragraph id="HF2F27D036632473D9E281CEDC8B53E43"><enum>(57)</enum><text>$350,000,000 for development, production, and integration of non-kinetic counter-unmanned aerial systems programs;</text></paragraph>
<paragraph id="HDED41D8C8CE44C47AC94D7E93D68B90E"><enum>(58)</enum><text>$250,000,000 for development, production, and integration of land-based counter-unmanned aerial systems programs;</text></paragraph> <paragraph id="H27B0AB8F1B104A309046AE412610D4C7"><enum>(59)</enum><text>$200,000,000 for development, production, and integration of ship-based counter-unmanned aerial systems programs; </text></paragraph>
<paragraph id="H73202B1F34E24910B02B6EC8048B47E7"><enum>(60)</enum><text>$400,000,000 for acceleration of hypersonic strike programs;</text></paragraph> <paragraph id="H96EC34FD04A64B59AA6327DD4261C628"><enum>(61)</enum><text>$167,000,000 for procurement of additional launchers for Army medium-range air and missile defense interceptors;</text></paragraph>
<paragraph id="H604EF69C6AAE4F5FB4B66925FBFC0B80"><enum>(62)</enum><text>$500,000,000 for expansion of defense advanced manufacturing techniques;</text></paragraph> <paragraph id="H6A8687374F3949DB8EDC584FE595BCC2"><enum>(63)</enum><text>$1,000,000 for establishment of the Joint Energetics Transition Office; </text></paragraph>
<paragraph id="HFB89234B763541CB833F4225E74F3E18"><enum>(64)</enum><text>$200,000,000 for acceleration of Army medium-range air and missile defense interceptors;</text></paragraph> <paragraph id="H51DFC09BB7714C21ABE6B4283DEF04E9"><enum>(65)</enum><text>$150,000,000 for additive manufacturing for propellant;</text></paragraph>
<paragraph id="H83C5B1A887E148289CCA4D5F6E097417"><enum>(66)</enum><text>$250,000,000 for expansion and acceleration of penetrating munitions production; and</text></paragraph> <paragraph id="H72C7108C4EB34E23B318B7617F0CFCF6"><enum>(67)</enum><text>$50,000,000 for development, procurement, and integration of precision extended-range artillery.</text></paragraph></subsection>
<subsection id="H159F2149187448798E0A65DC35DDA18E"><enum>(b)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $3,300,000,000 for grants and purchase commitments made pursuant to the Industrial Base Fund established under section 4817 of title 10, United States Code.</text></subsection> <subsection id="HBADD60374CA24074A7998889F0684356"><enum>(c)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $5,000,000,000 for investments in critical minerals supply chains made pursuant to the Industrial Base Fund established under section 4817 of title 10, United States Code.</text></subsection>
<subsection id="HAEA15A47B89B4FA88AECC2CECD7D625B"><enum>(d)</enum><header>Appropriations</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there is appropriated to the Secretary of Defense, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $500,000,000 to the <quote>Department of Defense Credit Program Account</quote> to carry out the capital assistance program, including loans, loan guarantees, and technical assistance, established under section 149(e) of title 10, United States Code, for critical minerals and related industries and projects, including related Covered Technology Categories: <italic>Provided</italic>, That—</text> <paragraph id="H977B44E5F2A74A4AB88AE0985444DFD6"><enum>(1)</enum><text>such amounts are available to subsidize gross obligations for the principal amount of direct loans, and total loan principal, any part of which is to be guaranteed, not to exceed $100,000,000,000; and</text></paragraph>
<paragraph id="H621ED8C0FEF441FAB6DF60378AD75E91"><enum>(2)</enum><text>such amounts are available to cover all costs and expenditures as provided under section 149(e)(5)(B) of title 10, United States Code.</text></paragraph></subsection></section> <section id="H9A945C2274C0440097A05521AD3E1A06"><enum>20005.</enum><header>Enhancement of Department of Defense resources for scaling low-cost weapons into production</header> <subsection id="HD6921242AC8B46AA9E00D5D9983C301C"><enum>(a)</enum><header>Appropriations</header><text>In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text>
<paragraph id="H10B0087B694947F9B2B0BA742AF553CB"><enum>(1)</enum><text>$25,000,000 for the Office of Strategic Capital Global Technology Scout program;</text></paragraph> <paragraph id="HFAAAFE70A83743BCB3536B5CCA1DBBB2"><enum>(2)</enum><text>$1,400,000,000 for the expansion of the small unmanned aerial system industrial base;</text></paragraph>
<paragraph id="HD547E20294314DE7BCE12C77A40C6224"><enum>(3)</enum><text>$400,000,000 for the development and deployment of the Joint Fires Network and associated joint battle management capabilities;</text></paragraph> <paragraph id="HA0A8BA2D6F8D4D80B655F420E20F0B25"><enum>(4)</enum><text>$400,000,000 for the expansion of advanced command-and-control tools to combatant commands and military departments;</text></paragraph>
<paragraph id="H3F4616E7327948AFB3A429DE0544EF6D"><enum>(5)</enum><text>$100,000,000 for the development of shared secure facilities for the defense industrial base;</text></paragraph> <paragraph id="HE94F858560AD47A4ADCC7DA1AEE9F54B"><enum>(6)</enum><text>$50,000,000 for the creation of additional Defense Innovation Unit OnRamp Hubs;</text></paragraph>
<paragraph id="HF41310D939514A469C91040F7DAA42BF"><enum>(7)</enum><text>$600,000,000 for the acceleration of Strategic Capabilities Office programs;</text></paragraph> <paragraph id="HA25501AAE14446029C8F25A1DAED4762"><enum>(8)</enum><text>$650,000,000 for the expansion of Mission Capabilities office joint prototyping and experimentation activities for military innovation;</text></paragraph>
<paragraph id="HE6E6A4F5CDAA4F90AD54E95BB318E2EA"><enum>(9)</enum><text>$500,000,000 for the accelerated development and integration of advanced 5G/6G technologies for military use;</text></paragraph> <paragraph id="H80F9F8FD264548F096EB2238AEFE85FB"><enum>(10)</enum><text>$25,000,000 for testing of simultaneous transmit and receive technology for military spectrum agility;</text></paragraph>
<paragraph id="HE903BE624431441DAE67293E74F73958"><enum>(11)</enum><text>$50,000,000 for the development, procurement, and integration of high-altitude stratospheric balloons for military use;</text></paragraph> <paragraph id="H5ECCDA5D19B04C828565EDA9BC09DEB1"><enum>(12)</enum><text>$120,000,000 for the development, procurement, and integration of long-endurance unmanned aerial systems for surveillance;</text></paragraph>
<paragraph id="HDCBC7B777FFB49B0A6AB6BAE07AD2A89"><enum>(13)</enum><text>$40,000,000 for the development, procurement, and integration of alternative positioning and navigation technology to enable military operations in contested electromagnetic environments;</text></paragraph> <paragraph id="H9FB299F5D4134D8CAB8E0B2381CB0551"><enum>(14)</enum><text>$750,000,000 for the acceleration of innovative military logistics and energy capability development and deployment;</text></paragraph>
<paragraph id="HBF7CE75D46014B55896F5D151DB73590"><enum>(15)</enum><text>$125,000,000 for the acceleration of development of small, portable modular nuclear reactors for military use;</text></paragraph> <paragraph id="HCADA03FBD4034D21B42E119A3AB839AA"><enum>(16)</enum><text>$1,000,000,000 for the expansion of programs to accelerate the procurement and fielding of innovative technologies;</text></paragraph>
<paragraph id="H9EFFDABD435C4D0B9EF10FE17275C48D"><enum>(17)</enum><text>$90,000,000 for the development of reusable hypersonic technology for military strikes;</text></paragraph> <paragraph id="H7B41A7B23B6649A980C303876234DFEE"><enum>(18)</enum><text>$2,000,000,000 for the expansion of Defense Innovation Unit scaling of commercial technology for military use;</text></paragraph>
<paragraph id="HF0CB9927925D43049F54A61F1689F645"><enum>(19)</enum><text>$500,000,000 to prevent delays in delivery of attritable autonomous military capabilities;</text></paragraph> <paragraph id="HA3BEC95C6DFC4F52956E57F576D0489C"><enum>(20)</enum><text>$1,500,000,000 for the development, procurement, and integration of low-cost cruise missiles;</text></paragraph>
<paragraph id="H1F927F2F74D447AEA1538601561A0B81"><enum>(21)</enum><text>$124,000,000 for improvements to Test Resource Management Center artificial intelligence capabilities;</text></paragraph> <paragraph id="H495F4E6199474D81A111A08FF37CF6BE"><enum>(22)</enum><text>$145,000,000 for the development of artificial intelligence to enable one-way attack unmanned aerial systems and naval systems;</text></paragraph>
<paragraph id="HFE61F2EF75544A02AB3FBA7AFB3BC985"><enum>(23)</enum><text>$250,000,000 for the development of the Test Resource Management Center digital test environment;</text></paragraph> <paragraph id="H0969158852114506BE174231BF7B2E7F"><enum>(24)</enum><text display-inline="yes-display-inline">$250,000,000 for the advancement of the artificial intelligence ecosystem;</text></paragraph>
<paragraph id="H90ABBA207B014FC5927E818666BB9AEB"><enum>(25)</enum><text>$250,000,000 for the expansion of Cyber Command artificial intelligence lines of effort;</text></paragraph> <paragraph id="HE6EC6CA3B9BD47D0A0A9BDC85BC5B8A6"><enum>(26)</enum><text>$250,000,000 for the acceleration of the Quantum Benchmarking Initiative;</text></paragraph>
<paragraph id="H94576C19F9BF4A1794622D2D8F8AEFEC"><enum>(27)</enum><text>$1,000,000,000 for the expansion and acceleration of qualification activities and technical data management to enhance competition in defense industrial base;</text></paragraph> <paragraph id="H0FBE2C98676649AE880C6096BBFA22CF"><enum>(28)</enum><text>$400,000,000 for the expansion of the defense manufacturing technology program; </text></paragraph>
<paragraph id="H0587770F085E4586BF5F2D412184B32C"><enum>(29)</enum><text>$1,685,000,000 for military cryptographic modernization activities;</text></paragraph> <paragraph id="H0DD33B97323B44D4A4E29EA40A4F07B4"><enum>(30)</enum><text>$90,000,000 for APEX Accelerators, the Mentor-Protege Program, and cybersecurity support to small non-traditional contractors;</text></paragraph>
<paragraph id="H7AC570913642450795ED0AC61385BCF0"><enum>(31)</enum><text>$250,000,000 for the development, procurement, and integration of Air Force low-cost counter-air capabilities;</text></paragraph> <paragraph id="H0376E0ABEDA54DEDAE9B5B74478D69CE"><enum>(32)</enum><text>$10,000,000 for additional Air Force wargaming activities; and</text></paragraph>
<paragraph id="H1E0220A8D8494A2DB917CA30A497C30B"><enum>(33)</enum><text>$20,000,000 for the Office of Strategic Capital workforce.</text></paragraph></subsection> <subsection id="HF9B1D59882264519AF48BDFA1E5D5C20"><enum>(b)</enum><header>Appropriations</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $1,000,000,000 to the <quote>Department of Defense Credit Program Account</quote> to carry out the capital assistance program, including loans, loan guarantees, and technical assistance, established under section 149(e) of title 10, United States Code: <italic>Provided</italic>, That—</text>
<paragraph id="H7FB0823C252F49BEBBEEB6459CC159C5"><enum>(1)</enum><text>such amounts are available to subsidize gross obligations for the principal amount of direct loans, and total loan principal, any part of which is to be guaranteed, not to exceed $100,000,000,000; and</text></paragraph> <paragraph id="HC59826FE631246F585E5D4413D9519A5"><enum>(2)</enum><text>such amounts are available to cover all costs and expenditures as provided under section 149(e)(5)(B) of title 10, United States Code.</text></paragraph></subsection></section>
<section id="H710D58DC5C574CF79E53DD1166DE3F3E"><enum>20006.</enum><header>Enhancement of Department of Defense resources for improving the efficiency and cybersecurity of the Department of Defense</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="H6ABC80710D654D21B9405E4D814F0851"><enum>(1)</enum><text display-inline="yes-display-inline">$150,000,000 for business systems replacement to accelerate the audits of the financial statements of the Department of Defense pursuant to chapter 9A and section 2222 of title 10, United States Code;</text></paragraph>
<paragraph id="HCE78B7C64CB74CD69487651FC62117F3"><enum>(2)</enum><text display-inline="yes-display-inline">$200,000,000 for the deployment of automation and artificial intelligence to accelerate the audits of the financial statements of the Department of Defense pursuant to chapter 9A and section 2222 of title 10, United States Code;</text></paragraph> <paragraph id="HA1E5E1A6D4F64F25B7F4FF935859779A" commented="no"><enum>(3)</enum><text display-inline="yes-display-inline">$10,000,000 for the improvement of the budgetary and programmatic infrastructure of the Office of the Secretary of Defense; and</text></paragraph>
<paragraph id="H203C45875DCC4E22908E5757A745FDCB"><enum>(4)</enum><text display-inline="yes-display-inline">$20,000,000 for defense cybersecurity programs of the Defense Advanced Research Projects Agency.</text></paragraph></section> <section id="H6EDFDAD14C364744B56168AC7B649F5F"><enum>20007.</enum><header>Enhancement of Department of Defense resources for air superiority</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text>
<paragraph id="H62DF54C944614E75A44A1B1CE76877B6"><enum>(1)</enum><text display-inline="yes-display-inline">$3,150,000,000 to increase F–15EX aircraft production;</text></paragraph> <paragraph id="H6F0753078D57449898F0D6C44C23D7BB"><enum>(2)</enum><text>$361,220,000 to prevent the retirement of F–22 aircraft;</text></paragraph>
<paragraph id="H5734193A00144D8FB3F2BB35AC8488CF"><enum>(3)</enum><text>$127,460,000 to prevent the retirement of F–15E aircraft;</text></paragraph> <paragraph id="H2A394CFFD01846509F109C49D7283232"><enum>(4)</enum><text display-inline="yes-display-inline">$187,000,000 to accelerate installation of F–16 electronic warfare capability;</text></paragraph>
<paragraph id="H16605D41632F409DB927AF85D97670C1"><enum>(5)</enum><text>$116,000,000 for C–17A Mobility Aircraft Connectivity;</text></paragraph> <paragraph id="H1B0D166B1920411BA2F8BCDEBE5578F9"><enum>(6)</enum><text>$84,000,000 for KC–135 Mobility Aircraft Connectivity;</text></paragraph>
<paragraph id="H735A00DE269C45D088D5FD1E3D0FF4EE"><enum>(7)</enum><text>$440,000,000 to increase C–130J production;</text></paragraph> <paragraph id="HE2DAFB684B044AF988CB586203857EE9"><enum>(8)</enum><text>$474,000,000 to increase EA–37B production;</text></paragraph>
<paragraph id="H4F12F54EAEDF4D678BE97D997792A62C"><enum>(9)</enum><text>$678,000,000 to accelerate the Collaborative Combat Aircraft program;</text></paragraph> <paragraph id="H415FECED51744B25967819ED4A473A83"><enum>(10)</enum><text>$400,000,000 to accelerate production of the F–47 aircraft;</text></paragraph>
<paragraph id="HE6AE22A382C8408F8F52F1CD6D2CDD02"><enum>(11)</enum><text display-inline="yes-display-inline">$750,000,000 accelerate the FA/XX aircraft;</text></paragraph> <paragraph id="H998B15C52E224389A42A05E942F6E12F"><enum>(12)</enum><text>$100,000,000 for production of Advanced Aerial Sensors;</text></paragraph>
<paragraph id="H29091AD207384E4CA6DBBC38D94EAAB7" commented="no"><enum>(13)</enum><text>$160,000,000 to accelerate V–22 nacelle and reliability and safety improvements; </text></paragraph> <paragraph id="H72B8D08C00714C80A518FFF8BDE42747"><enum>(14)</enum><text>$100,000,000 to accelerate production of MQ–25 aircraft;</text></paragraph>
<paragraph id="H8BA94AE9EB024583B103871BB8E7620B"><enum>(15)</enum><text>$270,000,000 for development, procurement, and integration of Marine Corps unmanned combat aircraft;</text></paragraph> <paragraph id="H0152276998B243529ACE1C77A594FCD8"><enum>(16)</enum><text>$96,000,000 for the procurement and integration of infrared search and track pods; </text></paragraph>
<paragraph id="HDB0B073D6BEE4C14B8E56C1A5845F20D"><enum>(17)</enum><text>$50,000,000 for the procurement and integration of additional F–15EX conformal fuel tanks;</text></paragraph> <paragraph id="H282FD88F56F2411094C3EF06DB9EDD74"><enum>(18)</enum><text>$600,000,000 for the development, procurement, and integration of Air Force long-range strike aircraft; and</text></paragraph>
<paragraph id="H9BDAA4D78DA445FD87727F4D62E21618"><enum>(19)</enum><text>$500,000,000 for the development, procurement, and integration of Navy long-range strike aircraft.</text></paragraph></section> <section id="H1436E021BB3146D8904347966AB242D2"><enum>20008.</enum><header>Enhancement of resources for nuclear forces</header> <subsection id="HAB262619E47049F490164D0F28B1D3D8"><enum>(a)</enum><header>DOD appropriations</header><text>In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text>
<paragraph id="H0990A3F0BCF54B0D8C0EC2894E896511"><enum>(1)</enum><text display-inline="yes-display-inline">$2,500,000,000 for risk reduction activities for the Sentinel intercontinental ballistic missile program;</text></paragraph> <paragraph id="H50743957B3A44D879AD86E6344BE40EA"><enum>(2)</enum><text display-inline="yes-display-inline">$4,500,000,000 only for expansion of production capacity of B–21 long-range bomber aircraft and the purchase of aircraft only available through the expansion of production capacity;</text></paragraph>
<paragraph id="H81DFE35CF56B4DDA89FFE4801CB15A94"><enum>(3)</enum><text>$500,000,000 for improvements to the Minuteman III intercontinental ballistic missile system;</text></paragraph> <paragraph id="H6D0F96CD63604D9AA018971E74D4578D"><enum>(4)</enum><text>$100,000,000 for capability enhancements to intercontinental ballistic missile reentry vehicles;</text></paragraph>
<paragraph id="H72EB3DF643214C519AABBFC5B8418529"><enum>(5)</enum><text>$148,000,000 for the expansion of D5 missile motor production;</text></paragraph> <paragraph id="H77F16C954E0B4226A053E54FF8F18EBA"><enum>(6)</enum><text>$400,000,000 to accelerate the development of Trident D5LE2 submarine-launched ballistic missiles;</text></paragraph>
<paragraph id="H106F9BB58F9C419DBDF3075FFC32CAC2"><enum>(7)</enum><text>$2,000,000,000 to accelerate the development, procurement, and integration of the nuclear-armed sea-launched cruise missile;</text></paragraph> <paragraph id="H8A161C1917744FB9A8A06E6082ED1E53"><enum>(8)</enum><text>$62,000,000 to convert Ohio-class submarine tubes to accept additional missiles, not to be obligated before March 1, 2026;</text></paragraph>
<paragraph id="H3226E0CDDF7746EBAD86393D472F03F2"><enum>(9)</enum><text>$168,000,000 to accelerate the production of the Survivable Airborne Operations Center program;</text></paragraph> <paragraph id="HE2489DB8A12448498F2CE61DED9C3119" commented="no"><enum>(10)</enum><text>$65,000,000 to accelerate the modernization of nuclear command, control, and communications; </text></paragraph>
<paragraph id="H1D3FB6195B9545C68342E280724EC5A8"><enum>(11)</enum><text>$210,300,000 for the increased production of MH–139 helicopters; and</text></paragraph> <paragraph id="H29C1D59D131D413FBD880C2B0992CC99"><enum>(12)</enum><text>$150,000,000 to accelerate the development, procurement, and integration of military nuclear weapons delivery programs.</text></paragraph></subsection>
<subsection id="H55E539915FB545AB94ED9183AE02F6B1"><enum>(b)</enum><header>NNSA appropriations</header><text>In addition to amounts otherwise available, there are appropriated to the Administrator of the National Nuclear Security Administration for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="H994496B6068C4441B41A0F1C726EA6F1"><enum>(1)</enum><text display-inline="yes-display-inline">$200,000,000 to perform National Nuclear Security Administration Phase 1 studies pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>);</text></paragraph>
<paragraph id="H5090E026046246019A4447BCCCF20106"><enum>(2)</enum><text display-inline="yes-display-inline">$540,000,000 to address deferred maintenance and repair needs of the National Nuclear Security Administration pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>);</text></paragraph> <paragraph id="H7217CE6A716E4EB393E15085D537AD43"><enum>(3)</enum><text display-inline="yes-display-inline">$1,000,000,000 to accelerate the construction of National Nuclear Security Administration facilities pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>);</text></paragraph>
<paragraph id="HFA95BBBC93034A308B64C1741916C7ED"><enum>(4)</enum><text display-inline="yes-display-inline">$400,000,000 to accelerate the development, procurement, and integration of the warhead for the nuclear-armed sea-launched cruise missile pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>);</text></paragraph> <paragraph id="H155F4ABD7FDD473284F9D175E1C7A6E9"><enum>(5)</enum><text display-inline="yes-display-inline">$750,000,000 to accelerate primary capability modernization pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>);</text></paragraph>
<paragraph id="H52CE0139003E4B0EAF77226284C32523" commented="no"><enum>(6)</enum><text display-inline="yes-display-inline">$750,000,000 to accelerate secondary capability modernization pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>); </text></paragraph> <paragraph id="HA6B25274200A4794BBA9216FBB0E7FF6"><enum>(7)</enum><text display-inline="yes-display-inline">$120,000,000 to accelerate domestic uranium enrichment centrifuge deployment for defense purposes pursuant to section 3211 of the National Nuclear Security Administration Act (<external-xref legal-doc="usc" parsable-cite="usc/50/2401">50 U.S.C. 2401</external-xref>); </text></paragraph>
<paragraph id="H281E271C9BB14BBD843399B24F14CEAB"><enum>(8)</enum><text>$10,000,000 for National Nuclear Security Administration evaluation of spent fuel reprocessing technology; and</text></paragraph> <paragraph id="H37280DFD6E0E4F1FB810CD76F3E586A2"><enum>(9)</enum><text>$115,000,000 for accelerating nuclear national security missions through artificial intelligence.</text></paragraph></subsection></section>
<section id="HC379F7F710334C2FAB6E6F27AB6241BA"><enum>20009.</enum><header>Enhancement of Department of Defense resources to improve capabilities of United States Indo-Pacific Command</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="H9975CB42D8ED4C84B07DC45417E71055"><enum>(1)</enum><text>$365,000,000 for Army exercises and operations in the Western Pacific area of operations; </text></paragraph>
<paragraph id="H97BB9A4D0FF9440DB41B5B8B075FDE05"><enum>(2)</enum><text>$53,000,000 for Special Operations Command exercises and operations in the Western Pacific area of operations; </text></paragraph> <paragraph id="HC726888CA6AC4C67859ED6A51257769A"><enum>(3)</enum><text>$47,000,000 for Marine Corps exercises and operations in Western Pacific area of operations; </text></paragraph>
<paragraph id="HD36F0BD981924036AA08DD2C79504E59"><enum>(4)</enum><text>$90,000,000 for Air Force exercises and operations in Western Pacific area of operations; </text></paragraph> <paragraph id="HD08DE14CBE0F4D568FCCE7CCF4D541C2"><enum>(5)</enum><text>$532,600,000 for the Pacific Air Force biennial large-scale exercise; </text></paragraph>
<paragraph id="H37C763A846B64C6C89604725C192B9A5"><enum>(6)</enum><text>$19,000,000 for the development of naval small craft capabilities;</text></paragraph> <paragraph id="H831B65A8FEE643DDB8C39AEFDD42DE85"><enum>(7)</enum><text display-inline="yes-display-inline">$35,000,000 for military additive manufacturing capabilities in the United States Indo-Pacific Command area of operations west of the international dateline;</text></paragraph>
<paragraph id="H11E46C2218574AE190343F31A0ABAF9F"><enum>(8)</enum><text>$450,000,000 for the development of airfields within the area of operations of United States Indo-Pacific Command; </text></paragraph> <paragraph id="HC609AE393BA34B58A7C886B8CD68AA67"><enum>(9)</enum><text display-inline="yes-display-inline">$1,100,000,000 for development of infrastructure within the area of operations of United States Indo-Pacific Command;</text></paragraph>
<paragraph id="H2359FAE918334D1385F0577BFEAEE8DC"><enum>(10)</enum><text>$124,000,000 for mission networks for United States Indo-Pacific Command; </text></paragraph> <paragraph id="H935C359C5C334C6D95D6C8AC10A58813"><enum>(11)</enum><text>$100,000,000 for Air Force regionally based cluster pre-position base kits;</text></paragraph>
<paragraph id="H699372136F3B4A0E8D92B96241F364DB"><enum>(12)</enum><text>$115,000,000 for exploration and development of existing Arctic infrastructure; </text></paragraph> <paragraph id="H101EDFB4DE6F41B587DD1582F4F8DB60"><enum>(13)</enum><text>$90,000,000 for the accelerated development of non-kinetic capabilities; </text></paragraph>
<paragraph id="H5A42D4C117944B94B0D168D58DE87F97"><enum>(14)</enum><text display-inline="yes-display-inline">$20,000,000 for United States Indo-Pacific Command military exercises;</text></paragraph> <paragraph id="H1CF4441904A24D60BD2E4C94BC785073"><enum>(15)</enum><text>$143,000,000 for anti-submarine sonar arrays; </text></paragraph>
<paragraph id="H2D4A37A7D0BB4EBAA3E6096470020FCE"><enum>(16)</enum><text>$30,000,000 for surveillance and reconnaissance capabilities for United States Africa Command; </text></paragraph> <paragraph id="H637DA3C9282A4269BA69B0939AD8646A"><enum>(17)</enum><text>$30,000,000 for surveillance and reconnaissance capabilities for United States Indo-Pacific Command; </text></paragraph>
<paragraph id="HD15759849AB54288A08712DC095C4850"><enum>(18)</enum><text>$500,000,000 for the development, coordination, and deployment of economic competition effects within the Department of Defense; </text></paragraph> <paragraph id="H4FF8FF5808E840FB869CF5AC5D7D61F4"><enum>(19)</enum><text>$10,000,000 for the expansion of Department of Defense workforce for economic competition;</text></paragraph>
<paragraph id="H780FC76CA9EC455087A42AAAE8C1A02D"><enum>(20)</enum><text>$1,000,000,000 for offensive cyber operations; </text></paragraph> <paragraph id="H52A11F1A922B4ED59F339FD1BF61C685"><enum>(21)</enum><text display-inline="yes-display-inline">$500,000,000 for personnel and operations costs associated with forces assigned to United States Indo-Pacific Command; </text></paragraph>
<paragraph id="HC59C94D8AA6E417EA78E8483DC0920FB"><enum>(22)</enum><text>$300,000,000 for the procurement of mesh network communications capabilities for Special Operations Command Pacific;</text></paragraph> <paragraph id="H886272A0D61E44A18DE24CE4E204429C"><enum>(23)</enum><text display-inline="yes-display-inline">$850,000,000 for the replenishment of military articles;</text></paragraph>
<paragraph id="HB92704B91E714E69B60F63DBF0F3A807"><enum>(24)</enum><text display-inline="yes-display-inline">$200,000,000 for acceleration of Guam Defense System program;</text></paragraph> <paragraph id="HC1A71ED5EB7E41589F36B7D680269510"><enum>(25)</enum><text>$68,000,000 for Space Force facilities improvements;</text></paragraph>
<paragraph id="HB87F795580B44C808563FDA439B59D4F"><enum>(26)</enum><text>$150,000,000 for ground moving target indicator military satellites;</text></paragraph> <paragraph id="H7A7A82CDFB284CBCB4F1258AC3CEF2F4"><enum>(27)</enum><text>$528,000,000 for DARC and SILENTBARKER military space situational awareness programs; </text></paragraph>
<paragraph id="H6EE936CEC5F747508FC5CE3CE0485310"><enum>(28)</enum><text>$80,000,000 for Navy Operational Support Division;</text></paragraph> <paragraph id="H7745F8A511CE479F869E37AA1DCD7A90"><enum>(29)</enum><text>$1,000,000,000 for the X–37B military spacecraft program;</text></paragraph>
<paragraph id="H2C6857AD42804A31814F1FBAF1CB6AF9"><enum>(30)</enum><text>$3,650,000,000 for the development, procurement, and integration of United States military satellites and the protection of United States military satellites.</text></paragraph> <paragraph id="H76A2234AFAD14EFF8F4C0F157FBBF13E"><enum>(31)</enum><text>$125,000,000 for the development, procurement, and integration of military space communications.</text></paragraph>
<paragraph id="H8B614263CD004E08A3BD0AA62B7F654E"><enum>(32)</enum><text>$350,000,000 for the development, procurement, and integration of military space command and control systems.</text></paragraph></section> <section id="H466D9F4311E845499D18FEA430BE5CDB"><enum>20010.</enum><header>Enhancement of Department of Defense resources for improving the readiness of the Department of Defense</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text>
<paragraph id="HD9BD1F90816F4E2F9F15037FAF9CA009"><enum>(1)</enum><text>$1,400,000,000 for a pilot program on OPN-8 maritime spares and repair rotable pool;</text></paragraph> <paragraph id="H125522EAD9E64A4CAB92E62B4A40B10F"><enum>(2)</enum><text>$700,000,000 for a pilot program on OPN-8 maritime spares and repair rotable pool for amphibious ships;</text></paragraph>
<paragraph id="HB6530EEDF9BC46DE875DAF23557603CA"><enum>(3)</enum><text display-inline="yes-display-inline">$2,118,000,000 for spares and repairs to keep Air Force aircraft mission capable;</text></paragraph> <paragraph id="H37BBDDBDAFBD4A14B60166A4B2A7EE70"><enum>(4)</enum><text>$1,500,000,000 for Army depot modernization and capacity enhancement;</text></paragraph>
<paragraph id="H97D995516736400CB69280578B3C4F3D"><enum>(5)</enum><text>$2,000,000,000 for Navy depot and shipyard modernization and capacity enhancement; </text></paragraph> <paragraph id="H2F28B8AA99D349139D6829DAFD188F13"><enum>(6)</enum><text display-inline="yes-display-inline">$250,000,000 for Air Force depot modernization and capacity enhancement;</text></paragraph>
<paragraph id="HDD936770B21B4E67B39F772F187E2ED2"><enum>(7)</enum><text>$1,640,000,000 for Special Operations Command equipment, readiness, and operations;</text></paragraph> <paragraph id="HCDD2456498014C9BAC4B502A1FBD3719"><enum>(8)</enum><text>$500,000,000 for National Guard unit readiness; </text></paragraph>
<paragraph id="H62F5B6490B374A679D1F1673A59113BB"><enum>(9)</enum><text>$400,000,000 for Marine Corps readiness and capabilities;</text></paragraph> <paragraph id="H47E51DCE71F54102B78EBAC4ACC8FBA1"><enum>(10)</enum><text>$20,000,000 for upgrades to Marine Corps utility helicopters; </text></paragraph>
<paragraph id="HB5F3940DEC88450B802CCB131BF838A0"><enum>(11)</enum><text display-inline="yes-display-inline">$310,000,000 for next-generation vertical lift, assault, and intra-theater aeromedical evacuation aircraft; </text></paragraph> <paragraph id="HBEDA0055D7144177A2F0F5DB2C0B210A"><enum>(12)</enum><text>$75,000,000 for the procurement of anti-lock braking systems for Army wheeled transport vehicles;</text></paragraph>
<paragraph id="HF7412ABCEB41458FBD2E2F206D7C83D8"><enum>(13)</enum><text>$230,000,000 for the procurement of Army wheeled combat vehicles;</text></paragraph> <paragraph id="H3C115452F8B64FE183722CD131A81075"><enum>(14)</enum><text>$63,000,000 for the development of advanced rotary-wing engines; </text></paragraph>
<paragraph id="H65EBA348B1FC4D3785608AA34CADFF48"><enum>(15)</enum><text>$241,000,000 for the development, procurement, and integration of Marine Corps amphibious vehicles; </text></paragraph> <paragraph id="H0AE86450239049FBB356FDD5695BB237"><enum>(16)</enum><text>$250,000,000 for the procurement of Army tracked combat transport vehicles;</text></paragraph>
<paragraph id="HB7D2E0179331485494ECAEFA04C9BB4D"><enum>(17)</enum><text>$98,000,000 for additional Army light rotary-wing capabilities;</text></paragraph> <paragraph id="HC800842C214B4FBE843CD1B99A496D58"><enum>(18)</enum><text>$1,500,000,000 for increased depot maintenance and shipyard maintenance activities;</text></paragraph>
<paragraph id="HA10544BBE6CF4956BA3DB35779F9E748"><enum>(19)</enum><text>$2,500,000,000 for Air Force facilities sustainment, restoration, and modernization; </text></paragraph> <paragraph id="H01AF0012485645C3B958FE150F13E81E"><enum>(20)</enum><text>$92,500,000 for the completion of Robotic Combat Vehicle prototyping;</text></paragraph>
<paragraph id="H4B388193D122483C8EE91D31CFC8D36C"><enum>(21)</enum><text>$125,000,000 for Army operations;</text></paragraph> <paragraph id="HCA7E8DAAE46F497DA1F4815DCCEC9C79"><enum>(22)</enum><text>$10,000,000 for the Air Force Concepts, Development, and Management Office; and</text></paragraph>
<paragraph id="H7EC25EDAF33D49B882261176B7987078"><enum>(23)</enum><text>$320,000,000 for Joint Special Operations Command.</text></paragraph></section> <section id="HE6CC3B36F9B94F118051243C8031F787"><enum>20011.</enum><header>Improving Department of Defense border support and counter-drug missions</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $1,000,000,000 for the deployment of military personnel in support of border operations, operations and maintenance activities in support of border operations, counter-narcotics and counter-transnational criminal organization mission support, the operation of national defense areas and construction in national defense areas, and the temporary detention of migrants on Department of Defense installations, in accordance with <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/10/15">chapter 15</external-xref> of title 10, United States Code.</text></section>
<section id="HF3676486AA0D43DF945902EBB34776DC" commented="no"><enum>20012.</enum><header>Department of Defense oversight</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Inspector General of the Department of Defense for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $10,000,000, to remain available through September 30, 2029, to monitor Department of Defense activities for which funding is appropriated in this title, including—</text> <paragraph id="H6697FCD3F6FC431782768B79F1DCBD8F"><enum>(1)</enum><text>programs with mutual technological dependencies;</text></paragraph>
<paragraph id="H80BB4AC4916D47AF997D41349DC47B94"><enum>(2)</enum><text>programs with related data management and data ownership considerations; and</text></paragraph> <paragraph id="HD005A3D73D154A06A86DF714B26D6A17"><enum>(3)</enum><text>programs particularly vulnerable to supply chain disruptions and long lead time components.</text></paragraph></section>
<section id="HFF36FA8CF804435A9F7FA6E38AB996EC"><enum>20013.</enum><header>Military construction projects authorized</header>
<subsection id="H71BB78FDCEDE4EF99D55622457165235"><enum>(a)</enum><header>Authorization of appropriations</header><text display-inline="yes-display-inline">Funds are hereby authorized to be appropriated for military construction, land acquisition, and military family housing functions of each military department (as defined in section 101(a) of title 10, United States Code) as specified in this title.</text></subsection> <subsection id="H7FB84679EDD341B48B94F26634A88059"><enum>(b)</enum><header>Spending plan</header><text display-inline="yes-display-inline">Not later than 30 days after the date of the enactment of this title, the Secretary of each military department shall submit to the Committees on Armed Services of the Senate and House of Representatives a detailed spending plan by project for all funds made available by this title to be expended on military construction projects.</text></subsection></section></title>
<title id="HAFCE4253E9484C58B8E5FFCAFA0F6046" style="OLC"><enum>III</enum><header>Committee on Banking, Housing, and Urban Affairs</header>
<section id="H9ED22D71F9474090A33D3DE1FC3540DB"><enum>30001.</enum><header>Funding cap for the Bureau of Consumer Financial Protection</header><text display-inline="no-display-inline">Section 1017(a)(2)(A)(iii) of the Consumer Financial Protection Act of 2010 (<external-xref legal-doc="usc" parsable-cite="usc/12/5497">12 U.S.C. 5497(a)(2)(A)(iii)</external-xref>) is amended by striking <quote>12</quote> and inserting <quote>6.5</quote>.</text></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H7470A4A5A72749EBACEE916A326B1AD5"><enum>30002.</enum><header display-inline="yes-display-inline">Rescission of funds for Green and Resilient Retrofit Program for Multifamily Housing</header><text display-inline="no-display-inline">The unobligated balances of amounts made available under section 30002(a) of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of S. Con. Res. 14</quote>, approved August 16, 2022 (<external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref>; 136 Stat. 2027) are rescinded.</text></section>
<section id="HB584672373EC4E7097D212BCA67D6434"><enum>30003.</enum><header>Securities and Exchange Commission Reserve Fund</header>
<subsection commented="no" display-inline="no-display-inline" id="H2A0841D1C0FC44D983A31D4C979E26FC"><enum>(a)</enum><header>In general</header><text>Section 4 of the Securities Exchange Act of 1934 (<external-xref legal-doc="usc" parsable-cite="usc/15/78d">15 U.S.C. 78d</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HF9201FCDF0F54D4D85359ED5478C4C51"><enum>(1)</enum><text>by striking subsection (i); and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HE78628261C43446B88E251258338F2E9"><enum>(2)</enum><text>by redesignating subsections (j) and (k) as subsections (i) and (j), respectively.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H9B243076A3D54C6BB0C40622D3295FA7"><enum>(b)</enum><header>Technical and conforming amendment</header><text>Section 21F(g)(2) of the Securities Exchange Act of 1934 (<external-xref legal-doc="usc" parsable-cite="usc/15/78u-6">15 U.S.C. 78u–6(g)(2)</external-xref>) is amended to read as follows:</text>
<quoted-block id="H7ED76CFEA9364CE49466ABF84E917C81" style="OLC" act-name="">
<subsection id="H4753CD3238044B3D820FE5EB899F0439"><enum>(a)</enum><header>Use of Fund</header><text>The Fund shall be available to the Commission, without further appropriation or fiscal year limitation, for paying awards to whistleblowers as provided in subsection (b).</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="H942BA53D575F40C1902D21BE4E87E19F"><enum>(c)</enum><header>Transition provision</header><text>During the period beginning on the date of enactment of this Act and ending on October 1, 2025, the Securities and Exchange Commission may expend amounts in the Securities and Exchange Commission Reserve Fund that were obligated before the date of enactment of this Act for any program, project, or activity that is ongoing (as of the day before the date of enactment of this Act) in accordance with subsection (i) of section 4 of the Securities Exchange Act of 1934 (<external-xref legal-doc="usc" parsable-cite="usc/15/78d">15 U.S.C. 78d</external-xref>), as in effect on the day before the date of enactment of this Act.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H964607583D9B4BDEB015B2EA0A6DF57B"><enum>(d)</enum><header>Transfer of remaining amounts</header><text>Effective on October 1, 2025, the obligated and unobligated balances of amounts in the Securities and Exchange Commission Reserve Fund shall be transferred to the general fund of the Treasury.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H8C6D1F49539C49C49A66B2F44B0091ED"><enum>(e)</enum><header>Closing of account</header><text>For the purposes of section 1555 of title 31, United States Code, the Securities and Exchange Commission Reserve Fund shall be considered closed, and thereafter shall not be available for obligation or expenditure for any purpose, upon execution of the transfer required under subsection (d).</text></subsection></section>
<section commented="no" display-inline="no-display-inline" id="H88791FC25F70455BB6FDE368B66EC6FD"><enum>30004.</enum><header>Appropriations for Defense Production Act</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated for fiscal year 2025, out of amounts not otherwise appropriated, $1,000,000,000, to remain available until September 30, 2027, to carry out the Defense Production Act (<external-xref legal-doc="usc" parsable-cite="usc/50/4501">50 U.S.C. 4501 et seq.</external-xref>).</text></section></title> <title id="H37A96C7C4AAF4F96A77F1F1BA401DCBE" style="OLC"><enum>IV</enum><header>Committee on Commerce, Science, and Transportation</header> <section id="H3D6FBE1C60794F909BA5CE180FF383FE"><enum>40001.</enum><header>Coast Guard mission readiness</header> <subsection commented="no" display-inline="no-display-inline" id="H5C454300D42543C482021BC717DD1D08"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/14/11">Chapter 11</external-xref> of title 14, United States Code, is amended by adding at the end the following:</text>
<quoted-block style="USC" display-inline="no-display-inline" id="HEB3826EC39414EC2A8DD16227FCFB7B9" act-name="">
<subchapter id="H7803A1ADB48C403294B31BD611CE6C92" style="OLC"><enum>V</enum><header>Coast Guard mission readiness</header>
<section id="HEB10C95851CB49ABA206B4F05EFF28FF"><enum>1181.</enum><header>Special appropriations</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Coast Guard for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $24,593,500,000, to remain available until September 30, 2029, notwithstanding paragraphs (1) and (2) of section 1105(a) and sections 1131, 1132, 1133, and 1156, to use expedited processes to procure or acquire new operational assets and systems, to maintain existing assets and systems, to design, construct, plan, engineer, and improve necessary shore infrastructure, and to enhance operational resilience for monitoring, search and rescue, interdiction, hardening of maritime approaches, and navigational safety, of which—</text> <paragraph id="H75FFA59BAD3C4930943ED9E97AEC77DD"><enum>(1)</enum><text>$1,142,500,000 is provided for procurement and acquisition of fixed-wing aircraft, equipment related to such aircraft and training simulators and program management for such aircraft, to provide for security of the maritime border;</text></paragraph>
<paragraph id="HE6E7E7ABA41C4D22A70CF726ECEC3294"><enum>(2)</enum><text>$2,283,000,000 is provided for procurement and acquisition of rotary-wing aircraft, equipment related to such aircraft and training simulators and program management for such aircraft, to provide for security of the maritime border;</text></paragraph> <paragraph id="H7CFFD25500D64839A0CC0A0DC3D33F43"><enum>(3)</enum><text>$266,000,000 is provided for procurement and acquisition of long-range unmanned aircraft and base stations, equipment related to such aircraft and base stations, and program management for such aircraft and base stations, to provide for security of the maritime border;</text></paragraph>
<paragraph id="H1116F86AE45043F4A4566C66F0A1008D"><enum>(4)</enum><text>$4,300,000,000 is provided for procurement of Offshore Patrol Cutters, equipment related to such cutters, and program management for such cutters, to provide operational presence and security of the maritime border and for interdiction of persons and controlled substances;</text></paragraph> <paragraph id="HF0F7F1D67CB44AFD803EE9FC9CA91173"><enum>(5)</enum><text>$1,000,000,000 is provided for procurement of Fast Response Cutters, equipment related to such cutters, and program management for such cutters, to provide operational presence and security of the maritime border and for interdiction of persons and controlled substances;</text></paragraph>
<paragraph id="H29F78A8CF79B4EF7A24C0C79CCC4AB65"><enum>(6)</enum><text>$4,300,000,000 is provided for procurement of Polar Security Cutters, equipment related to such cutters, and program management for such cutters, to ensure timely presence of the Coast Guard in the Arctic and Antarctic regions;</text></paragraph> <paragraph id="H454730FE29194A0699065FED586C5769"><enum>(7)</enum><text>$3,500,000,000 is provided for procurement of Arctic Security Cutters, equipment related to such cutters, and program management for such cutters, to ensure timely presence of the Coast Guard in the Arctic and Antarctic regions;</text></paragraph>
<paragraph id="H95E52B9B5FD1432CA0C2D49C03B288CA"><enum>(8)</enum><text>$816,000,000 is provided for procurement of light and medium icebreaking cutters, and equipment relating to such cutters, from shipyards that have demonstrated success in the cost-effective application of design standards and in delivering, on schedule and within budget, vessels of a size and tonnage that are not less than the size and tonnage of the cutters described in this paragraph, and for program management for such cutters, to expand domestic icebreaking capacity;</text></paragraph> <paragraph id="HDA61B45D5F8B4DA1B4C47603729CDB85"><enum>(9)</enum><text>$162,000,000 is provided for procurement of Waterways Commerce Cutters, equipment related to such cutters, and program management for such cutters, to support aids to navigation, waterways and coastal security, and search and rescue in inland waterways;</text></paragraph>
<paragraph id="HC771F15612B04762BBF83B7850FE7FC7"><enum>(10)</enum><text>$4,379,000,000 is provided for design, planning, engineering, recapitalization, construction, rebuilding, and improvement of, and program management for, shore facilities, of which— </text> <subparagraph commented="no" display-inline="no-display-inline" id="HEDB3AD11DC044FA3ADEBB32BB5E9B8E1"><enum>(A)</enum><text display-inline="yes-display-inline">$425,000,000 is provided for design, planning, engineering, construction of, and program management for—</text>
<clause commented="no" display-inline="no-display-inline" id="H46269E6E70004A048112BB51645B6647"><enum>(i)</enum><text display-inline="yes-display-inline">the enlisted boot camp barracks and multi-use training center; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H39F1D2DF696343C4B64050BAE49CFDCE"><enum>(ii)</enum><text display-inline="yes-display-inline">other related facilities at the enlisted boot camp; </text></clause></subparagraph>
<subparagraph id="H2D816C72A3024E91B9FEBE2818A7B280"><enum>(B)</enum><text>$500,000,000 is provided for— </text> <clause commented="no" display-inline="no-display-inline" id="HFEF296A43CCE4952BCD2925C332C3C97"><enum>(i)</enum><text display-inline="yes-display-inline">construction, improvement, and dredging at the Coast Guard Yard; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HD81650255FA144EF9194566D9A9C43D2"><enum>(ii)</enum><text display-inline="yes-display-inline">acquisition of a floating drydock for the Coast Guard Yard; </text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H1ACD971A18554715A4FF0875AAB95E13"><enum>(C)</enum><text display-inline="yes-display-inline">not more than $2,729,500,000 is provided for homeports and hangars for cutters and aircraft for which funds are appropriated under paragraph (1) through (9); and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H3CFA4C4404B64978ACFD36BE67B78A72"><enum>(D)</enum><text display-inline="yes-display-inline">$300,000,000 is provided for homeporting of the existing polar icebreaker commissioned into service in 2025;</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H8AC8156ABA62439EA4FC2479D1D4CCD4"><enum>(11)</enum><text display-inline="yes-display-inline">$2,200,000,000 is provided for aviation, cutter, and shore facility depot maintenance and maintenance of command, control, communication, computer, and cyber assets;</text></paragraph>
<paragraph id="H9BF1F244DD6B4F469056F69AB1C85FB2"><enum>(12)</enum><text>$170,000,000 is provided for improving maritime domain awareness on the maritime border, at United States ports, at land-based facilities and in the cyber domain; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H50B152CA56EF4869BA986B300A6F40F8"><enum>(13)</enum><text display-inline="yes-display-inline">$75,000,000 is provided to contract the services of, acquire, or procure autonomous maritime systems.</text></paragraph></section></subchapter><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HA41B121F01C94B12BE076363930D4866"><enum>(b)</enum><header>Technical and conforming amendment</header><text>The analysis for <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/14/11">chapter 11</external-xref> of title 14, United States Code, is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H00ED50E4D3B142FBAD110343483DDE0A"> <toc> <toc-entry level="subchapter" bold="off">Subchapter V—Coast Guard mission readiness</toc-entry> <toc-entry level="section" bold="off">1181. Special appropriations.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section> <section id="H29B71ED8B92F4C9985BB7D3E041F99F0"><enum>40002.</enum><header>Spectrum auctions</header> <subsection id="H2C66D7470C514ADBAFA79A08AB44A28D"><enum>(a)</enum><header>Definitions</header><text>In this section:</text>
<paragraph id="H1C3DF6885D324C6DAE9BA406BCF2F29A"><enum>(1)</enum><header>Assistant Secretary</header><text>The term <term>Assistant Secretary</term> means the Assistant Secretary of Commerce for Communications and Information.</text></paragraph> <paragraph id="H7F053D21F0B54D3F86EA9F092F34C5B5"><enum>(2)</enum><header>Commission</header><text>The term <term>Commission</term> means the Federal Communications Commission.</text></paragraph>
<paragraph id="HE0DBE4EB609940AB9A217007116AD53E"><enum>(3)</enum><header>Covered band</header><text>The term <term>covered band</term>—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HE433ED22992C4DAE8E3D2CB81D40AC86"><enum>(A)</enum><text display-inline="yes-display-inline">except as provided in subparagraph (B), means the band of frequencies between 1.3 gigahertz and 10.5 gigahertz; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H3CEFD52B2C9E41A79C070A12C78BE303"><enum>(B)</enum><text>does not include—</text> <clause commented="no" display-inline="no-display-inline" id="H9B38EBC654A44800AA950AC70BC1BCD7"><enum>(i)</enum><text display-inline="yes-display-inline">the band of frequencies between 3.1 gigahertz and 3.45 gigahertz for purposes of auction, reallocation, modification, or withdrawal; or</text></clause>
<clause id="H5AA32EE8525F469BBA4F87E3EAD7769C"><enum>(ii)</enum><text>the band of frequencies between 7.4 gigahertz and 8.4 gigahertz for purposes of auction, reallocation, modification, or withdrawal.</text></clause></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H0269FB8636AA4F16BCF4911266BFFFB9"><enum>(4)</enum><header display-inline="yes-display-inline">Full-power commercial licensed use cases</header><text>The term <term>full-power commercial licensed use cases</term> means flexible use wireless broadband services with base station power levels sufficient for high-power, high-density, and wide-area commercial mobile services, consistent with the service rules under part 27 of title 47, Code of Federal Regulations, or any successor regulations, for wireless broadband deployments throughout the covered band.</text></paragraph></subsection>
<subsection id="HAC16F7B7F1644EF9AF2BE07EAFD53EA4"><enum>(b)</enum><header>General auction authority</header>
<paragraph commented="no" display-inline="no-display-inline" id="HFAF0BA5399F8423B9C5A93EE8D8686B1"><enum>(1)</enum><header display-inline="yes-display-inline">Amendment</header><text>Section 309(j)(11) of the Communications Act of 1934 (<external-xref legal-doc="usc" parsable-cite="usc/47/309">47 U.S.C. 309(j)(11)</external-xref>) is amended by striking <quote>grant a license or permit under this subsection shall expire March 9, 2023</quote> and all that follows and inserting the following: "complete a system of competitive bidding under this subsection shall expire September 30, 2034, except that, with respect to the electromagnetic spectrum—</text> <quoted-block style="OLC" display-inline="yes-display-inline" id="H1EAAD27147AE455B9A62A2262523416F"> <subparagraph commented="no" display-inline="no-display-inline" id="H78CDCDBA4DBB4E2380F34DC7DDD560EE"><enum>(A)</enum><text display-inline="yes-display-inline">between the frequencies of 3.1 gigahertz and 3.45 gigahertz, such authority shall not apply; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H1B86615DB1474DE0B27DE9BE6B6EC3A6"><enum>(B)</enum><text display-inline="yes-display-inline">between the frequencies of 7.4 gigahertz and 8.4 gigahertz, such authority shall not apply.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H2F2D3E79A07F40B78D60833D6B5ED7FC"><enum>(2)</enum><header>Spectrum auctions</header><text>The Commission shall grant licenses through systems of competitive bidding, before the expiration of the general auction authority of the Commission under section 309(j)(11) of the Communications Act of 1934 (<external-xref legal-doc="usc" parsable-cite="usc/47/309">47 U.S.C. 309(j)(11)</external-xref>), as amended by paragraph (1) of this subsection, for not less than 300 megahertz, including by completing a system of competitive bidding not later than 2 years after the date of enactment of this Act for not less than 100 megahertz in the band between 3.98 gigahertz and 4.2 gigahertz.</text></paragraph></subsection>
<subsection id="H04D4C65BBF614300BFE8133AE7250880"><enum>(c)</enum><header>Identification for reallocation</header>
<paragraph commented="no" display-inline="no-display-inline" id="HE2540B13A5AD4499A5FB9E629B8EDB8E"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>The Assistant Secretary, in consultation with the Commission, shall identify 500 megahertz of frequencies in the covered band for reallocation to non-Federal use, shared Federal and non-Federal use, or a combination thereof, for full-power commercial licensed use cases, that—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H02E69E7226F242D5A83D46A73FB2D9A9"><enum>(A)</enum><text display-inline="yes-display-inline">as of the date of enactment of this Act, are allocated for Federal use; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H20B3D5E066EC42148C92BE9614CCB85A"><enum>(B)</enum><text display-inline="yes-display-inline">shall be in addition to the 300 megahertz of frequencies for which the Commission grants licenses under subsection (b)(2).</text></subparagraph></paragraph> <paragraph id="H20CD1F64FC8E4A4CAAE1F99DB1C9A2E7"><enum>(2)</enum><header>Schedule</header><text>The Assistant Secretary shall identify the frequencies under paragraph (1) according to the following schedule:</text>
<subparagraph id="H17EBD06E508B4BD29AE4A266D74CF788"><enum>(A)</enum><text>Not later than 2 years after the date of enactment of this Act, the Assistant Secretary shall identify not less than 200 megahertz of frequencies within the covered band.</text></subparagraph> <subparagraph id="H89ECC3688A724660ABF4077C6F11242B"><enum>(B)</enum><text>Not later than 4 years after the date of enactment of this Act, the Assistant Secretary shall identify any remaining bandwidth required to be identified under paragraph (1).</text></subparagraph></paragraph>
<paragraph id="H4A9C74D2ADA644A4931ECADDEE04C5EE"><enum>(3)</enum><header>Required analysis</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H67C543BDE2DC4E90A052FCDF94049A99"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>In determining under paragraph (1) which specific frequencies within the covered band to reallocate, the Assistant Secretary shall determine the feasibility of the reallocation of frequencies.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H11A8D667D9EC4A6B95A9A48EEDB6731E"><enum>(B)</enum><header>Requirements</header><text>In conducting the analysis under subparagraph (A), the Assistant Secretary shall assess net revenue potential, relocation or sharing costs, as applicable, and the feasibility of reallocating specific frequencies, with the goal of identifying the best approach to maximize net proceeds of systems of competitive bidding for the Treasury, consistent with section 309(j) of the Communications Act of 1934 (<external-xref legal-doc="usc" parsable-cite="usc/47/309">47 U.S.C. 309(j)</external-xref>).</text></subparagraph></paragraph></subsection>
<subsection id="HD3DD2F5327744734A0D6597CD8977E6A"><enum>(d)</enum><header>Auctions</header><text>The Commission shall grant licenses for the frequencies identified for reallocation under subsection (c) through systems of competitive bidding in accordance with the following schedule:</text> <paragraph id="H6AD47A2FBA164CF5BF34B03FABD8CB60"><enum>(1)</enum><text>Not later than 4 years after the date of enactment of this Act, the Commission shall, after notifying the Assistant Secretary, complete 1 or more systems of competitive bidding for not less than 200 megahertz of the frequencies.</text></paragraph>
<paragraph id="H0A433C653BA848AB9C55240772A641D7"><enum>(2)</enum><text>Not later than 8 years after the date of enactment of this Act, the Commission shall, after notifying the Assistant Secretary, complete 1 or more systems of competitive bidding for any frequencies identified under subsection (c) that remain to be auctioned after compliance with paragraph (1) of this subsection.</text></paragraph></subsection> <subsection id="H82EE518C062E49CD80AFB8601075148B"><enum>(e)</enum><header>Limitation</header><text>The President shall modify or withdraw any frequency proposed for reallocation under this section not later than 60 days before the commencement of a system of competitive bidding scheduled by the Commission with respect to that frequency, if the President determines that such modification or withdrawal is necessary to protect the national security of the United States.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H7032F97465B94DACB3624824D37DB633"><enum>(f)</enum><header>Appropriation</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there is appropriated to the Department of Commerce for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $50,000,000, to remain available through September 30, 2034, to provide additional support to the Assistant Secretary to—</text> <paragraph commented="no" display-inline="no-display-inline" id="H9FB37996E5524A55931DDDF0D514CF00"><enum>(1)</enum><text display-inline="yes-display-inline">conduct a timely spectrum analysis of the bands of frequencies—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HD9B23A60EF824BF685FD7EB4B4576A00"><enum>(A)</enum><text display-inline="yes-display-inline">between 2.7 gigahertz and 2.9 gigahertz;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H217E347EF9C84C8EA99842C20064C544"><enum>(B)</enum><text display-inline="yes-display-inline">between 4.4 gigahertz and 4.9 gigahertz; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HB5F508C386144B929B3384C655A85F99"><enum>(C)</enum><text display-inline="yes-display-inline">between 7.25 gigahertz and 7.4 gigahertz; and</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H15AB0B248CFD47649AD0A891C59BADF8"><enum>(2)</enum><text display-inline="yes-display-inline">publish a biennial report, with the last report to be published not later than June 30, 2034, on the value of all spectrum used by Federal entities (as defined in section 113(l) of the National Telecommunications and Information Administration Organization Act (<external-xref legal-doc="usc" parsable-cite="usc/47/923">47 U.S.C. 923(l)</external-xref>)), that assesses the value of bands of frequencies in increments of not more than 100 megahertz.</text></paragraph></subsection></section>
<section id="H132F7E447AF94E2FA76E606C593D5BA0"><enum>40003.</enum><header>Air traffic control improvements</header>
<subsection id="H42BA9041A0FC45B3A933D51A7848684A"><enum>(a)</enum><header>In general</header><text>For the purpose of the acquisition, construction, sustainment, and improvement of facilities and equipment necessary to improve or maintain aviation safety, in addition to amounts otherwise made available, there is appropriated to the Administrator of the Federal Aviation Administration for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph id="HF36EA86197434A238D2E1457207043AB"><enum>(1)</enum><text>$4,750,000,000 for telecommunications infrastructure modernization and systems upgrades;</text></paragraph>
<paragraph id="H5DF0A059B0D0496A95CF177BCB2877C9"><enum>(2)</enum><text>$3,000,000,000 for radar systems replacement;</text></paragraph> <paragraph id="H956337F2D3DA46D6A6637B0620787782"><enum>(3)</enum><text>$500,000,000 for runway safety technologies, runway lighting systems, airport surface surveillance technologies, and to carry out section 347 of the FAA Reauthorization Act of 2024;</text></paragraph>
<paragraph id="H11F11816C54F403F8BB789A3672DC38D"><enum>(4)</enum><text>$300,000,000 for Enterprise Information Display Systems;</text></paragraph> <paragraph id="HA7C3A7936AF04CD3AA6A2A88B5DE3A9A"><enum>(5)</enum><text>$80,000,000 to acquire and install not less than 50 Automated Weather Observing Systems, to acquire and install not less than 60 Visual Weather Observing Systems, to acquire and install not less than 64 weather camera sites, and to acquire and install weather stations;</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HCFE98453DA464ED5A07DD9CDADBC4D0D"><enum>(6)</enum><text>$40,000,000 to carry out section 44745 of title 49, United States Code, (except for activities described in paragraph (5));</text></paragraph> <paragraph id="H03454B97D6054F3898838F5A77DF8E63"><enum>(7)</enum><text>$1,900,000,000 for necessary actions to construct a new air route traffic control center (in this subsection referred to as <quote>ARTCC</quote>): <proviso><italic>Provided</italic></proviso>, That not more than 2 percent of such amount is used for planning or administrative purposes: <proviso><italic>Provided further</italic></proviso>, That at least 3 existing ARTCCs are divested and integrated into the newly constructed ARTCC;</text></paragraph>
<paragraph id="HF70F967DB7E644E9BD409053601D9450"><enum>(8)</enum><text>$100,000,000 to conduct an ARTCC Realignment and Consolidation Effort under which at least 10 existing ARTCCs are closed or consolidated to facilitate recapitalization of ARTCC facilities owned and operated by the Federal Aviation Administration;</text></paragraph> <paragraph id="H39C4DBAF62674E70B0C94DF1B9C2E214"><enum>(9)</enum><text>$1,000,000,000 to support recapitalization and consolidation of terminal radar approach control facilities (in this subsection referred to as <quote>TRACONs</quote>), the analysis and identification of TRACONs for divestment, consolidation, or integration, planning, site selection, facility acquisition, and transition activities and other appropriate activities for carrying out such divestment, consolidation, or integration, and the establishment of brand new TRACONs;</text></paragraph>
<paragraph id="H1ACE4EB17A31418B9404B708E97607C8"><enum>(10)</enum><text>$350,000,000 for unstaffed infrastructure sustainment and replacement;</text></paragraph> <paragraph id="H33F20921C7E048E1BC304F07BFBC5AB5"><enum>(11)</enum><text>$50,000,000 to carry out section 961 of the FAA Reauthorization Act of 2024;</text></paragraph>
<paragraph id="HC203BC6AE65E429C83D6900EAABA5214"><enum>(12)</enum><text>$300,000,000 to carry out section 619 of the FAA Reauthorization Act of 2024;</text></paragraph> <paragraph id="HDCAEF0D845104DD48D77A8A9B0BC1CF2"><enum>(13)</enum><text>$50,000,000 to carry out section 621 of the FAA Reauthorization Act of 2024 and to deploy remote tower technology at untowered airports; and</text></paragraph>
<paragraph id="H04D39C82968A407DB4756A80234F1582"><enum>(14)</enum><text>$100,000,000 for air traffic controller advanced training technologies.</text></paragraph></subsection> <subsection id="H6EAF891DC3F84E128BF5789786A52C74"><enum>(b)</enum><header>Quarterly reporting</header><text>Not later than 180 days after the date of enactment of this Act, and every 90 days thereafter, the Administrator of the Federal Aviation Administration shall submit to Congress a report that describes any expenditures under this section.</text></subsection></section>
<section id="H65613700A57B4A05B6D7BB37CD99D764"><enum>40004.</enum><header>Space launch and reentry licensing and permitting user fees</header>
<subsection id="H9C55BA014AE043908ABF0E1B6FC958C7"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/51/509">Chapter 509</external-xref> of title 51, United States Code, is amended by adding at the end the following new section:</text> <quoted-block style="USC" display-inline="no-display-inline" id="HF4358A052C9A41078054DD21D99366AE"> <section id="HEFD176F21DDA46E483473DB6DB136F80"><enum>50924.</enum><header>Space launch and reentry licensing and permitting user fees</header> <subsection id="HF779C3C1A0204901BDFC34D577CF3651"><enum>(a)</enum><header>Fees</header> <paragraph commented="no" display-inline="no-display-inline" id="HF29DECD93CC44DEFAF709F647DAE691C"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The Secretary of Transportation shall impose a fee, which shall be deposited in the account established under subsection (b), on each launch or reentry carried out under a license or permit issued under section 50904 during 2026 or a subsequent year, in an amount equal to the lesser of—</text>
<subparagraph id="H2DA717BF5F86452D94CFA8B509B11AE8" commented="no"><enum>(A)</enum><text>the amount specified in paragraph (2) for the year involved per pound of the weight of the payload; or</text></subparagraph> <subparagraph id="H1C30673B69FE4F10A978DF45C9AAABB6" commented="no"><enum>(B)</enum><text>the amount specified in paragraph (3) for the year involved.</text></subparagraph></paragraph>
<paragraph id="H27C7FB38034C414DB64330F8BA25F62E"><enum>(2)</enum><header>Paragraph (2) specified amount</header><text>The amount specified in this paragraph is—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H25130C433F3043B8BC9248FB4B1155D3"><enum>(A)</enum><text display-inline="yes-display-inline">for 2026, $0.25;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H2B107A482714485DA76BE12D32816C12"><enum>(B)</enum><text display-inline="yes-display-inline">for 2027, $0.35;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H2BF88B976E794AC691AA107118D9DCA5"><enum>(C)</enum><text display-inline="yes-display-inline">for 2028, $0.50;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0D3BB0BAAE1247558EE00AC259D8BE95"><enum>(D)</enum><text display-inline="yes-display-inline">for 2029, $0.60;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB574F8DB083E44F68E798AEBB9B4D41B"><enum>(E)</enum><text display-inline="yes-display-inline">for 2030, $0.75;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H327F3C82EA50436CA547E94B8053602D"><enum>(F)</enum><text display-inline="yes-display-inline">for 2031, $1;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H5F450B577057479297A602D75F0B466F"><enum>(G)</enum><text>for 2032, $1.25;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H801AC3A9C1074014B9B095D1B4B5228B"><enum>(H)</enum><text>for 2033, $1.50; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HFBBCE46F7191487AA2B78F1D21ACFADF"><enum>(I)</enum><text>for 2034 and each subsequent year, the amount specified in this paragraph for the previous year increased by the percentage increase in the consumer price index for all urban consumers (all items; United States city average) over the previous year.</text></subparagraph></paragraph>
<paragraph id="H7F85CECF6FBB490485E01BC25DF73BDF"><enum>(3)</enum><header>Paragraph (3) specified amount</header><text>The amount specified in this paragraph is—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HA1F126E6410245168C4B6FEB710B4E98"><enum>(A)</enum><text display-inline="yes-display-inline">for 2026, $30,000;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H44C59F64C4E7408DA9E53333D5B90FC3"><enum>(B)</enum><text display-inline="yes-display-inline">for 2027, $40,000;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H629B8E2A9ABC4F839B499BA7C536F1EC"><enum>(C)</enum><text display-inline="yes-display-inline">for 2028, $50,000;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HB09E0F14761A4B3DB14ABC18BBCA9AC5"><enum>(D)</enum><text display-inline="yes-display-inline">for 2029, $75,000;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HA0A8BAA658CA45E3B4E14560A67484F7"><enum>(E)</enum><text display-inline="yes-display-inline">for 2030, $100,000;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HC917B2A861F34D0D87FBA1B5AF0F099B"><enum>(F)</enum><text display-inline="yes-display-inline">for 2031, $125,000;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H10D22E6A570D4AB895392C1C7891AFCC"><enum>(G)</enum><text>for 2032, $170,000;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0D9421D6AA754AD3BAB603C880C65DE5"><enum>(H)</enum><text>for 2033, $200,000; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H5BE77DF4B2894A15AC1ABAB573FA846D"><enum>(I)</enum><text>for 2034 and each subsequent year, the amount specified in this paragraph for the previous year increased by the percentage increase in the consumer price index for all urban consumers (all items; United States city average) over the previous year.</text></subparagraph></paragraph></subsection>
<subsection id="H53DA633389F34CE1AE8C0D87C6CB312C"><enum>(b)</enum><header>Office of Commercial Space Transportation Launch and Reentry Licensing and Permitting Fund</header><text>There is established in the Treasury of the United States a separate account, which shall be known as the <quote>Office of Commercial Space Transportation Launch and Reentry Licensing and Permitting Fund</quote>, for the purposes of expenses of the Office of Commercial Space Transportation of the Federal Aviation Administration and to carry out section 630(b) of the FAA Reauthorization Act of 2024. 70 percent of the amounts deposited into the fund shall be available for such purposes and shall be available without further appropriation and without fiscal year limitation.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HDD90A597548C40BC8FFC89AE05C4FD9D"><enum>(b)</enum><header>Clerical amendment</header><text>The table of sections for <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/51/509">chapter 509</external-xref> of title 51, United States Code, is amended by inserting after the item relating to <external-xref legal-doc="usc" parsable-cite="usc/51/50923">section 50923</external-xref> the following:</text>
<quoted-block style="USC" id="H50871E3BB4B043B599DF19E5839326AA">
<toc>
<toc-entry level="section" idref="HEFD176F21DDA46E483473DB6DB136F80">50924. Space launch and reentry licensing and permitting user fees.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section>
<section id="HF7C52C9A108C4D27BFD47DDFA1CEAB4B"><enum>40005.</enum><header>Mars missions, Artemis missions, and Moon to Mars program</header>
<subsection id="H676E950E08D64CAAA0BDE1DFEC76772B"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/51/203">Chapter 203</external-xref> of title 51, United States Code, is amended by adding at the end the following:</text> <quoted-block style="USC" display-inline="no-display-inline" id="H98DB30B3791C4403A095A08C678192E2"> <section id="HDDE847FFB3E74783A582DD6C9FB378D2"><enum>20306.</enum><header>Special appropriations for Mars missions, Artemis missions, and Moon to Mars program</header> <subsection id="H45A114CCB4A04B8FBE5DF02CBE1154C7"><enum>(a)</enum><header>In general</header><text>In addition to amounts otherwise available, there is appropriated to the Administration for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $9,995,000,000, to remain available until September 30, 2032, to use as follows:</text>
<paragraph id="H5B0CED4AC8314D0FA3348B20F50DE3C1"><enum>(1)</enum><text>$700,000,000, to be obligated not later than fiscal year 2026, for the procurement, using a competitively bid, firm fixed-price contract with a United States commercial provider (as defined in section 50101(7)), of a high-performance Mars telecommunications orbiter—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HC49CB38D9AD647078F7874BDC5D44FA5"><enum>(A)</enum><text display-inline="yes-display-inline">that—</text>
<clause id="HE05A09E5B7684F41B71F48FD1745EE20"><enum>(i)</enum><text>is capable of providing robust, continuous communications for—</text> <subclause commented="no" display-inline="no-display-inline" id="H6627783873FA4E5387289B98CED7A24A"><enum>(I)</enum><text display-inline="yes-display-inline">a Mars sample return mission, as described in section 432(3)(C) of the National Aeronautics and Space Administration Transition Authorization Act of 2017 (<external-xref legal-doc="usc" parsable-cite="usc/51/20302">51 U.S.C. 20302</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/115/10">Public Law 115–10</external-xref>); and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H4447E33704DA4C46AEB4CD985FB0AC5F"><enum>(II)</enum><text display-inline="yes-display-inline">future Mars surface, orbital, and human exploration missions;</text></subclause></clause> <clause id="H63B22AE763D248A7AF0246A0D46AF080"><enum>(ii)</enum><text>supports autonomous operations, onboard processing, and extended mission duration capabilities; and</text></clause>
<clause id="HFD37B9B7B38F4840BE3A6729CBDEDE7D"><enum>(iii)</enum><text>is selected from among the commercial proposals that—</text> <subclause commented="no" display-inline="no-display-inline" id="HEDF1E15636E042AEAAB36A02527EC2BF"><enum>(I)</enum><text display-inline="yes-display-inline">received funding from the Administration in fiscal year 2024 or 2025 for commercial design studies for Mars Sample Return; and </text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H3E1C43244E1645BD8881A0A3F48702DD"><enum>(II)</enum><text display-inline="yes-display-inline">proposed a separate, independently launched Mars telecommunication orbiter supporting an end-to-end Mars sample return mission; and </text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H7474B97CA7134D3497678D17513FF056"><enum>(B)</enum><text>which shall be delivered to the Administration not later than December 31, 2028.</text></subparagraph></paragraph>
<paragraph id="HD13C4AFE30C143ABADF6A6BAA45482C2"><enum>(2)</enum><text>$2,600,000,000 to meet the requirements of section 20302(a) using the program of record known, as of the date of the enactment of this section, as <quote>Gateway</quote>, and as described in section 10811(b)(2)(B)(iv) of the National Aeronautics and Space Administration Authorization Act of 2022 (<external-xref legal-doc="usc" parsable-cite="usc/51/20302">51 U.S.C. 20302</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/117/167">Public Law 117–167</external-xref>), of which not less than $750,000,000 shall be obligated for each of fiscal years 2026, 2027, and 2028.</text></paragraph> <paragraph id="HB96D367CA0984ECEAE9322854D4BDF88"><enum>(3)</enum><text>$4,100,000,000 for expenses related to meeting the requirements of section 10812 of the National Aeronautics and Space Administration Authorization Act of 2022 (<external-xref legal-doc="usc" parsable-cite="usc/51/20301">51 U.S.C. 20301</external-xref>; <external-xref legal-doc="public-law" parsable-cite="pl/117/167">Public Law 117–167</external-xref>) for the procurement, transportation, integration, operation, and other necessary expenses of the Space Launch System for Artemis Missions IV and V, of which not less than $1,025,000,000 shall be obligated for each of fiscal years 2026, 2027, 2028, and 2029.</text></paragraph>
<paragraph id="HF33A9EC421EB46B5B3C51CA01E2E88DC"><enum>(4)</enum><text>$20,000,000 for expenses related to the continued procurement of the multi-purpose crew vehicle described in section 303 of the National Aeronautics and Space Administration Authorization Act of 2010 (<external-xref legal-doc="usc" parsable-cite="usc/42/18323">42 U.S.C. 18323</external-xref>), known as the <quote>Orion</quote>, for use with the Space Launch System on the Artemis IV Mission and reuse in subsequent Artemis Missions, of which not less than $20,000,000 shall be obligated not later than fiscal year 2026.</text></paragraph> <paragraph id="H1D4A1967232F44A3A0CB25A050C5165A"><enum>(5)</enum><text>$1,250,000,000 for expenses related to the operation of the International Space Station and for the purpose of meeting the requirement under section 503(a) of the National Aeronautics and Space Administration Authorization Act of 2010 (<external-xref legal-doc="usc" parsable-cite="usc/42/18353">42 U.S.C. 18353(a)</external-xref>), of which not less than $250,000,000 shall be obligated for such expenses for each of fiscal years 2025, 2026, 2027, 2028, and 2029.</text></paragraph>
<paragraph id="H2B50E20AE67743D3B699EE151A1EE5B8"><enum>(6)</enum><text>$1,000,000,000 for infrastructure improvements at the manned spaceflight centers of the Administration, of which not less than—</text> <subparagraph id="HB63A8D5851AD4D12A6CBC050322630D4"><enum>(A)</enum><text>$120,000,000 shall be obligated not later than fiscal year 2026 for construction, revitalization, recapitalization, or other infrastructure projects and improvements at the center described in Executive Order 12641 (53 Fed. Reg. 18816; relating to designating certain facilities of the National Aeronautics and Space Administration in the State of Mississippi as the John C. Stennis Space Center);</text></subparagraph>
<subparagraph id="H610BD670E8C94AC8B029B030B46C5B0E"><enum>(B)</enum><text>$250,000,000 shall be obligated not later than fiscal year 2026 for construction, revitalization, recapitalization, or other infrastructure projects and improvements at the center described in Executive Order 11129 (28 Fed. Reg. 12787; relating to designating certain facilities of the National Aeronautics and Space Administration and of the Department of Defense, in the State of Florida, as the John F. Kennedy Space Center);</text></subparagraph> <subparagraph id="HF89AFEDF890E4038B8B93C07A5749BF9"><enum>(C)</enum><text>$300,000,000 shall be obligated not later than fiscal year 2026 for construction, revitalization, recapitalization, or other infrastructure projects and improvements at the center described in the Joint Resolution entitled <quote>Joint Resolution to designate the Manned Spacecraft Center in Houston, Texas, as the <quote>Lyndon B. Johnson Space Center</quote> in honor of the late President</quote>, approved February 17, 1973 (<external-xref legal-doc="public-law" parsable-cite="pl/93/8">Public Law 93–8</external-xref>; 87 Stat. 7);</text></subparagraph>
<subparagraph id="HC27BE7604DF14092BD551CDA969DEA56"><enum>(D)</enum><text>$100,000,000 shall be obligated not later than fiscal year 2026 for construction, revitalization, recapitalization, or other infrastructure projects and improvements at the center described in Executive Order 10870 (25 Fed. Reg. 2197; relating to designating the facilities of the National Aeronautics and Space Administration at Huntsville, Alabama, as the George C. Marshall Space Flight Center); </text></subparagraph> <subparagraph id="HE5C0C284FD7246D0B3EA19AA93B5AEFA"><enum>(E)</enum><text>$30,000,000 shall be obligated not later than fiscal year 2026 for construction, revitalization, recapitalization, or other infrastructure projects and improvements at the Michoud Assembly Facility in New Orleans, Louisiana; and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H9AB329B3171F4210950F43F96B01BE25"><enum>(F)</enum><text>$85,000,000 shall be obligated to carry out subsection (b), of which not less than $5,000,000 shall be obligated for the transportation of the space vehicle described in that subsection, with the remainder transferred not later than the date that is 18 months after the date of the enactment of this section to the entity designated under that subsection, for the purpose of construction of a facility to house the space vehicle referred to in that subsection.</text></subparagraph></paragraph> <paragraph id="H99111A9A26234EB9A524123B2D7B2339"><enum>(7)</enum><text>$325,000,000 to fulfill contract number 80JSC024CA002 issued by the National Aeronautics and Space Administration on June 26, 2024.</text></paragraph></subsection>
<subsection id="H74C5296A875649DBA5FFBA869A2D02DB"><enum>(b)</enum><header>Space vehicle transfer</header>
<paragraph commented="no" display-inline="no-display-inline" id="H32A21C2A44AA452E8448D26D6E514F5B"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Not later than 30 days after the date of the enactment of this section, the Administrator shall identify a space vehicle described in paragraph (2) to be—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H11FBA3693BE54450950E2B6C65657EE4"><enum>(A)</enum><text display-inline="yes-display-inline">transferred to a field center of the Administration that is involved in the administration of the Commercial Crew Program (as described in section 302 of the National Aeronautics and Space Administration Transition Authorization Act of 2017 (<external-xref legal-doc="usc" parsable-cite="usc/51/50111">51 U.S.C. 50111</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/115/10">Public Law 115–10</external-xref>)); and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF517240EDF414B26877F544E4F6DDD5D"><enum>(B)</enum><text display-inline="yes-display-inline">placed on public exhibition at an entity within the Metropolitan Statistical Area where such center is located.</text></subparagraph></paragraph> <paragraph id="HEF37931950964BBD8E5DD952E986E262"><enum>(2)</enum><header>Space vehicle described</header><text>A space vehicle described in this paragraph is a vessel that—</text>
<subparagraph id="HADA7279F36B9414AA05A2C98CAC57230"><enum>(A)</enum><text>has flown into space;</text></subparagraph> <subparagraph id="H7898F3E0E80E4D6B8DD039C4A9E6A005"><enum>(B)</enum><text>has carried astronauts; and</text></subparagraph>
<subparagraph id="H1316044A464142E4A8F2A90CBD6C71C9"><enum>(C)</enum><text>is selected with the concurrence of an entity designated by the Administrator.</text></subparagraph></paragraph> <paragraph id="HBEBFD6078C50421F9CA19DF81593E573"><enum>(3)</enum><header>Transfer</header><text>Not later than 18 months after the date of the enactment of this section, the space vehicle identified under paragraph (1) shall be transferred to an entity designated by the Administrator.</text></paragraph></subsection>
<subsection id="H3AA9759C870344B7BE7741D0F3C0B7E7"><enum>(c)</enum><header>Obligation of funds</header><text display-inline="yes-display-inline">Funds appropriated under subsection (a) shall be obligated as follows:</text> <paragraph id="H864EF98315FC49AE9ED5C0059B10D45A"><enum>(1)</enum><text>Not less than 50 percent of the total funds in subsection (a) shall be obligated not later than September 30, 2028.</text></paragraph>
<paragraph id="H1CC4B5D4AF6D45FB9F4E0118FC0B6ACC"><enum>(2)</enum><text>100 percent of funds shall be obligated not later than September 30, 2029.</text></paragraph> <paragraph id="HD187A66DACD448D3BFE90712932AE8E4"><enum>(3)</enum><text>All associated outlays shall occur not later than September 30, 2034.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H7374B68B98B74B7D976D93F422BBCB9B"><enum>(b)</enum><header>Clerical amendment</header><text>The table of sections for <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/51/203">chapter 203</external-xref> of title 51, United States Code, is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H7F111675F68D4965A999122D5E10E0A1"> <toc> <toc-entry level="section" bold="off">20306. Special appropriations for Mars missions, Artemis missions, and Moon to Mars program.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section> <section id="H75512780012B493B9F400A6D924EAE1B"><enum>40006.</enum><header>Corporate average fuel economy civil penalties</header> <subsection commented="no" display-inline="no-display-inline" id="H6A08A58CD6524AB4A462B9663CE5C069"><enum>(a)</enum><header>In general</header><text>Section 32912 of title 49, United States Code, is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H73882F65281649A586A1807FDD56D12A"><enum>(1)</enum><text>in subsection (b), in the matter preceding paragraph (1), by striking <quote>$5</quote> and inserting <quote>$0.00</quote>; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H97075B0120FC4F8E8956BAB6B1183171"><enum>(2)</enum><text>in subsection (c)(1)(B), by striking <quote>$10</quote> and inserting <quote>$0.00</quote>.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HA57F8D9351BB43889C481B54D8D1D90F"><enum>(b)</enum><header>Effect; applicability</header><text>The amendments made by subsection (a) shall—</text> <paragraph commented="no" display-inline="no-display-inline" id="H54CAF4B3F44443CC85B9619D706D27FD"><enum>(1)</enum><text>take effect on the date of enactment of this section; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H0240CF57ED434D809753D67C65C7A34B"><enum>(2)</enum><text display-inline="yes-display-inline">apply to all model years of a manufacturer for which the Secretary of Transportation has not provided a notification pursuant to section 32903(b)(2)(B) of title 49, United States Code, specifying the penalty due for the average fuel economy of that manufacturer being less than the applicable standard prescribed under section 32902 of that title.</text></paragraph></subsection></section> <section id="H47AA601A68894420863A376043620379"><enum>40007.</enum><header>Payments for lease of Metropolitan Washington Airports</header><text display-inline="no-display-inline">Section 49104(b) of title 49, United States Code, is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H8999A11982054A4A9F62E4600672FB74">
<subsection id="H933E7A199D68407B80F3ED8D0F1C5648"><enum>(b)</enum><header>Payments</header>
<paragraph id="H75F4DE8F496A4E478D7D84F36D0B086C"><enum>(1)</enum><header>In general</header><text>Subject to paragraph (2), under the lease, the Airports Authority must pay to the general fund of the Treasury annually an amount, computed using the GNP Price Deflator—</text> <subparagraph id="H354049CE5DEC46C5B69BAB91199519DD"><enum>(A)</enum><text>during the period from 1987 to 2026, equal to $3,000,000 in 1987 dollars; and</text></subparagraph>
<subparagraph id="H971C0768A6A64F669A30AD58D29361AE"><enum>(B)</enum><text>for 2027 and subsequent years, equal to $15,000,000 in 2027 dollars.</text></subparagraph></paragraph> <paragraph id="H0266D8274443427F97BB94BE908D7F22"><enum>(2)</enum><header>Renegotiation</header><text>The Secretary and the Airports Authority shall renegotiate the level of lease payments at least once every 10 years to ensure that in no year the amount specified in paragraph (1)(B) is less than $15,000,000 in 2027 dollars.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></section>
<section id="H193E283821E24A35877D2819F52210FB"><enum>40008.</enum><header>Rescission of certain amounts for the National Oceanic and Atmospheric Administration</header><text display-inline="no-display-inline">Any unobligated balances of amounts appropriated or otherwise made available by sections 40001, 40002, 40003, and 40004 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2028) are hereby rescinded.</text></section> <section id="H020D3A4921CA4CA4B90F47C945F9DD70"><enum>40009.</enum><header>Reduction in annual transfers to Travel Promotion Fund</header><text display-inline="no-display-inline">Subsection (d)(2)(B) of the Travel Promotion Act of 2009 (<external-xref legal-doc="usc" parsable-cite="usc/22/2131">22 U.S.C. 2131(d)(2)(B)</external-xref>) is amended by striking <quote>$100,000,000</quote> and inserting <quote>$20,000,000</quote>.</text></section>
<section id="HEC16E2B85A704BFE889706256A218EDB"><enum>40010.</enum><header>Treatment of unobligated funds for alternative fuel and low-emission aviation technology</header><text display-inline="no-display-inline">Out of the amounts made available by section 40007(a) of title IV of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/49/44504">49 U.S.C. 44504</external-xref> note), any unobligated balances of such amounts are hereby rescinded.</text></section> <section id="HBC10CCAFC8C54EE187FCD3E6F727F818"><enum>40011.</enum><header>Rescission of amounts appropriated to Public Wireless Supply Chain Innovation Fund</header><text display-inline="no-display-inline">Of the unobligated balances of amounts made available under section 106(a) of the CHIPS Act of 2022 (<external-xref legal-doc="public-law" parsable-cite="pl/117/167">Public Law 117–167</external-xref>; 136 Stat. 1392), $850,000,000 are permanently rescinded.</text></section></title>
<title id="H97EF3ADEFF15496CBE2EA43753098AAB" style="OLC"><enum>V</enum><header>Committee on Energy and Natural Resources</header>
<subtitle id="H223F5113C3974666838372A8FA53A9B2" style="OLC"><enum>A</enum><header>Oil and gas leasing</header>
<section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HA5264AB74F1741D08C61AD57D817903B"><enum>50101.</enum><header display-inline="yes-display-inline">Onshore oil and gas leasing</header>
<subsection id="H8C86C8409DE4474D8C68DEC7DF6532C1"><enum>(a)</enum><header>Repeal of Inflation Reduction Act provisions</header>
<paragraph commented="no" display-inline="no-display-inline" id="H4A5F6D6321934F7EA0977234BC9449BF"><enum>(1)</enum><header display-inline="yes-display-inline">Onshore oil and gas royalty rates</header><text>Subsection (a) of section 50262 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2056) is repealed, and any provision of law amended or repealed by that subsection is restored or revived as if that subsection had not been enacted into law.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H8FE30C1E02CA40498BE72048110A9E1B"><enum>(2)</enum><header>Noncompetitive leasing</header><text>Subsection (e) of section 50262 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2057) is repealed, and any provision of law amended or repealed by that subsection is restored or revived as if that subsection had not been enacted into law.</text></paragraph></subsection>
<subsection id="H9DC885FA2D9E4A2E9B5815BB40285FF8"><enum>(b)</enum><header>Requirement to immediately resume onshore oil and gas lease sales</header>
<paragraph id="H6AB92E1FDDA64B7A9C0A360A0EDA006A"><enum>(1)</enum><header>In general</header><text>The Secretary of the Interior shall immediately resume quarterly onshore oil and gas lease sales in compliance with the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/181">30 U.S.C. 181 et seq.</external-xref>).</text></paragraph> <paragraph id="H91581A7CA22246608D05FC13704508B0"><enum>(2)</enum><header>Requirement</header><text>The Secretary of the Interior shall ensure—</text>
<subparagraph id="HE6B02BCAD7AC4C0D8DCFA1E551BF208B"><enum>(A)</enum><text>that any oil and gas lease sale required under paragraph (1) is conducted immediately on completion of all applicable scoping, public comment, and environmental analysis requirements under the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/181">30 U.S.C. 181 et seq.</external-xref>) and the National Environmental Policy Act of 1969 (<external-xref legal-doc="usc" parsable-cite="usc/42/4321">42 U.S.C. 4321 et seq.</external-xref>); and</text></subparagraph> <subparagraph id="HA79E97339E6346ACA432C0C47896D2CA"><enum>(B)</enum><text>that the processes described in subparagraph (A) are conducted in a timely manner to ensure compliance with subsection (b)(1).</text></subparagraph></paragraph>
<paragraph id="HB97CFBDD8B6C4D369E47F4FD8F1FAB19"><enum>(3)</enum><header>Lease of oil and gas lands</header><text>Section 17(b)(1)(A) of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/226">30 U.S.C. 226(b)(1)(A)</external-xref>), as amended by subsection (a), is amended by inserting <quote>For purposes of the previous sentence, the term <quote>eligible lands</quote> means all lands that are subject to leasing under this Act and are not excluded from leasing by a statutory prohibition, and the term <quote>available</quote>, with respect to eligible lands, means those lands that have been designated as open for leasing under a land use plan developed under section 202 of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1712">43 U.S.C. 1712</external-xref>) and that have been nominated for leasing through the submission of an expression of interest, are subject to drainage in the absence of leasing, or are otherwise designated as available pursuant to regulations adopted by the Secretary.</quote> after <quote>sales are necessary.</quote>.</text></paragraph></subsection> <subsection id="H38FC79A2B7FA49B3A77433EB80E21FFA"><enum>(c)</enum><header>Quarterly lease sales</header> <paragraph id="HF72D640C59E74F2182A5DDDFEE987924"><enum>(1)</enum><header>In general</header><text>In accordance with the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/181">30 U.S.C. 181 et seq.</external-xref>), each fiscal year, the Secretary of the Interior shall conduct a minimum of 4 oil and gas lease sales of available land in each of the following States:</text>
<subparagraph id="H40F1EC3A5B564108B2B01CB7256914E3"><enum>(A)</enum><text>Wyoming.</text></subparagraph> <subparagraph id="HFAE0C68B177A4A6A836B44C6D0AD135E"><enum>(B)</enum><text>New Mexico.</text></subparagraph>
<subparagraph id="HC3BE7287C38B41C2A05014FE10C14057"><enum>(C)</enum><text>Colorado.</text></subparagraph> <subparagraph id="H3C59D63F0B5648C8885A15BE5E7F587B"><enum>(D)</enum><text>Utah.</text></subparagraph>
<subparagraph id="H09CAA224B92C4E61B1BDAE886F837B2F"><enum>(E)</enum><text>Montana.</text></subparagraph> <subparagraph id="H2A60D13EED6F4C0DABCC62ED656BA0A1"><enum>(F)</enum><text>North Dakota.</text></subparagraph>
<subparagraph id="H5D217CD3BCF34DE5AB948E78029BEFCB"><enum>(G)</enum><text>Oklahoma.</text></subparagraph> <subparagraph id="HB26B5B001EFB46989C21C344ADAF9571"><enum>(H)</enum><text>Nevada.</text></subparagraph>
<subparagraph id="H02A188654A55401BBCD0378896C24977"><enum>(I)</enum><text>Alaska.</text></subparagraph></paragraph> <paragraph id="HC05F2D92321446FB8B4264252C7CA7A5"><enum>(2)</enum><header>Requirement</header><text>In conducting a lease sale under paragraph (1) in a State described in that paragraph, the Secretary of the Interior—</text>
<subparagraph id="HC44F910C0CEE4D92A53F4310996DCA6A"><enum>(A)</enum><text>shall offer not less than 50 percent of available parcels nominated for oil and gas development under the applicable resource management plan in effect for relevant Bureau of Land Management resource management areas within the applicable State; and</text></subparagraph> <subparagraph id="HEA7678BAD1954CE2AEFEDCC2BC57BAF0"><enum>(B)</enum><text>shall not restrict the parcels offered to 1 Bureau of Land Management field office within the applicable State unless all nominated parcels are located within the same Bureau of Land Management field office.</text></subparagraph></paragraph>
<paragraph id="H4F97339F9EC249CEBDA556A0A24F83FD"><enum>(3)</enum><header>Replacement sales</header><text>The Secretary of the Interior shall conduct a replacement sale during the same fiscal year if—</text> <subparagraph id="H47FB49AF1DC149EB9262233FB783EC81"><enum>(A)</enum><text>a lease sale under paragraph (1) is canceled, delayed, or deferred, including for a lack of eligible parcels; or</text></subparagraph>
<subparagraph id="H24D72FA462E3435EA553C3AB226C9EC0"><enum>(B)</enum><text>during a lease sale under paragraph (1) the percentage of acreage that does not receive a bid is equal to or greater than 25 percent of the acreage offered.</text></subparagraph></paragraph></subsection> <subsection id="H6344C7697BAD4254B9711CB3DC216147" commented="no"><enum>(d)</enum><header>Mineral Leasing Act reforms</header><text>Section 17 of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/226">30 U.S.C. 226</external-xref>), as amended by subsection (a), is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H599B8D123B1244D78BB92843340C7415"><enum>(1)</enum><text display-inline="yes-display-inline">by striking the section designation and all that follows through the end of subsection (a) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB108B2C0152343DCB666458C29729692"> <section id="H9C850FB9DBBF4FC78938229C1976DF65"><enum>17.</enum><header>Leasing of oil and gas parcels</header> <subsection id="HF7A507FF8CF1453488578E75D44E852A" commented="no"><enum>(a)</enum><header>Leasing authorized</header> <paragraph commented="no" display-inline="no-display-inline" id="H772FF24F765442C9B9DBF627FB4E9565"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Any parcel of land subject to disposition under this Act that is known or believed to contain oil or gas deposits shall be made available for leasing, subject to paragraph (2), by the Secretary of the Interior, not later than 18 months after the date of receipt by the Secretary of an expression of interest in leasing the applicable parcel of land available for disposition under this section, if the Secretary determines that the parcel of land is open to oil or gas leasing under the approved resource management plan applicable to the planning area in which the parcel of land is located that is in effect on the date on which the expression of interest was submitted to the Secretary (referred to in this subsection as the <quote>approved resource management plan</quote>).</text></paragraph>
<paragraph id="H35A4FDFAFA7D4F989522D78D2631783F" commented="no"><enum>(2)</enum><header>Resource management plans</header>
<subparagraph id="H95C3BE828A5442719F3B0E3C56B2680A" commented="no"><enum>(A)</enum><header>Lease terms and conditions</header><text>A lease issued by the Secretary under this section with respect to an applicable parcel of land made available for leasing under paragraph (1)—</text> <clause id="H48BD5287B56042E79DC258F51F39F2F7" commented="no"><enum>(i)</enum><text>shall be subject to the terms and conditions of the approved resource management plan; and</text></clause>
<clause id="H7F85FA72189440E2A5170AD5AA3F59CF" commented="no"><enum>(ii)</enum><text>may not require any stipulations or mitigation requirements not included in the approved resource management plan.</text></clause></subparagraph> <subparagraph id="H105751D23F3340D9A0DF38137C6C2BB3" commented="no"><enum>(B)</enum><header>Effect of amendment</header><text>The initiation of an amendment to an approved resource management plan shall not prevent or delay the Secretary from making the applicable parcel of land available for leasing in accordance with that approved resource management plan if the other requirements of this section have been met, as determined by the Secretary.</text></subparagraph></paragraph></subsection></section><after-quoted-block>;</after-quoted-block></quoted-block></paragraph>
<paragraph id="HAE4EF53A0B554750AC5579C018BFFB4A"><enum>(2)</enum><text>in subsection (p), by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H5A74EB3AF1AB457AA4F260FB1971C87B"> <paragraph commented="no" display-inline="no-display-inline" id="HC21325A5BB514FD8914A5D366ECBA078"><enum>(4)</enum><header>Term</header><text>A permit to drill approved under this subsection shall be valid for a single, non-renewable 4-year period beginning on the date that the permit to drill is approved.</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H340CFDA22806412C97F4E7125D4FE949"><enum>(3)</enum><text>by striking subsection (q) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF5D2A0625E954FC7B516739D5332754E"> <subsection id="H7448BFB3A80F4676BDF693374C1153AA" commented="no"><enum>(q)</enum><header>Commingling of production</header><text>The Secretary of the Interior shall approve applications allowing for the commingling of production from 2 or more sources (including the area of an oil and gas lease, the area included in a drilling spacing unit, a unit participating area, a communitized area, or non-Federal property) before production reaches the point of royalty measurement regardless of ownership, the royalty rates, and the number or percentage of acres for each source if the applicant agrees to install measurement devices for each source, utilize an allocation method that achieves volume measurement uncertainty levels within plus or minus 2 percent during the production phase reported on a monthly basis, or utilize an approved periodic well testing methodology. Production from multiple oil and gas leases, drilling spacing units, communitized areas, or participating areas from a single wellbore shall be considered a single source. Nothing in this subsection shall prevent the Secretary of the Interior from continuing the current practice of exercising discretion to authorize higher percentage volume measurement uncertainty levels if appropriate technical and economic justifications have been provided.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection></section>
<section id="H3D87C96700A2414CB68EC64A77D2D444"><enum>50102.</enum><header>Offshore oil and gas leasing</header>
<subsection id="HFD29F4E51A0741EBAF972A2FDCCDF825"><enum>(a)</enum><header>Lease sales</header>
<paragraph id="H0DC7D04A5C464AF7AF693BA50B768E91"><enum>(1)</enum><header>Gulf of America region</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HEB87BC2CCFCF4C1F856453A783D80BE9"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>Notwithstanding the 2024–2029 National Outer Continental Shelf Oil and Gas Leasing Program (and any successor leasing program that does not satisfy the requirements of this section), in addition to lease sales which may be held under that program, and except within areas subject to existing oil and gas leasing moratoria, the Secretary of the Interior shall conduct a minimum of 30 region-wide oil and gas lease sales, in a manner consistent with the schedule described in subparagraph (B), in the region identified in the map depicting lease terms and economic conditions accompanying the final notice of sale of the Bureau of Ocean Energy Management entitled <quote>Gulf of Mexico Outer Continental Shelf Region-Wide Oil and Gas Lease Sale 254</quote> (85 Fed. Reg. 8010 (February 12, 2020)).</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB597852867B747C5B208A531AC10833E"><enum>(B)</enum><header>Timing requirement</header><text>Of the not fewer than 30 region-wide lease sales required under this paragraph, the Secretary of the Interior shall—</text>
<clause commented="no" display-inline="no-display-inline" id="H5561C3B97B5B4BEB84CFF104F2AB62A9"><enum>(i)</enum><text display-inline="yes-display-inline">hold not fewer than 1 lease sale in the region described in subparagraph (A) by December 15, 2025;</text></clause> <clause commented="no" display-inline="no-display-inline" id="H136D7F880BBF4D08BE84FC0856C6A002"><enum>(ii)</enum><text>hold not fewer than 2 lease sales in that region in each of calendar years 2026 through 2039, 1 of which shall be held by March 15 of the applicable calendar year and 1 of which shall be held after March 15 but not later than August 15 of the applicable calendar year; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H8F4E0DF1EEBE4A1BA2A3540EF731A155"><enum>(iii)</enum><text>hold not fewer than 1 lease sale in that region in calendar year 2040, which shall be held by March 15, 2040.</text></clause></subparagraph></paragraph> <paragraph id="HF54BFD18325641CE8062296A98C4916A"><enum>(2)</enum><header>Alaska region</header> <subparagraph commented="no" display-inline="no-display-inline" id="HF4426709E14E42D9AFF16C986F9BB14C"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The Secretary of the Interior shall conduct a minimum of 6 offshore lease sales, in a manner consistent with the schedule described in subparagraph (B), in the Cook Inlet Planning Area as identified in the 2017–2022 Outer Continental Shelf Oil and Gas Leasing Proposed Final Program published on November 18, 2016, by the Bureau of Ocean Energy Management (as announced in the notice of availability of the Bureau of Ocean Energy Management entitled <quote>Notice of Availability of the 2017–2022 Outer Continental Shelf Oil and Gas Leasing Proposed Final Program</quote> (81 Fed. Reg. 84612 (November 23, 2016))).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H27D01A374D544D1FAB98D34C44312ECE"><enum>(B)</enum><header>Timing requirement</header><text>Of the not fewer than 6 lease sales required under this paragraph, the Secretary of the Interior shall hold not fewer than 1 lease sale in the area described in subparagraph (A) in each of calendar years 2026 through 2028, and in each of calendar years 2030 through 2032, by March 15 of the applicable calendar year.</text></subparagraph></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H4CBA8FC6AF7644FAA2B9AA61E04574B5"><enum>(b)</enum><header>Requirements</header> <paragraph id="HAA3873F0AFE343D7B59C8A75423012E3"><enum>(1)</enum><header>Terms and stipulations for Gulf of America sales</header><text>In conducting lease sales under subsection (a)(1), the Secretary of the Interior—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H1363F64DD7324BD3AD753ADCE8D01460"><enum>(A)</enum><text display-inline="yes-display-inline">shall, subject to subparagraph (C), offer the same lease form, lease terms, economic conditions, and lease stipulations 4 through 9 as contained in the final notice of sale of the Bureau of Ocean Energy Management entitled <quote>Gulf of Mexico Outer Continental Shelf Region-Wide Oil and Gas Lease Sale 254</quote> (85 Fed. Reg. 8010 (February 12, 2020));</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H15D0447882884526A58AE2A9AA725BFC"><enum>(B)</enum><text>may update lease stipulations 1 through 3 and 10 described in that final notice of sale to reflect current conditions for lease sales conducted under subsection (a)(1); </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H5F5CE8257F394954B54BAC8A8B208AA3"><enum>(C)</enum><text display-inline="yes-display-inline">shall set the royalty rate at not less than 12<fraction>1/2</fraction> percent but not greater than 16<fraction>2/3</fraction> percent; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB239EAE280DF412E82A03BE9E5A2253A"><enum>(D)</enum><text>shall, for a lease in water depths of 800 meters or deeper issued as a result of a sale, set the primary term for 10 years.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HCBEBC98C606A4B4693EECE75B3E5858D"><enum>(2)</enum><header>Terms and stipulations for Alaska Region sales</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H9EC7BC4E4C024B80971CB46F62037A57"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">In conducting lease sales under subsection (a)(2), the Secretary of the Interior shall offer the same lease form, lease terms, economic conditions, and stipulations as contained in the final notice of sale of the Bureau of Ocean Energy Management entitled <quote>Cook Inlet Planning Area Outer Continental Shelf Oil and Gas Lease Sale 244</quote> (82 Fed. Reg. 23291 (May 22, 2017)).</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HD9E5A5B8939541C481C65BAFA6F253E4"><enum>(B)</enum><header>Revenue sharing</header><text>Notwithstanding section 8(g) and section 9 of the Outer Continental Shelf Lands Act (<external-xref legal-doc="usc" parsable-cite="usc/43/1337">43 U.S.C. 1337(g)</external-xref>, 1338), and beginning in fiscal year 2034, of the bonuses, rents, royalties, and other revenues derived from lease sales conducted under subsection (a)(2)—</text>
<clause commented="no" display-inline="no-display-inline" id="H075882C131BC42479BFFB68D93EEED2C"><enum>(i)</enum><text display-inline="yes-display-inline">70 percent shall be paid to the State of Alaska; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HCEF71940EBEB41DFBF5E6B9071F01BF1"><enum>(ii)</enum><text>30 percent shall be deposited in the Treasury and credited to miscellaneous receipts.</text></clause></subparagraph></paragraph>
<paragraph id="H573AACB8F7574731BA647311938C84CF"><enum>(3)</enum><header>Area offered for lease</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H3C2F31E42B03494583CE0F39C3285B24"><enum>(A)</enum><header>Gulf of America region</header><text display-inline="yes-display-inline">For each offshore lease sale conducted under subsection (a)(1), the Secretary of the Interior shall—</text> <clause commented="no" display-inline="no-display-inline" id="H7338BCD951DA4DACB30E85F8355BE5F4"><enum>(i)</enum><text display-inline="yes-display-inline">offer not fewer than 80,000,000 acres; or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H702DB850800542C485D382173462188A"><enum>(ii)</enum><text display-inline="yes-display-inline">if there are fewer than 80,000,000 acres that are unleased and available, offer all unleased and available acres.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HAB5BCDD509ED45CCADAF3F2364642E3D"><enum>(B)</enum><header>Alaska region</header><text display-inline="yes-display-inline">For each offshore lease sale conducted under subsection (a)(2), the Secretary of the Interior shall—</text>
<clause commented="no" display-inline="no-display-inline" id="HB54E71C28BE44F8ABAE1AC174F4CB823"><enum>(i)</enum><text display-inline="yes-display-inline">offer not fewer than 1,000,000 acres; or</text></clause> <clause commented="no" display-inline="no-display-inline" id="HD723ACB8EE204FFD9FC55591495AF4F4"><enum>(ii)</enum><text>if there are fewer than 1,000,000 acres that are unleased and available, offer all unleased and available acres.</text></clause></subparagraph></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H56B5274E74AC49259AA0B26B439A5455"><enum>(c)</enum><header>Offshore commingling</header><text display-inline="yes-display-inline">The Secretary of the Interior shall approve a request of an operator to commingle oil or gas production from multiple reservoirs within a single wellbore completed on the outer Continental Shelf in the Gulf of America Region unless the Secretary of the Interior determines that conclusive evidence establishes that the commingling—</text> <paragraph commented="no" display-inline="no-display-inline" id="HD54FE325B30E4A58B779B6C1FE04C031"><enum>(1)</enum><text display-inline="yes-display-inline">could not be conducted by the operator in a safe manner; or</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H62AC2860EAA44D54846CAF7075831BF5"><enum>(2)</enum><text>would result in an ultimate recovery from the applicable reservoirs to be reduced in comparison to the expected recovery of those reservoirs if they had not been commingled.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HDD3B0D570C9A4125BC88CAA4B46C4260"><enum>(d)</enum><header display-inline="yes-display-inline">Offshore oil and gas royalty rate</header> <paragraph commented="no" display-inline="no-display-inline" id="HAC0FB4E14A9D4AF1971890BA05992EDE"><enum>(1)</enum><header>Repeal</header><text display-inline="yes-display-inline">Section 50261 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2056) is repealed, and any provision of law amended or repealed by that section is restored or revived as if that section had not been enacted into law.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9A6DA49582F2409286C943E39D1C7C40"><enum>(2)</enum><header>Royalty rate</header><text>Section 8(a)(1) of the Outer Continental Shelf Lands Act (<external-xref legal-doc="usc" parsable-cite="usc/43/1337">43 U.S.C. 1337(a)(1)</external-xref>) (as amended by paragraph (1)) is amended—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HEEE599ABEF864714B1061E21D4E1C49F"><enum>(A)</enum><text display-inline="yes-display-inline">in subparagraph (A), by striking <quote>not less than 12<fraction>1/2</fraction> per centum</quote> and inserting <quote>not less than 12<fraction>1/2</fraction> percent, but not more than 16<fraction>2/3</fraction> percent,</quote>;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H8B862815915743EBAB6C16EE3D972214"><enum>(B)</enum><text>in subparagraph (C), by striking <quote>not less than 12<fraction>1/2</fraction> per centum</quote> and inserting <quote>not less than 12<fraction>1/2</fraction> percent, but not more than 16<fraction>2/3</fraction> percent,</quote>;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H50496F4BE214446FA92D758E121906DF"><enum>(C)</enum><text>in subparagraph (F), by striking <quote>no less than 12<fraction>1/2</fraction> per centum</quote> and inserting <quote>not less than 12<fraction>1/2</fraction> percent, but not more than 16<fraction>2/3</fraction> percent,</quote>; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HD29990CFD7E64FD0A7B9F36FAC30874C"><enum>(D)</enum><text>in subparagraph (H), by striking <quote>no less than 12 and <fraction>1/2</fraction> per centum</quote> and inserting <quote>not less than 12<fraction>1/2</fraction> percent, but not more than 16<fraction>2/3</fraction> percent,</quote>.</text></subparagraph></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HB6FBCDF163074A22B459AAD9DE38FB48"><enum>(e)</enum><header>Limitations on amount of distributed qualified outer Continental Shelf revenues</header><text>Section 105(f)(1) of the Gulf of Mexico Energy Security Act of 2006 (<external-xref legal-doc="usc" parsable-cite="usc/43/1331">43 U.S.C. 1331</external-xref> note; <external-xref legal-doc="public-law" parsable-cite="pl/109/432">Public Law 109–432</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HED8B0BE7344A4B07B8A8228E9EACD44E"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (B), by striking <quote>and</quote> at the end;</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H4EBB2ECB6E3847848CBBAC10969C43FD"><enum>(2)</enum><text>in subparagraph (C), by striking <quote>2055.</quote> and inserting <quote>2024;</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H286E62FB81F444C8899A5D8C4BD61E5C"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H127EB0AABDBE482ABF8890F733AA0751"> <subparagraph commented="no" display-inline="no-display-inline" id="HE6BF6AE99DAA47448BC74D0FB186A8D8"><enum>(D)</enum><text>$650,000,000 for each of fiscal years 2025 through 2034; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H4907DA89F47F416AB27ABEBC8632E32F"><enum>(E)</enum><text>$500,000,000 for each of fiscal years 2035 through 2055.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection></section> <section id="H046A717E27B5441CA215C67BF68E844A"><enum>50103.</enum><header>Royalties on extracted methane</header><text display-inline="no-display-inline">Section 50263 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/30/1727">30 U.S.C. 1727</external-xref>) is repealed.</text></section>
<section id="HD14A18E5A7664A74AEF5BF0B1E8721B1"><enum>50104.</enum><header>Alaska oil and gas leasing</header>
<subsection id="H3DBCFFB5DC2E4611B71E9DF17D85A340"><enum>(a)</enum><header>Definitions</header><text>In this section:</text> <paragraph id="HFFFD9D9F5D6544E7855E15BE5C9ED53C"><enum>(1)</enum><header>Coastal Plain</header><text>The term <term>Coastal Plain</term> has the meaning given the term in section 20001(a) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/16/3143">16 U.S.C. 3143</external-xref> note).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H5D82CCA734F546949281B4D2E55B3217"><enum>(2)</enum><header>Oil and gas program</header><text>The term <term>oil and gas program</term> means the oil and gas program established under section 20001(b)(2) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/16/3143">16 U.S.C. 3143</external-xref> note).</text></paragraph> <paragraph id="H8E41BD93E7F945D29CE911BAF7ED8BCC"><enum>(3)</enum><header>Secretary</header><text>The term <term>Secretary</term> means the Secretary of the Interior, acting through the Bureau of Land Management.</text></paragraph></subsection>
<subsection id="HACFB191593984D6292C622A6C588ACFD"><enum>(b)</enum><header>Lease sales required</header>
<paragraph id="HC1F52BBE199B44668F02A126F184B883"><enum>(1)</enum><header>In general</header><text>Subject to paragraph (3), in addition to the lease sales required under section 20001(c)(1)(A) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/16/3143">16 U.S.C. 3143</external-xref> note), the Secretary shall conduct not fewer than 4 lease sales area-wide under the oil and gas program by not later than 10 years after the date of enactment of this Act.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HB17F02B67CDF40DF8F709FC3E8229713"><enum>(2)</enum><header>Terms and conditions</header><text>In conducting lease sales under paragraph (1), the Secretary shall offer the same terms and conditions as contained in the record of decision described in the notice of availability of the Bureau of Land Management entitled <quote>Notice of Availability of the Record of Decision for the Final Environmental Impact Statement for the Coastal Plain Oil and Gas Leasing Program, Alaska</quote> (85 Fed. Reg. 51754 (August 21, 2020)).</text></paragraph>
<paragraph id="H8CE013E93195415180A212A46DCCE2D2"><enum>(3)</enum><header>Sale acreages; schedule</header>
<subparagraph id="HFCD36C66853049A4AF61BBC2BD35060E"><enum>(A)</enum><header>Acreages</header><text>In conducting the lease sales required under paragraph (1), the Secretary shall offer for lease under the oil and gas program—</text> <clause id="H072B44E498DE40C9A49D2CA9D8022272"><enum>(i)</enum><text>not fewer than 400,000 acres area-wide in each lease sale; and</text></clause>
<clause id="HC4B91FFCCF5940F6BAC8A67A5797FC30"><enum>(ii)</enum><text>those areas that have the highest potential for the discovery of hydrocarbons.</text></clause></subparagraph> <subparagraph id="HDA09213EB8D94A4AA32FDD7ED3144BA3"><enum>(B)</enum><header>Schedule</header><text>The Secretary shall offer—</text>
<clause id="H1988AFD0270044E78DFBAEB728EEF16E"><enum>(i)</enum><text>the initial lease sale under paragraph (1) not later than 1 year after the date of enactment of this Act;</text></clause> <clause id="HFDEF1C6256D04945BC9E77ECF9F4A513"><enum>(ii)</enum><text>a second lease sale under paragraph (1) not later than 3 years after the date of enactment of this Act;</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H0DE2491229764C7CAB6204ECD250D3C8"><enum>(iii)</enum><text>a third lease sale under paragraph (1) not later than 5 years after the date of enactment of this Act; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HCA3F38A82DBF4F4C919D588E730A574C"><enum>(iv)</enum><text>a fourth lease sale under paragraph (1) not later than 7 years after the date of enactment of this Act.</text></clause></subparagraph></paragraph>
<paragraph id="H85AC4445C05A4B059D19DB9CBBB272C3" commented="no"><enum>(4)</enum><header>Rights-of-way</header><text>Section 20001(c)(2) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/16/3143">16 U.S.C. 3143</external-xref> note) shall apply to leases awarded under this subsection.</text></paragraph> <paragraph id="H5463D822CE844FD69C60610DBD626449" commented="no"><enum>(5)</enum><header>Surface development</header><text>Section 20001(c)(3) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/16/3143">16 U.S.C. 3143</external-xref> note) shall apply to leases awarded under this subsection.</text></paragraph></subsection>
<subsection id="H8B019B92D1E644F4B08DC2AEE76E8DB3" commented="no"><enum>(c)</enum><header>Receipts</header><text display-inline="yes-display-inline">Notwithstanding section 35 of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/191">30 U.S.C. 191</external-xref>) and section 20001(b)(5) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/16/3143">16 U.S.C. 3143</external-xref> note), of the amount of adjusted bonus, rental, and royalty receipts derived from the oil and gas program and operations on the Coastal Plain pursuant to this section—</text> <paragraph id="H536847F6420D47429F9FC6D88A4A5DD4" commented="no"><enum>(1)</enum> <subparagraph commented="no" display-inline="yes-display-inline" id="H9E287D1F1C444534B8E54395EFECAABC"><enum>(A)</enum><text>for each of fiscal years 2025 through 2033, 50 percent shall be paid to the State of Alaska; and</text></subparagraph>
<subparagraph id="H9316CFBC8EC44CC2BEE8939D566DBD47" indent="up1" commented="no"><enum>(B)</enum><text display-inline="yes-display-inline">for fiscal year 2034 and each fiscal year thereafter, 70 percent shall be paid to the State of Alaska; and</text></subparagraph></paragraph> <paragraph id="H0AC743582F254A46AE4B8A92758910EA" commented="no"><enum>(2)</enum><text>the balance shall be deposited into the Treasury as miscellaneous receipts.</text></paragraph></subsection></section>
<section id="H1FDBC51E1A514F91A43E2C9F510CB4CA"><enum>50105.</enum><header>National Petroleum Reserve–Alaska</header>
<subsection commented="no" display-inline="no-display-inline" id="H0CA8FE2C1D064D75B054D21898C7320B"><enum>(a)</enum><header>Definitions</header><text>In this section:</text> <paragraph commented="no" display-inline="no-display-inline" id="H73D7873603724A3EB4D722A1DF24FBC7"><enum>(1)</enum><header>NPR–A final environmental impact statement</header><text>The term <term>NPR–A final environmental impact statement</term> means the final environmental impact statement published by the Bureau of Land Management entitled <quote>National Petroleum Reserve in Alaska Integrated Activity Plan Final Environmental Impact Statement</quote> and dated June 2020, including the errata sheet dated October 6, 2020, and excluding the errata sheet dated September 20, 2022.</text></paragraph>
<paragraph id="HE4CFC71AA8F541AEA598D762D48A8B90"><enum>(2)</enum><header>NPR–A record of decision</header><text>The term <term>NPR–A record of decision</term> means the record of decision published by the Bureau of Land Management entitled <quote>National Petroleum Reserve in Alaska Integrated Activity Plan Record of Decision</quote> and dated December 2020.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H540EA44C20F140A59112FCF3FA4614C3"><enum>(3)</enum><header>Program</header><text>The term <term>Program</term> means the competitive oil and gas leasing, exploration, development, and production program established under section 107 of the Naval Petroleum Reserves Production Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/42/6506a">42 U.S.C. 6506a</external-xref>).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HBF181118189A43089FF5E2E9073B1DEC"><enum>(4)</enum><header>Secretary</header><text>The term <term>Secretary</term> means the Secretary of the Interior.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H108F7E26C6F74418B7E1741DE99AF12B"><enum>(b)</enum><header>Restoration of NPR–A oil and gas leasing program</header><text>Effective beginning on the date of enactment of this Act, the Secretary shall expeditiously restore and resume oil and gas lease sales under the Program for domestic energy production and Federal revenue in the areas designated for oil and gas leasing as described in the NPR–A final environmental impact statement and the NPR–A record of decision.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HDA5ED9A276F84D97BEEED60E89FC4409"><enum>(c)</enum><header display-inline="yes-display-inline">Resumption of NPR–A lease sales</header>
<paragraph commented="no" display-inline="no-display-inline" id="H96B543FDD10D4E54A105E3D851508255"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Subject to paragraph (2), the Secretary shall conduct not fewer than 5 lease sales under the Program by not later than 10 years after the date of enactment of this Act.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H8524ADB8D3794A59BE972E45CF64DBAD"><enum>(2)</enum><header>Sales acreages; schedule</header> <subparagraph commented="no" display-inline="no-display-inline" id="HDF35C06560D145E29FB1EA750944FF01"><enum>(A)</enum><header display-inline="yes-display-inline">Acreages</header><text>In conducting the lease sales required under paragraph (1), the Secretary shall offer not fewer than 4,000,000 acres in each lease sale.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H8593318F91284D3AB097F6EFE0CB1168"><enum>(B)</enum><header>Schedule</header><text>The Secretary shall offer—</text> <clause commented="no" display-inline="no-display-inline" id="H20C4D570AF2F477FA263FA86645C7EF3"><enum>(i)</enum><text display-inline="yes-display-inline">an initial lease sale under paragraph (1) not later than 1 year after the date of enactment of this Act; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H50FD1147BE054798A913FB34BA7C6757"><enum>(ii)</enum><text>an additional lease sale under paragraph (1) not later than every 2 years after the date of enactment of this Act.</text></clause></subparagraph></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HBC0682F656C74BCAB54FEF232A700F81"><enum>(d)</enum><header display-inline="yes-display-inline">Terms and stipulations for NPR–A lease sales</header><text>In conducting lease sales under subsection (c), the Secretary shall offer the same lease form, lease terms, economic conditions, and stipulations as described in the NPR–A final environmental impact statement and the NPR–A record of decision.</text></subsection>
<subsection id="H3059FB8EE6A0477C8F534557C37B3701" commented="no"><enum>(e)</enum><header>Receipts</header><text display-inline="yes-display-inline">Section 107(l) of the Naval Petroleum Reserves Production Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/42/6506a">42 U.S.C. 6506a(l)</external-xref>) is amended—</text> <paragraph id="H1D2BDB237C444B00A07723934CE91C9C" commented="no"><enum>(1)</enum><text>by striking <quote>All receipts from</quote> and inserting the following:</text>
<quoted-block style="OLC" id="H65E0E9613B3B4D189DEAEB88B5047DC2" display-inline="no-display-inline">
<paragraph id="H542143FAD75344DAA7E3484D9C6171FB" commented="no"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Except as provided in paragraph (2), all receipts from</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph id="H6316813B5DA54F2384AE1A90C1DF6686" commented="no"><enum>(2)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" id="H3D815459650043E48CB5CA6840A7B829" display-inline="no-display-inline">
<paragraph id="H898F5FFD23B7406489A8108C553C9721" commented="no"><enum>(2)</enum><header>Percent share for fiscal year 2034 and thereafter</header><text display-inline="yes-display-inline">Beginning in fiscal year 2034, of the receipts from sales, rentals, bonuses, and royalties on leases issued pursuant to this section after the date of enactment of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote> (119th Congress)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H44F1C25D721746C2829CBDB4EE71EBB0"><enum>(A)</enum><text display-inline="yes-display-inline">70 percent shall be paid to the State of Alaska; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0E1D648B93A746B1B8F631727E99723D"><enum>(B)</enum><text>30 percent shall be paid into the Treasury of the United States.</text></subparagraph></paragraph><after-quoted-block>. </after-quoted-block></quoted-block></paragraph></subsection></section></subtitle> <subtitle id="H44521F362E804FFF98AB5D5DC3EF205C" style="OLC"><enum>B</enum><header>Mining</header> <section id="HDC47A0A1AF954172A89DDBC2D3B84993"><enum>50201.</enum><header>Coal leasing</header> <subsection commented="no" display-inline="no-display-inline" id="H484F90CD9DC542FAB27A90895620933C"><enum>(a)</enum><header>Definitions</header><text display-inline="yes-display-inline">In this section:</text>
<paragraph commented="no" display-inline="no-display-inline" id="H16C1373D54A348CEA9A8987080852024"><enum>(1)</enum><header>Coal lease</header><text>The term <term>coal lease</term> means a lease entered into by the United States as lessor, through the Bureau of Land Management, and an applicant on Bureau of Land Management Form 3400-012 (or a successor form that contains the terms of a coal lease).</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H74DAF7E6A447408F83CF6BDD691444BF"><enum>(2)</enum><header>Qualified application</header><text>The term <term>qualified application</term> means an application for a coal lease pending as of the date of enactment of this Act or submitted within 90 days thereafter under the lease by application program administered by the Bureau of Land Management pursuant to the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/181">30 U.S.C. 181 et seq.</external-xref>) for which any required environmental review has commenced or the Director of the Bureau of Land Management determines can commence within 90 days after receiving the application.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H0A4DF05EB9E24609AD2D43C1F1D5B1E1"><enum>(b)</enum><header>Coal leasing activities</header><text display-inline="yes-display-inline">Not later than 90 days after the date of enactment of this Act, the Secretary of the Interior—</text> <paragraph commented="no" display-inline="no-display-inline" id="HE6B01ADC9BC34AB48C3EFA43D461D9A6"><enum>(1)</enum><text display-inline="yes-display-inline">shall—</text>
<subparagraph id="H2DF9AF4278874366BA3ABC3707AA07AE"><enum>(A)</enum><text>with respect to each qualified application—</text> <clause id="HBCEEDE4E06DA41A7BB8FFA3C128E5A9A"><enum>(i)</enum><text>if not previously published for public comment, publish any required environmental review;</text></clause>
<clause id="H162A523CBDC04629AA490240C8CFE7CA"><enum>(ii)</enum><text>establish the fair market value of the applicable coal tract;</text></clause> <clause id="H2C04901E67B240DD91D70E5DC8752C03"><enum>(iii)</enum><text>hold a lease sale with respect to the applicable coal tract; and</text></clause>
<clause id="H7D24CA6860AE4D628261DD049131F02E"><enum>(iv)</enum><text>identify the highest bidder at or above the fair market value and take all other intermediate actions necessary to identify the winning bidder and grant the qualified application; and</text></clause></subparagraph></paragraph> <paragraph id="H900452E46EA544E8A7DC256E9EF3E7EC"><enum>(2)</enum><text>may—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H17F9A55900184DA1A9FDA077FCC80963"><enum>(A)</enum><text display-inline="yes-display-inline">with respect to a previously issued coal lease, grant any additional approvals of the Department of the Interior required for mining activities to commence; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H2F25BE3375E04B70946B3A3D9678AD38"><enum>(B)</enum><text>after completing the actions required by clauses (i) through (iv) of paragraph (1)(A), grant the qualified application and issue the applicable lease to the person that submitted the qualified application if that person submitted the winning bid in the lease sale held under clause (iii) of paragraph (1)(A).</text></subparagraph></paragraph></subsection></section>
<section id="HB7431570DA5B4FC2B124C59C798C6922" commented="no"><enum>50202.</enum><header>Coal royalty</header>
<subsection id="H8D1758B865B5432C92CE932D6D2997C6" commented="no"><enum>(a)</enum><header>Rate</header><text>Section 7(a) of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/207">30 U.S.C. 207(a)</external-xref>) is amended, in the fourth sentence, by striking <quote>12<fraction>1/2</fraction> per centum</quote> and inserting <quote>12<fraction>1/2</fraction> percent, except such amount shall be not more than 7 percent during the period that begins on the date of enactment of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote> (119th Congress) and ends September 30, 2034,</quote>.</text></subsection> <subsection id="H975CF6E321054C808F247719BEFA0AF9" commented="no"><enum>(b)</enum><header>Applicability to existing leases</header><text>The amendment made by subsection (a) shall apply to a coal lease—</text>
<paragraph id="HF6BB9E4A009948C78C17F4ABA1FD1CF0" commented="no"><enum>(1)</enum><text>issued under section 2 of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/201">30 U.S.C. 201</external-xref>) before, on, or after the date of the enactment of this Act; and</text></paragraph> <paragraph id="H10DA989DB17D4EF9980CBE38EAA39C06" commented="no"><enum>(2)</enum><text>that has not been terminated.</text></paragraph></subsection>
<subsection id="HDE7AAE266B414104A7AC57046FD7631A" commented="no"><enum>(c)</enum><header>Advance royalties</header><text>With respect to a lease issued under section 2 of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/201">30 U.S.C. 201</external-xref>) for which the lessee has paid advance royalties under section 7(b) of that Act (<external-xref legal-doc="usc" parsable-cite="usc/30/207">30 U.S.C. 207(b)</external-xref>), the Secretary of the Interior shall provide to the lessee a credit for the difference between the amount paid by the lessee in advance royalties for the lease before the date of the enactment of this Act and the amount the lessee would have been required to pay if the amendment made by subsection (a) had been made before the lessee paid advance royalties for the lease.</text></subsection></section> <section id="HBAFDC3949CF64424B80F866A42743C41"><enum>50203.</enum><header>Leases for known recoverable coal resources</header><text display-inline="no-display-inline">Notwithstanding section 2(a)(3)(A) of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/201">30 U.S.C. 201(a)(3)(A)</external-xref>) and section 202(a) of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1712">43 U.S.C. 1712(a)</external-xref>), not later than 90 days after the date of enactment of this Act, the Secretary of the Interior shall make available for lease known recoverable coal resources of not less than 4,000,000 additional acres on Federal land located in the 48 contiguous States and Alaska subject to the jurisdiction of the Secretary, but which shall not include any Federal land within—</text>
<paragraph id="HC0768FFEA4D340468C91A4FA43771704"><enum>(1)</enum><text>a National Monument;</text></paragraph> <paragraph id="HE57AD9F1C75649B082BEEAFCE4D99987"><enum>(2)</enum><text>a National Recreation Area;</text></paragraph>
<paragraph id="HDC7B4229CC6E449CB4AB9B53F468B1ED"><enum>(3)</enum><text>a component of the National Wilderness Preservation System;</text></paragraph> <paragraph id="H89E071BD61744915869A77EFF493AA82"><enum>(4)</enum><text>a component of the National Wild and Scenic Rivers System;</text></paragraph>
<paragraph id="H17AA1BFA739643E29123C7A70C4305F1"><enum>(5)</enum><text>a component of the National Trails System;</text></paragraph> <paragraph id="H3F18D64A86B346ADB6619E306FCB99AC"><enum>(6)</enum><text>a National Conservation Area;</text></paragraph>
<paragraph id="H49738025B90740BCB1B770AA24EE048A"><enum>(7)</enum><text>a unit of the National Wildlife Refuge System;</text></paragraph> <paragraph id="H6295FBB5A974414380BABD04131A855C"><enum>(8)</enum><text>a unit of the National Fish Hatchery System; or</text></paragraph>
<paragraph id="H949AB3AFEE2A41D59CC52407C29413D7"><enum>(9)</enum><text>a unit of the National Park System.</text></paragraph></section> <section id="H18DBD35B3A1A4D8F9144BF8D10193BBB" commented="no"><enum>50204.</enum><header>Authorization to mine Federal coal</header> <subsection commented="no" display-inline="no-display-inline" id="H65DA4EA4C42B47B6BD14682203EF88D7"><enum>(a)</enum><header>Authorization</header><text display-inline="yes-display-inline">In order to provide access to coal reserves in adjacent State or private land that without an authorization could not be mined economically, Federal coal reserves located in Federal land subject to a mining plan previously approved by the Secretary of the Interior as of the date of enactment of this Act and adjacent to coal reserves in adjacent State or private land are authorized to be mined.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H78B33A7BE27249C1871E4B8BDD30913C"><enum>(b)</enum><header>Requirement</header><text>Not later than 90 days after the date of enactment of this Act, the Secretary of the Interior shall, without substantial modification, take such steps as are necessary to authorize the mining of Federal land described in subsection (a).</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H3638319FE96548D7B024B04960DFB1C9"><enum>(c)</enum><header>NEPA</header><text>Nothing in this section shall prevent a review under the National Environmental Policy Act of 1969 (<external-xref legal-doc="usc" parsable-cite="usc/42/4321">42 U.S.C. 4321 et seq.</external-xref>).</text></subsection></section></subtitle>
<subtitle id="H688649181E75452395F8438130E78B4C" style="OLC"><enum>C</enum><header>Lands</header>
<section id="H39C8C34D9499400BB75521AA1357B578"><enum>50301.</enum><header>Timber sales and long-term contracting for the Forest Service and the Bureau of Land Management</header>
<subsection commented="no" display-inline="no-display-inline" id="HF35048D1E0534EBEB21F036E86F73323"><enum>(a)</enum><header display-inline="yes-display-inline">Forest Service</header>
<paragraph commented="no" display-inline="no-display-inline" id="HC9541D8B168C4FF3A59532BD0FA727EC"><enum>(1)</enum><header display-inline="yes-display-inline">Definitions</header><text>In this subsection:</text> <subparagraph commented="no" display-inline="no-display-inline" id="H6A981090E83B4162975C99DC066A77AB"><enum>(A)</enum><header>Forest plan</header><text>The term <term>forest plan</term> means a land and resource management plan prepared by the Secretary for a unit of the National Forest System pursuant to section 6 of the Forest and Rangeland Renewable Resources Planning Act of 1974 (<external-xref legal-doc="usc" parsable-cite="usc/16/1604">16 U.S.C. 1604</external-xref>).</text></subparagraph>
<subparagraph id="H60AE09FEE3C440AB9D963420B479F946"><enum>(B)</enum><header>National Forest System</header>
<clause id="HF6B7445027B842A39D225601EFD4F14A"><enum>(i)</enum><header>In general</header><text>The term <term>National Forest System</term> means land of the National Forest System (as defined in section 11(a) of the Forest and Rangeland Renewable Resources Planning Act of 1974 (<external-xref legal-doc="usc" parsable-cite="usc/16/1609">16 U.S.C. 1609(a)</external-xref>)) administered by the Secretary.</text></clause> <clause id="H51E2FFACD2B841D5856099D0CB36DB42"><enum>(ii)</enum><header>Exclusions</header><text>The term <term>National Forest System</term> does not include any forest reserve not created from the public domain.</text></clause></subparagraph>
<subparagraph id="H789E0D1C511F4162BE022499BAF358DD"><enum>(C)</enum><header>Secretary</header><text>The term <term>Secretary</term> means the Secretary of Agriculture, acting through the Chief of the Forest Service.</text></subparagraph></paragraph> <paragraph id="HAB68A5AEEA3C481EA4EFBA7371C9BC34"><enum>(2)</enum><header>Timber sales on public domain forest reserves</header> <subparagraph commented="no" display-inline="no-display-inline" id="H68B0B305A7F14DA3B13D0F5D2509FEDF"><enum>(A)</enum><header>In general</header><text>For each of fiscal years 2026 through 2034, the Secretary shall sell timber annually on National Forest System land in a total quantity that is not less than 250,000,000 board-feet greater than the quantity of board-feet sold in the previous fiscal year.</text></subparagraph>
<subparagraph id="HEB4CA41CB87A44E39CA4EAD51CE6A280"><enum>(B)</enum><header>Limitation</header><text>The timber sales under subparagraph (A) shall be subject to the maximum allowable sale quantity of timber or the projected timber sale quantity under the applicable forest plan in effect on the date of enactment of this Act.</text></subparagraph></paragraph> <paragraph id="H13F53172320F4705BE6CFFA9BD440CE4"><enum>(3)</enum><header>Long-term contracting for the Forest Service</header> <subparagraph id="H734F6BFDBF70420EB7AFAA8D2FB31E9C"><enum>(A)</enum><header>Long-term contracting</header><text>For the period of fiscal years 2025 through 2034, the Secretary shall enter into not fewer than 40 long-term timber sale contracts with private persons or other public or private entities under subsection (a) of section 14 of the National Forest Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/16/472a">16 U.S.C. 472a</external-xref>) for the sale of national forest materials (as defined in subsection (e)(1) of that section) in the National Forest System.</text></subparagraph>
<subparagraph id="H6ED2405096194AD5A0B5D436906C9124"><enum>(B)</enum><header>Contract length</header><text>The period of a timber sale contract entered into to meet the requirement under subparagraph (A) shall be not less than 20 years, with options for extensions or renewals, as determined by the Secretary.</text></subparagraph> <subparagraph id="H5257CEB142544B3FB376EB82391EC363"><enum>(C)</enum><header>Receipts</header><text>Any monies derived from a timber sale contract entered into to meet the requirements under subparagraphs (A) and (B) shall be deposited in the general fund of the Treasury.</text></subparagraph></paragraph></subsection>
<subsection id="H6344AE7AB09E468B954D5EE4612345F1"><enum>(b)</enum><header>Bureau of Land Management</header>
<paragraph id="HE924CE7668704BA6A710D88AC087DA22"><enum>(1)</enum><header>Definitions</header><text>In this subsection:</text> <subparagraph id="HA9784DEC92B64DBCA64C81B4215ECE90"><enum>(A)</enum><header>Public lands</header><text>The term <term>public lands</term> has the meaning given the term in section 103 of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1702">43 U.S.C. 1702</external-xref>).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HC1364B0D2B7C420DB9026DF49CC9C9B2"><enum>(B)</enum><header>Resource management plan</header><text>The term <term>resource management plan</term> means a land use plan prepared for public lands under section 202 of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1712">43 U.S.C. 1712</external-xref>).</text></subparagraph> <subparagraph id="H0B1972ACFB884773B82CDD8678BA5873"><enum>(C)</enum><header>Secretary</header><text>The term <term>Secretary</term> means the Secretary of the Interior, acting through the Director of the Bureau of Land Management.</text></subparagraph></paragraph>
<paragraph id="H2AE6BA2DE7BB443FAC3A3D30D554AB9C"><enum>(2)</enum><header>Timber sales on public lands</header>
<subparagraph id="H43131960442A4EF8B79806E8A775E333"><enum>(A)</enum><header>In general</header><text>For each of fiscal years 2026 through 2034, the Secretary shall sell timber annually on public lands in a total quantity that is not less than 20,000,000 board-feet greater than the quantity of board-feet sold in the previous fiscal year.</text></subparagraph> <subparagraph id="H6FD108AFCFDA4077977A9FAF430CD47C"><enum>(B)</enum><header>Limitation</header><text>The timber sales under subparagraph (A) shall be subject to the applicable resource management plan in effect on the date of enactment of this Act.</text></subparagraph></paragraph>
<paragraph id="HBEF0CF1AE279438CB4A1F2EA00F5BA88"><enum>(3)</enum><header>Long-term contracting for the Bureau of Land Management</header>
<subparagraph id="HE00CE192531D49D2A78119B4833E505F"><enum>(A)</enum><header>Long-term contracting</header><text>For the period of fiscal years 2025 through 2034, the Secretary shall enter into not fewer than 5 long-term contracts with private persons or other public or private entities under section 1 of the Act of July 31, 1947 (commonly known as the <quote>Materials Act of 1947</quote>) (61 Stat. 681, chapter 406; <external-xref legal-doc="usc" parsable-cite="usc/30/601">30 U.S.C. 601</external-xref>), for the disposal of vegetative materials described in that section on public lands.</text></subparagraph> <subparagraph id="H6B8F70858CAF4AF9B16802A55EDAB60E"><enum>(B)</enum><header>Contract length</header><text>The period of a contract entered into to meet the requirement under subparagraph (A) shall be not less than 20 years, with options for extensions or renewals, as determined by the Secretary.</text></subparagraph>
<subparagraph id="H0D79B67B00F34AF99CA1A3C0CA6E63BC"><enum>(C)</enum><header>Receipts</header><text>Any monies derived from a contract entered into to meet the requirements under subparagraphs (A) and (B) shall be deposited in the general fund of the Treasury.</text></subparagraph></paragraph></subsection></section> <section id="H6BE0EBD048D04A9A93EC7F5DCAFF51D9" section-type="subsequent-section" commented="no"><enum>50302.</enum><header>Renewable energy fees on Federal land</header> <subsection id="H57E73973EECD4AB3981E1EE68D83D2BB" commented="no"><enum>(a)</enum><header>Definitions</header><text>In this section:</text>
<paragraph id="H729A769A6DAE442DA989093816FFA37B" commented="no"><enum>(1)</enum><header>Annual adjustment factor</header><text>The term <term>Annual Adjustment Factor</term> means 3 percent.</text></paragraph> <paragraph id="H2159899682E9498A80C879708A203C45" commented="no"><enum>(2)</enum><header>Encumbrance factor</header><text>The term <term>Encumbrance Factor</term> means—</text>
<subparagraph id="HA8E01A145FF64F08BBA278D6D13E077F" commented="no"><enum>(A)</enum><text>100 percent for a solar energy generation facility; and</text></subparagraph> <subparagraph id="H003E4DFB46494BD9B8FDF7BE2DFE2492" commented="no"><enum>(B)</enum><text>an amount determined by the Secretary, but not less than 10 percent for a wind energy generation facility.</text></subparagraph></paragraph>
<paragraph id="H003817CA9103405F9089F9363AAD0823"><enum>(3)</enum><header>National Forest System</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H290DE183419340E28B2312DFBA6E6C6D"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>National Forest System</term> means land of the National Forest System (as defined in section 11(a) of the Forest and Rangeland Renewable Resources Planning Act of 1974 (<external-xref legal-doc="usc" parsable-cite="usc/16/1609">16 U.S.C. 1609(a)</external-xref>)) administered by the Secretary of Agriculture.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HFCCD95AA060F4DC38313B9B8BF390003"><enum>(B)</enum><header>Exclusion</header><text>The term <term>National Forest System</term> does not include any forest reserve not created from the public domain.</text></subparagraph></paragraph>
<paragraph id="H3FFED7C09F0F493294E9CC9293F7C5A5" commented="no"><enum>(4)</enum><header>Per-acre rate</header><text>The term <term>Per-Acre Rate</term>, with respect to a right-of-way, means the average of the per-acre pastureland rental rates published in the Cash Rents Survey by the National Agricultural Statistics Service for the State in which the right-of-way is located over the 5 calendar-year period preceding the issuance or renewal of the right-of-way.</text></paragraph> <paragraph id="H30201B2F1F11402F88090207B0F4C1FC" commented="no"><enum>(5)</enum><header>Project</header><text>The term <term>project</term> means a system described in section 2801.9(a)(4) of title 43, Code of Federal Regulations (as in effect on the date of enactment of this Act).</text></paragraph>
<paragraph id="H8496EFE6BC6549E1AB07CBA4829A5050" commented="no"><enum>(6)</enum><header>Public land</header><text>The term <term>public land</term> means—</text> <subparagraph id="H1867E668750B4D0F96240EF85D4C5B9E" commented="no"><enum>(A)</enum><text>public lands (as defined in section 103 of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1702">43 U.S.C. 1702</external-xref>)); and</text></subparagraph>
<subparagraph id="HC45E027F6D744BE481CAC5F90B3A40AC" commented="no"><enum>(B)</enum><text>National Forest System land.</text></subparagraph></paragraph> <paragraph id="H706AAF5B3052490A83D5FFD023EC499B" commented="no"><enum>(7)</enum><header>Renewable energy project</header><text>The term <term>renewable energy project</term> means a project located on public land that uses wind or solar energy to generate energy.</text></paragraph>
<paragraph id="H9D471D2ADB9D4FA59CF2F0D9CE93C93C" commented="no"><enum>(8)</enum><header>Right-of-way</header><text>The term <term>right-of-way</term> has the meaning given the term in section 103 of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1702">43 U.S.C. 1702</external-xref>).</text></paragraph> <paragraph id="HE88C16922BFB422293F01BBA1A0BCFCA" commented="no"><enum>(9)</enum><header>Secretary</header><text>The term <term>Secretary</term> means—</text>
<subparagraph id="H3CBA562F5DF44E3BB7B716068D61B47F" commented="no"><enum>(A)</enum><text>the Secretary of the Interior, with respect to land controlled or administered by the Secretary of the Interior; and</text></subparagraph> <subparagraph id="H15A7D6C860424759A004B8BB87222BEA" commented="no"><enum>(B)</enum><text>the Secretary of Agriculture, with respect to National Forest System land.</text></subparagraph></paragraph></subsection>
<subsection id="HD80266170EA64A15A02ECB42178C46E0" commented="no"><enum>(b)</enum><header>Acreage rent for wind and solar rights-of-way</header>
<paragraph id="H1C7F6E6B11E9469696966D26B5B63746" commented="no"><enum>(1)</enum><header>In general</header><text>Pursuant to section 504(g) of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1764">43 U.S.C. 1764(g)</external-xref>), the Secretary shall, subject to paragraph (3) and not later than January 1 of each calendar year, collect from the holder of a right-of-way for a renewable energy project an acreage rent in an amount determined by the equation described in paragraph (2).</text></paragraph> <paragraph id="H606892F1D8FB45EDADC9795E4EDB29C8" commented="no"><enum>(2)</enum><header>Calculation of acreage rent rate</header> <subparagraph id="HB765E42A08E9479CAB332AD21D87DB33" commented="no"><enum>(A)</enum><header>Equation</header><text>The amount of an acreage rent collected under paragraph (1) shall be determined using the following equation: Acreage rent = A × B × ((1 + C)<superscript>D</superscript>)).</text></subparagraph>
<subparagraph id="H4FB0D7776CBF4A6BADFA2EDAE312151E" commented="no"><enum>(B)</enum><header>Definitions</header><text>For purposes of the equation described in subparagraph (A):</text> <clause id="H76AFD7E69BE6444A8A6E51918D56DD6B" commented="no"><enum>(i)</enum><text>The letter <quote>A</quote> means the Per-Acre Rate.</text></clause>
<clause id="HDCBD83E3919C4806BAF18603F0432D52" commented="no"><enum>(ii)</enum><text>The letter <quote>B</quote> means the Encumbrance Factor.</text></clause> <clause id="HBDE41E02826942E5AF573BC8322CD29F" commented="no"><enum>(iii)</enum><text>The letter <quote>C</quote> means the Annual Adjustment Factor.</text></clause>
<clause id="H2BF43A6320374D02B915972EB2A9E008" commented="no"><enum>(iv)</enum><text>The letter <quote>D</quote> means the year in the term of the right-of-way.</text></clause></subparagraph></paragraph> <paragraph id="HCB34552D3FDD41DC97E90A372868B40D" commented="no"><enum>(3)</enum><header>Payment until production</header><text>The holder of a right-of-way for a renewable energy project shall pay an acreage rent collected under paragraph (1) until the date on which energy generation begins.</text></paragraph></subsection>
<subsection id="H418D78E807944F8CA1C92A462EC713A8" commented="no"><enum>(c)</enum><header>Capacity fees</header>
<paragraph id="H6F479F2094AD46BF9BAA0F9A77EA6FA5" commented="no"><enum>(1)</enum><header>In general</header><text>The Secretary shall, subject to paragraph (3), annually collect a capacity fee from the holder of a right-of-way for a renewable energy project based on the amount described in paragraph (2).</text></paragraph> <paragraph id="H9E2366B601D74F0EB6AC4AE673DEE3EE" commented="no"><enum>(2)</enum><header>Calculation of capacity fee</header><text>The amount of a capacity fee collected under paragraph (1) shall be equal to the greater of—</text>
<subparagraph id="H9B8F6672AD514CEF9F3C8F6891BA355C" commented="no"><enum>(A)</enum><text>an amount equal to the acreage rent described in subsection (b); and</text></subparagraph> <subparagraph id="HC086B3F0BBCF4F7585028CBD0024C894" commented="no"><enum>(B)</enum><text>3.9 percent of the gross proceeds from the sale of electricity produced by the renewable energy project.</text></subparagraph></paragraph>
<paragraph id="H7F37FFFB84384B1C81D5CBEB7E92DDBC" commented="no"><enum>(3)</enum><header>Multiple-use reduction factor</header>
<subparagraph id="H9D2607246C784791AAC713FD145BD84A" commented="no"><enum>(A)</enum><header>Application</header><text>The holder of a right-of-way for a wind energy generation project may request that the Secretary apply a multiple-use reduction factor of 10-percent to the amount of a capacity fee determined under paragraph (2) by submitting to the Secretary an application at such time, in such manner, and containing such information as the Secretary may require.</text></subparagraph> <subparagraph id="HF941C0A19FCF464FB7886EB0A0F3B629" commented="no"><enum>(B)</enum><header>Approval</header><text display-inline="yes-display-inline">The Secretary may approve an application submitted under subparagraph (A) only if not less than 25 percent of the land within the area of the right-of-way is authorized for use, occupancy, or development with respect to an activity other than the generation of wind energy for the entirety of the year in which the capacity fee is collected.</text></subparagraph>
<subparagraph id="H88C7FD74630B4E0CA6D3D6F070CD686A" commented="no"><enum>(C)</enum><header>Late determination</header>
<clause commented="no" display-inline="no-display-inline" id="HB153DF5CBDB543498C1C7620454CA3C6"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">If the Secretary approves an application under subparagraph (B) for a wind energy generation project after the date on which the holder of the right-of-way for the project begins paying a capacity fee, the Secretary shall apply the multiple-use reduction factor described in subparagraph (A) to the capacity fee for the first year beginning after the date of approval and each year thereafter for the period during which the right-of-way remains in effect. </text></clause> <clause commented="no" display-inline="no-display-inline" id="HD0E84BC579874703B8CC8DB054BC0BEB"><enum>(ii)</enum><header>Refund</header><text display-inline="yes-display-inline">The Secretary may not refund the holder of a right-of-way for the difference in the amount of a capacity fee paid in a previous year.</text></clause></subparagraph></paragraph></subsection>
<subsection id="H187E6EBBD69E4F5AABCAA6F385752D34" commented="no"><enum>(d)</enum><header>Late payment fee; termination</header>
<paragraph id="H3E19CCBED2424DC28336C07E551CB1DB" commented="no"><enum>(1)</enum><header>In general</header><text>The Secretary may charge the holder of a right-of-way for a renewable energy project a late payment fee if the Secretary does not receive payment for the acreage rent under subsection (b) or the capacity fee under subsection (c) by the date that is 15 days after the date on which the payment was due.</text></paragraph> <paragraph id="H249A0897E3FA42A4BB8541491946E15F" commented="no"><enum>(2)</enum><header>Termination of right-of-way</header><text>The Secretary may terminate a right-of-way for a renewable energy project if the Secretary does not receive payment for the acreage rent under subsection (b) or the capacity fee under subsection (c) by the date that is 90 days after the date on which the payment was due.</text></paragraph></subsection></section>
<section id="HFC05672EF2324523B4298D4C3605FD6A" commented="no"><enum>50303.</enum><header>Renewable energy revenue sharing</header>
<subsection id="H003A9CFA888A476E9DD15080DE53B6E6" commented="no"><enum>(a)</enum><header>Definitions</header><text>In this section:</text> <paragraph id="H93292B2F61AD4D3FAFD4E46EAE92C05F" commented="no"><enum>(1)</enum><header>County</header><text>The term <term>county</term> includes a parish, township, borough, and any other similar, independent unit of local government.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HCB32FC02325A44BDB3FC4F0D1632E6B8"><enum>(2)</enum><header display-inline="yes-display-inline">Covered land</header><text>The term <term>covered land</term> means land that is—</text> <subparagraph id="H837F495CD14347D18E3281BBBAD46DAA" commented="no"><enum>(A)</enum><text>public land administered by the Secretary; and</text></subparagraph>
<subparagraph id="H8567CBF951E9467D9CB4CCDBE26EB505" commented="no"><enum>(B)</enum><text>not excluded from the development of solar or wind energy under—</text> <clause id="HF3309526C4F44519A90C5CEF6C3DD654"><enum>(i)</enum><text>a land use plan; or</text></clause>
<clause id="H65D639CD9AD942F8B142C13CD8C92253"><enum>(ii)</enum><text>other Federal law.</text></clause></subparagraph></paragraph> <paragraph id="H4AE7F414F6BD4379B34EA3495B7EFB37"><enum>(3)</enum><header>National Forest System</header> <subparagraph commented="no" display-inline="no-display-inline" id="H45193EAF43C34943A0A1781CC03DC22B"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>National Forest System</term> means land of the National Forest System (as defined in section 11(a) of the Forest and Rangeland Renewable Resources Planning Act of 1974 (<external-xref legal-doc="usc" parsable-cite="usc/16/1609">16 U.S.C. 1609(a)</external-xref>)) administered by the Secretary of Agriculture.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H65BE6D621D1C40A9A05598D29D2DE165"><enum>(B)</enum><header>Exclusion</header><text>The term <term>National Forest System</term> does not include any forest reserve not created from the public domain.</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H29F4920577C042DAA34107019EDE564E"><enum>(4)</enum><header>Public land</header><text>The term <term>public land</term> means—</text>
<subparagraph id="HA0271C76B9434FD08C66CE35B05CDAD3" commented="no"><enum>(A)</enum><text>public lands (as defined in section 103 of the Federal Land Policy and Management Act of 1976 (<external-xref legal-doc="usc" parsable-cite="usc/43/1702">43 U.S.C. 1702</external-xref>)); and</text></subparagraph> <subparagraph id="HC3131CAF3C6D469FA17304486DD36EA3" commented="no"><enum>(B)</enum><text>National Forest System land.</text></subparagraph></paragraph>
<paragraph id="H270985E098DB47A498540A1E68F9FF2C" commented="no"><enum>(5)</enum><header>Renewable energy project</header><text display-inline="yes-display-inline">The term <term>renewable energy project</term> means a system described in section 2801.9(a)(4) of title 43, Code of Federal Regulations (as in effect on the date of enactment of this Act), located on covered land that uses wind or solar energy to generate energy.</text></paragraph> <paragraph id="H1ED3D865C3D24CD4B6339E168DD2D86C" commented="no"><enum>(6)</enum><header>Secretary</header><text>The term <term>Secretary</term> means—</text>
<subparagraph id="HB666F52CA6EC41C48C256DB10EB3CF34" commented="no"><enum>(A)</enum><text>the Secretary of the Interior, with respect to land controlled or administered by the Secretary of the Interior; and</text></subparagraph> <subparagraph id="H8EB9CB7665CC44418B71FCFA26393A7D" commented="no"><enum>(B)</enum><text>the Secretary of Agriculture, with respect to National Forest System land.</text></subparagraph></paragraph></subsection>
<subsection id="HAED9EC1B19C148E093679424597EA44E" commented="no"><enum>(b)</enum><header>Disposition of revenue</header>
<paragraph id="H0EED49BF9A6B4E17B19079F16455F60E" commented="no"><enum>(1)</enum><header>Disposition of revenues</header><text>Beginning on January 1, 2026, the amounts collected from a renewable energy project as bonus bids, rentals, fees, or other payments under a right-of-way, permit, lease, or other authorization shall—</text> <subparagraph id="H0BFFA902FFCF4999B2BDCD69CC7FE0E2"><enum>(A)</enum><text>be deposited in the general fund of the Treasury; and</text></subparagraph>
<subparagraph id="H16B729C426E14A8B8CBEADE6C6301235"><enum>(B)</enum><text>without further appropriation or fiscal year limitation, be allocated as follows:</text> <clause id="HA0922B69724741FDA24A5E41412AED83" commented="no"><enum>(i)</enum><text>25 percent shall be paid from amounts in the general fund of the Treasury to the State within the boundaries of which the revenue is derived.</text></clause>
<clause id="HD420DCD4FA5C48BDBBC58283131C288C" commented="no"><enum>(ii)</enum><text display-inline="yes-display-inline">25 percent shall be paid from amounts in the general fund of the Treasury to each county in a State within the boundaries of which the revenue is derived, to be allocated among each applicable county based on the percentage of county land from which the revenue is derived.</text></clause></subparagraph></paragraph> <paragraph id="HC239F5456B20495A94F58B4E377229C8" commented="no"><enum>(2)</enum><header>Payments to states and counties</header> <subparagraph id="HE79E4AFA9DB64B819482BAE3282F554D" commented="no"><enum>(A)</enum><header>In general</header><text>Amounts paid to States and counties under paragraph (1) shall be used in accordance with the requirements of section 35 of the Mineral Leasing Act (<external-xref legal-doc="usc" parsable-cite="usc/30/191">30 U.S.C. 191</external-xref>).</text></subparagraph>
<subparagraph id="HB3E478A41C3644FA8D522B7CDC420600" commented="no"><enum>(B)</enum><header>Payments in lieu of taxes</header><text>A payment to a county under paragraph (1) shall be in addition to a payment in lieu of taxes received by the county under <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/31/69">chapter 69</external-xref> of title 31, United States Code.</text></subparagraph> <subparagraph id="HBA064533897C4FFEAD519D816EE4F6F7"><enum>(C)</enum><header>Timing</header><text display-inline="yes-display-inline">The amounts required to be paid under paragraph (1)(B) for an applicable fiscal year shall be made available in the fiscal year that immediately follows the fiscal year for which the amounts were collected.</text></subparagraph></paragraph></subsection></section>
<section id="H8BD50C1DAA404BB1A4D9234EB53B07B1"><enum>50304.</enum><header>Rescission of National Park Service and Bureau of Land Management funds</header><text display-inline="no-display-inline">There are rescinded the unobligated balances of amounts made available by the following sections of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (commonly known as the <quote>Inflation Reduction Act of 2022</quote>) (136 Stat. 1818):</text> <paragraph commented="no" display-inline="no-display-inline" id="HB27B52E4A57F4017BC8DC4429D68EDD3"><enum>(1)</enum><text>Section 50221 (136 Stat. 2052).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H1C1EF6D1F65F47509B3330276637C438"><enum>(2)</enum><text>Section 50222 (136 Stat. 2052).</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HB382C3BC19CF4716945B49AB3594A2A5"><enum>(3)</enum><text>Section 50223 (136 Stat. 2052).</text></paragraph></section>
<section id="H6A350BF6D7FC4E32A8FE6E7AEA52C592"><enum>50305.</enum><header>Celebrating America's 250th anniversary</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Secretary of the Interior (acting through the Director of the National Park Service) for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $150,000,000 for events, celebrations, and activities surrounding the observance and commemoration of the 250th anniversary of the founding of the United States, to remain available through fiscal year 2028.</text></section></subtitle> <subtitle id="H74F9175AA1B84A2FBE44AE22AA3EE48C" style="OLC"><enum>D</enum><header>Energy</header> <section id="HAD69D55934D348768942C297082C5D89" section-type="subsequent-section"><enum>50401.</enum><header>Strategic Petroleum Reserve</header> <subsection id="HBF85B68709AB4887B95C919ADA133F17" display-inline="no-display-inline"><enum>(a)</enum><header>Energy Policy and Conservation Act definitions</header><text>In this section, the terms <term>related facility</term>, <term>storage facility</term>, and <term>Strategic Petroleum Reserve</term> have the meanings given those terms in section 152 of the Energy Policy and Conservation Act (<external-xref legal-doc="usc" parsable-cite="usc/42/6232">42 U.S.C. 6232</external-xref>).</text></subsection>
<subsection display-inline="no-display-inline" commented="no" id="HC0CB116D4F1F413F959287C4F3B85A89"><enum>(b)</enum><header>Appropriations</header><text>In addition to amounts otherwise available, there is appropriated to the Department of Energy for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029—</text> <paragraph display-inline="no-display-inline" commented="no" id="H79C0DFEA7D1F4A54B57ED5B8DBB3D137"><enum>(1)</enum><text display-inline="yes-display-inline">$218,000,000 for maintenance of, including repairs to, storage facilities and related facilities of the Strategic Petroleum Reserve; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H2EDE41ED65364986B892368DC867E3EE"><enum>(2)</enum><text>$171,000,000 to acquire, by purchase, petroleum products for storage in the Strategic Petroleum Reserve.</text></paragraph></subsection> <subsection id="H99FC9B72E10D414296BB47961F407D49"><enum>(c)</enum><header>Repeal of strategic petroleum reserve drawdown and sale mandate</header><text>Section 20003 of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/42/6241">42 U.S.C. 6241</external-xref> note) is repealed.</text></subsection></section>
<section id="H41167DCEB4004B91BB6E924B2C8754DB"><enum>50402.</enum><header>Repeals; rescissions</header>
<subsection id="H4ED1B0CBF16E4C868C639C20D5DFAAB3"><enum>(a)</enum><header>Repeal and rescission</header><text>Section 50142 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2044) (commonly known as the <quote>Inflation Reduction Act of 2022</quote>) is repealed and the unobligated balance of amounts made available under that section (as in effect on the day before the date of enactment of this Act) is rescinded.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA23D804E7F8F49CC9535C7E7670D324B"><enum>(b)</enum><header>Rescissions</header> <paragraph commented="no" display-inline="no-display-inline" id="HDB2E3A49EC544554AF546E023DB2E336"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>The unobligated balances of amounts made available under the sections described in paragraph (2) are rescinded.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HB5E610FA646D415785DAB0B6092301C6"><enum>(2)</enum><header>Sections described</header><text>The sections referred to in paragraph (1) are the following sections of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (commonly known as the <quote>Inflation Reduction Act of 2022</quote>):</text> <subparagraph id="HC75B46E1C056433F8CB3341B7A98940A"><enum>(A)</enum><text>Section 50123 (<external-xref legal-doc="usc" parsable-cite="usc/42/18795b">42 U.S.C. 18795b</external-xref>).</text></subparagraph>
<subparagraph id="H53159FD68007468CBA23368F1646CC2C"><enum>(B)</enum><text>Section 50141 (136 Stat. 2042).</text></subparagraph> <subparagraph id="H01AD2F9F8B3040138724A849FBDA3DBF"><enum>(C)</enum><text>Section 50144 (136 Stat. 2044).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H26EAC754210B4175AD0D9C609F74D28C"><enum>(D)</enum><text>Section 50145 (136 Stat. 2045).</text></subparagraph> <subparagraph id="H946889E4D8AB43A0B4414CDDFF1DDD56"><enum>(E)</enum><text>Section 50151 (<external-xref legal-doc="usc" parsable-cite="usc/42/18715">42 U.S.C. 18715</external-xref>).</text></subparagraph>
<subparagraph id="H2CB2DC98E03E4B2788B2C5E32379B2AB"><enum>(F)</enum><text>Section 50152 (<external-xref legal-doc="usc" parsable-cite="usc/42/18715a">42 U.S.C. 18715a</external-xref>).</text></subparagraph> <subparagraph id="H1E0D2A4E587F4742B43F7DCC93C252AB"><enum>(G)</enum><text>Section 50153 (<external-xref legal-doc="usc" parsable-cite="usc/42/18715b">42 U.S.C. 18715b</external-xref>).</text></subparagraph>
<subparagraph id="HEF03663E67024281A80351004E337155"><enum>(H)</enum><text>Section 50161 (<external-xref legal-doc="usc" parsable-cite="usc/42/17113b">42 U.S.C. 17113b</external-xref>).</text></subparagraph></paragraph></subsection></section> <section id="H90C144D45E2F4F4BAABEC2900F29E77D"><enum>50403.</enum><header>Energy dominance financing</header> <subsection commented="no" display-inline="no-display-inline" id="H09DFCF121FC8465BA93E1A2CF46CAB53"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Section 1706 of the Energy Policy Act of 2005 (<external-xref legal-doc="usc" parsable-cite="usc/42/16517">42 U.S.C. 16517</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HC355D1848CD241B69DD248F162114EE1"><enum>(1)</enum><text>in subsection (a)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H7AA5050B0BCD47448262D918FD37983B"><enum>(A)</enum><text>in paragraph (1), by striking <quote>or</quote> at the end;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H9D03C9617F8642DE99240EC6A26464C0"><enum>(B)</enum><text display-inline="yes-display-inline">in paragraph (2), by striking <quote>avoid</quote> and all that follows through the period at the end and inserting <quote>increase capacity or output; or</quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HD3CACAD36BA9495FB7F21929E9C333B4"><enum>(C)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE6D4B70C91CD467E892A0C347541AADA">
<paragraph commented="no" display-inline="no-display-inline" id="H4AE79E6DEE3C4634A973594DC487F945"><enum>(3)</enum><text>support or enable the provision of known or forecastable electric supply at time intervals necessary to maintain or enhance grid reliability or other system adequacy needs.</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H2B3F316F07404C488950CBB033F96C15"><enum>(2)</enum><text>by striking subsection (c);</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H2329D467CCD94A21AC280F4BE038735C"><enum>(3)</enum><text>by redesignating subsections (d) through (f) as subsections (c) through (e), respectively;</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H31BFA6CE5A8B4B2F8DA39024EAA9DC34"><enum>(4)</enum><text>in subsection (c) (as so redesignated)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H0F153D2EDECC4CF1B7C47D93B87EBD3C"><enum>(A)</enum><text>in paragraph (1), by adding <quote>and</quote> at the end;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H7F61A2B749614CD9A59880D5685F238E"><enum>(B)</enum><text>by striking paragraph (2); and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H1F29CB76862646AEAEFD68F99B4E4675"><enum>(C)</enum><text>by redesignating paragraph (3) as paragraph (2);</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H24F9CBA39AC446B9B095CE2F148B8549"><enum>(5)</enum><text>in subsection (e) (as so redesignated), by striking <quote>for—</quote> in the matter preceding paragraph (1) and all that follows through the period at the end of paragraph (2) and inserting <quote>for enabling the identification, leasing, development, production, processing, transportation, transmission, refining, and generation needed for energy and critical minerals.</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HCAFED665833D4A9888E68B28C8133648"><enum>(6)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB0C2BAD2414B42EDB491BBABAB42BB52"> <subsection id="HCD784465C4A64DFFBF3BB66D50E3E37E"><enum>(f)</enum><header>Funding</header> <paragraph commented="no" display-inline="no-display-inline" id="HCB8EAAA37505420C8C3AD1A3C488CE2F"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there is appropriated to the Secretary for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $1,000,000,000, to remain available through September 30, 2028, to carry out activities under this section.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HCD57ACF023B84F04BDC87FB0BE1DAE43"><enum>(2)</enum><header>Administrative costs</header><text display-inline="yes-display-inline">Of the amount made available under paragraph (1), the Secretary shall use not more than 3 percent for administrative expenses. </text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H984823F274CA48E6A2491C19405E564B"><enum>(b)</enum><header>Commitment authority</header><text>Section 50144(b) of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (commonly known as the <quote>Inflation Reduction Act of 2022</quote>) (136 Stat. 2045) is amended by striking <quote>2026</quote> and inserting <quote>2028</quote>.</text></subsection></section>
<section id="HA04EEE3CBA974F9C98234FF9F7725DD7"><enum>50404.</enum><header>Transformational artificial intelligence models</header>
<subsection id="H6B9EF718625E4DBA8BC4AD2B6CCED853"><enum>(a)</enum><header>Definitions</header><text>In this section:</text> <paragraph commented="no" display-inline="no-display-inline" id="HB9614DD25E354E0FBE1514C62E71F649"><enum>(1)</enum><header>American science cloud</header><text>The term <quote>American science cloud</quote> means a system of United States government, academic, and private sector programs and infrastructures utilizing cloud computing technologies to facilitate and support scientific research, data sharing, and computational analysis across various disciplines while ensuring compliance with applicable legal, regulatory, and privacy standards.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HE070C0E570C146D4BAFFFB821262CDF0"><enum>(2)</enum><header display-inline="yes-display-inline">Artificial intelligence</header><text>The term <term>artificial intelligence</term> has the meaning given the term in section 5002 of the National Artificial Intelligence Initiative Act of 2020 (<external-xref legal-doc="usc" parsable-cite="usc/15/9401">15 U.S.C. 9401</external-xref>).</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H1203D582BE51433898877E3E856A62A6"><enum>(b)</enum><header display-inline="yes-display-inline">Transformational models</header><text>The Secretary of Energy shall—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HD6DB9D02BA9B4BA7B03812246CFCC6E9"><enum>(1)</enum><text display-inline="yes-display-inline">mobilize National Laboratories to partner with industry sectors within the United States to curate the scientific data of the Department of Energy across the National Laboratory complex so that the data is structured, cleaned, and preprocessed in a way that makes it suitable for use in artificial intelligence and machine learning models; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H682EBFEA0A03411089C2A120DA7357FF"><enum>(2)</enum><text>initiate seed efforts for self-improving artificial intelligence models for science and engineering powered by the data described in paragraph (1).</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H4573750E03D047C2A651810428C23B12"><enum>(c)</enum><header>Uses</header>
<paragraph commented="no" display-inline="no-display-inline" id="HBE2E7ADA9E7840809DDF65709A184605"><enum>(1)</enum><header>Microelectronics</header><text display-inline="yes-display-inline">The curated data described in subsection (b)(1) may be used to rapidly develop next-generation microelectronics that have greater capabilities beyond Moore’s law while requiring lower energy consumption.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HBC54FE45E5B24EF0B936F986AB8A19B2"><enum>(2)</enum><header>New energy technologies</header><text>The artificial intelligence models developed under subsection (b)(2) shall be provided to the scientific community through the American science cloud to accelerate innovation in discovery science and engineering for new energy technologies. </text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H9F88A456B2EC42C5BADF49ABF920D31B"><enum>(d)</enum><header>Appropriations</header><text>There is appropriated, out of any funds in the Treasury not otherwise appropriated, $150,000,000, to remain available through September 30, 2026, to carry out this section.</text></subsection></section></subtitle> <subtitle id="H118ECAAADB0540D8BBE8042029E0AD72" style="OLC"><enum>E</enum><header>Water</header> <section id="H78F42AF3A1BC48AFBA551DDB89803627"><enum>50501.</enum><header>Water conveyance and surface water storage enhancement</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Secretary of the Interior, acting through the Commissioner of Reclamation, for fiscal year 2025, out of any funds in the Treasury not otherwise appropriated, $1,000,000,000, to remain available through September 30, 2034, for construction and associated activities that restore or increase the capacity or use of existing conveyance facilities constructed by the Bureau of Reclamation or for construction and associated activities that increase the capacity of existing Bureau of Reclamation surface water storage facilities, in a manner as determined by the Secretary of the Interior, acting through the Commissioner of Reclamation: <proviso><italic>Provided,</italic></proviso> That, for the purposes of section 203 of the Reclamation Reform Act of 1982 (<external-xref legal-doc="usc" parsable-cite="usc/43/390cc">43 U.S.C. 390cc</external-xref>) or section 3404(a) of the Reclamation Projects Authorization and Adjustment Act of 1992 (<external-xref legal-doc="public-law" parsable-cite="pl/102/575">Public Law 102–575</external-xref>; 106 Stat. 4708), a contract or agreement entered into pursuant to this section shall not be treated as a new or amended contract: <proviso><italic>Provided further,</italic></proviso> That none of the funds provided under this section shall be reimbursable or subject to matching or cost-sharing requirements.</text></section></subtitle></title>
<title id="HB3E0583E617B4C2F803D5A0B2ECBA657" style="OLC"><enum>VI</enum><header>Committee on Environment and Public Works</header>
<section id="HE76AEF2DAE7E44BAAEFAFBDC0E104759" section-type="subsequent-section"><enum>60001.</enum><header>Rescission of funding for clean heavy-duty vehicles</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 132 of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7432">42 U.S.C. 7432</external-xref>) are rescinded.</text></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H03E9D5A4EEAA460DB574C2826B6B0A52"><enum>60002.</enum><header>Repeal of Greenhouse Gas Reduction Fund</header><text display-inline="no-display-inline">Section 134 of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7434">42 U.S.C. 7434</external-xref>) is repealed and the unobligated balances of amounts made available to carry out that section (as in effect on the day before the date of enactment of this Act) are rescinded. </text></section>
<section id="HD6EC74935A184C04B575B812582DD63F" section-type="subsequent-section"><enum>60003.</enum><header>Rescission of funding for diesel emissions reductions</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60104 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2067) are rescinded.</text></section> <section id="H520A1A366047469EA716F2A4789CC4F4" section-type="subsequent-section"><enum>60004.</enum><header>Rescission of funding to address air pollution</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60105 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2067) are rescinded.</text></section>
<section id="H595EE741A7FF4301848B3C612CCD9068" section-type="subsequent-section"><enum>60005.</enum><header>Rescission of funding to address air pollution at schools</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60106 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2069) are rescinded.</text></section> <section id="HDD7CDF21C4814B79A64AEF1E82777F89" section-type="subsequent-section"><enum>60006.</enum><header>Rescission of funding for the low emissions electricity program</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 135 of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7435">42 U.S.C. 7435</external-xref>) are rescinded.</text></section>
<section id="H7FCA5625672D4241861288A7A0107D9E"><enum>60007.</enum><header>Rescission of funding for section 211(o) of the Clean Air Act</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60108 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2070) are rescinded.</text></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HDABFC0F4A3EA4B72959F71B0B8C427E8"><enum>60008.</enum><header>Rescission of funding for implementation of the American Innovation and Manufacturing Act</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60109 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2071) are rescinded.</text></section>
<section id="H2CB5706C0A724D8B9E7B6A382797CFEF"><enum>60009.</enum><header>Rescission of funding for enforcement technology and public information</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60110 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2071) are rescinded.</text></section> <section id="H03711F620F41415C9E562B3B7987C91F"><enum>60010.</enum><header>Rescission of funding for greenhouse gas corporate reporting</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60111 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2072) are rescinded. </text></section>
<section id="H46CF21C5943B4A92A6AA057ED3C9506E" section-type="subsequent-section"><enum>60011.</enum><header>Rescission of funding for environmental product declaration assistance</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60112 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/42/4321">42 U.S.C. 4321</external-xref> note; 136 Stat. 2072) are rescinded. </text></section> <section id="H773191F2541648A980B9E0D5A14B844C" section-type="subsequent-section"><enum>60012.</enum><header>Rescission of funding for methane emissions and waste reduction incentive program for petroleum and natural gas systems</header> <subsection commented="no" display-inline="no-display-inline" id="H7DCCF86338904F2BA9C14CA9C746C8B3"><enum>(a)</enum><header display-inline="yes-display-inline">Rescission</header><text>The unobligated balances of amounts made available to carry out subsections (a) and (b) of section 136 of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7436">42 U.S.C. 7436</external-xref>) are rescinded.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H9756713272B941B38EC9A77A6F9C4614"><enum>(b)</enum><header>Period</header><text>Section 136(g) of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7436">42 U.S.C. 7436(g)</external-xref>) is amended by striking <quote>calendar year 2024</quote> and inserting <quote>calendar year 2034</quote>.</text></subsection></section> <section id="H880AEA31C92346129B434AA58023CB04" section-type="subsequent-section"><enum>60013.</enum><header>Rescission of funding for greenhouse gas air pollution plans and implementation grants</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 137 of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7437">42 U.S.C. 7437</external-xref>) are rescinded. </text></section>
<section id="HFE5B9D5A4856471AAD38B7655FA53C02"><enum>60014.</enum><header>Rescission of funding for environmental protection agency efficient, accurate, and timely reviews</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60115 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2077) are rescinded. </text></section> <section id="H8A49ECBA3E1B4B7EB97F21C378A1B8A1" section-type="subsequent-section"><enum>60015.</enum><header>Rescission of funding for low-embodied carbon labeling for construction materials</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60116 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/42/4321">42 U.S.C. 4321</external-xref> note; 136 Stat. 2077) are rescinded.</text></section>
<section id="H1162BDFFF1F24F6FA6015A28C16B32C1" section-type="subsequent-section"><enum>60016.</enum><header>Rescission of funding for environmental and climate justice block grants</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 138 of the Clean Air Act (<external-xref legal-doc="usc" parsable-cite="usc/42/7438">42 U.S.C. 7438</external-xref>) are rescinded. </text></section> <section id="H23E5B6CF64214DE1BF49208E00DF55CA" section-type="subsequent-section"><enum>60017.</enum><header>Rescission of funding for ESA recovery plans</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60301 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2079) are rescinded.</text></section>
<section id="HC91BE13D8CF241828C2735A4BF58D1F1"><enum>60018.</enum><header>Rescission of funding for environmental and climate data collection</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60401 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2079) are rescinded.</text></section> <section id="H6D43447CC6F446E7B7C24E5FD60381CF" section-type="subsequent-section"><enum>60019.</enum><header>Rescission of neighborhood access and equity grant program</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 177 of title 23, United States Code, are rescinded.</text></section>
<section id="H1E18498420814410AED05BA284A9BC98"><enum>60020.</enum><header>Rescission of funding for Federal building assistance</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60502 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2083) are rescinded.</text></section> <section id="HBCF6AEAE661345CDAE61B80E0E76346A"><enum>60021.</enum><header>Rescission of funding for low-carbon materials for Federal buildings</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60503 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2083) are rescinded.</text></section>
<section id="H221175771B10478A8975E5A17BD43104"><enum>60022.</enum><header>Rescission of funding for GSA emerging and sustainable technologies</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 60504 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> (136 Stat. 2083) are rescinded. </text></section> <section id="H826E914A862E4F20BBB5495F7402D096" section-type="subsequent-section"><enum>60023.</enum><header>Rescission of environmental review implementation funds</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 178 of title 23, United States Code, are rescinded.</text></section>
<section id="H7318E3B1D28C477583E2256E967E263C" section-type="subsequent-section"><enum>60024.</enum><header>Rescission of low-carbon transportation materials grants</header><text display-inline="no-display-inline">The unobligated balances of amounts made available to carry out section 179 of title 23, United States Code, are rescinded.</text></section> <section id="H7A7BF0BDE02C4C74B41C8CA1E033802E"><enum>60025.</enum><header>John F. Kennedy Center for the Performing Arts</header> <subsection id="HD83DB0ED350944219F08E8FDA88ED7F5"><enum>(a)</enum><header>In general</header><text>In addition to amounts otherwise available, there is appropriated for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $256,657,000, to remain available until September 30, 2029, for necessary expenses for capital repair, restoration, maintenance backlog, and security structures of the building and site of the John F. Kennedy Center for the Performing Arts.</text></subsection>
<subsection id="H9D322DFDA7C14369ADE3D0793A79B1DA"><enum>(b)</enum><header>Administrative costs</header><text>Of the amounts made available under subsection (a), not more than 3 percent may be used for administrative costs necessary to carry out this section.</text></subsection></section> <section id="H95C86ABC9DF84C618EFAB6E6F991F9AD"><enum>60026.</enum><header>Project sponsor opt-in fees for environmental reviews</header><text display-inline="no-display-inline">Title I of the National Environmental Policy Act of 1969 (<external-xref legal-doc="usc" parsable-cite="usc/42/4331">42 U.S.C. 4331 et seq.</external-xref>) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H11150D1191F44276B9A0CF50BEA7B0C0">
<section id="HC2CF147B223E4518BE3C407C2BC27F67"><enum>112.</enum><header>Project sponsor opt-in fees for environmental reviews</header>
<subsection id="H73194E37EE354032A3C134A2C12FD97B"><enum>(a)</enum><header>Process</header>
<paragraph id="HF093C71647CE4B42B3E5533B5BE07F21"><enum>(1)</enum><header>Project sponsor</header><text>A project sponsor that intends to pay a fee under this section for the preparation, or supervision of the preparation, of an environmental assessment or environmental impact statement for a project shall submit to the Council—</text> <subparagraph id="H182D891ADAAD4C68BB7A2F5CAFB9EC94"><enum>(A)</enum><text>a description of the project; and</text></subparagraph>
<subparagraph id="HEBD947B7ACC34637B2410FA2BDB2D2AE"><enum>(B)</enum><text>a declaration of whether the project sponsor intends to prepare the environmental assessment or environmental impact statement under section 107(f).</text></subparagraph></paragraph> <paragraph id="HD1F9D954B7FC419C9DD4EA59CCFB5B5C"><enum>(2)</enum><header>Council on environmental quality</header><text>Not later than 15 days after the date on which the Council receives information described in paragraph (1) from a project sponsor, the Council shall provide to the project sponsor notice of the amount of the fee to be paid under this section, as determined under subsection (b).</text></paragraph>
<paragraph id="H5AB05539238E4FCEB9558632C5E4A801"><enum>(3)</enum><header>Payment of fee</header><text>A project sponsor may pay a fee under this section after receipt of the notice described in paragraph (2).</text></paragraph> <paragraph id="HD6230F1CDD784A539C3BCF8E2CD6A793"><enum>(4)</enum><header>Deadline for environmental reviews for which a fee is paid</header><text>Notwithstanding section 107(g)(1)—</text>
<subparagraph id="H8154986D71AD4FEE8BCBE151687A34D7"><enum>(A)</enum><text>an environmental assessment for which a fee is paid under this section shall be completed not later than 180 days after the date on which the fee is paid; and</text></subparagraph> <subparagraph id="HF1528F7997BB416FBF5F2F3F60679C9C"><enum>(B)</enum><text>an environmental impact statement for which a fee is paid under this section shall be completed not later than 1 year after the date of publication of the notice of intent to prepare the environmental impact statement.</text></subparagraph></paragraph></subsection>
<subsection id="H00FE1406D60D4ED9A14B07CC27303FD5"><enum>(b)</enum><header>Fee amount</header><text>The amount of a fee under this section shall be—</text> <paragraph id="H75F2A05B480A4782B1104DC508EBCF0B"><enum>(1)</enum><text>125 percent of the anticipated costs to prepare the environmental assessment or environmental impact statement; and</text></paragraph>
<paragraph id="H67655103FDA5496CA5F9C6E5B6942FC1"><enum>(2)</enum><text>in the case of an environmental assessment or environmental impact statement to be prepared in whole or in part by a project sponsor under section 107(f), 125 percent of the anticipated costs to supervise preparation of, and, as applicable, prepare, the environmental assessment or environmental impact statement.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></section></title> <title id="HE7EAEF8A10F5420C9F2B2B2B6F103CF3" style="OLC"><enum>VII</enum><header>Finance</header> <subtitle id="H7A9DBBFFDCDC4FDA93D4DF9AC49BB8BE" style="OLC"><enum>A</enum><header>Tax</header> <section id="HEC21CA540D674953986DE38DE16762AE"><enum>70001.</enum><header>References to the Internal Revenue Code of 1986, etc</header> <subsection id="HD60ED19FE2604AA1AED86318053031CF"><enum>(a)</enum><header>References</header><text>Except as otherwise expressly provided, whenever in this title, an amendment or repeal is expressed in terms of an amendment to, or repeal of, a section or other provision, the reference shall be considered to be made to a section or other provision of the Internal Revenue Code of 1986.</text></subsection>
<subsection id="H6CBCF75800A947F18E7FB32889344C8A"><enum>(b)</enum><header>Certain rules regarding effect of rate changes not applicable</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/15">Section 15</external-xref> of the Internal Revenue Code of 1986 shall not apply to any change in rate of tax by reason of any provision of, or amendment made by, this title.</text></subsection></section> <chapter id="H64DFEB6022624DDD992B468DDA806578"><enum>1</enum><header>Providing permanent tax relief for middle-class families and workers</header> <section id="H359E7CA602554D94AEA83C1DEA1C6A78"><enum>70101.</enum><header>Extension and enhancement of reduced rates</header> <subsection id="H3D06E6030F394D899A039458218E56F8"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1">Section 1(j)</external-xref> is amended—</text>
<paragraph id="H29E8706DDDD14A18AB6E2A96F2B5A0A3"><enum>(1)</enum><text>in paragraph (1), by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph> <paragraph id="H953CBB5E79C74F3981EFA6BFDC9EA437"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection>
<subsection id="H8650AF59B6FC4533A193AA07D78BF866"><enum>(b)</enum><header>Inflation adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1">Section 1(j)(3)(B)(i)</external-xref> is amended by inserting <quote>solely for purposes of determining the dollar amounts at which any rate bracket higher than 12 percent ends and at which any rate bracket higher than 22 percent begins,</quote> before <quote>subsection (f)(3)</quote>.</text></subsection> <subsection id="H0AC533B9D8164759810F243E5160477E"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H27A3BF740ED140CCAB4076FDF19F61FC"><enum>70102.</enum><header>Extension and enhancement of increased standard deduction</header>
<subsection id="HC266035F648944E79CC5F0D5CFC8F9DE"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/63">Section 63(c)(7)</external-xref> is amended—</text> <paragraph id="H1C53A450C0CA406E8D26525212CCA821"><enum>(1)</enum><text>by striking <quote>, and before January 1, 2026</quote> in the matter preceding subparagraph (A), and</text></paragraph>
<paragraph id="HDABD6ED210DA45ADA7754EFC71892C9C"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection id="H2352B6512A7C4BDABF452C880E328EEF"><enum>(b)</enum><header>Additional increase in standard deduction</header><text>Paragraph (7) of <external-xref legal-doc="usc" parsable-cite="usc/26/63">section 63(c)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H0363401D322C44CAB603B3C27E66B115"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>$18,000</quote> both places it appears in subparagraphs (A)(i) and (B)(ii) and inserting <quote>$23,625</quote>,</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HFAB03BC2BFA54A3690C6344D367BCF01"><enum>(2)</enum><text>by striking <quote>$12,000</quote> both places it appears in subparagraphs (A)(ii) and (B)(ii) and inserting <quote>$15,750</quote>,</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HD261EB44BB6E43B2A53899C8BFA87BA0"><enum>(3)</enum><text>by striking <quote>2018</quote> in subparagraph (B)(ii) and inserting <quote>2025</quote>, and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HD752C64940014857A3CD3DCC495B5759"><enum>(4)</enum><text>by striking <quote>2017</quote> in subparagraph (B)(ii)(II) and inserting <quote>2024</quote>.</text></paragraph></subsection>
<subsection id="H0A81D0DFA5EE466A957DECBBA9A6990A"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection></section> <section id="HA96376C924794FBDA210A0A6E18FC9D4"><enum>70103.</enum><header>Termination of deduction for personal exemptions other than temporary senior deduction</header> <subsection id="HD37D858291174A4DA1307825D60A827D"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/151">Section 151(d)(5)</external-xref> is amended—</text>
<paragraph id="H3239D0EFF100431196C6A4BB7657B0DC"><enum>(1)</enum><text>by striking <quote><header-in-text style="OLC" level="paragraph">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text style="OLC" level="paragraph">beginning after 2017</header-in-text></quote>,</text></paragraph> <paragraph id="HF21E9EC0E983445AA38FC50BF0093149"><enum>(2)</enum><text>by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph>
<paragraph id="H5FF6C0708B3E4332AF3072E8AA9EB2E7"><enum>(3)</enum><text>by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HBD6B7C47BE8D4391AC8A3963B83578CA"> <subparagraph commented="no" display-inline="no-display-inline" id="H1D2A83FFC2E04443B7290C68F8CAF03D"><enum>(C)</enum><header>Deduction for seniors</header> <clause commented="no" display-inline="no-display-inline" id="H350173346DA5455B86EE7A83575E9224"><enum>(i)</enum><header display-inline="yes-display-inline">In general</header><text>In the case of a taxable year beginning before January 1, 2029, there shall be allowed a deduction in an amount equal to $6,000 for each qualified individual with respect to the taxpayer.</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HB44CBFEA02D449B8A64B8FAD7A75D789"><enum>(ii)</enum><header>Qualified individual</header><text>For purposes of clause (i), the term <term>qualified individual</term> means—</text> <subclause commented="no" display-inline="no-display-inline" id="HB21D692E53EC4A12A089F972D49E643E"><enum>(I)</enum><text display-inline="yes-display-inline">the taxpayer, if the taxpayer has attained age 65 before the close of the taxable year, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H39E3A36B53464615A05CEE91C97CA4D7"><enum>(II)</enum><text>in the case of a joint return, the taxpayer's spouse, if such spouse has attained age 65 before the close of the taxable year.</text></subclause></clause> <clause id="H53B98DCF459742CA8312E22C5F3B1BB2"><enum>(iii)</enum><header>Limitation based on modified adjusted gross income</header> <subclause commented="no" display-inline="no-display-inline" id="H6AB45ECC75A8492CADBB89FD5FF9859C"><enum>(I)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of any taxpayer for any taxable year, the $6,000 amount in clause (i) shall be reduced (but not below zero) by 6 percent of so much of the taxpayer's modified adjusted gross income as exceeds $75,000 ($150,000 in the case of a joint return).</text></subclause>
<subclause id="HBBAD411A31CB48EE8026D2D1EA28276D"><enum>(II)</enum><header>Modified adjusted gross income</header><text>For purposes of this clause, the term <term>modified adjusted gross income</term> means the adjusted gross income of the taxpayer for the taxable year increased by any amount excluded from gross income under section 911, 931, or 933.</text></subclause></clause> <clause id="HD091C07F730F422E967A297F9FB0873F"><enum>(iv)</enum><header>Social security number required</header> <subclause id="H68852305D9894246B0AEBE634F81DFA7"><enum>(I)</enum><header>In general</header><text>Clause (i) shall not apply with respect to a qualified individual unless the taxpayer includes such qualified individual's social security number on the return of tax for the taxable year.</text></subclause>
<subclause id="H77DC83A433A1470B9133CB79AFCEC921"><enum>(II)</enum><header>Social security number</header><text>For purposes of subclause (I), the term <term>social security number</term> has the meaning given such term in section 24(h)(7).</text></subclause></clause> <clause id="HFB0EEC69B9B14B8AB4D90BA55C35383B" commented="no"><enum>(v)</enum><header>Married individuals</header><text>If the taxpayer is a married individual (within the meaning of section 7703), this subparagraph shall apply only if the taxpayer and the taxpayer's spouse file a joint return for the taxable year.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H46AE04EED1DD4B0CBB261CEC72DD462C"><enum>(b)</enum><header>Omission of correct social security number treated as mathematical or clerical error</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6213">Section 6213(g)(2)</external-xref> is amended by striking <quote>and</quote> at the end of subparagraph (U), by striking the period at the end of subparagraph (V) and inserting <quote>, and</quote>, and by inserting after subparagraph (V) the following new subparagraph:</text> <quoted-block id="H232F8E510F41462F8F855B02470F7C57" display-inline="no-display-inline" style="OLC"> <subparagraph id="H7F152CD8218D4BED9B4A2FA353E13614"><enum>(W)</enum><text>an omission of a correct social security number required under section 151(d)(5)(C) (relating to deduction for seniors).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HE9F3EE50F51744CC90DD21304E60C493"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection></section> <section id="H2172B34E4322422AA7D836F8AC2286B1"><enum>70104.</enum><header>Extension and enhancement of increased child tax credit</header> <subsection id="H0A757D9B62624791A433D5E4D0A2FC65"><enum>(a)</enum><header>Extension and increase of expanded child tax credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/24">Section 24(h)</external-xref> is amended—</text>
<paragraph id="H13795C66A79443F5B37CD10DDEB23B64"><enum>(1)</enum><text>in paragraph (1), by striking <quote>, and before January 1, 2026</quote>,</text></paragraph> <paragraph id="H227521DBEDED47E59A1669E99ACAF100"><enum>(2)</enum><text>in paragraph (2), by striking <quote>$2,000</quote> and inserting <quote>$2,200</quote>, and</text></paragraph>
<paragraph id="H1D6742E8B95244D3966D101D0FA53EAD"><enum>(3)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection id="H441123E41B634973A2575D8FACE2093A"><enum>(b)</enum><header>Social security number required</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/24">Section 24(h)(7)</external-xref> is amended to read as follows:</text>
<quoted-block id="HBA0A6C12EDB944ECB658351A1EA2CC29" display-inline="no-display-inline" style="OLC">
<paragraph id="H16CB8FE5060E4A03995A92B6F1F8476B"><enum>(7)</enum><header>Social security number required</header>
<subparagraph id="H1AD0563A269A4768B20F3C33A4321D7D"><enum>(A)</enum><header>In general</header><text>No credit shall be allowed under this section to a taxpayer with respect to any qualifying child unless the taxpayer includes on the return of tax for the taxable year—</text> <clause id="H451F3763852B4F1CA25943EE6BF76723"><enum>(i)</enum><text>the taxpayer's social security number (or, in the case of a joint return, the social security number of at least 1 spouse), and</text></clause>
<clause id="H18CEB8BEAB7441A7A784592E07F852B7"><enum>(ii)</enum><text>the social security number of such qualifying child.</text></clause></subparagraph> <subparagraph id="H4A992D11DBB44E1E812427674E03F82E"><enum>(B)</enum><header>Social security number</header><text>For purposes of this paragraph, the term <term>social security number</term> means a social security number issued to an individual by the Social Security Administration, but only if the social security number is issued—</text>
<clause id="HE87F85C084DA4EEBB11F9C59A96FA18D"><enum>(i)</enum><text>to a citizen of the United States or pursuant to subclause (I) (or that portion of subclause (III) that relates to subclause (I)) of section 205(c)(2)(B)(i) of the <act-name parsable-cite="SSA">Social Security Act</act-name>, and</text></clause> <clause id="H9916F127631A4420B4AFA7847C4E2C33"><enum>(ii)</enum><text>before the due date for such return.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H9596B9F183314B409AD1A5E33B0CD6B1"><enum>(c)</enum><header>Inflation adjustments</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/24">Section 24(i)</external-xref> is amended to read as follows:</text> <quoted-block id="H680FE838A5DF47E1A4C8E8E4FB209E18" display-inline="no-display-inline" style="OLC"> <subsection id="HC770DA290F3745FFABFF37CEEB338885"><enum>(i)</enum><header>Inflation adjustments</header> <paragraph id="H81EC3BB9B7754183A7C722664EAB7FB4"><enum>(1)</enum><header>Maximum amount of refundable credit</header><text>In the case of a taxable year beginning after 2024, the $1,400 amount in subsection (h)(5) shall be increased by an amount equal to—</text>
<subparagraph id="HB52A8E2D8208412BBC8C99832B9F8DE2"><enum>(A)</enum><text>such dollar amount, multiplied by</text></subparagraph> <subparagraph id="H6823C6FC2230484887C696447645794D"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>2017</quote> for <quote>2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph></paragraph>
<paragraph id="HF52CB5CA213B4B7094BAEA57B0B37B72"><enum>(2)</enum><header>Special rule for adjustment of credit amount</header><text>In the case of a taxable year beginning after 2025, the $2,200 amount in subsection (h)(2) shall be increased by an amount equal to—</text> <subparagraph id="H9C6EC383327247DB9F2991E744407334"><enum>(A)</enum><text>such dollar amount, multiplied by</text></subparagraph>
<subparagraph id="HA6668CD6C4E147FCB3EA312238592BFB"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>2024</quote> for <quote>2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph></paragraph> <paragraph id="H27775C492CE34F57AE1809205BF6644F"><enum>(3)</enum><header>Rounding</header><text>If any increase under this subsection is not a multiple of $100, such increase shall be rounded to the next lowest multiple of $100.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H1CFB932CDAA048289330F35E9A2498C5"><enum>(d)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/24">Section 24(h)(5)</external-xref> is amended to read as follows:</text> <quoted-block id="H870B000A241444BC80BDD36897D58E53" display-inline="no-display-inline" style="OLC"> <paragraph id="H1A398A06D5D340B1B847939C8CF50D66"><enum>(5)</enum><header>Maximum amount of refundable credit</header><text>The amount determined under subsection (d)(1)(A) with respect to any qualifying child shall not exceed $1,400, and such subsection shall be applied without regard to paragraph (4) of this subsection.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HAF9192BAD7D6493DA219A94B6A143314"><enum>(e)</enum><header>Omission of correct social security number treated as mathematical or clerical error</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6213">Section 6213(g)(2)(I)</external-xref> is amended by striking <quote>section 24(e)</quote> and inserting <quote>section 24</quote>.</text></subsection> <subsection id="HC8013DB714E94E46844FCC91C4CEA183"><enum>(f)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection></section>
<section id="HFA2E2B5875B74DFF8E8855A85560A214" section-type="subsequent-section"><enum>70105.</enum><header>Extension and enhancement of deduction for qualified business income</header>
<subsection id="HDDFFACCFEBE64CC9B8F8ED6B33B2D8B5"><enum>(a)</enum><header>Increase in taxable income limitation phase-in amounts</header>
<paragraph commented="no" display-inline="no-display-inline" id="HE8F855B25F65452C85D8B511DFA06C96"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Subparagraph (B) of <external-xref legal-doc="usc" parsable-cite="usc/26/199A">section 199A(b)(3)</external-xref> is amended by striking <quote>$50,000 ($100,000 in the case of a joint return)</quote> each place it appears and inserting <quote>$75,000 ($150,000 in the case of a joint return)</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HF94B20B67C7949818F9551D1AE5DFDB4"><enum>(2)</enum><header>Conforming amendment</header><text>Paragraph (3) of <external-xref legal-doc="usc" parsable-cite="usc/26/199A">section 199A(d)</external-xref> is amended by striking <quote>$50,000 ($100,000 in the case of a joint return)</quote> each place it appears and inserting <quote>$75,000 ($150,000 in the case of a joint return)</quote> .</text></paragraph></subsection>
<subsection id="H130404D49D954172A18FF6A7068BC0E9"><enum>(b)</enum><header>Minimum deduction for active qualified business income</header>
<paragraph commented="no" display-inline="no-display-inline" id="HB0665F7E384A43C482F10B010594FEBB"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Subsection (i) of <external-xref legal-doc="usc" parsable-cite="usc/26/199A">section 199A</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H428D5303FA7345DF9DEC271F3BE16770"> <subsection commented="no" display-inline="no-display-inline" id="H3632683B2F0448D6A7D0A025C01939CE"><enum>(i)</enum><header>Minimum deduction for active qualified business income</header> <paragraph commented="no" display-inline="no-display-inline" id="H76A02B0D1DAC4C8296D27786F14842C0"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of an applicable taxpayer for any taxable year, the deduction allowed under subsection (a) for the taxable year shall be equal to the greater of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HE7CA15BA6FBA4063A317F0D688BF0E62"><enum>(A)</enum><text display-inline="yes-display-inline">the amount of such deduction determined without regard to this subsection, or</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H0278A126D4D64E72B15EFC5106C9FB7A"><enum>(B)</enum><text>$400.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H025917FC95DA4C2CB57D1833F78E6A9F"><enum>(2)</enum><header>Applicable taxpayer</header><text>For purposes of this subsection—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H8D85F6F956C14158AF6ABC50E3F57394"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>applicable taxpayer</term> means, with respect to any taxable year, a taxpayer whose aggregate qualified business income with respect to all active qualified trades or businesses of the taxpayer for such taxable year is at least $1,000.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE263E9ACE6F84916974AF5DF29F3CE19"><enum>(B)</enum><header>Active qualified trade or business</header><text>The term <term>active qualified trade or business</term> means, with respect to any taxpayer for any taxable year, any qualified trade or business of the taxpayer in which the taxpayer materially participates (within the meaning of section 469(h)).</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HE2685D34F1F446D08E51C075AD94E88F"><enum>(3)</enum><header>Inflation adjustment</header><text display-inline="yes-display-inline">In the case of any taxable year beginning after 2026, the $400 amount in paragraph (1)(B) and the $1,000 amount in paragraph (2)(A) shall each be increased by an amount equal to —</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HB87AFAECFA3C4B67906199ADE5F191B3"><enum>(A)</enum><text display-inline="yes-display-inline">such dollar amount, multiplied by</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H065D1D9D01D34E78AA1572F9A6874125"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2025</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph><continuation-text continuation-text-level="paragraph">If any increase under this paragraph is not a multiple of $5, such increase shall be rounded to the nearest multiple of $5.</continuation-text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H642A9555590F4EEBAE68C29AA75928FB"><enum>(2)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/199A">Section 199A(a)</external-xref> is amended by inserting <quote>except as provided in subsection (i), </quote> before <quote>there</quote>.</text></paragraph></subsection> <subsection id="H27E4C06FADD543B9A305BD537FD74052" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H3FB5F11D4ECF41B8AEAFAB40DD675841"><enum>70106.</enum><header>Extension and enhancement of increased estate and gift tax exemption amounts</header>
<subsection id="HF58BF4AF6B004BC482E065ED4FF70B9E"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/2010">Section 2010(c)(3)</external-xref> is amended—</text> <paragraph id="HF4547FBA93BD45AB9A16D4E8E71A71A6"><enum>(1)</enum><text>in subparagraph (A) by striking <quote>$5,000,000</quote> and inserting <quote>$15,000,000</quote>,</text></paragraph>
<paragraph id="HA92E14432B984C9A8E661B2DCB35EC8E"><enum>(2)</enum><text>in subparagraph (B)—</text> <subparagraph id="H1C506A1D010744AD8831456F15015C75"><enum>(A)</enum><text>in the matter preceding clause (i), by striking <quote>2011</quote> and inserting <quote>2026</quote>, and</text></subparagraph>
<subparagraph id="HE11207E10D6647F798E9F196C8A9B54B"><enum>(B)</enum><text>in clause (ii), by striking <quote>calendar year 2010</quote> and inserting <quote>calendar year 2025</quote>, and</text></subparagraph></paragraph> <paragraph id="H66EC208633D94E7A81F9426AAA06FBD3"><enum>(3)</enum><text>by striking subparagraph (C).</text></paragraph></subsection>
<subsection id="H1C1616493B3F457E95D745F6D3F481F8"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to estates of decedents dying and gifts made after December 31, 2025.</text></subsection></section> <section id="HC4EBA15A87C049B2892CBDC96BB93D75"><enum>70107.</enum><header>Extension of increased alternative minimum tax exemption amounts and modification of phaseout thresholds</header> <subsection id="H7E51238D53974B19A0BFA6AD5FB77241"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/55">Section 55(d)(4)</external-xref> is amended—</text>
<paragraph id="H74EF95D6BA914A719865B09D3E2B3DC0"><enum>(1)</enum><text>in subparagraph (A), by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph> <paragraph id="H877D0C1B69864A9493599D56188DDFC5"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">and before 2026</header-in-text></quote> in the heading.</text></paragraph></subsection>
<subsection id="H32E7E1DB99224980B81020BEBB7FE274"><enum>(b)</enum><header>Modification of inflation adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/55">Section 55(d)(4)(B)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H8E8E0A312EE54BF49DA588CE7918300B"><enum>(1)</enum><text>by striking <quote>2018</quote> and inserting <quote>2018 (2026, in the case of the $1,000,000 amount in subparagraph (A)(ii)(I))</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H4E85158D8B3D4A2EAEE4F30E24081294"><enum>(2)</enum><text display-inline="yes-display-inline">by striking <quote>determined by substituting <quote>calendar year 2017</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</quote> and inserting “determined by substituting for ‘calendar year 2016’ in subparagraph (A)(ii) thereof—</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HCF571F3006964F62A0B0FD3AA7829F69"> <paragraph commented="no" display-inline="no-display-inline" id="HEF854D7F667340FCA9FF1677D6F39221"><enum>(1)</enum><text><quote>calendar year 2017</quote>, in the case of the $109,400 amount in subparagraph (A)(i)(I) and the $70,300 amount in subparagraph (A)(i)(II), and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H5FD0FD7D6B42471CBE173B25320AED4B"><enum>(2)</enum><text><quote>calendar year 2025</quote>, in the case of the $1,000,000 amount in subparagraph (A)(ii)(I).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HE9125128CA5C4918A1076972666CF978"><enum>(c)</enum><header>Modification of phaseout amount</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/55">Section 55(d)(4)(A)(ii)</external-xref> is amended by striking <quote>and</quote> at the end of subclause (II), and by adding at the end the following new subclause:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H44230FE5B2B34E45AFDCC539DE49494E">
<subclause commented="no" display-inline="no-display-inline" id="H38922E2EED174B6399C8B2F503D983D0"><enum>(IV)</enum><text>by substituting <quote>50 percent</quote> for <quote>25 percent</quote>, and</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H1D14F89AEA544C49B6DD337EF631A163"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H5FDFC6CE67B647499A2210D320A8D01C"><enum>70108.</enum><header>Extension and modification of limitation on deduction for qualified residence interest</header>
<subsection id="H5D4A5BA453BD44F7BD3E119469039539"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/163">Section 163(h)(3)(F)</external-xref> is amended—</text> <paragraph id="HFAD10F36096B4EB6AA056743F26F09D8"><enum>(1)</enum><text>in clause (i)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HA6F45DCA64924D11A476036D9CECFBA4"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>, and before January 1, 2026</quote>,</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H7B127A134D0F49BDA0B77245919D07A8"><enum>(B)</enum><text>by redesignating subclauses (III) and (IV) as subclauses (IV) and (V), respectively,</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE5F62CE633914C75A3D451EB1821EF2D"><enum>(C)</enum><text>by striking <quote>subclause (III)</quote> in subclause (V), as so redesignated, and inserting <quote>subclause (IV)</quote>, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HDB8E91D39A8346E3A579E90C825065EB"><enum>(D)</enum><text>by inserting after subclause (II) the following new subclause:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HA84756C74BB14641B9EDB40E703340B5">
<subclause commented="no" display-inline="no-display-inline" id="H2C0074522415421CB68620E6893E5C59"><enum>(III)</enum><header>Mortgage insurance premiums treated as interest</header><text>Clause (iv) of subparagraph (E) shall not apply.</text></subclause><after-quoted-block>,</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="HBD11E220260C47B8A06AF1C4CB0CBBB2"><enum>(2)</enum><text>by striking clause (ii) and redesignating clauses (iii) and (iv) as clauses (ii) and (iii), respectively, and</text></paragraph>
<paragraph id="H93969801DD0448CB9398295AE8B2A836"><enum>(3)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection id="H86A76F1B1CD7456ABBFD1A3BCFEFD8AD"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H1FE97CD7FCD949CAAC185793E3AA658D"><enum>70109.</enum><header>Extension and modification of limitation on casualty loss deduction</header>
<subsection id="H8DA56081EE7D47D79C3A52B62C4D489A"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/165">Section 165(h)(5)</external-xref> is amended—</text> <paragraph id="H208F5068E6E340DE904914A69134A69A"><enum>(1)</enum><text>in subparagraph (A), by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph>
<paragraph id="H2409029E4F3F4A84940D1FA96534E6A8"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HE5A8319BA7544F3B8DE7F68656704D58"><enum>(b)</enum><header>Extension to State declared disasters</header> <paragraph commented="no" display-inline="no-display-inline" id="HB6623B29DD9D4A3794B66CC6356E7320"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Subparagraph (A) of section 165(h)(5), as amended by subsection (a), is further amended by striking <quote>(i)(5))</quote> and inserting <quote>(i)(5)) or a State declared disaster</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H3FCF2BC645AF4DFA8F5B86972F4AE77C"><enum>(2)</enum><header>Exception related to personal casualty gains</header><text>Clause (i) of <external-xref legal-doc="usc" parsable-cite="usc/26/165">section 165(h)(5)(B)</external-xref> is amended by striking <quote>(as so defined)</quote> and inserting <quote>(as so defined) or a State declared disaster</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H290B468EB68340F7907C17AFE8DD1F49"><enum>(3)</enum><header>State declared disaster</header><text>Paragraph (5) of <external-xref legal-doc="usc" parsable-cite="usc/26/165">section 165(h)</external-xref> is amended by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HA701C261441A45C5BD1BB041A0D10D62">
<subparagraph commented="no" display-inline="no-display-inline" id="H9C0F96E0AD5149D1A1B50727B47F0271"><enum>(C)</enum><header>State declared disaster</header><text>For purposes of this paragraph—</text> <clause commented="no" display-inline="no-display-inline" id="H53DF4710635E407890E37EA3AA71BDBC"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>State declared disaster</term> means, with respect to any State, any natural catastrophe (including any hurricane, tornado, storm, high water, wind-driven water, tidal wave, tsunami, earthquake, volcanic eruption, landslide, mudslide, snowstorm, or drought), or, regardless of cause, any fire, flood, or explosion, in any part of the State, which in the determination of the Governor of such State (or the Mayor, in the case of the District of Columbia) and the Secretary causes damage of sufficient severity and magnitude to warrant the application of the rules of this section.</text></clause>
<clause id="H5DFB759F00E44A3D819757540F31AC6C" commented="no" display-inline="no-display-inline"><enum>(ii)</enum><header display-inline="yes-display-inline">State</header><text display-inline="yes-display-inline">The term <term>State</term> includes the District of Columbia, the Commonwealth of Puerto Rico, the Virgin Islands, Guam, American Samoa, and the Commonwealth of the Northern Mariana Islands.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HD58BC65269E349BD9C9DBD681E93A806"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="HF3AE4F8BAF36462D9087CB1C9F525221"><enum>70110.</enum><header>Termination of miscellaneous itemized deductions other than educator expenses</header>
<subsection id="HD3F8280D034644B79B8C9110156A4320" commented="no"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/67">Section 67(g)</external-xref> is amended—</text> <paragraph id="H7C0CFE190ED845CEB6B0030606D9A6FB" commented="no"><enum>(1)</enum><text>by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph>
<paragraph id="HAA92B83AE79D4755AFA2ABAA716E4C82" commented="no"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H44E3B28BA6364E19BF463942571A2A1D"><enum>(b)</enum><header>Deduction for educator expenses</header> <paragraph commented="no" display-inline="no-display-inline" id="HC779BFDC635441A18935A206F6EAA85D"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/67">Section 67(b)</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (11), by striking the period at the end of paragraph (12) and inserting <quote>, and</quote>, and by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H1AB5E1FDC2944899A4CED4C45977E9BF">
<paragraph commented="no" display-inline="no-display-inline" id="H8B906D2B065541758B8D1B96E4F89D7E"><enum>(13)</enum><text>the deductions allowed by section 162 for educator expenses (as defined in subsection (g)).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H23239C10CC874277A43E29E722DE6292"><enum>(2)</enum><header>Inclusion of coaches and certain nonathletic instructional equipment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/67">Section 67</external-xref> is amended by redesignating subsection (g), as amended by this section, as subsection (h), and by inserting after subsection (f) the following new section:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE620F95CEB664869BC047A88E1CFD826">
<subsection commented="no" display-inline="no-display-inline" id="H6EF1BA99E5194C76B08866160A12FF90"><enum>(g)</enum><header>Educator expenses</header><text>For purposes of subsection (b)(13), the term <term>educator expenses</term> means expenses of a type which would be described in section 62(a)(2)(D) if—</text> <paragraph commented="no" display-inline="no-display-inline" id="H5010A459F8B44DBEBCA93248CC8C8715"><enum>(1)</enum><text display-inline="yes-display-inline">such section were applied—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HF9B6D6E9D9684854A8F5A71C4C53E4DE"><enum>(A)</enum><text>without regard to the dollar limitation,</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H177EC68C4746450E83A2188CD87BFDA7"><enum>(B)</enum><text display-inline="yes-display-inline">without regard to <quote>(other than nonathletic supplies for courses of instruction in health or physical education)</quote> in clause (ii) thereof, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HFF2A1455070F49C2A6D41D143F101964"><enum>(C)</enum><text display-inline="yes-display-inline">by substituting <quote>as part of instructional activity</quote> for <quote>in the classroom</quote> in clause (ii) thereof, and</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H3923A6B4523E42078F41BC4644EBBB42"><enum>(2)</enum><text>section 62(d)(1)(A) were applied by inserting <quote>, interscholastic sports administrator or coach,</quote> after <quote>counselor</quote>.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H001A908AB7394819B8256C5330B4884C" commented="no"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section commented="no" display-inline="no-display-inline" id="H8D3F6723F81F49C3B78F2131BCD82ADE"><enum>70111.</enum><header>Limitation on tax benefit of itemized deductions</header> <subsection id="HD3E7B7D4C0F24781893617886AF938F5"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/68">Section 68</external-xref> is amended to read as follows:</text>
<quoted-block id="H24408341E8B74AF7814FB653766F0358" display-inline="no-display-inline" style="OLC">
<subsection id="H7D6ED65CC95B4BDAA41E389005BC82A2"><enum>(a)</enum><header>In general</header><text>In the case of an individual, the amount of the itemized deductions otherwise allowable for the taxable year (determined without regard to this section) shall be reduced by <fraction>2/37</fraction> of the lesser of—</text> <paragraph commented="no" display-inline="no-display-inline" id="H11C660AA52A64366A75842DF292C30BA"><enum>(1)</enum><text>such amount of itemized deductions, or</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HFAE4078BFD264EE1A1D995237D94B91A"><enum>(2)</enum><text>so much of the taxable income of the taxpayer for the taxable year (determined without regard to this section and increased by such amount of itemized deductions) as exceeds the dollar amount at which the 37 percent rate bracket under section 1 begins with respect to the taxpayer.</text></paragraph></subsection> <subsection id="H25E04C10C0AE43C4879B77E5466F7AC9"><enum>(b)</enum><header>Coordination with other limitations</header><text>This section shall be applied after the application of any other limitation on the allowance of any itemized deduction.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HBD3245557232446ABE67A3476ECCFBF0"><enum>(b)</enum><header>Limitation not applicable to determination of deduction for qualified business income</header>
<paragraph id="H531CD32F38494C1F95B676EAF2BB5A4C"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/199A">Section 199A(e)(1)</external-xref> is amended by inserting <quote>without regard to section 68 and</quote> after <quote>shall be computed</quote>.</text></paragraph> <paragraph id="HB2DEE1B0AC0A4E8FB0BB745CF9EEF911"><enum>(2)</enum><header>Patrons of specified agricultural and horticultural cooperatives</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/199A">Section 199A(g)(2)(B)</external-xref> is amended by inserting <quote>section 68 or</quote> after <quote>without regard to</quote>.</text></paragraph></subsection>
<subsection id="HB6E779E38479498ABB86764AE7BE1E63"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section commented="no" display-inline="no-display-inline" id="HE8DFF77C81F34C2097D12E48258CCA39"><enum>70112.</enum><header>Extension and modification of qualified transportation fringe benefits</header> <subsection commented="no" display-inline="no-display-inline" id="HCEF27E5287514F258DFFAAFCA9EFF824"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/132">Section 132(f)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H7888A31FB2DF486D8082B5865F6580C7"><enum>(1)</enum><text display-inline="yes-display-inline">by striking subparagraph (D) of paragraph (1),</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H35550AE86C544C21B49BADD3563086E9"><enum>(2)</enum><text>in paragraph (2), by inserting <quote>and</quote> at the end of subparagraph (A), by striking <quote>, and</quote> at the end of subparagraph (B) and inserting a period, and by striking subparagraph (C),</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HB7BCDDDD79F5491F83B8DC45415996EB"><enum>(3)</enum><text>by striking <quote>(other than a qualified bicycle commuting reimbursement)</quote> in paragraph (4),</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H56FC254E729B42E5A12DAD3C6E22F328"><enum>(4)</enum><text>by striking subparagraph (F) of paragraph (5), and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H46956636DE454A1BBB3C020721F183BA"><enum>(5)</enum><text>by striking paragraph (8).</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H6A173FF9922B44A4ADDF5459F32FE619"><enum>(b)</enum><header>Inflation adjustment</header><text>Clause (ii) of <external-xref legal-doc="usc" parsable-cite="usc/26/132">section 132(f)(6)(A)</external-xref> is amended by striking <quote>1998</quote> in clause (ii) and inserting <quote>1997</quote>.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H1222E00889EF4D7E9EE99AF3702E2962"><enum>(c)</enum><header>Coordination with disallowance of certain expenses</header><text>Subsection (l) of <external-xref legal-doc="usc" parsable-cite="usc/26/274">section 274</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H4593072818B0433CB8700E5C7A54B502"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote><header-in-text style="OLC" level="subsection">benefits</header-in-text>.—</quote> and all that follows through <quote>No deduction</quote> and inserting <quote><header-in-text style="OLC" level="subsection">benefits</header-in-text>.—No deduction</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H5B7182AA8A7A4794A1C72BD8FD5DA3CD"><enum>(2)</enum><text>by striking paragraph (2).</text></paragraph></subsection> <subsection id="H87DCD1A81C754B25A036EBA5F5214DA5" commented="no" display-inline="no-display-inline"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="HB834B26BC9CC4FC7AB03368B28845A35"><enum>70113.</enum><header>Extension and modification of limitation on deduction and exclusion for moving expenses</header>
<subsection id="H5341BF0BF35641A4A04C4D6BD92B1158"><enum>(a)</enum><header>Extension of limitation on deduction</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/217">Section 217(k)</external-xref> is amended—</text> <paragraph id="H0AACE070CFD6490FB9F9AF2267CF75E0"><enum>(1)</enum><text>by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph>
<paragraph id="H6033C7EBD82944EA89C4870B133DAF39"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HB1AE589B6DEF4070A0C5C595D831AD1C"><enum>(b)</enum><header>Allowance of deduction for members of the intelligence community</header><text>Section 217(k), as amended by subsection (a), is further amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HE3B218FD92584936ADCAC35974F84C47"><enum>(1)</enum><text>by striking <quote><header-in-text style="OLC" level="subsection">2017</header-in-text>.—Except in the case</quote> and inserting “<header-in-text level="subsection" style="OLC">2017</header-in-text>.—</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HE324FA9ED7914FCA8AB0DA7A6F45057E"> <paragraph commented="no" display-inline="no-display-inline" id="HCB4B3DE22A644B3488C35C9457E2C0E6"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Except in the case</text></paragraph><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H7755BDD8D54740D9A42C80934194717B"><enum>(2)</enum><text>by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H41A4B92399134957B86D88E674126752"> <paragraph commented="no" display-inline="no-display-inline" id="H849720D177884D6A8BD7E14B207EC3C5"><enum>(2)</enum><header>Members of the intelligence community</header><text>An employee or new appointee of the intelligence community (as defined in section 3 of the National Security Act of 1947 (<external-xref legal-doc="usc" parsable-cite="usc/50/3003">50 U.S.C. 3003</external-xref>)) (other than a member of the Armed Forces of the United States) who moves pursuant to a change in assignment which requires relocation shall be treated for purposes of this section in the same manner as an individual to whom subsection (g) applies.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H5DC1FEAC40E2492AB51CC2FA2CF5A127"><enum>(c)</enum><header>Extension of limitation on exclusion</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/132">Section 132(g)(2)</external-xref> is amended—</text> <paragraph id="HFBDB6B178C1D45DA933E87862838296E"><enum>(1)</enum><text>by striking <quote>, and before January 1, 2026</quote>, and</text></paragraph>
<paragraph id="H08052BC3B8E441599707AE8FA3CA0CBE"><enum>(2)</enum><text>by striking <quote><header-in-text level="subsection">2018 through 2025</header-in-text></quote> in the heading and inserting <quote><header-in-text level="subsection">beginning after 2017</header-in-text></quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HD4F6270D296540C0BAB7F47A6173D5FD"><enum>(d)</enum><header>Allowance of exclusion for members of the intelligence community</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/132">Section 132(g)(2)</external-xref> of the Internal Revenue Code of 1986 is amended by inserting <quote>, or an employee or new appointee of the intelligence community (as defined in section 3 of the National Security Act of 1947 (<external-xref legal-doc="usc" parsable-cite="usc/50/3003">50 U.S.C. 3003</external-xref>)) (other than a member of the Armed Forces of the United States) who moves pursuant to a change in assignment that requires relocation</quote> after <quote>change of station</quote>.</text></subsection>
<subsection id="H4510408DFAFD4F6DB59A2A5BC854EA55"><enum>(e)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="HE5A1A56BF0B3448299B1FA1923057009"><enum>70114.</enum><header>Extension and modification of limitation on wagering losses</header> <subsection commented="no" display-inline="no-display-inline" id="H5E82277688B64C049DBE290E8CEA23E6"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/165">Section 165</external-xref> is amended by striking subsection (d) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H110A7373D71E40579C8CEC379ED82AE4">
<subsection commented="no" display-inline="no-display-inline" id="HE16FC77C931E475AAFA7289689D76618"><enum>(d)</enum><header>Wagering losses</header>
<paragraph commented="no" display-inline="no-display-inline" id="H0F0ACEE01CA64F1CBAF73E62FB4D4A5D"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>For purposes of losses from wagering transactions, the amount allowed as a deduction for any taxable year—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H0767A6465E554CCAB88114A8F19CC844"><enum>(A)</enum><text display-inline="yes-display-inline">shall be equal to 90 percent of the amount of such losses during such taxable year, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HBB5CEF43FBAA46B0B5CEAF4F72E7F41F"><enum>(B)</enum><text>shall be allowed only to the extent of the gains from such transactions during such taxable year.</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H7D7D1E5120D2470DB6D01B18BDDBD29E"><enum>(2)</enum><header>Special rule</header><text>For purposes of paragraph (1), the term <term>losses from wagering transactions</term> includes any deduction otherwise allowable under this chapter incurred in carrying on any wagering transaction.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HC013447780DC487F970BE9E9906265D4"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="HACEAABCCE488486EB4CC8BAE5BD4B906"><enum>70115.</enum><header>Extension and enhancement of increased limitation on contributions to ABLE accounts</header> <subsection id="HC917A97ED606467282C01AEC9703DA72"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/529A">Section 529A(b)(2)(B)</external-xref> is amended—</text>
<paragraph id="HEDD461503DF94695A0424E0C99DA306C"><enum>(1)</enum><text>in clause (i), by inserting <quote>(determined by substituting <quote>1996</quote> for <quote>1997</quote> in paragraph (2)(B) thereof)</quote> after <quote>section 2503(b)</quote>, and</text></paragraph> <paragraph id="H653A9BF1B28C4C8F812793F0AE90F4FE"><enum>(2)</enum><text>in clause (ii), by striking <quote>before January 1, 2026</quote>.</text></paragraph></subsection>
<subsection id="HB996FA53C57143969D360F2E2883AE4C"><enum>(b)</enum><header>Effective dates</header>
<paragraph id="H2EC971671BE04AA8BCC17156FCA5FEF6"><enum>(1)</enum><header>In general</header><text>Except as otherwise provided in this subsection, the amendments made by this section shall apply to contributions made after December 31, 2025.</text></paragraph> <paragraph id="HEADD2810E5DE4BD085381986A138B63B"><enum>(2)</enum><header>Modified inflation adjustment</header><text>The amendment made by subsection (a)(1) shall apply to taxable years beginning after December 31, 2025.</text></paragraph></subsection></section>
<section id="H71B97128E41E40F8B21F9A47F0393745"><enum>70116.</enum><header>Extension and enhancement of savers credit allowed for ABLE contributions</header>
<subsection commented="no" display-inline="no-display-inline" id="H53452EBC92374C56BC336475A758C3AD"><enum>(a)</enum><header display-inline="yes-display-inline">Extension</header>
<paragraph id="H3F293108F77F485ABEBC774402ED9C9B"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/25B">Section 25B(d)(1)</external-xref> is amended to read as follows:</text> <quoted-block id="H2B3EF4F241844C8194663806434EF2DB" display-inline="no-display-inline" style="OLC"> <paragraph id="H97167642D684436E84F6EA0CBB6E2CA3"><enum>(1)</enum><header>In general</header><text>The term <term>qualified retirement savings contributions</term> means, with respect to any taxable year, the sum of—</text>
<subparagraph id="H2B9CCABC61274344841DFA36C89D6E9F"><enum>(A)</enum><text>the amount of contributions made by the eligible individual during such taxable year to the ABLE account (within the meaning of section 529A) of which such individual is the designated beneficiary, and</text></subparagraph> <subparagraph id="HEE762D05D9944F5990B3DED817EB64F1"><enum>(B)</enum><text>in the case of any taxable year beginning before January 1, 2027—</text>
<clause id="H0F846DD3F855460ABC00B52D30C11CB5"><enum>(i)</enum><text>the amount of the qualified retirement contributions (as defined in section 219(e)) made by the eligible individual,</text></clause> <clause id="H658C9A8CCA2A4546A1C470AD0CB38F12"><enum>(ii)</enum><text>the amount of—</text>
<subclause id="HF00259BBABC749ADA9E4F51D7B38E042"><enum>(I)</enum><text>any elective deferrals (as defined in section 402(g)(3)) of such individual, and</text></subclause> <subclause id="HEAA5011AF3B347E5B11A2F4265EE6199"><enum>(II)</enum><text>any elective deferral of compensation by such individual under an eligible deferred compensation plan (as defined in section 457(b)) of an eligible employer described in section 457(e)(1)(A), and</text></subclause></clause>
<clause id="HE9C7CD6EDEFF4AC8BF1EB76112BECCEF"><enum>(iii)</enum><text>the amount of voluntary employee contributions by such individual to any qualified retirement plan (as defined in section 4974(c)).</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H79512567766F4498B967E6C1AD877855"><enum>(2)</enum><header>Coordination with SECURE 2.0 Act of 2022 amendment</header><text>Paragraph (1) of section 103(e) of the SECURE 2.0 Act of 2022 is repealed, and the Internal Revenue Code of 1986 shall be applied and administered as though such paragraph were never enacted.</text></paragraph>
<paragraph id="HAD220AEC2A384C98BB84FAA826B804AF"><enum>(3)</enum><header>Effective date</header><text>The amendments and repeal made by this subsection shall apply to taxable years ending after December 31, 2025.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H36A46CC87EB24D4F978A94EC2C3BD805"><enum>(b)</enum><header>Increase of credit amount</header> <paragraph commented="no" display-inline="no-display-inline" id="HB3BE954F71E248C89FF907F8B28EAAF6"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/25B">Section 25B(a)</external-xref> is amended by striking <quote>$2,000</quote> and inserting <quote>$2,100</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HFE990964E4B14283BFC9BC16ACC4F4D6"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to taxable years beginning after December 31, 2026.</text></paragraph></subsection></section> <section id="HD198C5EAFAB54139A72C8E2AFB54BE5C"><enum>70117.</enum><header>Extension of rollovers from qualified tuition programs to ABLE accounts permitted</header> <subsection id="H2C2FB57B3B3B44C29FF5C588BB197B2A"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/529">Section 529(c)(3)(C)(i)(III)</external-xref> is amended by striking <quote>before January 1, 2026,</quote>.</text></subsection>
<subsection id="H979CBCEA03A54031B1C0CCC41E0E773B"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="HE34B5D54C635425E85D49D83B35F6E51"><enum>70118.</enum><header>Extension of treatment of certain individuals performing services in the Sinai Peninsula and enhancement to include additional areas</header> <subsection id="HEAFBB550616B4AF9826ACC4A7E3A618A"><enum>(a)</enum><header>Treatment made permanent</header><text>Section 11026(a) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> is amended by striking <quote>, with respect to the applicable period</quote>.</text></subsection>
<subsection id="H8F6C4F8DD82444008C6FE743C619C641"><enum>(b)</enum><header>Kenya, Mali, Burkina Faso, and Chad included as hazardous duty areas</header><text>Section 11026(b) of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> is amended to read as follows:</text> <quoted-block id="H8E274B37A2B34B4B8D0569A566AEFA77" display-inline="no-display-inline" style="OLC"> <subsection id="H56D30E3AEB5B4DFCBB3CCAE2EB462300"><enum>(b)</enum><header>Qualified hazardous duty area</header><text>For purposes of this section, the term <term>qualified hazardous duty area</term> means each of the following locations, but only during the period for which any member of the Armed Forces of the United States is entitled to special pay under section 310 of title 37, United States Code (relating to special pay; duty subject to hostile fire or imminent danger), for services performed in such location:</text>
<paragraph id="H357A5B179C4D4C68A663A50C4CC8B64B"><enum>(1)</enum><text>the Sinai Peninsula of Egypt.</text></paragraph> <paragraph id="HF3619D93ADE2413C90B067B3D4484291"><enum>(2)</enum><text>Kenya.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H55A95ADD3E7540069DEBFFBAB0490DBD"><enum>(3)</enum><text display-inline="yes-display-inline">Mali.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA40919818D564571B80570A5DD1B074F"><enum>(4)</enum><text display-inline="yes-display-inline">Burkina Faso.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H4B7652B233D349A786F0E425EF150660"><enum>(5)</enum><text display-inline="yes-display-inline">Chad.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H237BFB202A9A4FE88C074AD0EFD7FF78"><enum>(c)</enum><header>Conforming amendment</header><text>Section 11026 of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> is amended by striking subsections (c) and (d).</text></subsection>
<subsection id="H287EAAAFCADD4A84A8E7C9F326EE56C9"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall take effect on January 1, 2026.</text></subsection></section> <section id="H52200465FA964D868EF55ACA486D8EEB"><enum>70119.</enum><header>Extension and modification of exclusion from gross income of student loans discharged on account of death or disability</header> <subsection id="HC380A17FE01142B3A585C5F9D33B230D"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/108">Section 108(f)(5)</external-xref> is amended to read as follows:</text>
<quoted-block id="HB4F45A9F4E63427188EE2030E981C53D" display-inline="no-display-inline" style="OLC">
<paragraph id="HF7C7A611DE5D46BDA58A8AE26928E5DE"><enum>(5)</enum><header>Discharges on account of death or disability</header>
<subparagraph id="HAFDEABDA35924DE98CBC19656DF516E0"><enum>(A)</enum><header>In general</header><text>In the case of an individual, gross income does not include any amount which (but for this subsection) would be includible in gross income for such taxable year by reason of the discharge (in whole or in part) of any loan described in subparagraph (B), if such discharge was—</text> <clause id="H7A903A8DF441484B8DF34C0826185C67"><enum>(i)</enum><text>pursuant to subsection (a) or (d) of section 437 of the <act-name parsable-cite="HEA65">Higher Education Act of 1965</act-name> or the parallel benefit under part D of title IV of such Act (relating to the repayment of loan liability),</text></clause>
<clause id="H120E28E6B4184E0FB4BA4B67C27A4E57"><enum>(ii)</enum><text>pursuant to section 464(c)(1)(F) of such Act, or</text></clause> <clause id="HE0DB345BA9F24A57BB9D77D2226FDBB6"><enum>(iii)</enum><text>otherwise discharged on account of death or total and permanent disability of the student.</text></clause></subparagraph>
<subparagraph id="HCE3D0A4762684076A0C8FA6E978ED532"><enum>(B)</enum><header>Loans discharged</header><text>A loan is described in this subparagraph if such loan is—</text> <clause id="HC9744A2E27FC47EEA59FFBC993CDB533"><enum>(i)</enum><text>a student loan (as defined in paragraph (2)), or</text></clause>
<clause id="HDCCF2D59180349B3A5890FFA5541ECC3"><enum>(ii)</enum><text>a private education loan (as defined in section 140(a) of the <act-name parsable-cite="CCPA">Consumer Credit Protection Act</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/15/1650">15 U.S.C. 1650(a)</external-xref>).</text></clause></subparagraph> <subparagraph id="H9F16F14E5DF94EA3BB87F3EC32E2532A"><enum>(C)</enum><header>Social security number requirement</header> <clause id="H988015908D484DCA8F87A1A81DA2B712"><enum>(i)</enum><header>In general</header><text>Subparagraph (A) shall not apply with respect to any discharge during any taxable year unless the taxpayer includes the taxpayer's social security number on the return of tax for such taxable year.</text></clause>
<clause id="H0168D0FAED3D4CB09A2B4D79FFB0A21A"><enum>(ii)</enum><header>Social security number</header><text>For purposes of this subparagraph, the term <term>social security number</term> has the meaning given such term in section 24(h)(7).</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H3AFE0911AA4A4F7D9782722D198D552E"><enum>(b)</enum><header>Omission of correct social security number treated as mathematical or clerical error</header><text>Section 6213(g)(2), as amended by this Act, is further amended by striking <quote>and</quote> at the end of subparagraph (V), by striking the period at the end of subparagraph (W) and inserting <quote>, and</quote>, and by inserting after subparagraph (W) the following new subparagraph:</text>
<quoted-block id="H567DF82FC21E422B9785CC21B5DFB58C" display-inline="no-display-inline" style="OLC">
<subparagraph id="H1A881B09B9994E80871C23491FD706A5"><enum>(X)</enum><text>an omission of a correct social security number required under section 108(f)(5)(C) (relating to discharges on account of death or disability).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H43E6CE9A72F345508EE442E5A4E30C5D"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to discharges after December 31, 2025.</text></subsection></section>
<section id="H6FC13F4AFDDF42EB85828BEDF10BF168"><enum>70120.</enum><header>Limitation on individual deductions for certain state and local taxes, etc</header>
<subsection commented="no" display-inline="no-display-inline" id="H8B71DD1ECE7D4D88A42B6F3E3E7CD1F7"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/164">Section 164(b)(6)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H13A82EB1B5514A8B82726F9207773ECD"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>and before January 1, 2026</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H41A1A939BDC247B8BB85CAC9092565C1"><enum>(2)</enum><text>by striking <quote>$10,000 ($5,000 in the case of a married individual filing a separate return)</quote> and inserting <quote>the applicable limitation amount (half the applicable limitation amount in the case of a married individual filing a separate return)</quote>.</text></paragraph></subsection> <subsection id="H4ADF191A251146908BE88F7B698551A4"><enum>(b)</enum><header>Applicable limitation amount</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/164">Section 164(b)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block id="HCA82E2392E6E49F9841964177A4D4DEA" display-inline="no-display-inline" style="OLC">
<paragraph id="HFA222891B24C43B88F6E3480E55A5A3F"><enum>(7)</enum><header>Applicable limitation amount</header>
<subparagraph id="HF1542C69230049CDB54A9A3B4820515A"><enum>(A)</enum><header>In general</header><text>For purposes of paragraph (6), the term <term>applicable limitation amount</term> means—</text> <clause commented="no" display-inline="no-display-inline" id="H2DAE14E87F694D66B33337FAB04FAB65"><enum>(i)</enum><text>in the case of any taxable year beginning in calendar year 2025, $40,000,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H795282D648DC42D8BC34A6F8A5D3B66D"><enum>(ii)</enum><text>in the case of any taxable year beginning in calendar year 2026, $40,400, </text></clause> <clause commented="no" display-inline="no-display-inline" id="H7CEC0617BE7C455483E34E8C6087A19F"><enum>(iii)</enum><text>in the case of any taxable year beginning after calendar year 2026 and before 2030, 101 percent of the dollar amount in effect under this subparagraph for taxable years beginning in the preceding calendar year, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H7B0385FE3F7341F79A08094241E82D8F"><enum>(iv)</enum><text>in the case of any taxable year beginning after calendar year 2029, $10,000.</text></clause></subparagraph> <subparagraph id="HC9C1B4A0CC064606831E3EAF53D44D70"><enum>(B)</enum><header>Phasedown based on modified adjusted gross income</header> <clause id="H2DA5A079E77444928DC9E614B2B2C166"><enum>(i)</enum><header>In general</header><text>Except as provided in clause (iii), in the case of any taxable year beginning before January 1, 2030, the applicable limitation amount shall be reduced by 30 percent of the excess (if any) of the taxpayer's modified adjusted gross income over the threshold amount (half the threshold amount in the case of a married individual filing a separate return). </text></clause>
<clause commented="no" display-inline="no-display-inline" id="H2FF03A89B123433DB5F8FCF1E024E96F"><enum>(ii)</enum><header>Threshold amount</header><text>For purposes of this subparagraph, the term <term>threshold amount</term> means—</text> <subclause commented="no" display-inline="no-display-inline" id="H608AB366062849FD8E4496F226241196"><enum>(I)</enum><text>in the case of any taxable year beginning in calendar year 2025, $500,000,</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H6CC7AD84453F4B27B1636AC17BC1046E"><enum>(II)</enum><text>in the case of any taxable year beginning in calendar year 2026, $505,000, and</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H1391C7852EB2418A821AB47EA4AEC305"><enum>(III)</enum><text>in the case of any taxable year beginning after calendar year 2026, 101 percent of the dollar amount in effect under this subparagraph for taxable years beginning in the preceding calendar year.</text></subclause></clause>
<clause id="H1701AFC9607548EF809B9F4FD39C0F0E"><enum>(iii)</enum><header>Limitation on reduction</header><text>The reduction under clause (i) shall not result in the applicable limitation amount being less than $10,000.</text></clause> <clause id="H6419290FD52340789F7813320C0DFB08"><enum>(iv)</enum><header>Modified adjusted gross income</header><text>For purposes of this paragraph, the term <term>modified adjusted gross income</term> means adjusted gross income increased by any amount excluded from gross income under section 911, 931, or 933.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HC7C16BF307F74FCDB97E3DCF61D4D996"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection></section></chapter> <chapter id="H7B620E2F273940579F5B0CF7B3E3CCF3"><enum>2</enum><header>Delivering on Presidential priorities to provide new middle-class tax relief</header> <section id="H09E767340DAF4779B6187FE3B3FF9181"><enum>70201.</enum><header>No tax on tips</header> <subsection id="H3DFDE250C0054B05B8DAEC75C747B7B6"><enum>(a)</enum><header>Deduction allowed</header><text>Part VII of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by redesignating section 224 as section 225 and by inserting after section 223 the following new section:</text>
<quoted-block id="HF95999431E6D427885778D1800EF2315" display-inline="no-display-inline" style="OLC">
<section id="H0EB952BBA510457094CE5D2E493158FA"><enum>224.</enum><header>Qualified tips</header>
<subsection id="H35784D3E611D4DB899DE3D514FA10C31"><enum>(a)</enum><header>In general</header><text>There shall be allowed as a deduction an amount equal to the qualified tips received during the taxable year that are included on statements furnished to the individual pursuant to section 6041(d)(3), 6041A(e)(3), 6050W(f)(2), or 6051(a)(18), or reported by the taxpayer on Form 4137 (or successor).</text></subsection> <subsection id="H09E77E444A6345969AD77C4C6336A41D"><enum>(b)</enum><header>Limitation</header> <paragraph commented="no" display-inline="no-display-inline" id="HD86787D7A135411193F2BECB867D99D0"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>The amount allowed as a deduction under this section for any taxable year shall not exceed $25,000. </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H46A036654D2A4D9F815D03DC96747799"><enum>(2)</enum><header>Limitation based on adjusted gross income</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HDB329F6D46F34F4B836BAE3E3FF06E4C"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The amount allowable as a deduction under subsection (a) (after application of paragraph (1)) shall be reduced (but not below zero) by $100 for each $1,000 by which the taxpayer's modified adjusted gross income exceeds $150,000 ($300,000 in the case of a joint return).</text></subparagraph> <subparagraph id="H1AD94350E2D0452EB8FA03EBDBC333DB"><enum>(B)</enum><header>Modified adjusted gross income</header><text>For purposes of this paragraph, the term <term>modified adjusted gross income</term> means the adjusted gross income of the taxpayer for the taxable year increased by any amount excluded from gross income under section 911, 931, or 933.</text></subparagraph></paragraph></subsection>
<subsection id="HED04315603BB4B8E8FF3CBBB6E243658"><enum>(c)</enum><header>Tips received in course of trade or business</header><text>In the case of qualified tips received by an individual during any taxable year in the course of a trade or business (other than the trade or business of performing services as an employee) of such individual, such qualified tips shall be taken into account under subsection (a) only to the extent that the gross income for the taxpayer from such trade or business for such taxable year (including such qualified tips) exceeds the sum of the deductions (other than the deduction allowed under this section) allocable to the trade or business in which such qualified tips are received by the individual for such taxable year.</text></subsection> <subsection id="HD024DDA7EF2D43B3B09A31C168FE69A6"><enum>(d)</enum><header>Qualified tips</header><text>For purposes of this section—</text>
<paragraph id="HDC6D7219877B4661AF6B89CBA887EB01"><enum>(1)</enum><header>In general</header><text>The term <term>qualified tips</term> means cash tips received by an individual in an occupation which customarily and regularly received tips on or before December 31, 2024, as provided by the Secretary.</text></paragraph> <paragraph id="H779FDF4CC84C4E449AD188A0828FBF6D"><enum>(2)</enum><header>Exclusions</header><text>Such term shall not include any amount received by an individual unless—</text>
<subparagraph id="H2C357FDAE34F4421B01584DB91B3EB4B"><enum>(A)</enum><text>such amount is paid voluntarily without any consequence in the event of nonpayment, is not the subject of negotiation, and is determined by the payor,</text></subparagraph> <subparagraph id="H603E216CD3AD41F8AF420918A53E7D3A"><enum>(B)</enum><text>the trade or business in the course of which the individual receives such amount is not a specified service trade or business (as defined in section 199A(d)(2)), and </text></subparagraph>
<subparagraph id="H3CDF2124BF414AD78B670484A568856D"><enum>(C)</enum><text>such other requirements as may be established by the Secretary in regulations or other guidance are satisfied.</text></subparagraph><continuation-text continuation-text-level="paragraph">For purposes of subparagraph (B), in the case of an individual receiving tips in the trade or business of performing services as an employee, such individual shall be treated as receiving tips in the course of a trade or business which is a specified service trade or business if the trade or business of the employer is a specified service trade or business.</continuation-text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H59DBB208D21343FFAE18585F25C93932"><enum>(3)</enum><header>Cash tips</header><text>For purposes of paragraph (1), the term <term>cash tips</term> includes tips received from customers that are paid in cash or charged and, in the case of an employee, tips received under any tip-sharing arrangement.</text></paragraph></subsection>
<subsection id="H3EDCA874E1A648699B0B14FD9F87BE34"><enum>(e)</enum><header>Social security number required</header>
<paragraph id="HE6CE7D5C09EF423E84CFB02E491B62EE"><enum>(1)</enum><header>In general</header><text>No deduction shall be allowed under this section unless the taxpayer includes on the return of tax for the taxable year such individual's social security number.</text></paragraph> <paragraph id="H3951A831A55748418BC87A7510890705"><enum>(2)</enum><header>Social security number defined</header><text>For purposes of paragraph (1), the term <term>social security number</term> shall have the meaning given such term in section 24(h)(7).</text></paragraph></subsection>
<subsection id="H70F1DF8D1DEC4106AFD8E4F5AAEF9A69" commented="no"><enum>(f)</enum><header>Married individuals</header><text>If the taxpayer is a married individual (within the meaning of section 7703), this section shall apply only if the taxpayer and the taxpayer's spouse file a joint return for the taxable year.</text></subsection> <subsection id="H2F3108557FE04D0887CCFB049F1B736A"><enum>(g)</enum><header>Regulations</header><text>The Secretary shall prescribe such regulations or other guidance as may be necessary to prevent reclassification of income as qualified tips, including regulations or other guidance to prevent abuse of the deduction allowed by this section.</text></subsection>
<subsection id="HD3EA055E40EA4564BC6EC8ACFDB04D1B"><enum>(h)</enum><header>Termination</header><text>No deduction shall be allowed under this section for any taxable year beginning after December 31, 2028.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HC655D51B6404478EA8A4DBDD2A74E077"><enum>(b)</enum><header>Deduction allowed to non-itemizers</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/63">Section 63(b)</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (3), by striking the period at the end of paragraph (4) and inserting <quote>, and</quote>, and by adding at the end the following new paragraph:</text>
<quoted-block id="H8491F027C06F4F57822FEA4819CFFC14" display-inline="no-display-inline" style="OLC">
<paragraph id="H6FECF6144D5C494FA41768BEDB33361A"><enum>(5)</enum><text>the deduction provided in section 224.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HE452A4FA73894F6FA9E08A83D7E257A4"><enum>(c)</enum><header>Omission of correct social security number treated as mathematical or clerical error</header><text>Section 6213(g)(2), as amended by the preceding provisions of this Act, is amended by striking <quote>and</quote> at the end of subparagraph (W), by striking the period at the end of subparagraph (X) and inserting <quote>, and</quote>, and by inserting after subparagraph (X) the following new subparagraph:</text>
<quoted-block id="HF63A10BCD0EE4C33B72A32545BCE4BEE" display-inline="no-display-inline" style="OLC">
<subparagraph id="H5226DB56D8664F2585B6E3205B207EEE"><enum>(Y)</enum><text>an omission of a correct social security number required under section 224(e) (relating to deduction for qualified tips).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H4BD13513C6584E66B7028181768F68DF" commented="no"><enum>(d)</enum><header>Exclusion from qualified business income</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/199A">Section 199A(c)(4)</external-xref> is amended by striking <quote>and</quote> at the end of subparagraph (B), by striking the period at the end of subparagraph (C) and inserting <quote>, and</quote>, and by adding at the end the following new subparagraph:</text>
<quoted-block id="HFA410733168A432098A3F6AC77A3CB8B" display-inline="no-display-inline" style="OLC">
<subparagraph id="H941A483DB3104FFDACE45EE34130DC2C" commented="no"><enum>(D)</enum><text>any amount with respect to which a deduction is allowable to the taxpayer under section 224(a) for the taxable year.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HCB8FC791A8C0412B8909B5B237F3730B"><enum>(e)</enum><header>Extension of tip credit to beauty service business</header> <paragraph id="HA4B96B806686404A9BE5210DE975DA8B"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45B">Section 45B(b)(2)</external-xref> is amended to read as follows:</text>
<quoted-block id="H416672835D3B42A3A88B6C4475F9E133" display-inline="no-display-inline" style="OLC">
<paragraph id="HBF5CE74B67DA4B408B257F656C82BA50"><enum>(2)</enum><header>Application only to certain lines of business</header><text>In applying paragraph (1) there shall be taken into account only tips received from customers or clients in connection with the following services:</text> <subparagraph id="H2B60F8438C474CCD912CC6DA7FE89C84"><enum>(A)</enum><text>The providing, delivering, or serving of food or beverages for consumption, if the tipping of employees delivering or serving food or beverages by customers is customary.</text></subparagraph>
<subparagraph id="H9AF84D4E31674127B51746DA9956A879"><enum>(B)</enum><text>The providing of any of the following services to a customer or client if the tipping of employees providing such services is customary:</text> <clause id="HEDD91CC137324C6992DCDC48F02669A5"><enum>(i)</enum><text>Barbering and hair care.</text></clause>
<clause id="H7B4DA2D94E694A65923279AA1C8D7311"><enum>(ii)</enum><text>Nail care.</text></clause> <clause id="H66C49A8D53B844D2B8000D9A311EDC88"><enum>(iii)</enum><text>Esthetics.</text></clause>
<clause id="H81ABC71938DC4A6E925D8612286AEE8F"><enum>(iv)</enum><text>Body and spa treatments.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H97DFD92D93DF4AB4914BE0F6CD2C5AF7"><enum>(2)</enum><header>Credit determined with respect to minimum wage in effect</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45B">Section 45B(b)(1)(B)</external-xref> is amended—</text>
<subparagraph id="H427884556B1541A3A3CE8F4D1B943128"><enum>(A)</enum><text>by striking <quote>as in effect on January 1, 2007, and</quote>, and</text></subparagraph> <subparagraph id="HFF3B16178F784AB294E61C179DDD9129"><enum>(B)</enum><text>by inserting <quote>, and in the case of food or beverage establishments, as in effect on January 1, 2007</quote> after <quote>without regard to section 3(m) of such Act</quote>.</text></subparagraph></paragraph></subsection>
<subsection id="H87C3D67934DA44E389A0EAE035EFA591"><enum>(f)</enum><header>Reporting requirements</header>
<paragraph id="H777F8886324E4F0F9BDE061C55BA4AD2"><enum>(1)</enum><header>Returns for payments made in the course of a trade or business</header>
<subparagraph id="HEA59BE512A0A43A8AD82A5E2B0CF9735"><enum>(A)</enum><header>Statement furnished to secretary</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041">Section 6041(a)</external-xref> is amended by inserting <quote>(including a separate accounting of any such amounts reasonably designated as cash tips and the occupation described in section 224(d)(1) of the person receiving such tips)</quote> after <quote>such gains, profits, and income</quote>.</text></subparagraph> <subparagraph id="H40509552082349979ADFC3F6CAB6E37D"><enum>(B)</enum><header>Statement furnished to payee</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041">Section 6041(d)</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (1), by striking the period at the end of paragraph (2) and inserting <quote>, and</quote>, and by inserting after paragraph (2) the following new paragraph:</text>
<quoted-block id="H4C37123CCC44416495422ADA8133C9C1" display-inline="no-display-inline" style="OLC">
<paragraph id="H9015231F09F74E83AD8433FDE8B7C96C"><enum>(3)</enum><text>in the case of compensation to non-employees, the portion of payments that have been reasonably designated as cash tips and the occupation described in section 224(d)(1) of the person receiving such tips.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H5E05554FBE6D4D7AB2EAF12FF00B2743"><enum>(2)</enum><header>Returns for payments made for services and direct sales</header> <subparagraph id="H9E8873CD3C344277A08BFCCC13806646"><enum>(A)</enum><header>Statement furnished to secretary</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041A">Section 6041A(a)</external-xref> is amended by inserting <quote>(including a separate accounting of any such amounts reasonably designated as cash tips and the occupation described in section 224(d)(1) of the person receiving such tips)</quote> after <quote>amount of such payments</quote>.</text></subparagraph>
<subparagraph id="HF9374E66144D4DB79660A9D30DDB6E52"><enum>(B)</enum><header>Statement furnished to payee</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041A">Section 6041A(e)</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (1), by striking the period at the end of paragraph (2) and inserting <quote>, and</quote>, and by inserting after paragraph (2) the following new paragraph:</text> <quoted-block id="HF19AA093BBAA40F493E45A746D3A2BE2" display-inline="no-display-inline" style="OLC"> <paragraph id="H4A1E1A0D15624A0BB8F0D32413E0F3B9"><enum>(3)</enum><text>in the case of subsection (a), the portion of payments that have been reasonably designated as cash tips and the occupation described in section 224(d)(1) of the person receiving such tips.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="H6555C2728BA443AB98FA01E5D53663DB"><enum>(3)</enum><header>Returns relating to third party settlement organizations</header>
<subparagraph id="HD990DCE21B384C14B9BA35A35732C44F"><enum>(A)</enum><header>Statement furnished to secretary</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6050W">Section 6050W(a)</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (1), by striking the period at the end of paragraph (2) and inserting <quote>and</quote>, and by adding at the end the following new paragraph:</text> <quoted-block id="H1D037F68E9344DC2B7E4BF78A101E345" display-inline="no-display-inline" style="OLC"> <paragraph id="H1FC841F327A84972818EE3AE245A7B47"><enum>(3)</enum><text>in the case of a third party settlement organization, the portion of reportable payment transactions that have been reasonably designated by payors as cash tips and the occupation described in section 224(d)(1) of the person receiving such tips.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="H9849F8AD715B4216833046E3A483CB31"><enum>(B)</enum><header>Statement furnished to payee</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6050W">Section 6050W(f)(2)</external-xref> is amended by inserting <quote>(including a separate accounting of any such amounts that have been reasonably designated by payors as cash tips and the occupation described in section 224(d)(1) of the person receiving such tips)</quote> after <quote>reportable payment transactions</quote>.</text></subparagraph></paragraph> <paragraph id="HD41E1E2EEC6F4D91A008AF27A5E73D53"><enum>(4)</enum><header>Returns related to wages</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6051">Section 6051(a)</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (16), by striking the period at the end of paragraph (17) and inserting <quote>, and</quote>, and by inserting after paragraph (17) the following new paragraph:</text>
<quoted-block id="HD2B81C6D1FD74609A1CB6E5BF9DC397B" display-inline="no-display-inline" style="OLC">
<paragraph id="HB4F9291DED9645EFBA3BC70FAA43CF0F"><enum>(18)</enum><text>the total amount of cash tips reported by the employee under section 6053(a) and the occupation described in section 224(d)(1) such person.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H54691518D91047DF99BBF123D06BCEBF"><enum>(g)</enum><header>Clerical amendment</header><text>The table of sections for part VII of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by redesignating the item relating to section 224 as relating to section 225 and by inserting after the item relating to section 223 the following new item:</text>
<quoted-block id="H212D63ABC72246EBA622CB49040C2AEE" display-inline="no-display-inline" style="OLC">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 224. Qualified tips. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H0306D6DA4C594DD8BF361310B827209A"><enum>(h)</enum><header>Published list of occupations traditionally receiving tips</header><text>Not later than 90 days after the date of the enactment of this Act, the Secretary of the Treasury (or the Secretary's delegate) shall publish a list of occupations which customarily and regularly received tips on or before December 31, 2024, for purposes of <external-xref legal-doc="usc" parsable-cite="usc/26/224">section 224(d)(1)</external-xref> of the Internal Revenue Code of 1986 (as added by subsection (a)).</text></subsection> <subsection id="HBC2D8E4919604C3BB482DC9468AFF11F"><enum>(i)</enum><header>Withholding</header><text>The Secretary of the Treasury (or the Secretary's delegate) shall modify the procedures prescribed under <external-xref legal-doc="usc" parsable-cite="usc/26/3402">section 3402(a)</external-xref> of the Internal Revenue Code of 1986 for taxable years beginning after December 31, 2025, to take into account the deduction allowed under section 224 of such Code (as added by this Act).</text></subsection>
<subsection id="H0FDAD18FEB104CAD80A08C4FFFD55A58"><enum>(j)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA8556B0957A748A1A032160DE9442F60"><enum>(k)</enum><header>Transition rule</header><text>In the case of any cash tips required to be reported for periods before January 1, 2026, persons required to file returns or statements under section 6041(a), 6041(d)(3), 6041A(a), 6041A(e)(3), 6050W(a), or 6050W(f)(2) of the Internal Revenue Code of 1986 (as amended by this section) may approximate a separate accounting of amounts designated as cash tips by any reasonable method specified by the Secretary. </text></subsection></section>
<section id="H64A819C578BE4D5DBC70283E620C965A"><enum>70202.</enum><header>No tax on overtime</header>
<subsection id="H6CFF13A2EB694B3D8F7571E6F9E8EEF4"><enum>(a)</enum><header>Deduction allowed</header><text>Part VII of subchapter B of chapter 1, as amended by the preceding provisions of this Act, is amended by redesignating section 225 as section 226 and by inserting after section 224 the following new section:</text> <quoted-block id="H8C9A44A02397405B8FDE53D13AF5329A" display-inline="no-display-inline" style="OLC"> <section id="H6C14EE4C850A495098AFF9AE11F06C88"><enum>225.</enum><header>Qualified overtime compensation</header> <subsection id="H36110A24346843F28289A0A3046E3DB6"><enum>(a)</enum><header>In general</header><text>There shall be allowed as a deduction an amount equal to the qualified overtime compensation received during the taxable year and included on statements furnished to the individual pursuant to section 6041(d)(4) or 6051(a)(19).</text></subsection>
<subsection id="H3C92E513654446B498E06B384F04A898"><enum>(b)</enum><header>Limitation</header>
<paragraph commented="no" display-inline="no-display-inline" id="H28F08507F13740909B1B8FE59544316F"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>The amount allowed as a deduction under this section for any taxable year shall not exceed $12,500 ($25,000 in the case of a joint return). </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H4BC575DAED0349EA938DEB2B47284432"><enum>(2)</enum><header>Limitation based on adjusted gross income</header> <subparagraph commented="no" display-inline="no-display-inline" id="HD14CF0E7F0184B3CAE199A3EC20365C3"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The amount allowable as a deduction under subsection (a) (after application of paragraph (1)) shall be reduced (but not below zero) by $100 for each $1,000 by which the taxpayer's modified adjusted gross income exceeds $150,000 ($300,000 in the case of a joint return).</text></subparagraph>
<subparagraph id="H5DC7AFFAA3D244398F0DBB61CCFE2C55"><enum>(B)</enum><header>Modified adjusted gross income</header><text>For purposes of this paragraph, the term <term>modified adjusted gross income</term> means the adjusted gross income of the taxpayer for the taxable year increased by any amount excluded from gross income under section 911, 931, or 933.</text></subparagraph></paragraph></subsection> <subsection id="H6498446BCFC246B3A1EB0CBE1BAD33CB"><enum>(c)</enum><header>Qualified overtime compensation</header> <paragraph id="HAC14BD8EDC6D42B5A16BFE8626F48CBB"><enum>(1)</enum><header>In general</header><text>For purposes of this section, the term <term>qualified overtime compensation</term> means overtime compensation paid to an individual required under section 7 of the Fair Labor Standards Act of 1938 that is in excess of the regular rate (as used in such section) at which such individual is employed.</text></paragraph>
<paragraph id="H58D17A82EF93450286C79DF2934DD35C"><enum>(2)</enum><header>Exclusions</header><text>Such term shall not include any qualified tip (as defined in section 224(d)).</text></paragraph></subsection> <subsection id="H719FF4BFF38E4C958694C147C66FA9FC"><enum>(d)</enum><header>Social security number required</header> <paragraph id="HEB281195E4214D098DE692AE2B4C9026"><enum>(1)</enum><header>In general</header><text>No deduction shall be allowed under this section unless the taxpayer includes on the return of tax for the taxable year such individual's social security number.</text></paragraph>
<paragraph id="H48F3567BAC114C5B9DE4A829788F7D24"><enum>(2)</enum><header>Social security number defined</header><text>For purposes of paragraph (1), the term <term>social security number</term> shall have the meaning given such term in section 24(h)(7).</text></paragraph></subsection> <subsection id="H9851834FB0FB40569A05A524266FE80F" commented="no"><enum>(e)</enum><header>Married individuals</header><text>If the taxpayer is a married individual (within the meaning of section 7703), this section shall apply only if the taxpayer and the taxpayer's spouse file a joint return for the taxable year.</text></subsection>
<subsection id="H051CA8625CA044DD8E876537CD2473CF"><enum>(f)</enum><header>Regulations</header><text>The Secretary shall issue such regulations or other guidance as may be necessary or appropriate to carry out the purposes of this section, including regulations or other guidance to prevent abuse of the deduction allowed by this section.</text></subsection> <subsection id="HE3FB11F7AF5046EC819A88C154A5E373"><enum>(g)</enum><header>Termination</header><text>No deduction shall be allowed under this section for any taxable year beginning after December 31, 2028.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HAA1B936EC7C749F68442010F54C7020C"><enum>(b)</enum><header>Deduction allowed to non-itemizers</header><text>Section 63(b), as amended by the preceding provisions of this Act, is amended by striking <quote>and</quote> at the end of paragraph (4), by striking the period at the end of paragraph (5) and inserting <quote>, and</quote>, and by adding at the end the following new paragraph:</text> <quoted-block id="H1B1803F2BCBB465E9F186C9984CA1B0A" display-inline="no-display-inline" style="OLC"> <paragraph id="HC714B72899FB40CF8BCFBD67941516B0"><enum>(6)</enum><text>the deduction provided in section 225.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H9B46D2E0E1AC4E1D9D3FAC8298E59144"><enum>(c)</enum><header>Reporting</header>
<paragraph commented="no" display-inline="no-display-inline" id="HB60B592811EA4E698A8C764DF72A3C70"><enum>(1)</enum><header display-inline="yes-display-inline">Requirement to include overtime compensation on w-2</header><text>Section 6051(a), as amended by the preceding provision of this Act, is amended by striking <quote>and</quote> at the end of paragraph (17), by striking the period at the end of paragraph (18) and inserting <quote>, and</quote>, and by inserting after paragraph (18) the following new paragraph:</text> <quoted-block id="H29DDDF8635184233AB83B2045BC8F6D5" display-inline="no-display-inline" style="OLC"> <paragraph id="HD9A08960AFED4F6AA9B8789633DFAE93"><enum>(19)</enum><text>the total amount of qualified overtime compensation (as defined in section 225(c)).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HD2E631AAE8F442C88709FAF0CE6C9013"><enum>(2)</enum><header>Payments to persons not treated as employees under tax laws</header>
<subparagraph id="HD4B70288F9AE401098968A9AEFC8B2E8"><enum>(A)</enum><header>Statement furnished to secretary</header><text>Section 6041(a), as amended by <external-xref legal-doc="usc" parsable-cite="usc/26/70201">section 70201(e)(1)(A),</external-xref> is amended by inserting <quote>and a separate accounting of any amount of qualified overtime compensation (as defined in section 225(c))</quote> after <quote>occupation of the person receiving such tips</quote>.</text></subparagraph> <subparagraph id="HFDB69FC87FE744BCBFD1243B88613E08"><enum>(B)</enum><header>Statement furnished to payee</header><text>Section 6041(d), as amended by <external-xref legal-doc="usc" parsable-cite="usc/26/70201">section 70201(e)(1)(B),</external-xref> is amended by striking <quote>and</quote> at the end of paragraph (2), by striking the period at the end of paragraph (3) and inserting <quote>, and</quote>, and by inserting after paragraph (3) the following new paragraph:</text>
<quoted-block id="H9E837858C594461FAC89793C3EFC8D6A" display-inline="no-display-inline" style="OLC">
<paragraph id="H11E7327098EF4A8E8F812AA1B9D77CE8"><enum>(4)</enum><text>the portion of payments that are qualified overtime compensation (as defined in section 225(c)).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H83C6F6C0348D472497303EEA0B58FA98"><enum>(d)</enum><header>Omission of correct social security number treated as mathematical or clerical error</header><text>Section 6213(g)(2), as amended by the preceding provisions of this Act, is amended by striking <quote>and</quote> at the end of subparagraph (X), by striking the period at the end of subparagraph (Y) and inserting <quote>, and</quote>, and by inserting after subparagraph (Y) the following new subparagraph:</text>
<quoted-block id="H71B90971714B405CBE5FD78F042F10B1" display-inline="no-display-inline" style="OLC">
<subparagraph id="HF11DFD53951D46C890DF9594E74C4A62"><enum>(Z)</enum><text>an omission of a correct social security number required under section 225(d) (relating to deduction for qualified overtime).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H35DCAEF9F39742D3AFE6911EAF952E56"><enum>(e)</enum><header>Clerical amendment</header><text>The table of sections for part VII of subchapter B of chapter 1, as amended by the preceding provisions of this Act, is amended by redesignating the item relating to section 225 as an item relating to section 226 and by inserting after the item relating to section 224 the following new item:</text>
<quoted-block id="HAF023B6C3F0E46B297616D1E2552F521" display-inline="no-display-inline" style="OLC">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 225. Qualified overtime compensation. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HDD1AFF30DBA44645A6A8011B04453D50"><enum>(f)</enum><header>Withholding</header><text>The Secretary of the Treasury (or the Secretary's delegate) shall modify the procedures prescribed under <external-xref legal-doc="usc" parsable-cite="usc/26/3402">section 3402(a)</external-xref> of the Internal Revenue Code of 1986 for taxable years beginning after December 31, 2025, to take into account the deduction allowed under section 225 of such Code (as added by this Act).</text></subsection> <subsection id="H08C8E9AAB0144C2D92DF54BFCDA98AA9"><enum>(g)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H8D3C41B454304CC8B88A3532CD79B6F9"><enum>(h)</enum><header>Transition rule</header><text>In the case of qualified overtime compensation required to be reported for periods before January 1, 2026, persons required to file returns or statements under section 6051(a)(19), 6041(a), or 6041(d)(4) of the Internal Revenue Code of 1986 (as amended by this section) may approximate a separate accounting of amounts designated as qualified overtime compensation by any reasonable method specified by the Secretary. </text></subsection></section> <section id="H51E83848E8E445EFBB291A40500A395B"><enum>70203.</enum><header>No tax on car loan interest</header> <subsection id="H03AEF50B91B747C2B36A906060E7FC2C"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/163">Section 163(h)</external-xref> is amended by redesignating paragraph (4) as paragraph (5) and by inserting after paragraph (3) the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HF6ED8A64441E447DA73CC24B8785FA3B">
<paragraph id="HFC525152C7C3447FADD4BFA5BCA768C7"><enum>(4)</enum><header>Special rules for taxable years 2025 through 2028 relating to qualified passenger vehicle loan interest</header>
<subparagraph id="H903BB28F1985439288DE584A1BCA1A48"><enum>(A)</enum><header>In general</header><text>In the case of taxable years beginning after December 31, 2024, and before January 1, 2029, for purposes of this subsection the term <term>personal interest</term> shall not include qualified passenger vehicle loan interest.</text></subparagraph> <subparagraph id="H22EE85DE8A5C4C948530DBE9C6277575"><enum>(B)</enum><header>Qualified passenger vehicle loan interest defined</header> <clause id="HB878677BAA6D432891DB90D95882F618"><enum>(i)</enum><header>In general</header><text>For purposes of this paragraph, the term <term>qualified passenger vehicle loan interest</term> means any interest which is paid or accrued during the taxable year on indebtedness incurred by the taxpayer after December 31, 2024, for the purchase of, and that is secured by a first lien on, an applicable passenger vehicle for personal use.</text></clause>
<clause id="HDED0036175A6418FBD1CE6A420D88DC9"><enum>(ii)</enum><header>Exceptions</header><text>Such term shall not include any amount paid or incurred on any of the following:</text> <subclause id="HAD212CF218244141AFA882327EEF81E0"><enum>(I)</enum><text>A loan to finance fleet sales.</text></subclause>
<subclause id="H2FBECBF1A2C9404F9735C1DF0890162D"><enum>(II)</enum><text>A loan incurred for the purchase of a commercial vehicle that is not used for personal purposes.</text></subclause> <subclause id="H87ACA7A55F7245429919816B0EDECDF7"><enum>(III)</enum><text>Any lease financing.</text></subclause>
<subclause id="HE53C581F068647ECB6D9A89D6821999A"><enum>(IV)</enum><text>A loan to finance the purchase of a vehicle with a salvage title.</text></subclause> <subclause id="H03283621B48148D79829710AB8594E13"><enum>(V)</enum><text>A loan to finance the purchase of a vehicle intended to be used for scrap or parts.</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H2BB1C013D7684FC2BD79E70E0FC2125C"><enum>(iii)</enum><header>VIN requirement</header><text>Interest shall not be treated as qualified passenger vehicle loan interest under this paragraph unless the taxpayer includes the vehicle identification number of the applicable passenger vehicle described in clause (i) on the return of tax for the taxable year.</text></clause></subparagraph> <subparagraph id="HB61ABC0B7467491AA1C4BB64931129D4"><enum>(C)</enum><header>Limitations</header> <clause id="H4140EB940FFE45AB97C705B00D5EFE8D"><enum>(i)</enum><header>Dollar limit</header><text>The amount of interest taken into account by a taxpayer under subparagraph (B) for any taxable year shall not exceed $10,000.</text></clause>
<clause id="HC79AAF3643224F6EA2DAD009BD91FAD5"><enum>(ii)</enum><header>Limitation based on modified adjusted gross income</header>
<subclause id="HA05C463C74B7459982667E8612AB5FC0"><enum>(I)</enum><header>In general</header><text>The amount which is otherwise allowable as a deduction under subsection (a) as qualified passenger vehicle loan interest (determined without regard to this clause and after the application of clause (i)) shall be reduced (but not below zero) by $200 for each $1,000 (or portion thereof) by which the modified adjusted gross income of the taxpayer for the taxable year exceeds $100,000 ($200,000 in the case of a joint return).</text></subclause> <subclause id="H150D373299A445E480DA336A84C3F619"><enum>(II)</enum><header>Modified adjusted gross income</header><text>For purposes of this clause, the term <term>modified adjusted gross income</term> means the adjusted gross income of the taxpayer for the taxable year increased by any amount excluded from gross income under section 911, 931, or 933.</text></subclause></clause></subparagraph>
<subparagraph id="H235670F577FF40FBB41A4963FFA8116F"><enum>(D)</enum><header>Applicable passenger vehicle</header><text>The term <term>applicable passenger vehicle</term> means any vehicle—</text> <clause commented="no" display-inline="no-display-inline" id="H5AD87EDB52B641D1A8220B40D23BC237"><enum>(i)</enum><text display-inline="yes-display-inline">the original use of which commences with the taxpayer, </text></clause>
<clause id="H3D363E300264494199414EEE2BBC2D1E"><enum>(ii)</enum><text>which is manufactured primarily for use on public streets, roads, and highways (not including a vehicle operated exclusively on a rail or rails),</text></clause> <clause id="H21717B4B9FAE499BA4CDF163F742D481"><enum>(iii)</enum><text>which has at least 2 wheels,</text></clause>
<clause id="HFD34BAA560F247399401A780A7D67E6C"><enum>(iv)</enum><text>which is a car, minivan, van, sport utility vehicle, pickup truck, or motorcycle,</text></clause> <clause id="HDED028FD8C444CAB835FCE1B5A0D038A"><enum>(v)</enum><text>which is treated as a motor vehicle for purposes of title II of the Clean Air Act, and</text></clause>
<clause id="H7AD12860C3D24FABB5C3AAC7EAEA0EE8"><enum>(vi)</enum><text>which has a gross vehicle weight rating of less than 14,000 pounds. </text></clause><continuation-text continuation-text-level="subparagraph">Such term shall not include any vehicle the final assembly of which did not occur within the United States. </continuation-text></subparagraph> <subparagraph id="HEB308B93374040AD9D85A306A4BC740B"><enum>(E)</enum><header>Other definitions and special rules</header><text>For purposes of this paragraph—</text>
<clause id="HE6E591B9B5834F4CAA8FB0733D3EBABF"><enum>(i)</enum><header>Final assembly</header><text>For purposes of subparagraph (D), the term <term>final assembly</term> means the process by which a manufacturer produces a vehicle at, or through the use of, a plant, factory, or other place from which the vehicle is delivered to a dealer with all component parts necessary for the mechanical operation of the vehicle included with the vehicle, whether or not the component parts are permanently installed in or on the vehicle.</text></clause> <clause id="H9E107B34B42E484398F1E6BC8579C74F"><enum>(ii)</enum><header>Treatment of refinancing</header><text>Indebtedness described in subparagraph (B) shall include indebtedness that results from refinancing any indebtedness described in such subparagraph, and that is secured by a first lien on the applicable passenger vehicle with respect to which the refinanced indebtedness was incurred, but only to the extent the amount of such resulting indebtedness does not exceed the amount of such refinanced indebtedness.</text></clause>
<clause id="H03182CC82DFE414996773DFE5A8EDBB8"><enum>(iii)</enum><header>Related parties</header><text>Indebtedness described in subparagraph (B) shall not include any indebtedness owed to a person who is related (within the meaning of section 267(b) or 707(b)(1)) to the taxpayer.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HF87C68A2FAA9433B8EC9CFE85A9FA6C5"><enum>(b)</enum><header>Deduction allowed to non-itemizers</header><text>Section 63(b), as amended by the preceding provisions of this Act, is amended by striking <quote>and</quote> at the end of paragraph (5), by striking the period at the end of paragraph (6) and inserting <quote>and</quote>, and by adding at the end the following new paragraph:</text>
<quoted-block id="H63253F74D0BF41B8BB108B70E16F6D8A" display-inline="no-display-inline" style="OLC">
<paragraph id="H3263891185B64E0F922126E117FE44AE"><enum>(7)</enum><text>so much of the deduction allowed by section 163(a) as is attributable to the exception under section 163(h)(4)(A).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H95FD153C94CB414DA96FE051A31CFFBB"><enum>(c)</enum><header>Reporting</header> <paragraph id="HB8A4B863B719439291944618C8853C6E"><enum>(1)</enum><header>In general</header><text>Subpart B of part III of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/61">chapter 61</external-xref> is amended by adding at the end the following new section:</text>
<quoted-block id="H705E875E9EC24A26A2D6CC792FBC50BB" display-inline="no-display-inline" style="OLC">
<section id="H2D6D01D04B9B4E0EA7FE9230F41EDC4A"><enum>6050AA.</enum><header>Returns relating to applicable passenger vehicle loan interest received in trade or business from individuals</header>
<subsection id="H18FA14B4D9FE48D99EED5DE81441893D"><enum>(a)</enum><header>In general</header><text>Any person—</text> <paragraph id="H0AFFD48DAA4448B9BE44F5CDEDAFDB9A"><enum>(1)</enum><text>who is engaged in a trade or business, and</text></paragraph>
<paragraph id="HC90A4BFBC35249398377BC718BDD7865"><enum>(2)</enum><text>who, in the course of such trade or business, receives from any individual interest aggregating $600 or more for any calendar year on a specified passenger vehicle loan,</text></paragraph><continuation-text continuation-text-level="subsection">shall make the return described in subsection (b) with respect to each individual from whom such interest was received at such time as the Secretary may provide. </continuation-text></subsection> <subsection id="H384A9CDFC79E4B5EABE7E18376941286"><enum>(b)</enum><header>Form and manner of returns</header><text>A return is described in this subsection if such return—</text>
<paragraph id="H7536D45F0D2342508118F06744119FFF"><enum>(1)</enum><text>is in such form as the Secretary may prescribe, and</text></paragraph> <paragraph id="H69F2005416924BE1A6582F8570D938BD"><enum>(2)</enum><text>contains—</text>
<subparagraph id="HD3BE4119B798472ABB4E312BAF942DF4"><enum>(A)</enum><text>the name and address of the individual from whom the interest described in subsection (a)(2) was received,</text></subparagraph> <subparagraph id="H24F883EAE0B444B59E8E74A5A5BD3FEE"><enum>(B)</enum><text>the amount of such interest received for the calendar year,</text></subparagraph>
<subparagraph id="HA29D136680FE4717828E54B82AC055CF"><enum>(C)</enum><text>the amount of outstanding principal on the specified passenger vehicle loan as of the beginning of such calendar year,</text></subparagraph> <subparagraph id="HC9A1C13CE84B404D9D000AC2483CF4F0"><enum>(D)</enum><text>the date of the origination of such loan,</text></subparagraph>
<subparagraph id="HD4B4F758133F4BBBBCC3661B632506FF"><enum>(E)</enum><text>the year, make, model, and vehicle identification number of the applicable passenger vehicle which secures such loan (or such other description of such vehicle as the Secretary may prescribe), and</text></subparagraph> <subparagraph id="HA39C99D12D33471D97AB8D76B2B3C87A"><enum>(F)</enum><text>such other information as the Secretary may prescribe.</text></subparagraph></paragraph></subsection>
<subsection id="H45F22EFAAFDD4E728C54AAB6C58AE533"><enum>(c)</enum><header>Statements to be furnished to individuals with respect to whom information is required</header><text>Every person required to make a return under subsection (a) shall furnish to each individual whose name is required to be set forth in such return a written statement showing—</text> <paragraph id="H8BD20B2767364853A96BDB1EE1DD3BC2"><enum>(1)</enum><text>the name, address, and phone number of the information contact of the person required to make such return, and</text></paragraph>
<paragraph id="H6F5FD9BCDCAE4CB785AE813C7CEC1C31"><enum>(2)</enum><text>the information described in subparagraphs (B), (C), (D), and (E) of subsection (b)(2) with respect to such individual (and such information as is described in subsection (b)(2)(F) with respect to such individual as the Secretary may provide for purposes of this subsection).</text></paragraph><continuation-text continuation-text-level="subsection">The written statement required under the preceding sentence shall be furnished on or before January 31 of the year following the calendar year for which the return under subsection (a) was required to be made. </continuation-text></subsection> <subsection id="HDC40D5470F1C402D9BBC45F608BBF4D6"><enum>(d)</enum><header>Definitions</header><text>For purposes of this section—</text>
<paragraph id="HE28B085099124DEF9464B9A4AB282354"><enum>(1)</enum><header>In general</header><text>Terms used in this section which are also used in paragraph (4) of section 163(h) shall have the same meaning as when used in such paragraph.</text></paragraph> <paragraph id="H95CCBC7355D045F889833B296111D4C7"><enum>(2)</enum><header>Specified passenger vehicle loan</header><text>The term <term>specified passenger vehicle loan</term> means the indebtedness described in section 163(h)(4)(B) with respect to any applicable passenger vehicle.</text></paragraph></subsection>
<subsection id="HC267508D25494322B3DEA409A9D70314"><enum>(e)</enum><header>Regulations</header><text>The Secretary shall issue such regulations or other guidance as may be necessary or appropriate to carry out the purposes of this section, including regulations or other guidance to prevent the duplicate reporting of information under this section.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H62CC02B38C2C4B23B34DD887F56AB878"><enum>(f)</enum><header>Applicability</header><text display-inline="yes-display-inline">No return shall be required under this section for any period to which section 163(h)(4) does not apply.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HD1D6605B855E4270A0A9FE0DE2B04615"><enum>(2)</enum><header>Penalties</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6724">Section 6724(d)</external-xref> is amended—</text> <subparagraph id="H10196B038FBC437D93A3BC0F254620CC"><enum>(A)</enum><text>in paragraph (1)(B), by striking <quote>or</quote> at the end of clause (xxvii), by striking <quote>and</quote> at the end of clause (xxviii) and inserting <quote>or</quote>, and by adding at the end the following new clause:</text>
<quoted-block id="HE99C6B7467B548B3A1522B0E337C291C" display-inline="no-display-inline" style="OLC">
<clause id="H7C641F85F8F94B48B2B171ECFC042CE6"><enum>(xxix)</enum><text>section 6050AA(a) (relating to returns relating to applicable passenger vehicle loan interest received in trade or business from individuals),</text></clause><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="H82BE019C97CD448BAAC53459229C1606"><enum>(B)</enum><text>in paragraph (2), by striking <quote>or</quote> at the end of subparagraph (KK), by striking the period at the end of subparagraph (LL) and inserting <quote>, or</quote>, and by inserting after subparagraph (LL) the following new subparagraph:</text>
<quoted-block id="H34F27542A4104661966F866AFC9C13F9" display-inline="no-display-inline" style="OLC">
<subclause indent="up2" id="H3080C23EA110493CA524402A7320D8C3"><enum>(MM)</enum><text>section 6050AA(c) (relating to statements relating to applicable passenger vehicle loan interest received in trade or business from individuals).</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H9B0AF03335944EF7B92F3EF29F2D80C9"><enum>(d)</enum><header>Conforming amendments</header> <paragraph id="H0AD301E4243849F8A82E66831EC21B3A" commented="no"><enum>(1)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/56">Section 56(e)(1)(B)</external-xref> is amended by striking <quote>section 163(h)(4)</quote> and inserting <quote>section 163(h)(5)</quote>.</text></paragraph>
<paragraph id="HC7CC6519669142A3860CD701CA761451"><enum>(2)</enum><text>The table of sections for subpart B of part III of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/61">chapter 61</external-xref> is amended by adding at the end the following new item:</text> <quoted-block id="H946EF5DC3D5D42588B646FACCD6585E9" display-inline="no-display-inline" style="OLC"> <toc regeneration="no-regeneration"> <toc-entry level="section">Sec. 6050AA. Returns relating to applicable passenger vehicle loan interest received in trade or business from individuals. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H1409B824A32E400182186E892F3A0AEC"><enum>(e)</enum><header>Effective date</header><text>The amendments made by this section shall apply to indebtedness incurred after December 31, 2024.</text></subsection></section>
<section id="HE8E9B790C001499EB3FF92D36A483700"><enum>70204.</enum><header>Trump accounts and contribution pilot program</header>
<subsection id="HA95D15DCDC6149B3B597407795FBADF3"><enum>(a)</enum><header>Trump accounts</header>
<paragraph commented="no" display-inline="no-display-inline" id="H8B700A089B4147F78D9A08DB9976C5CB"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Subchapter F of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by adding at the end the following new part:</text> <quoted-block id="H2B7D78BD07304057820B75577CA9FBD6" display-inline="no-display-inline" style="OLC"> <part id="H452B5F0B468043E9B4AB7CA36A0BF945"><enum>IX</enum><header>Trump accounts</header> <toc> <toc-entry level="section" idref="H8511E55E8D334E7A90192A749E74298E">Sec. 530A. Trump accounts. </toc-entry></toc> <section id="H8511E55E8D334E7A90192A749E74298E"><enum>530A.</enum><header>Trump accounts</header> <subsection id="HE35D1B9C3CA04AC78A25D70930285A69"><enum>(a)</enum><header>General rule</header><text>Except as provided in this section or under regulations or guidance established by the Secretary, a Trump account shall be treated for purposes of this title in the same manner as an individual retirement account under section 408(a).</text></subsection>
<subsection id="HEB4AE305184A4CFBADBC85BF383325EA"><enum>(b)</enum><header>Trump account</header><text>For purposes of this section—</text> <paragraph id="HDE1001E88C6048EAA4091E8985DCEF56"><enum>(1)</enum><header>In general</header><text>The term <term>Trump account</term> means an individual retirement account (as defined in section 408(a)) which is not designated as a Roth IRA and which meets the following requirements:</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H8EF250683152443A9D0320B3A894327C"><enum>(A)</enum><text>The account—</text> <clause commented="no" display-inline="no-display-inline" id="HEE25F406088942CFA70C456A5C28B7DF"><enum>(i)</enum><text display-inline="yes-display-inline">is created or organized by the Secretary for the exclusive benefit of an eligible individual or such eligible individual's beneficiaries, or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HDBC042B1ABF5406EBF229B9132EDF0A3"><enum>(ii)</enum><text>is—</text> <subclause commented="no" display-inline="no-display-inline" id="H8614DAB856CF43E6926FDF132F43AEE1"><enum>(I)</enum><text display-inline="yes-display-inline">created or organized in the United States for the exclusive benefit of an individual who has not attained the age of 18 before the end of the calendar year, or such individual's beneficiaries, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HF67CC196837D4273A65EC7A8802FFBF8"><enum>(II)</enum><text>funded by a qualified rollover contribution.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HA4AFDB7C91F041AE944BAC15AB85D26D"><enum>(B)</enum><text display-inline="yes-display-inline">The account is designated (in such manner as the Secretary shall prescribe) at the time of the establishment of the account as a Trump account.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H9EF631E2A43040D38B878135DEDDA7BD"><enum>(C)</enum><text display-inline="yes-display-inline">The written governing instrument creating the account meets the following requirements:</text> <clause id="H4B15F7DD5EAD46E091B16EFC7DBDB15F" commented="no"><enum>(i)</enum><text>No contribution will be accepted—</text>
<subclause id="HE6EAB4AAC87C4B6BBCF5ED0F6667FD98" commented="no"><enum>(I)</enum><text>before the date that is 12 months after the date of the enactment of this section, or</text></subclause> <subclause id="H9D4C561957004EC9A101606DA69F6F90"><enum>(II)</enum><text>in the case of a contribution made in any calendar year before the calendar year in which the account beneficiary attains age 18, if such contribution would result in aggregate contributions (other than exempt contributions) for such calendar year in excess of the contribution limit specified in subsection (c)(2)(A).</text></subclause></clause>
<clause id="H5070B409B12444BBA98ED2B9C459081D"><enum>(ii)</enum><text>Except as provided in subsection (d), no distribution will be allowed before the first day of the calendar year in which the account beneficiary attains age 18.</text></clause> <clause id="H1E86E6458BE242B89B698F2C5DA74829"><enum>(iii)</enum><text>No part of the account funds will be invested in any asset other than an eligible investment during any period before the first day of the calendar year in which the account beneficiary attains age 18.</text></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HBBDD8E40A7B1430D9C03A72CAFE885F3"><enum>(2)</enum><header>Eligible individual</header><text>The term <term>eligible individual</term> means any individual—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H6BAEB962EC4E4DD59D1303835524BA3C"><enum>(A)</enum><text display-inline="yes-display-inline">who has not attained the age of 18 before the close of the calendar year in which the election under subparagraph (C) is made,</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H7000BDDDB3A2465C9A363F239844210D"><enum>(B)</enum><text display-inline="yes-display-inline">for whom a social security number (within the meaning of section 24(h)(7)) has been issued before the date on which an election under subsection (C) is made, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HD1AE01DA8C444E24AC3A52F55E91B62A"><enum>(C)</enum><text>for whom—</text>
<clause commented="no" display-inline="no-display-inline" id="H93E7ED332E6E4F63BCD021A205E00F6A"><enum>(i)</enum><text>an election is made under this subparagraph by the Secretary if the Secretary determines (based on information available to the Secretary from tax returns or otherwise) that such individual meets the requirements of subparagraphs (A) and (B) and no prior election has been made for such individual under clause (ii), or</text></clause> <clause commented="no" display-inline="no-display-inline" id="HE71962980430494CAA36E93D03B65866"><enum>(ii)</enum><text display-inline="yes-display-inline">an election is made under this subparagraph by a person other than the Secretary (at such time and in such manner as the Secretary may prescribe) for the establishment of a Trump account if no prior election has been made for such individual under clause (i).</text></clause></subparagraph></paragraph>
<paragraph id="HB631B814FE7E4557B480A6B23ACE7DF1"><enum>(3)</enum><header>Eligible investment</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HA1539EA186A3430DB6763D4C8BD80006"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>eligible investment</term> means any mutual fund or exchange traded fund which—</text> <clause commented="no" display-inline="no-display-inline" id="HE6B71D690EF54297B0071995FBEE9D4E"><enum>(i)</enum><text display-inline="yes-display-inline">tracks the returns of a qualified index,</text></clause>
<clause id="H69B7C0B1D03F40A987DF9DE55038A90A"><enum>(ii)</enum><text>does not use leverage,</text></clause> <clause id="H80785A36842C45EE8FB9D434732BB322"><enum>(iii)</enum><text>does not have annual fees and expenses of more than 0.1 percent of the balance of the investment in the fund, and</text></clause>
<clause id="HE015064246B34F6096D0B228DDE53E48" commented="no"><enum>(iv)</enum><text>meets such other criteria as the Secretary determines appropriate for purposes of this section.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HC2373E9BF18744EBAD02C9DA4B5DE1DC"><enum>(B)</enum><header>Qualified index</header><text display-inline="yes-display-inline">The term <term>qualified index</term> means—</text>
<clause id="H7645D05A0F4D4D788D27D9420E7C85A9"><enum>(i)</enum><text>the Standard and Poor's 500 stock market index, or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H22946818E4A6450390904E9C3F57D38F"><enum>(ii)</enum><text>any other index—</text>
<subclause commented="no" display-inline="no-display-inline" id="H6AABAF7EC63A4A3EBBF8F31C31DC6523"><enum>(I)</enum><text display-inline="yes-display-inline">which is comprised of equity investments in primarily United States companies, and</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H41540733ECFA4CD4BE25B9E0FE835408"><enum>(II)</enum><text>for which regulated futures contracts (as defined in section 1256(g)(1)) are traded on a qualified board or exchange (as defined in section 1256(g)(7)).</text></subclause><continuation-text continuation-text-level="clause">Such term shall not include any industry or sector-specific index, but may include an index based on market capitalization.</continuation-text></clause></subparagraph></paragraph>
<paragraph id="H2479207E0AED4919B4CBA7A5CC2644AC"><enum>(4)</enum><header>Account beneficiary</header><text>The term <term>account beneficiary</term> means the individual on whose behalf the Trump account was established.</text></paragraph></subsection> <subsection id="H8B80A4378F7C49DDB48BD46E1DAE51CE"><enum>(c)</enum><header>Treatment of contributions</header> <paragraph commented="no" display-inline="no-display-inline" id="HB9BE8E82FF9B45478BCBC2CEDC8EA229"><enum>(1)</enum><header display-inline="yes-display-inline">No deduction allowed</header><text>No deduction shall be allowed under section 219 for any contribution which is made before the first day of the calendar year in which the account beneficiary attains age 18.</text></paragraph>
<paragraph id="H6415A5E105EA44F09B0051F690884E24"><enum>(2)</enum><header>Contribution limit</header><text>In the case of any contribution made before the calendar year in which the account beneficiary attains age 18—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H83A85BAAA832475F87609DB7DC996AA9"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>The aggregate amount of contributions (other than exempt contributions) for such calendar year shall not exceed $5,000.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H063A5C4601484E758B56D6E1CDC47BA8"><enum>(B)</enum><header>Exempt contribution</header><text>For purposes of this paragraph, the term <term>exempt contribution</term> means—</text> <clause id="H6FCBE0BD7C3A446F8C9087E026846681"><enum>(i)</enum><text>a qualified rollover contribution,</text></clause>
<clause id="HD42F38F36DDD48779AEDC4CFE5E5BB97"><enum>(ii)</enum><text>any qualified general contribution, or</text></clause> <clause id="H0ABB0162B48E44E68CC87D08BC1FAD66"><enum>(iii)</enum><text>any contribution provided under section 6434.</text></clause></subparagraph>
<subparagraph id="HB7B1E02380764D8DAD3B70DED909541A"><enum>(C)</enum><header>Cost-of-living adjustment</header>
<clause id="HCA1C7A1E293F4804B329F47B7098011D"><enum>(i)</enum><header>In general</header><text>In the case of any taxable year after 2027, the $5,000 amount under subparagraph (A) shall be increased by an amount equal to—</text> <subclause id="H63B1300CF8BB4615A3C25840705C8A5F"><enum>(I)</enum><text>such dollar amount, multiplied by</text></subclause>
<subclause id="HCD7CCC1B6A1F4CEFB9C0DF80348650A3"><enum>(II)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2026</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subclause></clause> <clause id="H88FCB87C73D9435284929280E5FF2B39"><enum>(ii)</enum><header>Rounding</header><text>If any increase under this subparagraph is not a multiple of $100, such amount shall be rounded to the next lowest multiple of $100.</text></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H21343695898742C8BF049971B070F833"><enum>(3)</enum><header>Timing of contributions</header><text>Section 219(f)(3) shall not apply to any contribution made to a Trump account for any taxable year ending before the calendar year in which the account beneficiary attains age 18.</text></paragraph></subsection> <subsection id="H3400E669AE744D9C89A17366DC7600A1"><enum>(d)</enum><header>Distributions</header> <paragraph commented="no" display-inline="no-display-inline" id="H3160371394D94C5981A4D952B17E1D61"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Except as otherwise provided in this subsection, no distribution shall be allowed before the first day of the calendar year in which the account beneficiary attains age 18.</text></paragraph>
<paragraph id="H856C3497DE264FC9B5BF36B493E0186F"><enum>(2)</enum><header>Tax treatment of allowable distributions</header><text>For purposes of applying section 72 to any amount distributed from a Trump account, the investment in the contract shall not include—</text> <subparagraph id="H07A4BB486E084CD1B1CAB8B9FE1017BC"><enum>(A)</enum><text>any qualified general contribution,</text></subparagraph>
<subparagraph id="H9A5D352B9D8248B4A9EB5C84C2F98266"><enum>(B)</enum><text>any contribution provided under section 6434, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HE15E90126EAB4B6FAF5CDEE5751B72DF"><enum>(C)</enum><text display-inline="yes-display-inline">the amount of any contribution which is excluded from gross income under section 128.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H328741A71AAA43048FFB503E2C8DE157"><enum>(3)</enum><header>Qualified rollover contributions</header><text>Paragraph (1) shall not apply to any distribution which is a qualified rollover contribution and the amount of such distribution shall not be included in the gross income of the beneficiary.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HFE97495D018544C8BF06BB960C648A9C"><enum>(4)</enum><header>Qualified ABLE rollover contributions</header> <subparagraph commented="no" display-inline="no-display-inline" id="H705A4761F877423B87F451F793F47F59"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Paragraph (1) shall not apply to any distribution which is a qualified ABLE rollover contribution and the amount of such distribution shall not be included in the gross income of the beneficiary.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H282F77040A614B5DB07BE1E78FDC5288"><enum>(B)</enum><header>Qualified ABLE rollover contribution</header><text>For purposes of this section, the term <term>qualified ABLE rollover contribution</term> means an amount which is paid during the calendar year in which the account beneficiary attains age 17 in a direct trustee-to-trustee transfer from a Trump account maintained for the benefit of the account beneficiary to an ABLE account (as defined in section 529A(e)(6)) for the benefit of the such account beneficiary, but only if the amount of such payment is equal to the entire balance of the Trump account from which the payment is made. </text></subparagraph></paragraph> <paragraph id="H21FD032E7805486B86679DDA2522F824" commented="no"><enum>(5)</enum><header>Distributions of excess contributions</header><text>In the case of any contribution which is made before the calendar year in which the account beneficiary attains age 18 and which is in excess of the limitation in effect under subsection (c)(2)(A) for the calendar year—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H1BA09982546B4885A8787EB16ECD4BEB"><enum>(A)</enum><text display-inline="yes-display-inline">paragraph (1) shall not apply to the distribution of such excess,</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HAEAF6E2F620641C99E711AEA2B2AF986"><enum>(B)</enum><text>the amount of such distribution shall not be included in gross income of the account beneficiary, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF6AC3E3FBEA440AC9751A568C9FC94B1"><enum>(C)</enum><text display-inline="yes-display-inline">the tax imposed by this chapter on the distributee for the taxable year in which the distribution is made shall be increased by 100 percent of the amount of net income attributable to such excess (determined without regard to subparagraph (B)).</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HF3ACA377635E4364A88A65EC4EB120F1"><enum>(6)</enum><header>Treatment of death of account beneficiary</header><text>If, by reason of the death of the account beneficiary before the first day of the calendar year in which the account beneficiary attains age 18, any person acquires the account beneficiary’s interest in the Trump account—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HD8EDB34334DC411B85ADF31394826C39"><enum>(A)</enum><text display-inline="yes-display-inline">paragraph (1) shall not apply, </text></subparagraph> <subparagraph id="H2B262F45BA184E4EAF9D649ECED8F066" commented="no"><enum>(B)</enum><text>such account shall cease to be a Trump account as of the date of death, and</text></subparagraph>
<subparagraph id="H37B619D2400D432F8C6FC3F1F1976202"><enum>(C)</enum><text>an amount equal to the fair market value of the assets (reduced by the investment in the contract) in such account on such date shall—</text> <clause commented="no" display-inline="no-display-inline" id="H9F04A1B089934A22850EF468F0F6D3CE"><enum>(i)</enum><text display-inline="yes-display-inline">if such person is not the estate of such beneficiary, be includible in such person’s gross income for the taxable year which includes such date, or </text></clause>
<clause commented="no" display-inline="no-display-inline" id="HC92DE9E5AC5C447186C18D54A5B5C5A3"><enum>(ii)</enum><text display-inline="yes-display-inline">if such person is the estate of such beneficiary, be includible in such beneficiary’s gross income for the last taxable year of such beneficiary.</text></clause></subparagraph></paragraph></subsection> <subsection id="H9847AF5AE63E4A08BEC332137EE5613D"><enum>(e)</enum><header>Qualified rollover contribution</header><text>For purposes of this section, the term <term>qualified rollover contribution</term> means an amount which is paid in a direct trustee-to-trustee transfer from a Trump account maintained for the benefit of the account beneficiary to a Trump account maintained for such beneficiary, but only if the amount of such payment is equal to the entire balance of the Trump account from which the payment is made.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H64C919F97C7545E18EFF0B2DEE51BA64"><enum>(f)</enum><header>Qualified general contribution</header><text>For purposes of this section—</text> <paragraph commented="no" display-inline="no-display-inline" id="HD1EE9A9A4A6B465F95480739DF753A59"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>qualified general contribution</term> means any contribution which—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HF012B852B1C9465698D59DFBDD4141F7"><enum>(A)</enum><text display-inline="yes-display-inline">is made by the Secretary pursuant to a general funding contribution,</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H0C5898E1C2204522B0A2962A0BD35BDF"><enum>(B)</enum><text display-inline="yes-display-inline">is made to the Trump account of an account beneficiary in the qualified class of account beneficiaries specified in the general funding contribution, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H9C875A1199154525BB04BEBC2919C7DB"><enum>(C)</enum><text>is in an amount which is equal to the ratio of—</text> <clause commented="no" display-inline="no-display-inline" id="HF4609D74FD774E1FA06814979A1F520C"><enum>(i)</enum><text display-inline="yes-display-inline">the amount of such general funding contribution, to</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HE902E195BDEA4E3E87C43A56D8864B99"><enum>(ii)</enum><text display-inline="yes-display-inline">the number of account beneficiaries in such qualified class.</text></clause></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA469B5210EA34CB3829B60C976BF4EEA"><enum>(2)</enum><header>General funding contribution</header><text>The term <term>general funding contribution</term> means a contribution which—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H9DF1D37B769E4EE19CADC34704E5E459"><enum>(A)</enum><text display-inline="yes-display-inline">is made by—</text> <clause commented="no" display-inline="no-display-inline" id="HDD4E032E6E9B44C4A873D64401003814"><enum>(i)</enum><text display-inline="yes-display-inline">an entity described in section 170(c)(1) (other than a possession of the United States or a political subdivision thereof) or an Indian tribal government, or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H484B5EE194CC477AB1BB294D44720964"><enum>(ii)</enum><text display-inline="yes-display-inline">an organization described in section 501(c)(3) and exempt from tax under section 501(a), and</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H51BDED99F51D4E54806286EFDB49B67D"><enum>(B)</enum><text>which specifies a qualified class of account beneficiaries to whom such contribution is to be distributed.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H4E14A12FC9A64ED893C3901A6B3A704D"><enum>(3)</enum><header display-inline="yes-display-inline">Qualified class</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HF31D6B3572834B6D82C70AA89B4F24FE"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>qualified class</term> means any of the following:</text> <clause commented="no" display-inline="no-display-inline" id="H3739999E5A3D4FD9A358B5D9C1562468"><enum>(i)</enum><text display-inline="yes-display-inline">All account beneficiaries who have not attained the age of 18 before the close of the calendar year in which the contribution is made.</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H3B3C98FAA50741F792158AFF36D0F46C"><enum>(ii)</enum><text>All account beneficiaries who have not attained the age of 18 before the close of the calendar year in which the contribution is made and who reside in one or more States or other qualified geographic areas specified by the terms of the general funding contribution.</text></clause> <clause commented="no" display-inline="no-display-inline" id="H3FB170DFE51B4D4C9E92EF2C579B0427"><enum>(iii)</enum><text>All account beneficiaries who have not attained the age of 18 before the close of the calendar year in which the contribution is made and who were born in one or more calendar years specified by the terms of the general funding contribution.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE40BA1BE3A784C64B31C658666C0DD6C"><enum>(B)</enum><header>Qualified geographic area</header><text>The term <term>qualified geographic area</term> means any geographic area in which not less than 5,000 account beneficiaries reside and which is designated by the Secretary as a qualified geographic area under this subparagraph. </text></subparagraph></paragraph></subsection> <subsection id="H46C20CD40ACC41F29332E6E25CD877B2"><enum>(g)</enum><header>Trustee selection</header><text>In the case of any Trump account created or organized by the Secretary, the Secretary shall take into account the following criteria in selecting the trustee:</text>
<paragraph commented="no" display-inline="no-display-inline" id="HB8188CF2882045DB9C0F04876F4C0645"><enum>(1)</enum><text>The history of reliability and regulatory compliance of the trustee.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H9A7C87CB082845B0BFFDF07A6F74CF03"><enum>(2)</enum><text>The customer service experience of the trustee.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HD10D97BA91B84D5A8573B4FFD36C2C7F"><enum>(3)</enum><text>The costs imposed by the trustee on the account or the account beneficiary.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HD175FB182AD0414EB22803B33D48B374"><enum>(h)</enum><header>Other special rules and coordination with individual retirement account rules</header> <paragraph commented="no" display-inline="no-display-inline" id="HEAD5A5B5B8E3495BA778DB819D13AFC6"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The rules of subsections (k) and (p) of section 408 shall not apply to a Trump account, and the rules of subsections (d) and (i) of section 408 shall not apply to a Trump account for any taxable year beginning before the calendar year in which the account beneficiary attains age 18.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HAF6971B78D52435D9F6932D5A36DD8F5"><enum>(2)</enum><header>Custodial accounts</header><text>In the case of a Trump account, section 408(h) shall be applied by substituting <quote>a Trump account described in section 530A(b)(1)</quote> for <quote>an individual retirement account described in subsection (a)</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H79D39384405C431D91C1A8D1FB5FCE8B"><enum>(3)</enum><header>Contributions</header><text display-inline="yes-display-inline">In the case of any taxable year beginning before the first day of the calendar year in which the account beneficiary attains age 18, a contribution to a Trump account shall not be taken into account in applying any contribution limit to any individual retirement plan other than a Trump account.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HD05A17C9862B4DFC87D9877BA07391B7"><enum>(4)</enum><header>Distributions</header><text>Section 408(d)(2) shall be applied separately with respect to Trump Accounts and other individual retirement plans.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H37C7354036984578A8937034D9EA50D9"><enum>(5)</enum><header>Excess contributions</header><text>For purposes of applying section 4973(b) to a Trump account for any taxable year beginning before the first day of the calendar year in which the account beneficiary attains age 18, the term <quote>excess contributions</quote> means the sum of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H9E28BC992ED940B9A8FB282C0FB682B7"><enum>(A)</enum><text display-inline="yes-display-inline">the amount by which the amount contributed to the account for the calendar year in which taxable year begins exceeds the amount permitted to be contributed to the account under subsection (c)(2), and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H7DCA1011A6F04066BBDBEE43952A79BA"><enum>(B)</enum><text display-inline="yes-display-inline">the amount determined under this paragraph for the preceding taxable year.</text></subparagraph><continuation-text continuation-text-level="paragraph">For purposes of this paragraph, the excess contributions for a taxable year are reduced by the distributions to which subsection (d)(5) applies that are made during the taxable year or by the date prescribed by law (including extensions of time) for filing the account beneficiary’s return for the taxable year.</continuation-text></paragraph></subsection>
<subsection id="H717CBE45A019474A8E3939AB957B87AA"><enum>(i)</enum><header>Reports</header>
<paragraph commented="no" display-inline="no-display-inline" id="HF764270F10D8406F9C879704914BE06D"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The trustee of a Trump account shall make such reports regarding such account to the Secretary and to the beneficiary of the account at such time and in such manner as may be required by the Secretary. Such reports shall include information with respect to—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H3691075E0D0E419ABD739EE67F618319"><enum>(A)</enum><text display-inline="yes-display-inline">contributions (including the amount and source of any contribution in excess of $25 made from a person other than the Secretary, the account beneficiary, or the parent or legal guardian of the account beneficiary), </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H48B0FCA5F949414087815EFBA6200372"><enum>(B)</enum><text display-inline="yes-display-inline">distributions (including distributions which are qualified rollover contributions), </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H1645FDF00D5D49EA9B69612F0F8F422F"><enum>(C)</enum><text display-inline="yes-display-inline">the fair market value of the account, </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H1F09922EC5684505B832AB908DF5E655"><enum>(D)</enum><text display-inline="yes-display-inline">the investment in the contract with respect to such account, and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H6852D4D3D7AE437F95A582A5883185FC"><enum>(E)</enum><text display-inline="yes-display-inline">such other matters as the Secretary may require. </text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H091E04C917EC48B69D59F17760D48866"><enum>(2)</enum><header>Qualified rollover contributions</header><text display-inline="yes-display-inline">Not later than 30 days after the date of any qualified rollover contribution, the trustee of the Trump account to which the contribution was made shall make a report to the Secretary. Such report shall include—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H4D6CDF4AC73D40FABED738C11AC27968"><enum>(A)</enum><text display-inline="yes-display-inline">the name, address, and social security number of the account beneficiary,</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0AC7E42FEE5C46B382EC229CE2C1C00D"><enum>(B)</enum><text display-inline="yes-display-inline">the name and address of such trustee,</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H989AAA3D876A43299BDFF85DF113AB6C"><enum>(C)</enum><text display-inline="yes-display-inline">the account number,</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H21E3EC8A9CB246268410CF5D4EB6D4EA"><enum>(D)</enum><text display-inline="yes-display-inline">the routing number of the trustee, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H4A244AB6B8BB45B7B7E3E6A23E1CB8E3"><enum>(E)</enum><text display-inline="yes-display-inline">such other information as the Secretary may require.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H6FF00D8AE112451D9804B7044C49AEC9"><enum>(3)</enum><header>Period of reporting</header><text display-inline="yes-display-inline">This subsection shall not apply to any period after the calendar year in which the beneficiary attains age 17.</text></paragraph></subsection></section></part><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="HD718ED6BE539410E9A9AECA8615A103A"><enum>(2)</enum><header>Qualified ABLE rollover contributions exempt from ABLE contribution limitation</header> <subparagraph commented="no" display-inline="no-display-inline" id="H5A36406A2E5245458EAE75205BA54A69"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/529A">Section 529A(b)(2)(B)</external-xref> is amended by inserting <quote>or received in a qualified ABLE rollover contribution described in section 530A(d)(4)(B)</quote> after <quote>except as provided in the case of contributions under subsection (c)(1)(C)</quote>.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H524FC064CC364062994F47B80F828B4C"><enum>(B)</enum><header>Prohibition on excess contributions</header><text display-inline="yes-display-inline">The second sentence of <external-xref legal-doc="usc" parsable-cite="usc/26/529A">section 529A(b)(6)</external-xref> is amended by inserting <quote>but do not include any contributions received in a qualified ABLE rollover contribution described in section 530A(d)(4)(B)</quote> before the period at the end.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HAFCEA75728904A02B900F1CC1E171C57"><enum>(C)</enum><header>Conforming amendment</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/4973">Section 4973(h)(1)</external-xref> is amended by inserting <quote>or contributions received in a qualified ABLE rollover contribution described in section 530A(d)(4)(B)</quote> after <quote>other than contributions under section 529A(c)(1)(C)</quote>.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9D6976B9B0614C73B95F3A301C2F76FE"><enum>(3)</enum><header display-inline="yes-display-inline">Failure to provide reports on Trump accounts</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6693">Section 6693(a)(2)</external-xref> is amended by striking <quote>and</quote> at the end of subparagraph (E), by striking the period at the end of subparagraph (F) and inserting <quote>, and</quote>, and by inserting after subparagraph (F) the following new subparagraph:</text> <quoted-block id="H830C218AB4754635ACBADE42330B3656" display-inline="no-display-inline" style="OLC"> <subparagraph id="H262ACDC645174F62868FB82FF525150D"><enum>(G)</enum><text>section 530A(i) (relating to Trump accounts).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H7DE47D84B9734FC58FD88C4E827E1967"><enum>(4)</enum><header>Clerical amendment</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HC54DE008750746A080150F698B2C13B5"><enum>(A)</enum><text display-inline="yes-display-inline">The table of parts for subchapter F of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by adding at the end the following new item:</text> <quoted-block style="OLC" id="H16325D9701254FFF8DF072BF5F127627"> <toc> <toc-entry level="part" idref="H452B5F0B468043E9B4AB7CA36A0BF945">PART IX—Trump accounts</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H37683DCCD57C49DAA5E80E60530EFD7B"><enum>(b)</enum><header>Employer contributions</header> <paragraph commented="no" display-inline="no-display-inline" id="HBEE85417C8724EE2A5974EC04D3936DE"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Part III of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after section 127 the following new section:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H6E145C749FFB4B73AEA6BEDD454FB7E8">
<section commented="no" display-inline="no-display-inline" id="HDB2F1C6036D249E18986456E45CDF490"><enum>128.</enum><header>Employer contributions to Trump accounts</header>
<subsection commented="no" display-inline="no-display-inline" id="HD76FACEF13EB4216859DB722612B277B"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text>Gross income of an employee does not include amounts paid by the employer as a contribution to the Trump account of such employee or of any dependent of such employee if the amounts are paid or incurred pursuant to a program which is described in subsection (c).</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H4D38CAB2E2714AB890D69F35765257CA"><enum>(b)</enum><header display-inline="yes-display-inline">Limitation</header> <paragraph commented="no" display-inline="no-display-inline" id="HE62DD5EED0464B239A9E4880EC7347AF"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The amount which may be excluded under subsection (a) with respect to any employee shall not exceed $2,500.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H7FCF9E8BD46649C38434FBA52B27C405"><enum>(2)</enum><header>Inflation adjustment</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HCC5F57F8094540C1B55F92828F47B705"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of any taxable year beginning after 2027, the $2,500 amount in paragraph (1) shall be increased by an amount equal to—</text> <clause id="HFA34BCF565CB426A8DB17D9DC3B32CA2"><enum>(i)</enum><text>such dollar amount, multiplied by</text></clause>
<clause id="H6712F45E6C9C473985C58C0E62AEC8F4"><enum>(ii)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins by substituting <quote>calendar year 2026</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></clause></subparagraph> <subparagraph id="HDB1883F553FF47D197A8EDB33592B5C6"><enum>(B)</enum><header>Rounding</header><text>If any increase determined under subparagraph (A) is not a multiple of $100, such increase shall be rounded to the next lowest multiple of $100.</text></subparagraph></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H29A5EC7F8733469883E22339507F2824"><enum>(c)</enum><header display-inline="yes-display-inline">Trump account contribution program</header><text>For purposes of this section, a Trump account contribution program is a separate written plan of an employer for the exclusive benefit of his employees to provide contributions to the Trump accounts of such employees or dependents of such employees which meets requirements similar to the requirements of paragraphs (2), (3), (6), (7), and (8) of section 129(d).</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H4E68CD63DAF54924924C3F5B07078AAA"><enum>(2)</enum><header>Clerical amendment</header><text>The table of sections for part III of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after the item relating to section 127 the following new item:</text>
<quoted-block style="OLC" id="H1385D814A0924471B787674E3482A352">
<toc>
<toc-entry level="section" idref="HDB2F1C6036D249E18986456E45CDF490">Sec. 128. Employer contributions to Trump accounts.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H9A1D70EE57B743268F401866C450AA86"><enum>(c)</enum><header>Certain contributions excluded from gross income</header>
<paragraph id="H0120601D8AC8405D9E01EA7C50239770"><enum>(1)</enum><header>In general</header><text>Part III of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting before section 140 the following new section:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H6B6495B9765845E288F8B572D37568A9"> <section id="HE2A4F004C730420A9E020D6EE35DFBE1"><enum>139J.</enum><header>Certain contributions to Trump accounts</header> <subsection commented="no" display-inline="no-display-inline" id="H0A9F8FD67E584FDEBFC5481D3E712766"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Gross income of an account beneficiary shall not include any qualified general contribution to a Trump account of the account beneficiary.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H16DA199D432F47F982DBF391DD6913F0"><enum>(b)</enum><header>Definitions</header><text display-inline="yes-display-inline">Any term used in this section which is used in section 530A shall have the meaning given such term under section 530A.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H96C5FD72D905432B9BD24B9CF1AF7D0A"><enum>(2)</enum><header>Clerical amendment</header><text>The table of sections for part III of subchapter B is amended by inserting before the item relating to section 140 the following new item:</text>
<quoted-block style="OLC" id="HBC447688C44A4F80B6F1915067B50879">
<toc>
<toc-entry level="section" idref="HE2A4F004C730420A9E020D6EE35DFBE1">Sec. 139J. Certain contributions to Trump accounts.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H92E2573DF7F045809D306A0613DBA3DF"><enum>(d)</enum><header display-inline="yes-display-inline">Trump accounts contribution pilot program</header>
<paragraph id="H47ED17F2F089476198962E5315BF3C7B"><enum>(1)</enum><header>In general</header><text>Subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/65">chapter 65</external-xref> is amended by adding at the end the following new section:</text> <quoted-block id="H3BE9A87F34DC413CAA7B30D7FA97BECC" display-inline="no-display-inline" style="OLC"> <section id="HAFAC0337365F4DFF914BC4C52ACD5FF2"><enum>6434.</enum><header>Trump accounts contribution pilot program</header> <subsection id="H57DAA9A271634CF38D1A4C5BFE111DFD"><enum>(a)</enum><header>In general</header><text>In the case of an individual who makes an election under this section with respect to an eligible child of the individual, such eligible child shall be treated as making a payment against the tax imposed by subtitle A (for the taxable year for which the election was made) in an amount equal to $1,000.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HBAB1A821C04F477FAAE113858B23E15C"><enum>(b)</enum><header>Refund of payment</header><text>The amount treated as a payment under subsection (a) shall be paid by the Secretary to the Trump account with respect to which such eligible child is the account beneficiary. </text></subsection> <subsection id="H23053680B6D64D4AB70B4DCED1E02C69"><enum>(c)</enum><header>Eligible child</header><text>For purposes of this section, the term <term>eligible child </term> means a qualifying child (as defined in section 152(c))—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H9CE1EE7DBB9641A5BBDA313059CC553A"><enum>(1)</enum><text display-inline="yes-display-inline">who is born after December 31, 2024, and before January 1, 2029,</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HE80464F38E07467693D5CAF6F756C6D4"><enum>(2)</enum><text display-inline="yes-display-inline">with respect to whom no prior election has been made under this section by such individual or any other individual, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H693695B853DD47239DD2B4DB4B5322E8"><enum>(3)</enum><text display-inline="yes-display-inline">who is a United States citizen.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H1972FB16AB67427D81CD563680B9369B"><enum>(d)</enum><header>Election</header><text>An election under this section shall be made at such time and in such manner as the Secretary shall provide.</text></subsection>
<subsection id="HA3A49697C94E4EA490F8F2F8FE1A0E26"><enum>(e)</enum><header>Social security number required</header>
<paragraph id="H07949926595E424BA38F60789823A59F"><enum>(1)</enum><header>In general</header><text>This section shall not apply to any taxpayer unless such individual includes with the election made under this section the social security number of the eligible child with respect to whom the election is made.</text></paragraph> <paragraph id="HF7F3683F74E54A58B5E53FBABF16B161"><enum>(2)</enum><header>Social security number defined</header><text>For purposes of paragraph (1), the term <term>social security number</term> shall have the meaning given such term in section 24(h)(7), determined by substituting <quote>before the date of the election made under section 6434</quote> for <quote>before the due date of such return</quote> in subparagraph (B) thereof.</text></paragraph></subsection>
<subsection id="H904BF713348F442688D7664F7EC4ACBB"><enum>(f)</enum><header>Exception from reduction or offset</header><text display-inline="yes-display-inline">Any payment made to any individual under this section shall not be—</text> <paragraph id="HD06544807A6A4B4F8D534749F582D8D8"><enum>(1)</enum><text>subject to reduction or offset pursuant to subsection (c), (d), (e), or (f) of section 6402 or any similar authority permitting offset, or</text></paragraph>
<paragraph id="HA121693B31D640E9955DA9C56DBDB53E"><enum>(2)</enum><text>reduced or offset by other assessed Federal taxes that would otherwise be subject to levy or collection.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H68F80FBAFCE94B95BA8C0DC8BA1942E3"><enum>(g)</enum><header>Special rule regarding interest</header><text>The period determined under section 6611(a) with respect to any payment under this section shall not begin before January 1, 2028.</text></subsection>
<subsection id="H2BA41F2F4CFC4693A61F128EBDC4D921"><enum>(h)</enum><header>Mirror Code possessions</header><text>In the case of any possession of the United States with a mirror code tax system (as defined in section 24(k)), this section shall not be treated as part of the income tax laws of the United States for purposes of determining the income tax law of such possession unless such possession elects to have this section be so treated.</text></subsection> <subsection id="H9DA299F533C0453DBA3A0FCAD77E779C"><enum>(i)</enum><header>Definitions</header><text>For purposes of this section, the terms <term>Trump account</term> and <term>account beneficiary</term> have the meaning given such terms in section 530A(b).</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HB791692B50D1458793158FD8B63768E3"><enum>(2)</enum><header>Penalty for negligent claim or fraudulent claim</header><text>Part I of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/68">chapter 68</external-xref> is amended by adding at the end the following new section:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H604C59BEEA1845F9ADAC65A942F01A47"> <section id="HEE0B55740E7146B1B6B3B209DA0BB27E"><enum>6659.</enum><header>Improper claim for Trump account contribution pilot program credit</header> <subsection id="H22D7CC2D6C8B424B8C15A8BC91ACC05B"><enum>(a)</enum><header>In general</header><text>In the case of any individual who makes an election under section 6434 with respect to an individual who is not an eligible child of the taxpayer—</text>
<paragraph id="HFABA70304CF342768C519286C39947A2"><enum>(1)</enum><text>if such election was made due to negligence or disregard of the rules or regulations, there shall be imposed a penalty of $500, or</text></paragraph> <paragraph id="HE2D7A2D2FBC042009435A3C4A9537176"><enum>(2)</enum><text>if such election was made due to fraud, there shall be imposed a penalty of $1,000.</text></paragraph></subsection>
<subsection id="H32E4831A6D5243A19839FA69CDB8FAE5"><enum>(b)</enum><header>Definitions</header>
<paragraph commented="no" display-inline="no-display-inline" id="HC14490DA71494C1D8099A3BB79806F30"><enum>(1)</enum><header>Eligible child</header><text display-inline="yes-display-inline">The term <term>eligible child</term> has the meaning given such term under section 6434.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H6AC6BD62A9B84F128E5BA501D248B8C1"><enum>(2)</enum><header>Negligence; disregard</header><text display-inline="yes-display-inline">The terms <term>negligence</term> and <term>disregard</term> have the same meaning as when such terms are used in section 6662.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HABD84332D54149558C6E6BC758AD0DAB"><enum>(3)</enum><header>Omission of correct social security number treated as mathematical or clerical error</header><text>Section 6213(g)(2), as amended by the preceding provisions of this Act, is amended by striking <quote>and</quote> at the end of subparagraph (Y), by striking the period at the end of subparagraph (Z) and inserting <quote>, and</quote>, and by inserting after subparagraph (Z) the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF1044703C4034D9D9011F0077D234055"> <subparagraph commented="no" display-inline="no-display-inline" id="HF9EE1DD06F974496A48B5F570EBE3E72"><enum>(AA)</enum><text>an omission of a correct social security number required under section 6434(e)(1) (relating to the Trump accounts contribution pilot program).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H8871AC44E7ED4A138979678769821245"><enum>(4)</enum><header>Conforming amendments</header>
<subparagraph id="HC8FD8DFB937040AFB31F235D647338C3"><enum>(A)</enum><text>The table of sections for subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/65">chapter 65</external-xref> is amended by adding at the end the following new item:</text> <quoted-block id="H4125B0A7146B45DE9D97C4C510818149" display-inline="no-display-inline" style="OLC"> <toc regeneration="no-regeneration"> <toc-entry level="section">Sec. 6434. Trump accounts contribution pilot program.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph> <subparagraph id="H53F39E6F37D94A63BC628834686EA56D"><enum>(B)</enum><text>The table of sections for part I of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/68">chapter 68</external-xref> is amended by inserting after the item relating to section 6658 the following new item:</text>
<quoted-block id="H566B7008D6804B71A2A22B2C4E93727A" display-inline="no-display-inline" style="OLC">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 6659. Improper claim for Trump account contribution pilot program credit.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection>
<subsection id="H2D372CD8FF2F4C2091D45BC6D6661D5C"><enum>(e)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection> <subsection id="H221442CAF9624745A228504326C5CD42" commented="no" display-inline="no-display-inline"><enum>(f)</enum><header>Funding</header><text>In addition to amounts otherwise available, there is appropriated to the Department of the Treasury, out of any money in the Treasury not otherwise appropriated, $410,000,000, to remain available until September 30, 2034, to carry out the amendments made by this section. </text></subsection></section></chapter>
<chapter id="HA3F1E0B52CAB4E16BE52D0D235E8238B" style="OLC"><enum>3</enum><header>Establishing certainty and competitiveness for American job creators</header>
<subchapter style="OLC" commented="no" level-type="subsequent" id="H0B0D913C9C404477B1FCCD64C8BE367B"><enum>A</enum><header>Permanent U.S. business tax reform and boosting domestic investment</header>
<section id="H3431B677F5F04A5786EEBFFA134970BE"><enum>70301.</enum><header>Full expensing for certain business property</header>
<subsection id="H30F025CEB4554BCD9EA85F53F5B581BF"><enum>(a)</enum><header>Made permanent</header>
<paragraph id="HCADB0684103145398197B18F735E1D0D"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(A)</external-xref> is amended by adding <quote>and</quote> at the end of clause (i), by striking <quote>, and</quote> at the end of clause (ii) and inserting a period, and by striking clause (iii).</text></paragraph> <paragraph id="HC856E905809849D1840EC8D684405156"><enum>(2)</enum><header>Property with longer production periods</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(B)</external-xref> is amended—</text>
<subparagraph id="H27CB18C740664402854E2F6CBDEAAADA"><enum>(A)</enum><text>in clause (i), by striking subclauses (II) and (III) and redesignating subclauses (IV), (V), and (VI), as subclauses (II), (III), and (IV), respectively, and</text></subparagraph> <subparagraph id="HACDAB4B25958458AA117EA05B4F8179D"><enum>(B)</enum><text>by striking clause (ii) and redesignating clauses (iii) and (iv) as clauses (ii) and (iii), respectively.</text></subparagraph></paragraph>
<paragraph id="H0CB4A96539AF45DB85246848BCD6E9FE"><enum>(3)</enum><header>Self-constructed property</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(E)</external-xref> is amended by striking clause (i) and redesignating clauses (ii) and (iii) as clauses (i) and (ii), respectively.</text></paragraph> <paragraph id="HC1442D6AC53E42748AFD48144063D03C"><enum>(4)</enum><header>Certain plants</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(5)(A)</external-xref> is amended by striking <quote>planted before January 1, 2027, or is grafted before such date to a plant that has already been planted,</quote> in the matter preceding clause (i) and inserting <quote>planted or grafted</quote>.</text></paragraph>
<paragraph id="H08097BA9D57440198C54644F53927C90"><enum>(5)</enum><header>Conforming amendments</header>
<subparagraph id="HDA56E943B4954431BC5C5C1C3E4A380D"><enum>(A)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(A)(ii)</external-xref> is amended by striking <quote>clause (ii) of subparagraph (E)</quote> and inserting <quote>clause (i) of subparagraph (E)</quote>.</text></subparagraph> <subparagraph id="H5D62946B28A94862AB3ADCB6E154AC45"><enum>(B)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(C)(i)</external-xref> is amended by striking <quote>and subclauses (II) and (III) of subparagraph (B)(i)</quote>.</text></subparagraph>
<subparagraph id="H1C07EAABDFE64D12B7DCF4E2E3EEB9B3"><enum>(C)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(C)(ii)</external-xref> is amended by striking <quote>subparagraph (B)(iii)</quote> and inserting <quote>subparagraph (B)(ii)</quote>.</text></subparagraph> <subparagraph id="H16EE985CE9A84AE98F82CD373752B7D5" display-inline="no-display-inline"><enum>(D)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/460">Section 460(c)(6)(B)</external-xref> is amended by striking <quote>which</quote> and all that follows through the period and inserting <quote>which has a recovery period of 7 years or less.</quote>.</text></subparagraph></paragraph></subsection>
<subsection id="H9CF6397623804D3AB20AC019C9D695F9"><enum>(b)</enum><header>100 percent expensing</header>
<paragraph id="H26927FF151B24AD6B22780979B7BB2F9"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)</external-xref> is amended—</text> <subparagraph id="H08D9F39929BF4652954DD024BE3730A5"><enum>(A)</enum><text>in paragraph (1)(A), by striking <quote>the applicable percentage</quote> and inserting <quote>100 percent</quote>, and</text></subparagraph>
<subparagraph id="H2BDA859FB3B947B6A165724BBC3D999A"><enum>(B)</enum><text>by striking paragraphs (6) and (8).</text></subparagraph></paragraph> <paragraph id="H2EE078CE98214D809259C3A56E367606"><enum>(2)</enum><header>Certain plants</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(5)(A)(i)</external-xref> is amended by striking <quote>the applicable percentage</quote> and inserting <quote>100 percent</quote>.</text></paragraph>
<paragraph id="H42DBE900311445F4A83E75BBDBC1CD4F"><enum>(3)</enum><header>Transitional election of reduced percentage</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(10)</external-xref> is amended by striking subparagraph (A), by redesignating subparagraph (B) as subparagraph (C), and by inserting before subparagraph (C) (as so redesignated) the following new subparagraphs:</text> <quoted-block style="OLC" id="H87F4C8B077304D7AB750E457163786DF" display-inline="no-display-inline"> <subparagraph commented="no" display-inline="no-display-inline" id="H0334D0C3AA6C4E38A85417525D69EAF0"><enum>(A)</enum><header>In general</header><text>In the case of qualified property placed in service by the taxpayer during the first taxable year ending after January 19, 2025, if the taxpayer elects to have this paragraph apply for such taxable year, paragraph (1)(A) shall be applied—</text>
<clause id="H3924E6E4F1BE4B3EAC8513E4192EB2A1" commented="no" display-inline="no-display-inline"><enum>(i)</enum><text display-inline="yes-display-inline">in the case of property which is not described in clause (ii), by substituting <quote>40 percent</quote> for <quote>100 percent</quote>, or</text></clause> <clause id="HF0F5D8AA6B814EB987FAEB48319786E9" commented="no" display-inline="no-display-inline"><enum>(ii)</enum><text display-inline="yes-display-inline">in the case of property which is described in subparagraph (B) or (C) of paragraph (2), by substituting <quote>60 percent</quote> for <quote>100 percent</quote>.</text></clause></subparagraph>
<subparagraph id="HD41D46F432D54A9299EBDA289ED3EF16"><enum>(B)</enum><header>Specified plants</header><text display-inline="yes-display-inline">In the case of any specified plant planted or grafted by the taxpayer during the first taxable year ending after January 19, 2025, if the taxpayer elects to have this paragraph apply for such taxable year, paragraph (5)(A)(i) shall be applied by substituting <quote>40 percent</quote> for <quote>100 percent</quote>. </text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H27C2CD9C6970489F9D8B37BC4DAA610E"><enum>(c)</enum><header>Effective date</header> <paragraph commented="no" display-inline="no-display-inline" id="H32B4479F784B4F0F9C59AE87AB58591E"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Except as otherwise provided in this subsection, the amendments made by this section shall apply to property acquired after January 19, 2025.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H1E606AE4DE2C49CF909DF65415201C95"><enum>(2)</enum><header>Specified plants</header><text>Except as provided in paragraph (3), in the case of any specified plant (as defined in <external-xref legal-doc="usc" parsable-cite="usc/26/168">section 168(k)(5)(B)</external-xref> of the Internal Revenue Code of 1986, as amended by this section), the amendments made by this section shall apply to such plants which are planted or grafted after January 19, 2025.</text></paragraph> <paragraph id="H6AB1D395919C45029B5FE80DDDF69D0A"><enum>(3)</enum><header>Transitional election of reduced percentage</header><text>The amendment made by subsection (b)(3) shall apply to taxable years ending after January 19, 2025.</text></paragraph>
<paragraph id="HB3563D9F84FD4DB48A3847C0FE30FBA7"><enum>(4)</enum><header>Acquisition date determination</header><text>For purposes of paragraph (1), property shall not be treated as acquired after the date on which a written binding contract is entered into for such acquisition.</text></paragraph></subsection></section> <section id="H61D7F1F10C9748539D7ED61A79A0B744" commented="no"><enum>70302.</enum><header>Full expensing of domestic research and experimental expenditures</header> <subsection id="HB82B50C15EDE4C17AE153D847CC47FB3" commented="no"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Part VI of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after section 174 the following new section:</text>
<quoted-block style="OLC" id="HD1ED13937C134B3BB8187030A47E37EF" display-inline="no-display-inline">
<section id="HBE0C72CBCC0448F0BCEBF807C389E943" commented="no"><enum>174A.</enum><header>Domestic research or experimental expenditures</header>
<subsection id="H40ECDDE76F9747ECB0E771D1A29AD49B" commented="no"><enum>(a)</enum><header>Treatment as expenses</header><text display-inline="yes-display-inline">Notwithstanding section 263, there shall be allowed as a deduction any domestic research or experimental expenditures which are paid or incurred by the taxpayer during the taxable year.</text></subsection> <subsection id="HFA7D34EAB8554FB6BB7AD188B3809811" commented="no"><enum>(b)</enum><header>Domestic research or experimental expenditures</header><text display-inline="yes-display-inline">For purposes of this section, the term <term>domestic research or experimental expenditures</term> means research or experimental expenditures paid or incurred by the taxpayer in connection with the taxpayer’s trade or business other than such expenditures which are attributable to foreign research (within the meaning of section 41(d)(4)(F)).</text></subsection>
<subsection id="HEF5721925BCA4A62A3591F805F64FD50" commented="no"><enum>(c)</enum><header>Amortization of certain domestic research or experimental expenditures</header>
<paragraph id="H7921E9E8D4E14AA8BCEE0D61E9C06D4A" commented="no"><enum>(1)</enum><header>In general</header><text>At the election of the taxpayer, made in accordance with regulations or other guidance provided by the Secretary, in the case of domestic research or experimental expenditures which would (but for subsection (a)) be chargeable to capital account but not chargeable to property of a character which is subject to the allowance under section 167 (relating to allowance for depreciation, etc.) or section 611 (relating to allowance for depletion), subsection (a) shall not apply and the taxpayer shall—</text> <subparagraph id="H465DB677AC4C48559C9A7E44ED086660" commented="no"><enum>(A)</enum><text>charge such expenditures to capital account, and</text></subparagraph>
<subparagraph id="HD98F2A175F7A461EA64FF999DFE4F383" commented="no"><enum>(B)</enum><text>be allowed an amortization deduction of such expenditures ratably over such period of not less than 60 months as may be selected by the taxpayer (beginning with the month in which the taxpayer first realizes benefits from such expenditures).</text></subparagraph></paragraph> <paragraph id="HFB434DE3337640FD9CC0549900B1336B" commented="no"><enum>(2)</enum><header>Time for and scope of election</header><text>The election provided by paragraph (1) may be made for any taxable year, but only if made not later than the time prescribed by law for filing the return for such taxable year (including extensions thereof). The method so elected, and the period selected by the taxpayer, shall be adhered to in computing taxable income for the taxable year for which the election is made and for all subsequent taxable years unless, with the approval of the Secretary, a change to a different method (or to a different period) is authorized with respect to part or all of such expenditures. The election shall not apply to any expenditure paid or incurred during any taxable year before the taxable year for which the taxpayer makes the election.</text></paragraph></subsection>
<subsection id="H0DEC0A30F759429CB0482C269760C2A9" commented="no"><enum>(d)</enum><header>Special rules</header>
<paragraph id="H71796F381C01462385DC9831E202C42A" commented="no"><enum>(1)</enum><header>Land and other property</header><text>This section shall not apply to any expenditure for the acquisition or improvement of land, or for the acquisition or improvement of property to be used in connection with the research or experimentation and of a character which is subject to the allowance under section 167 (relating to allowance for depreciation, etc.) or section 611 (relating to allowance for depletion); but for purposes of this section allowances under section 167, and allowances under section 611, shall be considered as expenditures.</text></paragraph> <paragraph id="HA7A1ECAF72D64D95A93FF5360A167B9B" commented="no"><enum>(2)</enum><header>Exploration expenditures</header><text>This section shall not apply to any expenditure paid or incurred for the purpose of ascertaining the existence, location, extent, or quality of any deposit of ore or other mineral (including oil and gas).</text></paragraph>
<paragraph id="H81BD2EC236BE4A0A82670E37CAF0DA32" commented="no"><enum>(3)</enum><header>Software development</header><text>For purposes of this section, any amount paid or incurred in connection with the development of any software shall be treated as a research or experimental expenditure.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H15D5FFCBC72344AC8DCE013BC15B40A8" commented="no"><enum>(b)</enum><header>Coordination with certain other provisions</header> <paragraph commented="no" display-inline="no-display-inline" id="H1FAC6EC19A4940B2B1AA1D273B4F6E0F"><enum>(1)</enum><header display-inline="yes-display-inline">Foreign research expenses</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/174">Section 174</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HDF2C8ADDE4C64048A3A8267755E4F540"><enum>(A)</enum><text display-inline="yes-display-inline">in subsection (a)—</text> <clause commented="no" display-inline="no-display-inline" id="H7E6FD0468D634A768A97F73B81017B7D"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>a taxpayer's specified research or experimental expenditures</quote> and inserting <quote>a taxpayer's foreign research or experimental expenditures</quote>, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H0FFE3C88509341199FA40C80A5C21DEB"><enum>(ii)</enum><text display-inline="yes-display-inline">by striking <quote>over the 5-year period (15-year period in the case of any specified research or experimental expenditures which are attributable to foreign research (within the meaning of section 41(d)(4)(F)))</quote> in paragraph (2)(B) and inserting <quote>over the 15-year period</quote>,</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H2A067D722AF04475AF4C3292F2371149"><enum>(B)</enum><text display-inline="yes-display-inline">in subsection (b)—</text>
<clause commented="no" display-inline="no-display-inline" id="HA9E30E250858440EB2AFA170D599D73D"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>specified research</quote> and inserting <quote>foreign research</quote>,</text></clause> <clause commented="no" display-inline="no-display-inline" id="HE8E0B922A6B745C3A34941EF1D64F05F"><enum>(ii)</enum><text>by inserting <quote>and which are attributable to foreign research (within the meaning of section 41(d)(4)(F))</quote> before the period at the end, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H38E143904F5D41F893215411DE89B563"><enum>(iii)</enum><text>by striking <quote><header-in-text style="OLC" level="subsection">specified</header-in-text></quote> in the heading thereof and inserting <quote><header-in-text style="OLC" level="subsection">foreign</header-in-text></quote>, and</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H0AA57F852E9243408629733C82B430EB"><enum>(C)</enum><text display-inline="yes-display-inline">in subsection (d)—</text>
<clause commented="no" display-inline="no-display-inline" id="HF6A94F0E40944EDE99048D03C8FEA995"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>specified research or experimental expenditures</quote> and inserting <quote>foreign research or experimental expenditures</quote>, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H267DAF511C4F4868B61C96B65921FE72"><enum>(ii)</enum><text display-inline="yes-display-inline">by inserting <quote>or reduction to amount realized</quote> after <quote>no deduction</quote>.</text></clause></subparagraph></paragraph>
<paragraph id="H395253C52EA14F7B8AE368994BCADB98" commented="no"><enum>(2)</enum><header>Research credit</header>
<subparagraph id="H10D1478A66E2438CB9F26485F973F9E7" commented="no"><enum>(A)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/41">Section 41(d)(1)(A)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HA20B57AEF01049ACB8B5940CF77B28C6"> <subparagraph commented="no" display-inline="no-display-inline" id="H6C6947E58B284FDE91765FE84893C7A4"><enum>(A)</enum><text display-inline="yes-display-inline">with respect to which expenditures are treated as domestic research or experimental expenditures under section 174A,</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="HF574163F547D4B468A41B68F3A0DF09C" commented="no"><enum>(B)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/280C">Section 280C(c)(1)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" id="HF64B9379409C476E88F9EF4F91376D1C" display-inline="no-display-inline"> <paragraph id="H84CBABA372ED460A9304C3BD2C387CA2" commented="no"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The domestic research or experimental expenditures (as defined in section 174A(b)) otherwise taken into account as a deduction or charged to capital account under this chapter shall be reduced by the amount of the credit allowed under section 41(a).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HEF976638C36C4C189E7C0AE148D2FC65" commented="no"><enum>(3)</enum><header>AMT adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/56">Section 56(b)(2)</external-xref> is amended—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H3710828E8DED4326A85119390409AE63"><enum>(A)</enum><text display-inline="yes-display-inline">in subparagraph (A)—</text>
<clause id="HF422814F20864F63BABC50868278ED8F"><enum>(i)</enum><text>by striking <quote>or 174(a)</quote> in the matter preceding clause (i) and inserting <quote>, 174(a), or 174A(a)</quote>, and</text></clause> <clause id="H28E25650B4844907BA0DC32CC53418F8" commented="no" display-inline="no-display-inline"><enum>(ii)</enum><text>by striking <quote>research and experimental expenditures described in section 174(a)</quote> in clause (ii) thereof and inserting <quote>foreign research or experimental expenditures described in section 174(a) and domestic research or experimental expenditures in section 174A(a)</quote>, and</text></clause></subparagraph>
<subparagraph id="HE9FD95EA40924D65A127BDEBB8DE2DAE"><enum>(B)</enum><text>in subparagraph (C), by inserting <quote>or 174A(a)</quote> after <quote>174(a)</quote>.</text></subparagraph></paragraph> <paragraph id="H7AA46F3655854441BF6A148061E4A347" commented="no"><enum>(4)</enum><header>Optional 10-year writeoff</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/59">Section 59(e)(2)(B)</external-xref> is amended by striking <quote>section 174(a) (relating to research and experimental expenditures)</quote> and inserting <quote>section 174A(a) (relating to domestic research or experimental expenditures)</quote>.</text></paragraph>
<paragraph id="HC1C1204ADDAD42AAB3B747691C74772E" commented="no"><enum>(5)</enum><header>Qualified small issue bonds</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/144">Section 144(a)(4)(C)(iv)</external-xref> is amended by striking <quote>174(a)</quote> and inserting <quote>174A(a)</quote>.</text></paragraph> <paragraph id="HE9BD3706E2F4494DBBD118891E98DA54" commented="no"><enum>(6)</enum><header>Start-up expenditures</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/195">Section 195(c)(1)</external-xref> is amended by striking <quote>or 174</quote> in the last sentence and inserting <quote>174, or 174A</quote>.</text></paragraph>
<paragraph id="H402661DEDD584504B7338F8A0D8EE44D" commented="no"><enum>(7)</enum><header>Capital expenditures</header>
<subparagraph id="H75331935BA004BA79056431BD8244177" commented="no"><enum>(A)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/263">Section 263(a)(1)(B)</external-xref> is amended by inserting <quote>or 174A</quote> after <quote>174</quote>.</text></subparagraph> <subparagraph id="H3D739F48BA524F929F21CDE761A21691" commented="no"><enum>(B)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/263A">Section 263A(c)(2)</external-xref> is amended by inserting <quote>or 174A</quote> after <quote>174</quote>. </text></subparagraph></paragraph>
<paragraph id="HEC8D9AB0FD464AC39F99945D70BCA355" commented="no"><enum>(8)</enum><header>Active business computer software royalties</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/543">Section 543(d)(4)(A)(i)</external-xref> is amended by inserting <quote>174A,</quote> after <quote>174,</quote>. </text></paragraph> <paragraph id="H5E477DBAFDF149C8AA9D0A36AE7C973C" commented="no"><enum>(9)</enum><header>Source rules</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/864">Section 864(g)(2)</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H4FE4B471B7714862AF574B17CF22D557"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>research and experimental expenditures within the meaning of section 174</quote> in the first sentence and inserting <quote>foreign research or experimental expenditures within the meaning of section 174 or domestic research or experimental expenditures within the meaning of section 174A</quote>, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HE299119590964BC0AE2AA121D9021DD6"><enum>(B)</enum><text display-inline="yes-display-inline">in the last sentence—</text>
<clause id="H56FA74D4EAA74B0DB2CEA81D19076986" commented="no"><enum>(i)</enum><text>by striking <quote>treated as deferred expenses under subsection (b) of section 174</quote> and inserting <quote>allowed as an amortization deduction under section 174(a) or section 174A(c),</quote>, and</text></clause> <clause id="H2E56B447E5AF442894C305D8B1614E11" commented="no"><enum>(ii)</enum><text>by striking <quote>such subsection</quote> and inserting <quote>such section (as the case may be)</quote>. </text></clause></subparagraph></paragraph>
<paragraph id="H1DF5D50DD75F4B7BA8116F141A710535" commented="no"><enum>(10)</enum><header>Basis adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1016">Section 1016(a)(14)</external-xref> is amended by striking <quote>deductions as deferred expenses under section 174(b)(1) (relating to research and experimental expenditures)</quote> and inserting <quote>deductions under section 174 or 174A(c)</quote>.</text></paragraph> <paragraph id="HA5E09AAB51284775AB9D454ECD784672" commented="no"><enum>(11)</enum><header>Small business stock</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1202">Section 1202(e)(2)(B)</external-xref> is amended by striking <quote>which may be treated as research and experimental expenditures under section 174</quote> and inserting <quote>which are treated as foreign research or experimental expenditures under section 174 or domestic research or experimental expenditures under section 174A</quote>.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H778BC0BC24BC4976BB3C479EF36511B2"><enum>(c)</enum><header>Change in method of accounting</header>
<paragraph commented="no" display-inline="no-display-inline" id="H8373967B275A44418BA745F01728C7FB"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The amendments made by subsection (a) shall be treated as a change in method of accounting for purposes of <external-xref legal-doc="usc" parsable-cite="usc/26/481">section 481</external-xref> of the Internal Revenue Code of 1986 and—</text> <subparagraph id="HF7BF953ADF3D4343A0F5EFAF09D39AF8"><enum>(A)</enum><text>such change shall be treated as initiated by the taxpayer,</text></subparagraph>
<subparagraph id="HB3C1F9A8C438433A99BADD3F00B854A4"><enum>(B)</enum><text>such change shall be treated as made with the consent of the Secretary, and</text></subparagraph> <subparagraph id="H11FF987C610D4E92B37CA42A6B82F58A"><enum>(C)</enum><text>such change shall be applied only on a cut-off basis for any domestic research or experimental expenditures (as defined in section 174A(b) of such Code (as added by this section) and determined by applying the rules of section 174A(d) of such Code) paid or incurred in taxable years beginning after December 31, 2024, and no adjustments under section 481(a) shall be made.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H947860D4883E4F249EFE3B86A2904563"><enum>(2)</enum><header>Special rules</header><text>In the case of a taxable year which begins after December 31, 2024, and ends before the date of the enactment of this Act—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H6BBB18AC26CB4B7F9871A159E11F1FA2"><enum>(A)</enum><text display-inline="yes-display-inline">paragraph (1)(C) shall not apply, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H8679ED33EF654F469EC1E89C8FD40B81"><enum>(B)</enum><text display-inline="yes-display-inline">the change in method of accounting under paragraph (1) shall be applied on a modified cut-off basis, taking into account for purposes of section 481(a) of such Code only the domestic research or experimental expenditures (as defined in section 174A(b) of such Code (as added by this section) and determined by applying the rules of section 174A(d) of such Code) paid or incurred in such taxable year but not allowed as a deduction in such taxable year. </text></subparagraph></paragraph></subsection> <subsection id="H024F8C3B57314477A0AED3F522569134" commented="no"><enum>(d)</enum><header>Clerical amendment</header><text display-inline="yes-display-inline">The table of sections for part VI of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after the item relating to section 174 the following new item:</text>
<quoted-block style="OLC" id="H32ACBF106FA0431A9BE3554B1CEC130C" display-inline="no-display-inline">
<toc container-level="quoted-block-container" quoted-block="no-quoted-block" lowest-level="section" idref="HD1ED13937C134B3BB8187030A47E37EF" regeneration="yes-regeneration" lowest-bolded-level="division-lowest-bolded">
<toc-entry idref="HBE0C72CBCC0448F0BCEBF807C389E943" level="section">Sec. 174A. Domestic research or experimental expenditures.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HD28A1D4F858E43CA96412F733BC06BBA" commented="no"><enum>(e)</enum><header>Effective date</header>
<paragraph id="HB36983E520E64FDFAA2A8931EC9995A0" commented="no"><enum>(1)</enum><header>In general</header><text>Except as otherwise provided in this subsection or subsection (f)(1), the amendments made by this section shall apply to amounts paid or incurred in taxable years beginning after December 31, 2024.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H1FCADB6BB90A47A184D6C4A3DFFDA932"><enum>(2)</enum><header>Treatment of foreign research or experimental expenditures upon disposition</header> <subparagraph commented="no" display-inline="no-display-inline" id="H2F6ADFB5B2DA48DA8CB4A8E468499BA3"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>The amendment by subsection (b)(1)(C)(ii) shall apply to property disposed, retired, or abandoned after May 12, 2025.</text></subparagraph>
<subparagraph id="H6751C5B59A314F3AA0B0177AED9830B0" commented="no"><enum>(B)</enum><header>No inference</header><text display-inline="yes-display-inline">The amendment made by subsection (b)(1)(C)(ii) shall not be construed to create any inference with respect to the proper application of <external-xref legal-doc="usc" parsable-cite="usc/26/174">section 174(d)</external-xref> of the Internal Revenue Code of 1986 with respect to taxable years beginning before May 13, 2025.</text></subparagraph></paragraph> <paragraph id="HC2A0CFB63C5045228478EDB8DFB92892" commented="no"><enum>(3)</enum><header>Coordination with research credit</header><text>The amendment made by subsection (b)(2)(B) shall apply to taxable years beginning after December 31, 2024.</text></paragraph>
<paragraph id="H16E8B9B43DA447A18414BDD98B3997B6" commented="no"><enum>(4)</enum><header>No inference with respect to coordination with research credit for prior periods</header><text display-inline="yes-display-inline">The amendment made by subsection (b)(2)(B) shall not be construed to create any inference with respect to the proper application of <external-xref legal-doc="usc" parsable-cite="usc/26/280C">section 280C(c)</external-xref> of the Internal Revenue Code of 1986 with respect to taxable years beginning before January 1, 2025.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H50E2BDF4690F49C9941E59807D974A78"><enum>(f)</enum><header>Transition rules</header> <paragraph commented="no" display-inline="no-display-inline" id="H77D1801BE7B44A21BCD837F09E2CC9C1"><enum>(1)</enum><header display-inline="yes-display-inline">Election for retroactive application by certain small businesses</header> <subparagraph commented="no" display-inline="no-display-inline" id="HDE25687E71FF403CA454F632BDBF48E1"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">At the election of an eligible taxpayer, paragraphs (1) and (3) of subsection (e) shall each be applied by substituting <quote>December 31, 2021</quote> for <quote>December 31, 2024</quote>. An election made under this subparagraph shall be made in such manner as the Secretary may provide and not later than the date that is 1 year after the date of the enactment of this Act. The taxpayer shall file an amended return for each taxable year affected by such election.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HEFF9D2ED98324E05A19DB6D9A87F769C"><enum>(B)</enum><header>Eligible taxpayer</header><text display-inline="yes-display-inline">For purposes of this paragraph, the term <term>eligible taxpayer</term> means any taxpayer (other than a tax shelter prohibited from using the cash receipts and disbursements method of accounting under section 448(a)(3)) which meets the gross receipts test of section 448(c) for the first taxable year beginning after December 31, 2024.</text></subparagraph> <subparagraph id="HDDEDDDCE99874982B61AC98D6EC0B995" commented="no"><enum>(C)</enum><header>Election treated as change in method of accounting</header><text>In the case of any taxpayer which elects the application of subparagraph (A)—</text>
<clause id="H9B90B48A2A9B4FB5B6A3A3148F22D417" commented="no"><enum>(i)</enum><text>such election may be treated as a change in method of accounting for purposes of section 481 of such Code for the taxpayer’s first taxable year affected by such election,</text></clause> <clause id="H7A7C0E2C76734B0C95DFD6B14CCB49E0" commented="no"><enum>(ii)</enum><text>such change shall be treated as initiated by the taxpayer for such taxable year,</text></clause>
<clause id="H430721B3D4DE40C1B40D1F801425A400" commented="no"><enum>(iii)</enum><text>such change shall be treated as made with the consent of the Secretary, and</text></clause> <clause id="H07CB66BAD9F843EB87B75E75E104CC08" commented="no"><enum>(iv)</enum><text>subsection (c) shall not apply to such taxpayer.</text></clause></subparagraph>
<subparagraph id="H123058B03D6444578F3D785F4F8FCC50" commented="no" display-inline="no-display-inline"><enum>(D)</enum><header>Election regarding coordination with research credit</header><text>An election under <external-xref legal-doc="usc" parsable-cite="usc/26/280C">section 280C(c)(2)</external-xref> of the Internal Revenue Code of 1986 (or revocation of such election) for any taxable year beginning after December 31, 2021, by an eligible taxpayer making an election under subparagraph (A) shall not fail to be treated as timely made (or as made on the return) if made during the 1-year period beginning on the date of the enactment of this Act on an amended return for such taxable year. </text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA537A7C67C9C431FBE3CA1D503889640"><enum>(2)</enum><header display-inline="yes-display-inline">Election to deduct certain unamortized amounts paid or incurred in taxable years beginning before January 1, 2025</header> <subparagraph commented="no" display-inline="no-display-inline" id="HE3CAD05F40DA4C7A8E8A6E1F169CED34"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of any domestic research or experimental expenditures (as defined in section 174A, as added by subsection (a)) which are paid or incurred in taxable years beginning after December 31, 2021, and before January 1, 2025, and which was charged to capital account, a taxpayer may elect—</text>
<clause commented="no" display-inline="no-display-inline" id="H391ED8A3FF024F38B0AA4ECB4C4ACF54"><enum>(i)</enum><text display-inline="yes-display-inline">to deduct any remaining unamortized amount with respect to such expenditures in the first taxable year beginning after December 31, 2024, or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H3458411E93454D348784BB33B71894CC"><enum>(ii)</enum><text>to deduct such remaining unamortized amount with respect to such expenditures ratably over the 2-taxable year period beginning with the first taxable year beginning after December 31, 2024.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HAE7350CF59464C3995A29B3DF0BB5AA9"><enum>(B)</enum><header>Change in method of accounting</header><text>In the case of a taxpayer who makes an election under this paragraph—</text> <clause commented="no" display-inline="no-display-inline" id="HC9ED78A8889B47E0A07A58F80B0ACE09"><enum>(i)</enum><text display-inline="yes-display-inline">such taxpayer shall be treated as initiating a change in method of accounting for purposes of <external-xref legal-doc="usc" parsable-cite="usc/26/481">section 481</external-xref> of the Internal Revenue Code of 1986 with respect to the expenditures to which the election applies, </text></clause>
<clause id="HA8C1DED2EAB648819DFA15759698FFAF" commented="no"><enum>(ii)</enum><text>such change shall be treated as made with the consent of the Secretary, and</text></clause> <clause id="H0C6393C82FDD42028E69643A46104386" commented="no"><enum>(iii)</enum><text>such change shall be applied only on a cut-off basis for such expenditures and no adjustments under section 481(a) shall be made.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H72D6914374ED430F9BC838DB0DF1BDE4"><enum>(C)</enum><header>Regulations</header><text>The Secretary of the Treasury (or the Secretary’s delegate) shall publish such guidance or regulations as may be necessary to carry out the purposes of this paragraph, including regulations or guidance allowing for the deduction allowed under subparagraph (A) in the case of taxpayers with taxable years beginning after December 31, 2024, and ending before the date of the enactment of this Act.</text></subparagraph></paragraph></subsection></section> <section id="HBFD83D672DEF4B97A956EDD6412A146B"><enum>70303.</enum><header>Modification of limitation on business interest</header> <subsection id="H6647E3BF66D6467182661CC59EFC3EC4"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/163">Section 163(j)(8)(A)(v)</external-xref> is amended by striking <quote>in the case of taxable years beginning before January 1, 2022,</quote>.</text></subsection>
<subsection id="H9A8F3476200241B48F1E5924F07F00C0"><enum>(b)</enum><header>Floor plan financing applicable to certain trailers and campers</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/163">Section 163(j)(9)(C)</external-xref> is amended by adding at the end the following new flush sentence:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H1B78AA2B185D482E891D5A9AE1CFF499"> <quoted-block-continuation-text quoted-block-continuation-text-level="subparagraph">Such term shall also include any trailer or camper which is designed to provide temporary living quarters for recreational, camping, or seasonal use and is designed to be towed by, or affixed to, a motor vehicle.</quoted-block-continuation-text><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H42F16A8D97A4439C9C2A2A55CC578F79"><enum>(c)</enum><header>Effective date and special rule</header> <paragraph commented="no" display-inline="no-display-inline" id="HC058282466314F20B94A90A0B7FD8323"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></paragraph>
<paragraph id="HC286A55F9234475DA4185484B532D7FF"><enum>(2)</enum><header>Special rule for short taxable years</header><text>The Secretary of the Treasury (or the Secretary's delegate) may prescribe such rules as are necessary or appropriate to provide for the application of the amendments made by this section in the case of any taxable year of less than 12 months that begins after December 31, 2024, and ends before the date of the enactment of this Act.</text></paragraph></subsection></section> <section id="H9BA2C1D6233D41769EEEFEDAFDD04D5F"><enum>70304.</enum><header>Extension and enhancement of paid family and medical leave credit</header> <subsection id="HA95CB346CF734A5FAF78041A3C6A6BE8"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45S">Section 45S</external-xref> is amended—</text>
<paragraph id="HEC5CA822B8244759B00E11CBA16A1478"><enum>(1)</enum><text>in subsection (a)—</text> <subparagraph id="H7AFB491D4DCB4C4E93E48CEC4D35BB82"><enum>(A)</enum><text>by striking paragraph (1) and inserting the following:</text>
<quoted-block id="H4027701C73BE43DE948AFF74BC05FD2A" display-inline="no-display-inline" style="OLC">
<paragraph id="H997F64D3F7E74BA1B742A806B77E9D68"><enum>(1)</enum><header>In general</header><text>For purposes of section 38, in the case of an eligible employer, the paid family and medical leave credit is an amount equal to either of the following (as elected by such employer):</text> <subparagraph id="H2E801D5A970C46478457D224A2D8BCF0"><enum>(A)</enum><text>The applicable percentage of the amount of wages paid to qualifying employees with respect to any period in which such employees are on family and medical leave.</text></subparagraph>
<subparagraph id="H43D8B7ACD6EA4C698D807B485BCA34DD"><enum>(B)</enum><text>If such employer has an insurance policy with regards to the provision of paid family and medical leave which is in force during the taxable year, the applicable percentage of the total amount of premiums paid or incurred by such employer during such taxable year with respect to such insurance policy.</text></subparagraph></paragraph><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="HDA4E09C2519542EDAABBFB22CFE450C5"><enum>(B)</enum><text>by adding at the end the following:</text>
<quoted-block id="H7AFA8A6455984635BC0BAE054127C66B" display-inline="no-display-inline" style="OLC">
<paragraph id="H991A0D3507E24BE1BF315C47FADD1269"><enum>(3)</enum><header>Rate of payment determined without regard to whether leave is taken</header><text>For purposes of determining the applicable percentage with respect to paragraph (1)(B), the rate of payment under the insurance policy shall be determined without regard to whether any qualifying employees were on family and medical leave during the taxable year.</text></paragraph><after-quoted-block>,</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="HAC564013778243BA85CF2780479D47C3"><enum>(2)</enum><text>in subsection (b)(1), by striking <quote>credit allowed</quote> and inserting <quote>wages taken into account</quote>,</text></paragraph>
<paragraph id="HF19EBE3E79C743D4800E54C3FA17AA99"><enum>(3)</enum><text>in subsection (c), by striking paragraphs (3) and (4) and inserting the following:</text> <quoted-block id="H2177C4A06BD84BF3AFAF0FD972ACCC20" display-inline="no-display-inline" style="OLC"> <paragraph id="HB68215D38A134F9E8927056DADF8C847"><enum>(3)</enum><header>Aggregation rule</header> <subparagraph id="H153F5F41E28743E4AEBEF8F2554DE9AE"><enum>(A)</enum><header>In general</header><text>Except as provided in subparagraph (B), all persons which are treated as a single employer under subsections (b) and (c) of section 414 shall be treated as a single employer.</text></subparagraph>
<subparagraph id="HB947D1C868CC413DB1321C040C39D531"><enum>(B)</enum><header>Exception</header>
<clause id="H82DC45B161DB42FE865A22EA1FC4B3B9"><enum>(i)</enum><header>In general</header><text>Subparagraph (A) shall not apply to any person who establishes to the satisfaction of the Secretary that such person has a substantial and legitimate business reason for failing to provide a written policy described in paragraph (1) or (2).</text></clause> <clause id="H2F6BA708DF45444F9C8B24DD4B064268"><enum>(ii)</enum><header>Substantial and legitimate business reason</header><text>For purposes of clause (i), the term <term>substantial and legitimate business reason</term> shall not include the operation of a separate line of business, the rate of wages or category of jobs for employees (or any similar basis), or the application of State or local laws relating to family and medical leave, but may include the grouping of employees of a common law employer.</text></clause></subparagraph></paragraph>
<paragraph id="HEE3E60DC5F39427385BE7FB0E81536A2"><enum>(4)</enum><header>Treatment of benefits mandated or paid for by State or local governments</header><text>For purposes of this section, any leave which is paid by a State or local government or required by State or local law—</text> <subparagraph id="HD8987DCEF41944E9A4D9956B3BD7B19A"><enum>(A)</enum><text>except as provided in subparagraph (B), shall be taken into account in determining the amount of paid family and medical leave provided by the employer, and</text></subparagraph>
<subparagraph id="H697286B9BC024E3DB472FB3407D07A93"><enum>(B)</enum><text>shall not be taken into account in determining the amount of the paid family and medical leave credit under subsection (a).</text></subparagraph></paragraph><after-quoted-block>,</after-quoted-block></quoted-block></paragraph> <paragraph id="H33FFFED6E0934D28A39F161C48A50A57"><enum>(4)</enum><text>in subsection (d)—</text>
<subparagraph id="HBB964DE95BDF4B81B2FDBC3CD049B888"><enum>(A)</enum><text>in paragraph (1), by inserting <quote>(or, at the election of the employer, for not less than 6 months)</quote> after <quote>1 year or more</quote>, </text></subparagraph> <subparagraph id="HD079DEEF5DA44C508430F889A6B4304D"><enum>(B)</enum><text>in paragraph (2)—</text>
<clause id="H99651A0F9FBB4896A1B3B00603F6B9B2"><enum>(i)</enum><text>by inserting <quote>, as determined on an annualized basis (pro-rata for part-time employees),</quote> after <quote>compensation</quote>, and</text></clause> <clause id="H06A53AF75A9B425B84633B35748E1D9F"><enum>(ii)</enum><text>by striking the period at the end and inserting <quote>, and</quote>, and</text></clause></subparagraph>
<subparagraph id="HD9CF47B30E6C4A9881B81ECD2BF3913C"><enum>(C)</enum><text>by adding at the end the following:</text> <quoted-block id="H4343D831F8614D2E859D2C4E0133B353" display-inline="no-display-inline" style="OLC"> <paragraph id="HE62F3D0865254293BAC27D3A85CC86EA"><enum>(3)</enum><text>is customarily employed for not less than 20 hours per week.</text></paragraph><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="H60D99F567CFA4924B302C5D589036CD0"><enum>(5)</enum><text>by striking subsection (i).</text></paragraph></subsection> <subsection id="HC93D0E30EB284D7A96050D37C2B6895F"><enum>(b)</enum><header>No double benefit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/280C">Section 280C(a)</external-xref> is amended—</text>
<paragraph id="HBC4F973D56BC40A39385647360C5672D"><enum>(1)</enum><text>by striking <quote>45S(a)</quote> and inserting <quote>45S(a)(1)(A)</quote>, and</text></paragraph> <paragraph id="H15E2315E37D34ADE9578F6708780CDC5"><enum>(2)</enum><text>by inserting after the first sentence the following: <quote>No deduction shall be allowed for that portion of the premiums paid or incurred for the taxable year which is equal to that portion of the paid family and medical leave credit which is determined for the taxable year under section 45S(a)(1)(B).</quote>.</text></paragraph></subsection>
<subsection id="HECB37E1BE07A4E35A185B409A16E4C88"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="HA047F4109EF442B791EB8EF8E4C557B1"><enum>70305.</enum><header>Exceptions from limitations on deduction for business meals</header> <subsection id="H2094410EA77A4A9F8A352E0FEEC66208"><enum>(a)</enum><header>Exception to denial of deduction for business meals</header><text>Section 274(o), as added by section 13304 of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref>, is amended by striking <quote>No deduction</quote> and inserting <quote>Except in the case of an expense described in subsection (e)(8) or (n)(2)(C), no deduction</quote>.</text></subsection>
<subsection id="HEA7B673D14FE4506BC2CA95323101F68"><enum>(b)</enum><header>Meals provided on certain fishing boats and at certain fish processing facilities not subject to 50 percent limitation</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/274">Section 274(n)(2)(C)</external-xref> of the Internal Revenue Code of 1986 is amended by striking <quote>or</quote> at the end of clause (iii) and by adding at the end the following new clause:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H52E8E5D06E4C4CFAB3C9076A9DEB29D2"> <clause id="HE659A029F8904ECA899832F067A79D7B"><enum>(v)</enum><text display-inline="yes-display-inline">provided—</text>
<subclause id="HF5CFC991A4964E6DADB785F70CCC6D4B"><enum>(I)</enum><text>on a fishing vessel, fish processing vessel, or fish tender vessel (as such terms are defined in section 2101 of title 46, United States Code), or</text></subclause> <subclause id="H6D61FF18E3B24663A9278122B8474273"><enum>(II)</enum><text>at a facility for the processing of fish for commercial use or consumption which—</text>
<item commented="no" display-inline="no-display-inline" id="HC867AC52D92443E78639BA97B5652AB5"><enum>(aa)</enum><text display-inline="yes-display-inline">is located in the United States north of 50 degrees north latitude, and </text></item> <item commented="no" display-inline="no-display-inline" id="H50A41AF683D348AE9099F0761F29556C"><enum>(bb)</enum><text display-inline="yes-display-inline">is not located in a metropolitan statistical area (within the meaning of section 143(k)(2)(B)), or</text></item></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H1A2F0F0255BC40809840C0BC3EB1251B"><enum>(c)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to amounts paid or incurred after December 31, 2025.</text></subsection></section> <section id="HCB131D4E4C82433B89E42D99B7FB5411"><enum>70306.</enum><header>Increased dollar limitations for expensing of certain depreciable business assets</header> <subsection id="HD505D6C2593E406C82C4790E2110194E"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/179">Section 179(b)</external-xref> is amended—</text>
<paragraph id="H9635BA84F51F4E1484030FCF8FE9EA5B"><enum>(1)</enum><text>in paragraph (1), by striking <quote>$1,000,000</quote> and inserting <quote>$2,500,000</quote>, and</text></paragraph> <paragraph id="H91E15D636F574B908009AB5F62336692"><enum>(2)</enum><text>in paragraph (2), by striking <quote>$2,500,000</quote> and inserting <quote>$4,000,000</quote>.</text></paragraph></subsection>
<subsection id="H3917CD002F8A4D1AB06CE8BEC9C65FD5"><enum>(b)</enum><header>Conforming amendments</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/179">Section 179(b)(6)(A)</external-xref> is amended—</text> <paragraph id="HA7159ECE93834756A1C4A915345059A1"><enum>(1)</enum><text>by inserting <quote>(2025 in the case of the dollar amounts in paragraphs (1) and (2))</quote> after <quote>In the case of any taxable year beginning after 2018</quote>, and</text></paragraph>
<paragraph id="H9A296DB67BF14B6CA47A2D346CBB6D38"><enum>(2)</enum><text>in clause (ii), by striking <quote>determined by substituting <quote>calendar year 2017</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</quote> and inserting "determined by substituting in subparagraph (A)(ii) thereof—</text> <quoted-block id="HAA84F8BEE63D412291F382BD6B28852A" display-inline="yes-display-inline" style="OLC"> <subclause id="H132B0C4ECFDC4BBAA24744D89B273ACB"><enum>(I)</enum><text>in the case of amounts in paragraphs (1) and (2), <quote>calendar year 2024</quote> for <quote>calendar year 2016</quote>, and</text></subclause>
<subclause id="HEAF438E63A724E5CBE0D66DD3A4BC786"><enum>(II)</enum><text>in the case of the amount in paragraph (5)(A), <quote>calendar year 2017</quote> for <quote>calendar year 2016</quote>.</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HE45449339DA44F34B7765C9A3AFCF057"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to property placed in service in taxable years beginning after December 31, 2024.</text></subsection></section>
<section id="HFE5672670E604A94920DD08EB95F4E12"><enum>70307.</enum><header>Special depreciation allowance for qualified production property</header>
<subsection id="H6F8368EA77AA4B3E999C277BD835CF61"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168</external-xref> is amended by adding at the end the following new subsection:</text> <quoted-block id="H53F021F157AD4FBE9085F77EC05533F7" display-inline="no-display-inline" style="OLC"> <subsection id="H222295A111B74237921B522EF4AD1B2B"><enum>(n)</enum><header>Special allowance for qualified production property</header> <paragraph id="H7C2D806DB3464DBEB0DAD975054EC36F"><enum>(1)</enum><header>In general</header><text>In the case of any qualified production property of a taxpayer making an election under this subsection—</text>
<subparagraph id="H7E41DE553B0F4E98935B53FBC8540A40"><enum>(A)</enum><text>the depreciation deduction provided by section 167(a) for the taxable year in which such property is placed in service shall include an allowance equal to 100 percent of the adjusted basis of the qualified production property, and</text></subparagraph> <subparagraph id="HC56017C1F4E44E40833D3A2DF7AC9ED1"><enum>(B)</enum><text>the adjusted basis of the qualified production property shall be reduced by the amount of such deduction before computing the amount otherwise allowable as a depreciation deduction under this chapter for such taxable year and any subsequent taxable year.</text></subparagraph></paragraph>
<paragraph id="HA166D2914EF34A09B0679CA732B691C9"><enum>(2)</enum><header>Qualified production property</header><text>For purposes of this subsection—</text> <subparagraph id="HE2BDF479F2F143EFBDF116199827C749"><enum>(A)</enum><header>In general</header><text>The term <term>qualified production property</term> means that portion of any nonresidential real property—</text>
<clause id="HEDA011A172E549CE99DB9E1097AB2E24"><enum>(i)</enum><text>to which this section applies,</text></clause> <clause id="HE055B7105A6A4B1F94671DACE6820935"><enum>(ii)</enum><text>which is used by the taxpayer as an integral part of a qualified production activity,</text></clause>
<clause id="HB033130D8C5745DB92CABA4AA073BE02"><enum>(iii)</enum><text>which is placed in service in the United States or any possession of the United States,</text></clause> <clause id="H349EADF0CB61449E9D9806A3D2513762"><enum>(iv)</enum><text>the original use of which commences with the taxpayer,</text></clause>
<clause id="H54B179C481C84A5E858773FFF42222F2"><enum>(v)</enum><text>the construction of which begins after January 19, 2025, and before January 1, 2029,</text></clause> <clause id="H504001F850E243738144D3B1A931AA55"><enum>(vi)</enum><text>which is designated by the taxpayer in the election made under this subsection, and</text></clause>
<clause id="H402ACE7CA88946E7A64B597954A2FFB5"><enum>(vii)</enum><text>which is placed in service before January 1, 2031.</text></clause><continuation-text continuation-text-level="subparagraph">For purposes of clause (ii), in the case of property with respect to which the taxpayer is a lessor, property used by a lessee shall not be considered to be used by the taxpayer as part of a qualified production activity.</continuation-text></subparagraph> <subparagraph id="H7D22FAD199AE4031AAD780289C7C1C11"><enum>(B)</enum><header>Special rule for certain property not previously used in qualified production activities</header> <clause id="HB3F11B47CFB44CECABC03D97E970FF1E"><enum>(i)</enum><header>In general</header><text>In the case of property acquired by the taxpayer during the period described in subparagraph (A)(v), the requirements of clauses (iv) and (v) of subparagraph (A) shall be treated as satisfied if—</text>
<subclause commented="no" display-inline="no-display-inline" id="H8F64EE47DA824064B85F8F4C360331EE"><enum>(I)</enum><text display-inline="yes-display-inline">such property was not used in a qualified production activity (determined without regard to the second sentence of subparagraph (D)) by any person at any time during the period beginning on January 1, 2021, and ending on May 12, 2025, </text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H2577F2AF9CD24DCDAD4F0EECA3D60B57"><enum>(II)</enum><text>such property was not used by the taxpayer at any time prior to such acquisition, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HC14D466B1B364C70AE3FEE0983C459BC"><enum>(III)</enum><text>the acquisition of such property meets the requirements of paragraphs (2)(A), (2)(B), (2)(C), and (3) of section 179(d).</text></subclause></clause> <clause id="H0A8562D293E44A2FAF6C3BE8EF05462B"><enum>(ii)</enum><header>Written binding contracts</header><text>For purposes of determining under clause (i)—</text>
<subclause id="H240100D0E3BA4CFAB802897B516E1C1D"><enum>(I)</enum><text>whether such property is acquired before the period described in subparagraph (A)(v), such property shall be treated as acquired not later than the date on which the taxpayer enters into a written binding contract for such acquisition, and</text></subclause> <subclause id="H23F8A5EF3293488A845C9F0545201DC9"><enum>(II)</enum><text>whether such property is acquired after such period, such property shall be treated as acquired not earlier than such date.</text></subclause></clause></subparagraph>
<subparagraph id="H98B4D1D731704C22B89E3C1E1969FD6B"><enum>(C)</enum><header>Exclusion of office space, etc</header><text>The term <term>qualified production property</term> shall not include that portion of any nonresidential real property which is used for offices, administrative services, lodging, parking, sales activities, research activities, software development or engineering activities, or other functions unrelated to the manufacturing, production, or refining of tangible personal property.</text></subparagraph> <subparagraph id="H81794F52C5634B7C9041365AD1A564A8"><enum>(D)</enum><header>Qualified production activity</header><text>The term <term>qualified production activity</term> means the manufacturing, production, or refining of a qualified product. The activities of any taxpayer do not constitute manufacturing, production, or refining of a qualified product unless the activities of such taxpayer result in a substantial transformation of the property comprising the product.</text></subparagraph>
<subparagraph id="H649CA78B8E384AF696CAD84D76BDADF5"><enum>(E)</enum><header>Production</header><text>The term <term>production</term> shall not include activities other than agricultural production and chemical production.</text></subparagraph> <subparagraph id="HA102619848B3453A9A81BE84CC9F1EB3"><enum>(F)</enum><header>Qualified product</header><text>The term <term>qualified product</term> means any tangible personal property if such property is not a food or beverage prepared in the same building as a retail establishment in which such property is sold.</text></subparagraph>
<subparagraph id="HFC218CC4FE7149279238675F322241A4"><enum>(G)</enum><header>Syndication</header><text>For purposes of subparagraph (A)(iv), rules similar to the rules of subsection (k)(2)(E)(iii) shall apply.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H4FECB6356266457589FE25DC96B9161B"><enum>(H)</enum><header>Extension of placed in service date under certain circumstances</header><text>The Secretary may extend the date under subparagraph (A)(vii) with respect to any property that meets the requirements of clauses (i) through (vi) of subparagraph (A) if the Secretary determines that an act of God (as defined in section 101(1) of the Comprehensive Environmental Response, Compensation, and Liability Act of 1980) prevents the taxpayer from placing such property in service before such date.</text></subparagraph></paragraph>
<paragraph id="H3B529EDA4FC942CCAE9E90E1183D2CCD"><enum>(3)</enum><header>Deduction allowed in computing minimum tax</header><text>For purposes of determining alternative minimum taxable income under section 55, the deduction under section 167 for qualified production property shall be determined under this section without regard to any adjustment under section 56.</text></paragraph> <paragraph id="H4C5415975F0A4A55902315B3F2DC9275"><enum>(4)</enum><header>Coordination with certain other provisions</header> <subparagraph id="H3FAD2F0453FD4228A9059CE5C84543A9"><enum>(A)</enum><header>Other special depreciation allowances</header><text>For purposes of subsections (k)(7), (l)(3)(D), and (m)(2)(B)(iii)—</text>
<clause commented="no" display-inline="no-display-inline" id="H879A51212EBB4F04BCAF2AADB0C45B7F"><enum>(i)</enum><text display-inline="yes-display-inline">qualified production property shall be treated as a separate class of property, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H42E41E6E7C894A1F806FB76D561994C1"><enum>(ii)</enum><text display-inline="yes-display-inline">the taxpayer shall be treated as having made an election under such subsections with respect to such class.</text></clause></subparagraph>
<subparagraph id="H8F8E0610DD3749EA92C4833FE4357FAC"><enum>(B)</enum><header>Alternative depreciation property</header><text>The term <term>qualified production property</term> shall not include any property to which the alternative depreciation system under subsection (g) applies. For purposes of subsection (g)(7)(A), qualified production property to which this subsection applies shall be treated as separate nonresidential real property.</text></subparagraph></paragraph> <paragraph id="HBB88E065FA1C4340BDF5B2A661F93C58"><enum>(5)</enum><header>Recapture</header><text>If, at any time during the 10-year period beginning on the date that any qualified production property is placed in service by the taxpayer, such property ceases to be used as described in paragraph (2)(A)(ii) and is used by the taxpayer in a productive use not described in paragraph (2)(A)(ii)—</text>
<subparagraph id="HD152450D08C4421D9BBE7C8A7595C52D"><enum>(A)</enum><text>section 1245 shall be applied—</text> <clause id="H56DBD6E39C7D440AAD46964AF55F4B4E"><enum>(i)</enum><text>by treating such property as having been disposed of by the taxpayer as of the first time such property is so used in a productive use not described in paragraph (2)(A)(ii), and</text></clause>
<clause id="HC764249F4C8141CEA0EB0FBF8DA22FE2"><enum>(ii)</enum><text>by treating the amount described in subparagraph (B) of section 1245(a)(1) with respect to such disposition as being not less than the amount described in subparagraph (A) of such section, and</text></clause></subparagraph> <subparagraph id="HF2DE37FE1EB6456295BBE573624CE0AC"><enum>(B)</enum><text>the basis of the taxpayer in such property, and the taxpayer's allowance for depreciation with respect to such property, shall be appropriately adjusted to take into account amounts recognized by reason of subparagraph (A).</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HD7C7D02B212E471CB50324E995C8A0AC"><enum>(6)</enum><header>Election</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H0A315FC120EE4A1F97D8A8A4164316A6"><enum>(A)</enum><header>In general</header><text>An election under this subsection for any taxable year shall—</text> <clause id="H1FBB90198D924889A18E20FDB5FD8DA6"><enum>(i)</enum><text>specify the nonresidential real property subject to the election and the portion of such property designated under paragraph (2)(A)(vi), and</text></clause>
<clause id="H44659284C1F341D8BBFD85538D497ACA"><enum>(ii)</enum><text>except as otherwise provided by the Secretary, be made on the taxpayer's return of the tax imposed by this chapter for the taxable year.</text></clause><continuation-text continuation-text-level="subparagraph">Such election shall be made in such manner as the Secretary may prescribe by regulations or other guidance.</continuation-text></subparagraph> <subparagraph id="H0F74AC1B30824AB0A56AB5D03D5FC0AE"><enum>(B)</enum><header>Election</header><text>Any election made under this subsection, and any specification contained in any such election, may not be revoked except with the consent of the Secretary (and the Secretary shall provide such consent only in extraordinary circumstances).</text></subparagraph></paragraph>
<paragraph id="H90FB77326EAC45EAA60B8595A0B88C89"><enum>(7)</enum><header>Regulations</header><text>The Secretary shall issue such regulations or other guidance as may be necessary or appropriate to carry out the purposes of this subsection, including regulations or other guidance—</text> <subparagraph id="H3C301F68E127479EBB5147BF2E2A228F"><enum>(A)</enum><text>providing rules for regarding what constitutes substantial transformation of property which are consistent with guidance provided under section 954(d), and</text></subparagraph>
<subparagraph id="H48FB28B985404447B93CF5AC05DD7E49"><enum>(B)</enum><text>providing for the application of paragraph (5) with respect to a change in use described in such paragraph by a transferee following a fully or partially tax free transfer of qualified production property.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H962504CAE68843D6AE251656522722CF"><enum>(b)</enum><header>Treatment of qualified production property as section 1245 property</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1245">Section 1245(a)(3)</external-xref> is amended by striking <quote>or</quote> at the end of subparagraph (E), by striking the period at the end of subparagraph (F) and inserting <quote>, or</quote>, and by adding at the end the following new subparagraph:</text>
<quoted-block id="HBA5FF632B6CD497FBBA8484FA2476DF5" display-inline="no-display-inline" style="OLC">
<subparagraph id="HD539C857D7CF4445992D8582D2474322"><enum>(G)</enum><text>any qualified production property (as defined in section 168(n)(2)).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HADA958756DFD4E78916A0D59D117DF43"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to property placed in service after the date of the enactment of this Act.</text></subsection></section>
<section id="HDD8E78B145DA4809970233B9C139C0FA"><enum>70308.</enum><header>Enhancement of advanced manufacturing investment credit</header>
<subsection commented="no" display-inline="no-display-inline" id="HF93168BCC35E45FA9C589B8A7B32C95F"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48D">Section 48D(a)</external-xref> is amended by striking <quote>25 percent</quote> and inserting <quote>35 percent</quote>.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H3850C4BA92D64112A94A47AA0426DEB8"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to property placed in service after December 31, 2025.</text></subsection></section>
<section id="H14832A6B35CC4AF99EAB68DA29570449"><enum>70309.</enum><header>Spaceports are treated like airports under exempt facility bond rules</header>
<subsection id="H530D46669A8A491C89CAC55E92B11302"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/142">Section 142(a)(1)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" id="HEADC3A503FA249D2A8B772FF4087EA6C"> <paragraph id="HF479D16A9CB14166A61C10DD2EAFA9CF"><enum>(1)</enum><text>airports and spaceports,</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H79353D7715FF46299B04FEFB97CC6E7E"><enum>(b)</enum><header>Treatment of ground leases</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/142">Section 142(b)(1)</external-xref> is amended by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" id="HF4BE7298861241D78FEE31DA202AEFCB"> <subparagraph id="H4E6866E1AB7D44368764087787A1F63D"><enum>(C)</enum><header>Special rule for spaceport ground leases</header><text display-inline="yes-display-inline">For purposes of subparagraph (A), spaceport property located on land leased by a governmental unit from the United States shall not fail to be treated as owned by a governmental unit if the requirements of this paragraph are met by the lease and any subleases of the property.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HDD2DC8841C944AA58E28A28644D94ABF"><enum>(c)</enum><header>Definition of spaceport</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/142">Section 142</external-xref> is amended by adding at the end the following new subsection:</text> <quoted-block style="OLC" id="H7617DC4FFE2248298934EA607E8086A6"> <subsection id="H997ADE10F1C945A18512F02A043E6072"><enum>(p)</enum><header>Spaceport</header> <paragraph id="H0CF4E0924CB9457BB0F08001AD9BBD58"><enum>(1)</enum><header>In general</header><text>For purposes of subsection (a)(1), the term <quote>spaceport</quote> means any facility located at or in close proximity to a launch site or reentry site used for—</text>
<subparagraph id="H915A92C3C90F455AA03E58600320CADD"><enum>(A)</enum><text display-inline="yes-display-inline">manufacturing, assembling, or repairing spacecraft, space cargo, other facilities described in this paragraph, or any component of the foregoing,</text></subparagraph> <subparagraph id="HA47AAE853B644F4E855A5A89846A8CA6"><enum>(B)</enum><text>flight control operations,</text></subparagraph>
<subparagraph id="HD1499614ABD34EB48BA1EDF4812DBC0B"><enum>(C)</enum><text>providing launch services and reentry services, or</text></subparagraph> <subparagraph id="HDB63E51369714F47B790D31C60192C4F"><enum>(D)</enum><text display-inline="yes-display-inline">transferring crew, spaceflight participants, or space cargo to or from spacecraft.</text></subparagraph></paragraph>
<paragraph id="H61BC8230739B446281BB122F082C775C"><enum>(2)</enum><header>Additional terms</header><text>For purposes of paragraph (1)—</text> <subparagraph id="HDA31093E8DE0418292CBE4A368A55ACA"><enum>(A)</enum><header>Space cargo</header><text>The term <quote>space cargo</quote> includes satellites, scientific experiments, other property transported into space, and any other type of payload, whether or not such property returns from space.</text></subparagraph>
<subparagraph id="H7A51434839664F5FB1CB78DEAEE8F2E3"><enum>(B)</enum><header>Spacecraft</header><text>The term <quote>spacecraft</quote> means a launch vehicle or a reentry vehicle.</text></subparagraph> <subparagraph id="H3AC6E41A3A1D48F8B7320EDEB8B15C48"><enum>(C)</enum><header>Other terms</header><text>The terms <quote>launch site</quote>, <quote>crew</quote>, <quote>space flight participant</quote>, <quote>launch services</quote>, <quote>launch vehicle</quote>, <quote>payload</quote>, <quote>reentry services</quote>, <quote>reentry site</quote>, a <quote>reentry vehicle</quote> shall have the respective meanings given to such terms by section 50902 of title 51, United States Code (as in effect on the date of enactment of this subsection).</text></subparagraph></paragraph>
<paragraph id="H44E851B1E1994451BF75F73E5ECD9373"><enum>(3)</enum><header>Public use requirement</header><text display-inline="yes-display-inline">A facility shall not be required to be available for use by the general public to be treated as a spaceport for purposes of this section.</text></paragraph> <paragraph id="H4746DC44A8384FEE8EFFD9E586EEB29B"><enum>(4)</enum><header>Manufacturing facilities and industrial parks allowed</header><text display-inline="yes-display-inline">With respect to spaceports, subsection (c)(2)(E) shall not apply to spaceport property described in paragraph (1)(A).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H1A2FA2404ABD44008B42E4F65E750AB4"><enum>(d)</enum><header>Exception from federally guaranteed bond prohibition</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/149">Section 149(b)(3)</external-xref> is amended by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" id="HC40ED840C50E4006A9CF7B0096D1BCB1"> <subparagraph id="H6231FA0F3DC9414FB312B19E3BC1F9B7"><enum>(F)</enum><header>Exception for spaceports</header><text>A bond shall not be treated as federally guaranteed merely because of the payment of rent, user fees, or other charges by the United States (or any agency or instrumentality thereof) in exchange for the use of the spaceport by the United States (or any agency or instrumentality thereof).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H34F832A3CF2240DEB48112936B7E64F6"><enum>(e)</enum><header>Conforming amendment</header><text>The heading for <external-xref legal-doc="usc" parsable-cite="usc/26/142">section 142(c)</external-xref> is amended by inserting <quote><header-in-text level="subsection" style="OLC">Spaceports,</header-in-text></quote> after <quote><header-in-text level="subsection" style="OLC">Airports,</header-in-text></quote>.</text></subsection> <subsection id="H2B715C55990648D09F26FB8382419128" commented="no" display-inline="no-display-inline"><enum>(f)</enum><header>Effective date</header><text>The amendments made by this section shall apply to obligations issued after the date of the enactment of this Act.</text></subsection></section></subchapter>
<subchapter id="HCE654B8B55E74C9190A063F743466515" style="OLC"><enum>B</enum><header>Permanent America-first international tax reforms</header>
<part style="OLC" commented="no" level-type="subsequent" id="H110FEC247C964D14A4FCD5525626171F"><enum>I</enum><header>Foreign tax credit</header>
<section commented="no" id="H71B4DF499F4949D18000A499231D494D"><enum>70311.</enum><header>Modifications related to foreign tax credit limitation</header>
<subsection commented="no" id="H1B894033DB614321A5F662A8600A59E7"><enum>(a)</enum><header>Rules for allocation of certain deductions to foreign source net CFC tested income for purposes of foreign tax credit limitation</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/904">Section 904(b)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H21FCAA03563A4540ABBF444FB4462064"> <paragraph commented="no" id="H71DAD842625E433C9BA32343EC001742"><enum>(5)</enum><header>Deductions treated as allocable to foreign source net CFC tested income</header><text display-inline="yes-display-inline">Solely for purposes of the application of subsection (a) with respect to amounts described in subsection (d)(1)(A), the taxpayer’s taxable income from sources without the United States shall be determined by allocating and apportioning—</text>
<subparagraph id="H59DA8A361C5743FB99C7ADF2D9BFC131"><enum>(A)</enum><text>any deduction allowed under section 250(a)(1)(B) (and any deduction allowed under section 164(a)(3) for taxes imposed on amounts described in section 250(a)(1)(B)) to such income, </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF99C187B9F904450AD14DE5B62556AE7"><enum>(B)</enum><text display-inline="yes-display-inline">no amount of interest expense or research and experimental expenditures to such income, and</text></subparagraph>
<subparagraph id="H19E07B19BAF4439EB61E7831A278D675"><enum>(C)</enum><text>any other deduction to such income only if such deduction is directly allocable to such income.</text></subparagraph><continuation-text continuation-text-level="paragraph">Any amount or deduction which would (but for subparagraphs (B) and (C)) have been allocated or apportioned to such income shall only be allocated or apportioned to income which is from sources within the United States.</continuation-text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="H5314D2C17D784EC2A12132F627063877"><enum>(b)</enum><header>Other modifications</header> <paragraph commented="no" display-inline="no-display-inline" id="H90A2EA9515BA4809B96AA82AC6323620"><enum>(1)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/904">Section 904(d)(2)(H)(i)</external-xref> is amended by striking <quote>paragraph (1)(B)</quote> and inserting <quote>paragraph (1)(D)</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H892B9FB43A6A4C3187B19752BD34D877"><enum>(2)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/904">Section 904(d)(4)(C)(ii)</external-xref> is amended by striking <quote>paragraph (1)(A)</quote> and inserting <quote>paragraph (1)(C)</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HD4D8198BC91A4E3284FBE50ABE338361"><enum>(3)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/951A">Section 951A(f)(1)(A)</external-xref> is amended by striking <quote>904(h)(1)</quote> and inserting <quote>904(h)</quote>.</text></paragraph></subsection>
<subsection id="H09F61BB1FBB249069BEE52F6FBEF63F6"><enum>(c)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="H89CFF6E142C544ABB6E6F5A163BDDDA3"><enum>70312.</enum><header>Modifications to determination of deemed paid credit for taxes properly attributable to tested income</header> <subsection id="HCA633F2BC63F492AAAFF558D3B63170F"><enum>(a)</enum><header>Increase in deemed paid credit</header> <paragraph commented="no" display-inline="no-display-inline" id="HE4F5AF7C6FC34419BF1F8793FEACFA02"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/960">Section 960(d)(1)</external-xref> is amended by striking <quote>80 percent</quote> and inserting <quote>90 percent</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H6A4984D120CC4ECEA5A357AE31C988F5"><enum>(2)</enum><header>Gross up for deemed paid foreign tax credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/78">Section 78</external-xref> is amended—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H922A9301D5D1465BB7D95B589D3D21DF"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>subsections (a), (b), and (d)</quote> and inserting <quote>subsections (a) and (d)</quote>, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE68B88EFF7AE45E786ABEB0192E7BACF"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>80 percent</quote> and inserting <quote>90 percent</quote>.</text></subparagraph></paragraph></subsection> <subsection id="H19F05361310B4918A1230A302ADD6144" commented="no"><enum>(b)</enum><header>Disallowance of foreign tax credit with respect to distributions of previously taxed net CFC tested income</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/960">Section 960(d)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" id="H8B6A7892F56D4D57A26EBCFFF9F1668F" display-inline="no-display-inline">
<paragraph id="HE304BB7F6F5B4E4393FCFA914257179A" commented="no"><enum>(4)</enum><header>Disallowance of foreign tax credit with respect to distributions of previously taxed net CFC tested income</header><text display-inline="yes-display-inline">No credit shall be allowed under section 901 for 10 percent of any foreign income taxes paid or accrued (or deemed paid under subsection (b)(1)) with respect to any amount excluded from gross income under section 959(a) by reason of an inclusion in gross income under section 951A(a).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H80459AF8C5834D3FBFB0816C3C8514D8" commented="no"><enum>(c)</enum><header>Effective dates</header> <paragraph commented="no" display-inline="no-display-inline" id="HE687BCAE417E43278A8B188B01FEC028"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The amendments made by subsection (a) shall apply to taxable years beginning after December 31, 2025.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H8C58CB4BF5354940BE478149ADE32F2B"><enum>(2)</enum><header>Disallowance</header><text display-inline="yes-display-inline">The amendment made by subsection (b) shall apply to foreign income taxes paid or accrued (or deemed paid under <external-xref legal-doc="usc" parsable-cite="usc/26/960">section 960(b)(1)</external-xref> of the Internal Revenue Code of 1986) with respect to any amount excluded from gross income under section 959(a) of such Code by reason of an inclusion in gross income under section 951A(a) of such Code after June 28, 2025.</text></paragraph></subsection></section> <section commented="no" display-inline="no-display-inline" id="HC2B8EBA84BF642668F85688D7D192A2C"><enum>70313.</enum><header>Sourcing certain income from the sale of inventory produced in the United States</header> <subsection commented="no" display-inline="no-display-inline" id="H42947E31B3CA475CAFF57A1A4E73972D"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text>Section 904(b), as amended by <external-xref legal-doc="usc" parsable-cite="usc/26/70311">section 70311,</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H4435655DC3B8480EAFA2410BFE4AB1D6">
<paragraph commented="no" display-inline="no-display-inline" id="HFE08A165E9BB4AD58D228A208E28B8D0"><enum>(6)</enum><header>Source rules for certain inventory produced in the United States and sold through foreign branches</header><text display-inline="yes-display-inline">For purposes of this section, if a United States person maintains an office or other fixed place of business in a foreign country (determined under rules similar to the rules of section 864(c)(5)), the portion of income which—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HDA803C2A2BBA43EEAD37E16FD8B828FE"><enum>(A)</enum><text display-inline="yes-display-inline">is from the sale or exchange outside the United States of inventory property (within the meaning of section 865(i)(1))—</text>
<clause commented="no" display-inline="no-display-inline" id="H87A20FF2A2E945C3AB51F81FE791590B"><enum>(i)</enum><text display-inline="yes-display-inline">which is produced in the United States, </text></clause> <clause commented="no" display-inline="no-display-inline" id="H90C682DB45B745FA95F25C3E6403972E"><enum>(ii)</enum><text>which is for use outside the United States, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HBD0B785672264A208133EBFFC84B1F2C"><enum>(iii)</enum><text display-inline="yes-display-inline">to which the third sentence of section 863(b) applies, and</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H46A09C7908F747B88BA5363E1DD23BD6"><enum>(B)</enum><text display-inline="yes-display-inline">is attributable (determined under rules similar to the rules of section 864(c)(5)) to such office or other fixed place of business,</text></subparagraph><continuation-text continuation-text-level="paragraph">shall be treated as from sources without the United States, except that the amount so treated shall not exceed 50 percent of the income from the sale or exchange of such inventory property.</continuation-text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H78AB7AA2242A452EB1AF52A37496AF55"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></part> <part id="H2A85AB20F5FF4B1DBC8FF1C46CAD8362" style="OLC"><enum>II</enum><header>Foreign-derived deduction eligible income and net CFC tested income</header> <section id="HBD86FA7F9BFA4232B4F8399EEE613A5C"><enum>70321.</enum><header>Modification of deduction for foreign-derived deduction eligible income and net CFC tested income</header> <subsection id="H7506D7CCAE034655B086756244FC890E" commented="no"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250(a)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HE8021C89B67145398A716B37B42DE6BE"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>37.5 percent</quote> in paragraph (1)(A) and inserting <quote>33.34 percent</quote>, </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HBFC91DD0D8D1413E846E808A0113070B"><enum>(2)</enum><text display-inline="yes-display-inline">by striking <quote>50 percent</quote> in paragraph (1)(B) and inserting <quote>40 percent</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H594F04C1BA184A02B985F83A0D7F2956"><enum>(3)</enum><text>by striking paragraph (3). </text></paragraph></subsection> <subsection id="HCB716DCC13184609A2B5627A4B392F48" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H4A328453591D4BD0BC5ACD76349E7FD9"><enum>70322.</enum><header>Determination of deduction eligible income</header>
<subsection id="H740ECA15E6CD4623B9D61F72F579A7C8"><enum>(a)</enum><header>Sales or other dispositions of certain property</header>
<paragraph commented="no" display-inline="no-display-inline" id="HDB242AE0BBD5488DB3B668505795F1F3"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250(b)(3)(A)(i)</external-xref> is amended—</text> <subparagraph id="HD7BD99CE89A54619B277F701C0E738A1"><enum>(A)</enum><text>by striking <quote>and</quote> at the end of subclause (V),</text></subparagraph>
<subparagraph id="HE55133D1B6644CEEA20D8EE1DDADC2D1"><enum>(B)</enum><text>by striking <quote>over</quote> at the end of subclause (VI) and inserting <quote>and</quote>, and</text></subparagraph> <subparagraph id="HF6D2D475C5F84916AC1FD2B2349FEFBC"><enum>(C)</enum><text>by adding at the end the following new subclause:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB5A1DEBEBCB7423BBBFD5F5116C2673F">
<subclause id="HFCF58CA07B694E588D23452E69F4322E"><enum>(VII)</enum><text>except as otherwise provided by the Secretary, any income and gain from the sale or other disposition (including pursuant to the deemed sale or other deemed disposition or a transaction subject to section 367(d)) of—</text> <item commented="no" display-inline="no-display-inline" id="H920871C9F1D14BBD92C792BF3D5A5CE6"><enum>(aa)</enum><text display-inline="yes-display-inline">intangible property (as defined in section 367(d)(4)), and</text></item>
<item commented="no" display-inline="no-display-inline" id="H2C4148AE4F634EC3B735D9BFF9CD9BBC"><enum>(bb)</enum><text display-inline="yes-display-inline">any other property of a type that is subject to depreciation, amortization, or depletion by the seller, over </text></item></subclause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H8290ADFED389477489B18EBD74653212"><enum>(2)</enum><header>Conforming amendment</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250(b)(5)(E)</external-xref> is amended by inserting <quote>(other than paragraph (3)(A)(i)(VII))</quote> after <quote>For purposes of this subsection</quote>. </text></paragraph>
<paragraph id="H5EBA8E2A509C4714B7A395F2E74D9536"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to sales or other dispositions (including pursuant to deemed sales or other deemed dispositions or a transaction subject to <external-xref legal-doc="usc" parsable-cite="usc/26/367">section 367(d)</external-xref> of the Internal Revenue Code of 1986) occurring after June 16, 2025.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HD8151C6246044D45961691CDA5D7150D"><enum>(b)</enum><header>Expense apportionment limited to properly allocable expenses</header> <paragraph commented="no" display-inline="no-display-inline" id="H0BF31D7F42EA4C7E8821ADB3F3748898"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250(b)(3)(A)(ii)</external-xref> is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HF8AD628C252C489690AC94592D0FD79E">
<clause commented="no" display-inline="no-display-inline" id="H2AD96ED2E5BE41C0B9D6A0DF587F8916"><enum>(ii)</enum><text>expenses and deductions (including taxes), other than interest expense and research or experimental expenditures, properly allocable to such gross income.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H9552F61124854731A26DC62C416C42F5"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to taxable years beginning after December 31, 2025.</text></paragraph></subsection></section>
<section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HB9B1B8607A964251BA2E405E8E1B2C58"><enum>70323.</enum><header display-inline="yes-display-inline">Rules related to deemed intangible income</header>
<subsection commented="no" display-inline="no-display-inline" id="HD0DF0A8054DD4825BACDF2937327441B"><enum>(a)</enum><header display-inline="yes-display-inline">Taxation of net CFC tested income</header>
<paragraph id="H27F10CAA3ADA4A1393A8AE827CD0240F"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/951A">Section 951A(a)</external-xref> is amended by striking <quote>global intangible low-taxed income</quote> and inserting <quote>net CFC tested income</quote>.</text></paragraph> <paragraph id="H3FA23448102E4CFF9DE66B06AC323F05"><enum>(2)</enum><header>Repeal of tax-free deemed return on foreign investments</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/951A">Section 951A</external-xref>, as amended by the preceding provisions of this Act, is amended by striking subsections (b) and (d) and by redesignating subsections (c), (e), and (f) as subsections (b), (c), and (d), respectively.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HC1293AE0437643E19A98AD51E90430EB"><enum>(3)</enum><header>Conforming amendments</header>
<subparagraph id="H0F08EE06318647CDBA2E64527A656B4D"><enum>(A)</enum>
<clause commented="no" display-inline="yes-display-inline" id="H4C68225618DF49908BBBE502A0E2AAFB"><enum>(i)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250</external-xref> is amended by striking <quote>global intangible low-taxed income</quote> each place it appears in subsections (a)(1)(B)(i), (a)(2), and (b)(3)(A)(i)(II) and inserting <quote>net CFC tested income</quote>.</text></clause> <clause id="HC8CE280000B0488D90B82282AF7E2504" indent="up1"><enum>(ii)</enum><text>The heading for section 250 of such Code is amended by striking <quote><header-in-text style="OLC" level="section">Global Intangible Low-Taxed Income</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="section">Net CFC Tested Income</header-in-text></quote>.</text></clause>
<clause id="H1F50ABA5C9864850BAA2EA3A19015913" indent="up1"><enum>(iii)</enum><text>The item relating to section 250 in the table of sections for part VII of subchapter B of chapter 1 of such Code is amended by striking <quote>global intangible low-taxed income</quote> and inserting <quote>net CFC tested income</quote>.</text></clause></subparagraph> <subparagraph id="HBC2821558F2849718E30705E1C06A61A"><enum>(B)</enum><text>Section 951A(c)(1), as redesignated by paragraph (2), is amended by striking <quote>subsections (b), (c)(1)(A), and (c)(1)(B)</quote> and inserting <quote>subsections (b)(1)(A) and (b)(1)(B)</quote>.</text></subparagraph>
<subparagraph id="HF8C23144A1FC4BDFA6EF97BA3BB3C6F3"><enum>(C)</enum><text>Section 951A(d), as redesignated by paragraph (2), is amended—</text> <clause commented="no" display-inline="no-display-inline" id="H85982D6A08F1424E89304DB5C4162B46"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>global intangible low-taxed income</quote> each place it appears and inserting <quote>net CFC tested income</quote>, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H4F530CD4A98B4542BD2B3128CE33EE3B"><enum>(ii)</enum><text>by striking <quote>subsection (c)(1)(A)</quote> in paragraph (2)(B)(ii) and inserting <quote>subsection (b)(1)(A)</quote>.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H165BB13169E54D11995C55048596D847"><enum>(D)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/960">Section 960(d)(2)</external-xref> is amended—</text>
<clause commented="no" display-inline="no-display-inline" id="H57C931F5D3EE43009A06BED5CA1837C2"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>global intangible low-taxed income</quote> in subparagraph (A) and inserting <quote>net CFC tested income</quote>, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H271C26CEBE924DB1B099A5A0C8799275"><enum>(ii)</enum><text display-inline="yes-display-inline">by striking <quote>section 951A(c)(1)(A)</quote> in subparagraph (B) and inserting <quote>section 951A(b)(1)(A)</quote>.</text></clause></subparagraph>
<subparagraph id="H545182C6FCAF416B8E8B4CD7163BF41B"><enum>(E)</enum>
<clause commented="no" display-inline="yes-display-inline" id="HFAC36131510E4A9CA5464ACF9B2C9D0A"><enum>(i)</enum><text>The heading for <external-xref legal-doc="usc" parsable-cite="usc/26/951A">section 951A</external-xref> is amended by striking <quote><header-in-text style="OLC" level="section">Global Intangible Low-Taxed Income</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="section">Net CFC Tested Income</header-in-text></quote>.</text></clause> <clause id="HF2B34AF8E715466286F75EBE76361022" indent="up1"><enum>(ii)</enum><text>The item relating to section 951A in the table of sections for subpart F of part III of subchapter N of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by striking <quote>Global intangible low-taxed income</quote> and inserting <quote>Net CFC tested income</quote>.</text></clause></subparagraph></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H0B7CD08F53A74F368BE343EB838C9B2F"><enum>(b)</enum><header>Deduction for foreign-derived deduction eligible income</header>
<paragraph commented="no" display-inline="no-display-inline" id="H08AC5D6827224031B97290748DDA3A14"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250(a)(1)(A)</external-xref> is amended by striking <quote>foreign-derived intangible income</quote> and inserting <quote>foreign-derived deduction eligible income</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HF42F86E3B78E420F96D33795C4C0C33A"><enum>(2)</enum><header>Conforming amendments</header> <subparagraph commented="no" display-inline="no-display-inline" id="HE2082B8685BB4DA8AF0638CE08D1193F"><enum>(A)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/250">Section 250(a)(2)</external-xref> is amended by striking <quote>foreign-derived intangible income</quote> each place it appears and inserting <quote>foreign-derived deduction eligible income</quote>.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H35BFDCBFBCB945E9A13E94CEC1F28C18"><enum>(B)</enum><text display-inline="yes-display-inline">Section 250(b), as amended by subsection (a), is amended—</text> <clause commented="no" display-inline="no-display-inline" id="H9811F28D3B704FFFB7451BD07785423A"><enum>(i)</enum><text display-inline="yes-display-inline">by striking paragraphs (1) and (2),</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HAB6ADDFB86BF452A88C59574ADDE9691"><enum>(ii)</enum><text>by redesignating paragraphs (4) and (5) as paragraphs (1) and (2), respectively, and by moving such paragraphs before paragraph (3),</text></clause> <clause commented="no" display-inline="no-display-inline" id="H04729BC0A84345A297FED1C4C6BD87E0"><enum>(iii)</enum><text display-inline="yes-display-inline">in paragraph (2)(B)(ii), as so redesignated, by striking <quote>paragraph (4)(B)</quote> and inserting <quote>paragraph (1)(B)</quote>, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H0DDAF2BC2C6F4F0AAF392239136934B2"><enum>(iv)</enum><text display-inline="yes-display-inline">by striking <quote><header-in-text style="OLC" level="subsection">intangible</header-in-text></quote> in the heading thereof and inserting <quote><header-in-text style="OLC" level="subsection">deduction eligible</header-in-text></quote>.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H7621538DE3B24DDE8F5099C2D2C8C45E"><enum>(C)</enum> <clause commented="no" display-inline="yes-display-inline" id="H1407A4D7945040BC8689C8075450606E"><enum>(i)</enum><text>The heading for <external-xref legal-doc="usc" parsable-cite="usc/26/250">section 250</external-xref> is amended by striking <quote><header-in-text style="OLC" level="section">intangible</header-in-text></quote> in the heading thereof and inserting <quote><header-in-text style="OLC" level="section">deduction eligible</header-in-text></quote>.</text></clause>
<clause id="H80FE9E0DFBD645A0A270E24997DB0689" indent="up1" commented="no" display-inline="no-display-inline"><enum>(ii)</enum><text>The heading for <external-xref legal-doc="usc" parsable-cite="usc/26/172">section 172(d)(9)</external-xref> is amended by striking <quote><header-in-text style="OLC" level="paragraph">intangible</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="paragraph">deduction eligible</header-in-text></quote>.</text></clause> <clause indent="up1" commented="no" display-inline="no-display-inline" id="H72F4DA3803B5455EB297A88F144CAB40"><enum>(iii)</enum><text display-inline="yes-display-inline">The item relating to section 250 in the table of sections for part VIII of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by striking <quote>intangible</quote> and inserting <quote>deduction eligible</quote>.</text></clause></subparagraph></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H570F177752DC430EA22E0A9285D9DD32"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></part> <part id="H3DF8E5121ED34E0F80CFCAE58E3EF7A9" style="OLC"><enum>III</enum><header>Base erosion minimum tax</header> <section id="H68A48C27063C4211BF84FE3111C57F05"><enum>70331.</enum><header>Extension and modification of base erosion minimum tax amount</header> <subsection id="H0ABBEDB323854805AC092F9AF09699AE" commented="no" display-inline="no-display-inline"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/59A">Section 59A(b)</external-xref> is amended—</text>
<paragraph id="H1ABE97C1C934466FB26CD4C0B58C91EB" commented="no" display-inline="no-display-inline"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>10 percent</quote> in paragraph (1) and inserting <quote>10.5 percent</quote>, and</text></paragraph> <paragraph id="HD6E62735689E4E62B6C66EAE673C5543" commented="no" display-inline="no-display-inline"><enum>(2)</enum><text display-inline="yes-display-inline">by striking paragraph (2) and by redesignating paragraphs (3) and (4) as paragraphs (2) and (3), respectively.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H47C8C232518B466999EF057F0910642A"><enum>(b)</enum><header>Conforming amendments</header>
<paragraph commented="no" display-inline="no-display-inline" id="H92D4E5D8DB41419C8EA17BDF710F0ACD"><enum>(1)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/59A">Section 59A(b)(1)</external-xref> is amended by striking <quote>Except as provided in paragraphs (2) and (3)</quote> and inserting <quote>Except as provided in paragraph (2)</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HC2241636D92844B4B575123E0749C98A"><enum>(2)</enum><text>Section 59A(b)(2), as redesignated by subsection (a)(2), is amended by striking <quote>the percentage otherwise in effect under paragraphs (1)(A) and (2)(A) shall each be increased</quote> and inserting <quote>the percentages otherwise in effect under paragraph (1)(A) shall be increased</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H0BFFECC9D3564C16B07AC6DDE36D7BC3"><enum>(3)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/59A">Section 59A(e)(1)(C)</external-xref> is amended by striking <quote>in the case of a taxpayer described in subsection (b)(3)(B)</quote> and inserting <quote>in the case of a taxpayer described in subsection (b)(2)(B)</quote>.</text></paragraph></subsection> <subsection id="HCF55EB0CB61342CDAA63E61E9EE14D64" commented="no"><enum>(c)</enum><header>Other modifications</header> <paragraph commented="no" display-inline="no-display-inline" id="HCB8E067363E540EA950627F4BF36DF5A"><enum>(1)</enum><text>Section 59A(b)(2)(B)(ii), as redesignated by subsection (a)(2), is amended by striking <quote>registered securities dealer</quote> and inserting <quote>securities dealer registered</quote>.</text></paragraph>
<paragraph id="HE156631C209744CDA478E1CDF8BE8ED0" commented="no"><enum>(2)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/59A">Section 59A(h)(2)(B)</external-xref> is amended by striking <quote>section 6038B(b)(2)</quote> and inserting <quote>section 6038A(b)(2)</quote>.</text></paragraph> <paragraph id="H60CFCF43314046FAB21B87D5C6FA118F" commented="no"><enum>(3)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/59A">Section 59A(i)(2)</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H0EE0E661350042F0949F2835449A72A9"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>subsection (g)</quote> and inserting <quote>subsection (h)</quote>, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H1426D062DB7842A39043757EB47A4198"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>subsection (g)(3)</quote> and inserting <quote>subsection (h)(3)</quote>. </text></subparagraph></paragraph></subsection>
<subsection id="H53031D8544664875B3A473DDB87379DD" commented="no" display-inline="no-display-inline"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></part> <part style="OLC" commented="no" level-type="subsequent" id="H6A09138925F3423380B5959EAD9C62C6"><enum>IV</enum><header>Business interest limitation</header> <section id="H742123E361E34C61BC75EFC59A5F6A9B"><enum>70341.</enum><header>Coordination of business interest limitation with interest capitalization provisions</header> <subsection commented="no" display-inline="no-display-inline" id="H9AA8D42A206549C99962FBA1283BA6E2"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/163">Section 163(j)</external-xref> is amended by redesignating paragraphs (10) and (11) as paragraphs (11) and (12) and by inserting after paragraph (9) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H0E17E348D2D8440188FBD7B0A38F33F9">
<paragraph id="HE8053550DD534368A86650BB255B2C8A"><enum>(10)</enum><header>Coordination with interest capitalization provisions</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H4E628B3667674731BC1363B63E31C1D6"><enum>(A)</enum><header>In general</header><text>In applying this subsection—</text> <clause commented="no" display-inline="no-display-inline" id="H4ED304FE793E452A8CD3D34256026807"><enum>(i)</enum><text display-inline="yes-display-inline">the limitation under paragraph (1) shall apply to business interest without regard to whether the taxpayer would otherwise deduct such business interest or capitalize such business interest under an interest capitalization provision, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H38E2E5CC809D4CABA22F87AE846BA467"><enum>(ii)</enum><text display-inline="yes-display-inline">any reference in this subsection to a deduction for business interest shall be treated as including a reference to the capitalization of business interest.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HEAD4E8C682954DB6AC238337BC4BA0BF"><enum>(B)</enum><header>Amount allowed applied first to capitalized interest</header><text>The amount allowed after taking into account the limitation described in paragraph (1)—</text>
<clause commented="no" display-inline="no-display-inline" id="HDFC66A078C944E6AA344CF5B4487B33F"><enum>(i)</enum><text>shall be applied first to the aggregate amount of business interest which would otherwise be capitalized, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H591DB2F85F754D8DA09E3704B1C247D7"><enum>(ii)</enum><text>the remainder (if any) shall be applied to the aggregate amount of business interest which would be deducted.</text></clause></subparagraph>
<subparagraph id="H934C09FB2DC046CF9AFE9EF5F02C69DD" commented="no" display-inline="no-display-inline"><enum>(C)</enum><header display-inline="yes-display-inline">Treatment of disallowed interest carried forward</header><text display-inline="yes-display-inline">No portion of any business interest carried forward under paragraph (2) from any taxable year to any succeeding taxable year shall, for purposes of this title (including any interest capitalization provision which previously applied to such portion) be treated as interest to which an interest capitalization provision applies.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HE80DE3A9221245EE9B632ADEE9CB4B4E"><enum>(D)</enum><header>Interest capitalization provision</header><text>For purposes of this section, the term <term>interest capitalization provision</term> means any provision of this subtitle under which interest—</text>
<clause commented="no" display-inline="no-display-inline" id="H602F34E7C5094885BF49E80D3BC46DE3"><enum>(i)</enum><text>is required to be charged to capital account, or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H657409F04F1640DBB02AAFB283D7D29A"><enum>(ii)</enum><text>may be deducted or charged to capital account.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H2A1FFE7D980E492D965B382F14A57897"><enum>(b)</enum><header>Certain capitalized interest not treated as business interest</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/163">Section 163(j)(5)</external-xref> is amended by adding at the end the following new sentence: <quote>Such term shall not include any interest which is capitalized under section 263(g) or 263A(f).</quote>.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H4D789B70DA174C3B90F8A3AE7FCC7F83"><enum>(c)</enum><header>Regulatory authority</header><text display-inline="yes-display-inline">Section 163(j), as amended by subsection (a), is amended by redesignating paragraphs (11) and (12) as paragraphs (12) and (13) and by inserting after paragraph (10) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB5375376019B44629A82059E3577B17A">
<paragraph commented="no" display-inline="no-display-inline" id="H0A24E4A7A3DB40149D87BD3D2852E749"><enum>(11)</enum><header>Regulatory authority</header><text>The Secretary shall issue such regulations or guidance as may be necessary or appropriate to carry out the purposes of this subsection, including regulations or guidance to determine which business interest is taken into account under this subsection and section 59A(c)(3).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H1BC5801A0DA24F2DBCE96D283D317213" commented="no" display-inline="no-display-inline"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H846A14CF19DA47EFBD4E18812554213C"><enum>70342.</enum><header>Definition of adjusted taxable income for business interest limitation</header>
<subsection id="HF4BF18E65CEE4736AFB14AC11C248724"><enum>(a)</enum><header>In general</header><text>Subparagraph (A) of <external-xref legal-doc="usc" parsable-cite="usc/26/163">section 163(j)(8)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HA2C9F8DB6CAD49A8891909AD42DC8C62"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>and</quote> at the end of clause (iv), and </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H1DDC80F3783C4B49B9ECFFECD0B11E54"><enum>(2)</enum><text>by adding at the end the following new clause:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HD169C70EE94542E29B4348B10F5413F3"> <clause commented="no" display-inline="no-display-inline" id="H386FBBE474FC485BA9D4512DA34E46C7"><enum>(vi)</enum><text>the amounts included in gross income under sections 951(a), 951A(a), and 78 (and the portion of the deductions allowed under sections 245A(a) (by reason of section 964(e)(4)) and 250(a)(1)(B) by reason of such inclusions), and</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H913D2D494DEF42BC91BA4B290444ABE0"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></part> <part id="HDB805EA5C081465383B89EFF33B2D22F" style="OLC"><enum>V</enum><header>Other international tax reforms</header> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HB2F6E73CE3104748B78F99B2094CCDDA"><enum>70351.</enum><header display-inline="yes-display-inline">Permanent extension of look-thru rule for related controlled foreign corporations</header> <subsection commented="no" display-inline="no-display-inline" id="H56DFEF2DF544445387440266B83C459A"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/954">Section 954(c)(6)(C)</external-xref> is amended by striking <quote>and before January 1, 2026,</quote>.</text></subsection>
<subsection id="H7073DC4CB1EC4822B217B085047127C7" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years of foreign corporations beginning after December 31, 2025.</text></subsection></section> <section id="H6447A82B14074C1DB294B6D445054B70"><enum>70352.</enum><header>Repeal of election for 1-month deferral in determination of taxable year of specified foreign corporations</header> <subsection id="HE5B0C444471A4AD4B568B054109943FD"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/898">Section 898(c)</external-xref> is amended by striking paragraph (2) and redesignating paragraph (3) as paragraph (2).</text></subsection>
<subsection id="H1D173B2AADC14507884A3492300444F4"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years of specified foreign corporations beginning after November 30, 2025.</text></subsection> <subsection id="HF5BC3684A17445BC8C177DEE64A2E4BD"><enum>(c)</enum><header>Transition rule</header> <paragraph commented="no" display-inline="no-display-inline" id="H1B10286D8C5744EBA8A0EB7387D1AEBC"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of a corporation that is a specified foreign corporation as of November 30, 2025, such corporation’s first taxable year beginning after such date shall end at the same time as the first required year (within the meaning of <external-xref legal-doc="usc" parsable-cite="usc/26/898">section 898(c)(1)</external-xref> of the Internal Revenue Code of 1986) ending after such date. If any specified foreign corporation is required by the amendments made by this section to change its taxable year for its first taxable year beginning after November 30, 2025—</text>
<subparagraph id="HE9ECEBFF83404022A9B9C7C2905EC146"><enum>(A)</enum><text>such change shall be treated as initiated by such corporation, </text></subparagraph> <subparagraph id="HC162B03F680942079C10901B3D19ADC3"><enum>(B)</enum><text>such change shall be treated as having been made with the consent of the Secretary, and</text></subparagraph>
<subparagraph id="HD662C9E13DFB4AAC92059A1F07707403" commented="no" display-inline="no-display-inline"><enum>(C)</enum><text display-inline="yes-display-inline">the Secretary shall issue regulations or other guidance for allocating foreign taxes that are paid or accrued in such first taxable year and the succeeding taxable year among such taxable years in the manner the Secretary determines appropriate to carry out the purposes of this section.</text></subparagraph></paragraph> <paragraph id="H635AF0CDA1DB4CF0A696C82159212C92"><enum>(2)</enum><header>Secretary</header><text>For purposes of this subsection, the term <term>Secretary</term> means the Secretary of the Treasury or the Secretary's delegate.</text></paragraph></subsection></section>
<section id="HBAF853DB6E5F4DEA9899BB61F3583A22"><enum>70353.</enum><header>Restoration of limitation on downward attribution of stock ownership in applying constructive ownership rules</header>
<subsection id="HD8F400697D064BDBBBF843B4D384BE76"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/958">Section 958(b)</external-xref> is amended—</text> <paragraph id="HFEA7A41CA7FF4FB6B9E53B707559C65D"><enum>(1)</enum><text>by inserting after paragraph (3) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H95A69230D0AD485E86EEDCAAB099D767">
<paragraph id="HBB4DF12CE146479182D1AB3D25AFF8FC"><enum>(4)</enum><text display-inline="yes-display-inline">Subparagraphs (A), (B), and (C) of section 318(a)(3) shall not be applied so as to consider a United States person as owning stock which is owned by a person who is not a United States person.</text></paragraph><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph> <paragraph id="HE88FA2E3546245DCA14083F520B8AB1E"><enum>(2)</enum><text>by striking <quote>Paragraph (1)</quote> in the last sentence and inserting <quote>Paragraphs (1) and (4)</quote>.</text></paragraph></subsection>
<subsection id="H67C29F3703174CE79E0671241F35BDC2"><enum>(b)</enum><header>Foreign controlled United States shareholders</header><text>Subpart F of part III of subchapter N of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after section 951A the following new section:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H27CE6BFAC5B6447187A81FE3C1362240"> <section id="H2FCB7771E05B472B99B5DD0BA3A7D5D0"><enum>951B.</enum><header>Amounts included in gross income of foreign controlled United States shareholders</header> <subsection id="H4064FBAD00B64CA4A3586236EE362457"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of any foreign controlled United States shareholder of a foreign controlled foreign corporation—</text>
<paragraph id="HB1E5514B717148B2AF298333487086B2"><enum>(1)</enum><text>this subpart (other than sections 951A, 951(b), and 957) shall be applied with respect to such shareholder (separately from, and in addition to, the application of this subpart without regard to this section)—</text> <subparagraph id="H1DBC59F734F14CEBAB680DEA4EE49E22"><enum>(A)</enum><text>by substituting <quote>foreign controlled United States shareholder</quote> for <quote>United States shareholder</quote> each place it appears therein, and</text></subparagraph>
<subparagraph id="HEDF0CD9F9BA14D60834AFAA95D124470"><enum>(B)</enum><text>by substituting <quote>foreign controlled foreign corporation</quote> for <quote>controlled foreign corporation</quote> each place it appears therein, and</text></subparagraph></paragraph> <paragraph id="H75E9A135E18F45529347612C1C76FF40"><enum>(2)</enum><text>section 951A (and such other provisions of this subpart as provided by the Secretary) shall be applied with respect to such shareholder—</text>
<subparagraph id="HBFFA133A2AD749568FD44EA1F82A437B"><enum>(A)</enum><text>by treating each reference to <quote>United States shareholder</quote> in such section as including a reference to such shareholder, and</text></subparagraph> <subparagraph id="H21BEE63E605146CC98C4CEB60C917543"><enum>(B)</enum><text>by treating each reference to <quote>controlled foreign corporation</quote> in such section as including a reference to such foreign controlled foreign corporation.</text></subparagraph></paragraph></subsection>
<subsection id="HEBF06617872143408513F921F0F72543"><enum>(b)</enum><header>Foreign controlled United States shareholder</header><text>For purposes of this section, the term <quote>foreign controlled United States shareholder</quote> means, with respect to any foreign corporation, any United States person which would be a United States shareholder with respect to such foreign corporation if—</text> <paragraph id="H4BDCFB308F7446B88082BB72D3D424BE"><enum>(1)</enum><text>section 951(b) were applied by substituting <quote>more than 50 percent</quote> for <quote>10 percent or more</quote>, and</text></paragraph>
<paragraph id="H6DC7ECF9FCBD440DA17E1EC304E80E3A"><enum>(2)</enum><text>section 958(b) were applied without regard to paragraph (4) thereof.</text></paragraph></subsection> <subsection id="H63FE368CBD514D81AD8918461A2DFF20"><enum>(c)</enum><header>Foreign controlled foreign corporation</header><text>For purposes of this section, the term <quote>foreign controlled foreign corporation</quote> means a foreign corporation, other than a controlled foreign corporation, which would be a controlled foreign corporation if section 957(a) were applied—</text>
<paragraph id="H45D0FE21D92E4879ABB460FE552D0E9E"><enum>(1)</enum><text>by substituting <quote>foreign controlled United States shareholders</quote> for <quote>United States shareholders</quote>, and</text></paragraph> <paragraph id="HC7880BFD42EC455A941DAB67AF7294D8"><enum>(2)</enum><text>by substituting <quote>section 958(b) (other than paragraph (4) thereof)</quote> for <quote>section 958(b)</quote>.</text></paragraph></subsection>
<subsection id="HF3F010A4CFF7440EAE6334DDE299C11D"><enum>(d)</enum><header>Regulations</header><text>The Secretary shall prescribe such regulations or other guidance as may be necessary or appropriate to carry out the purposes of this section, including regulations or other guidance—</text> <paragraph id="H824FF421319A486484D855296365E3EF"><enum>(1)</enum><text>to treat a foreign controlled United States shareholder or a foreign controlled foreign corporation as a United States shareholder or as a controlled foreign corporation, respectively, for purposes of provisions of this title other than this subpart (including any reporting requirement), and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HD08442B854D64A5698BB9FBD5D6D293D"><enum>(2)</enum><text display-inline="yes-display-inline">with respect to the treatment of foreign controlled foreign corporations that are passive foreign investment companies (as defined in section 1297).</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H1383B854A0424214A448DCFB5470DB97"><enum>(c)</enum><header>Clerical amendment</header><text display-inline="yes-display-inline">The table of sections for subpart F of part III of subchapter N of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after the item relating to section 951A the following new item:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HC9EE4D134DC348509D24706FB4485F59">
<toc container-level="quoted-block-container" lowest-bolded-level="division-lowest-bolded" lowest-level="section" quoted-block="no-quoted-block" regeneration="yes-regeneration">
<toc-entry level="section">Sec. 951B. Amounts included in gross income of foreign controlled United States shareholders.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H342C0AB905A84395A3788F742DAC9B41"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years of foreign corporations beginning after December 31, 2025.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H2011EA80C698472EABA8DC87D2C0E601"><enum>(e)</enum><header>Special rule</header> <paragraph commented="no" display-inline="no-display-inline" id="H43D2468C992C4837B5548F28682FE4FE"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Except to the extent provided by the Secretary of the Treasury (or the Secretary's delegate), the effective date of any amendment to the Internal Revenue Code of 1986 shall be applied by treating references to United States shareholders as including references to foreign controlled United States shareholders, and by treating references to controlled foreign corporations as including references to foreign controlled foreign corporations.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H27C4E4907A5F4A729D94639644318BDF"><enum>(2)</enum><header>Definitions</header><text display-inline="yes-display-inline">Any term used in paragraph (1) which is used in subpart F of part III of subchapter N of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> of the Internal Revenue Code of 1986 (as amended by this section) shall have the meaning given such term in such subpart.</text></paragraph></subsection> <subsection id="H0F555350845245628361E9BB956B184F" commented="no" display-inline="no-display-inline"><enum>(f)</enum><header>No inference</header><text>The amendments made by this section shall not be construed to create any inference with respect to the proper application of any provision of the Internal Revenue Code of 1986 with respect to taxable years beginning before the taxable years to which such amendments apply.</text></subsection></section>
<section id="H19FD9C55E1864F009ABCE76929C240E7"><enum>70354.</enum><header>Modifications to pro rata share rules</header>
<subsection id="H97D9F63AD02B48FD8B3D2751AEDB7CB6"><enum>(a)</enum><header>In general</header><text>Subsection (a) of <external-xref legal-doc="usc" parsable-cite="usc/26/951">section 951</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB50750067195425CB001CA864CD365D6"> <subsection id="H23CDC1A289DE4CB393E2369E06354DB7" commented="no" display-inline="no-display-inline"><enum>(a)</enum><header display-inline="yes-display-inline">Amounts included</header> <paragraph id="H4A94E34481364A6AACD3BDA05FBA2C98" commented="no" display-inline="no-display-inline"><enum>(1)</enum><header>In general</header><text>If a foreign corporation is a controlled foreign corporation at any time during a taxable year of the foreign corporation (in this subsection referred to as the <quote>CFC year</quote>)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HEE0AA171F7AC4A969DB961D8C35E62A2"><enum>(A)</enum><text display-inline="yes-display-inline">each United States shareholder which owns (within the meaning of section 958(a)) stock in such corporation on any day during the CFC year shall include in gross income such shareholder's pro rata share (determined under paragraph (2)) of the corporation’s subpart F income for the CFC year, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H43B8C07201AA4E4E9F0C4EF84E70AD1D"><enum>(B)</enum><text>each United States shareholder which owns (within the meaning of section 958(a)) stock in such corporation on the last day, in the CFC year, on which such corporation is a controlled foreign corporation shall include in gross income the amount determined under section 956 with respect to such shareholder for the CFC year (but only to the extent not excluded from gross income under section 959(a)(2)).</text></subparagraph></paragraph>
<paragraph id="HE27D3DA441984A41964B1E44A97E15E3" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header>Pro rata share of subpart F income</header><text>A United States shareholder's pro rata share of a controlled foreign corporation's subpart F income for a CFC year shall be the portion of such income which is attributable to—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H1E4EAA28CCBB430588A9EEB83683F616"><enum>(A)</enum><text display-inline="yes-display-inline">the stock of such corporation owned (within the meaning of section 958(a)) by such shareholder, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HEE23D87664C64B4A90105FEE87FB4D87"><enum>(B)</enum><text display-inline="yes-display-inline">any period of the CFC year during which—</text> <clause commented="no" display-inline="no-display-inline" id="H9D6CDEA01746442BA8F26DB0126EC616"><enum>(i)</enum><text display-inline="yes-display-inline">such shareholder owned (within the meaning of section 958(a)) such stock,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H14D2E8F5D32D4DCA9EFB0754E41AC87C"><enum>(ii)</enum><text display-inline="yes-display-inline">such shareholder was a United States shareholder of such corporation, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H35F7973937514B8EAAAF03A5E5FEF92D"><enum>(iii)</enum><text display-inline="yes-display-inline">such corporation was a controlled foreign corporation.</text></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H42475F20DD3D4850AAE4DC26F932E2A2"><enum>(3)</enum><header>Taxable year of inclusion</header><text>Any amount required to be included in gross income by a United States shareholder under paragraph (1) with respect to a CFC year shall be included in gross income for the shareholder's taxable year which includes the last day on which the shareholder owns (within the meaning of section 958(a)) stock in the controlled foreign corporation during such CFC year.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H4957A21DC55E4CEAB8C8A54CBF63C6FA"><enum>(4)</enum><header>Regulatory authority</header><text>The Secretary shall prescribe such regulations or other guidance as may be necessary or appropriate to carry out the purposes of this subsection, including regulations or other guidance allowing taxpayers to elect, or requiring taxpayers, to close the taxable year of a controlled foreign corporation upon a direct or indirect disposition of stock of such corporation.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HC281B2E7FE5149459A9682B2C1D77A9B"><enum>(b)</enum><header>Coordination with section 951A</header>
<paragraph commented="no" display-inline="no-display-inline" id="H264CB05BC1684550A3956275645A1741"><enum>(1)</enum><header display-inline="yes-display-inline">Tested income</header><text>Section 951A(b), as redesignated by <external-xref legal-doc="usc" parsable-cite="usc/26/70323">section 70323(a)(2),</external-xref> is amended—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H14775ABAF879426885FF087D58FB2879"><enum>(A)</enum><text>in paragraph (1)(A), by striking <quote>(determined for each taxable year of such controlled foreign corporation which ends in or with such taxable year of such United States shareholder)</quote>, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HFDFFE1E76E404476B1EAE9821478426E"><enum>(B)</enum><text>in paragraph (1)(B), by striking <quote>(determined for each taxable year of such controlled foreign corporation which ends in or with such taxable year of such United States shareholder)</quote>.</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H503245D9D84847588F6F8269D361890D"><enum>(2)</enum><header display-inline="yes-display-inline">Pro rata share</header><text>Section 951A(c), as redesignated by <external-xref legal-doc="usc" parsable-cite="usc/26/70323">section 70323(a)(2),</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H7D6EB5F1425E45F38FF625F618E881C1"><enum>(A)</enum><text display-inline="yes-display-inline">in paragraph (1), by striking <quote>in which or with which the taxable year of the controlled foreign corporation ends</quote> and inserting <quote>determined under section 951(a)(3)</quote>, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H5A0BE03C63B445BEA02F2EE8876F5835"><enum>(B)</enum><text display-inline="yes-display-inline">in paragraph (2), by striking <quote>the last day in the taxable year of such foreign corporation on which such foreign corporation is a controlled foreign corporation</quote> and inserting <quote>any day in such taxable year</quote>.</text></subparagraph></paragraph></subsection>
<subsection id="H7AF60A92F49C4BA5AF36B75A59FDC8CE"><enum>(c)</enum><header>Effective dates</header>
<paragraph commented="no" display-inline="no-display-inline" id="HC65BDDE73E67479A83A75274D2243AFB"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>The amendments made by this section shall apply to taxable years of foreign corporations beginning after December 31, 2025. </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H8E3E4CDCF7D74DD7B6AEAD613C2B2CDA"><enum>(2)</enum><header>Transition rule for dividends</header><text>Except to the extent provided by the Secretary of the Treasury (or the Secretary's delegate), a dividend paid (or deemed paid) by a controlled foreign corporation shall not be treated as a dividend for purposes of applying <external-xref legal-doc="usc" parsable-cite="usc/26/951">section 951(a)(2)(B)</external-xref> of the Internal Revenue Code of 1986 (as in effect before the amendments made by this section) if—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H6CFFEDC62BAF4246B8387A48559A88D0"><enum>(A)</enum><text>such dividend—</text> <clause commented="no" display-inline="no-display-inline" id="H0A92E69A15684C768604E4D0A3912EE4"><enum>(i)</enum><text>was paid (or deemed paid) on or before June 28, 2025, during the taxable year of such controlled foreign corporation which includes such date and the United States shareholder described in section 951(a)(1) of such Code (as so in effect) did not own (within the meaning of section 958(a) of such Code) the stock of such controlled foreign corporation during the portion of such taxable year on or before June 28, 2025, or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H0788D71EDCDB4AE885DD439449CCA6A7"><enum>(ii)</enum><text display-inline="yes-display-inline">was paid (or deemed paid) after June 28, 2025, and before such controlled foreign corporation's first taxable year beginning after December 31, 2025, and</text></clause></subparagraph> <subparagraph id="H3C2F367E6896475EAC0E925A92E464C6"><enum>(B)</enum><text>such dividend does not increase the taxable income of a United States person that is subject to Federal income tax for the taxable year (including by reason of a dividends received deduction, an exclusion from gross income, or an exclusion from subpart F income).</text></subparagraph></paragraph></subsection></section></part></subchapter></chapter>
<chapter id="HB5B199C7BE984DD0B3F98F3C233683B4" style="OLC"><enum>4</enum><header>Investing in American families, communities, and small businesses</header>
<subchapter id="H77EBFE69203D4D8E8DA1EF46FED4D68A" style="OLC"><enum>A</enum><header>Permanent investments in families and children</header>
<section id="HEE9B461E459A44CEA7400D92A604A4C0"><enum>70401.</enum><header>Enhancement of employer-provided child care credit</header>
<subsection id="H61B0377C7FF2464F8D5932687D43DE5C"><enum>(a)</enum><header>Increase of amount of qualified child care expenditures taken into account</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45F">Section 45F(a)(1)</external-xref> is amended by striking <quote>25 percent</quote> and inserting <quote>40 percent (50 percent in the case of an eligible small business)</quote>.</text></subsection> <subsection id="HAD470F44E55A40BCB0D95C5CD5638AAF"><enum>(b)</enum><header>Increase of maximum credit amount</header><text>Subsection (b) of <external-xref legal-doc="usc" parsable-cite="usc/26/45F">section 45F</external-xref> is amended to read as follows:</text>
<quoted-block id="HA3044867DC94490095AFD8158A8A4E3E" display-inline="no-display-inline" style="OLC">
<subsection id="H4B190122238B494FB2D5166B92223E84"><enum>(b)</enum><header>Dollar limitation</header>
<paragraph id="H857E58836C314277A2D07C8B3F0CE3BA"><enum>(1)</enum><header>In general</header><text>The credit allowable under subsection (a) for any taxable year shall not exceed $500,000 ($600,000 in the case of an eligible small business).</text></paragraph> <paragraph id="H42EA373749164A7DBA932F582B4EE2C2"><enum>(2)</enum><header>Inflation adjustment</header><text>In the case of any taxable year beginning after 2026, the $500,000 and $600,000 amounts in paragraph (1) shall each be increased by an amount equal to—</text>
<subparagraph id="H4B2D420314354855B6220E50A3186348"><enum>(A)</enum><text>such dollar amount, multiplied by</text></subparagraph> <subparagraph id="H28766C93A0CF4391944AC6B01A716301"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2025</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HCE4BDCE6CB4143F9AD063BD447FFB3B2"><enum>(c)</enum><header>Eligible small business</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45F">Section 45F(c)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block id="HD98812C796844AC7A299849DE3D8D26B" display-inline="no-display-inline" style="OLC"> <paragraph id="HC615D5B2547B489DA4D101F914540277"><enum>(4)</enum><header>Eligible small business</header><text>The term <term>eligible small business</term> means a business that meets the gross receipts test of section 448(c), determined—</text>
<subparagraph id="H292376978625432F8D0B32D62ACDEC7C"><enum>(A)</enum><text>by substituting <quote>5-taxable-year</quote> for <quote>3-taxable-year</quote> in paragraph (1) thereof, and</text></subparagraph> <subparagraph id="HAEBD2309F41B449F965913832B35D518"><enum>(B)</enum><text>by substituting <quote>5-year</quote> for <quote>3-year</quote> in paragraph (3)(A) thereof.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HE8D89BC5E0654F54A0642B3BB248FE1F"><enum>(d)</enum><header>Credit allowed for third-party intermediaries</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45F">Section 45F(c)(1)(A)(iii)</external-xref> is amended by inserting <quote>, or under a contract with an intermediate entity that contracts with one or more qualified child care facilities to provide such child care services</quote> before the period at the end.</text></subsection> <subsection id="HCD9ED997ADE64A7BB3BDA2C4DDE18DFB"><enum>(e)</enum><header>Treatment of jointly owned or operated child care facility</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45F">Section 45F(c)(2)</external-xref> is amended by adding at the end the following new subparagraph:</text>
<quoted-block id="HA3B0449F14D04CB4B364C7903AAD2467" display-inline="no-display-inline" style="OLC">
<subparagraph id="HAB302A25940B472B8771203FB649EA19"><enum>(C)</enum><header>Treatment of jointly owned or operated child care facility</header><text>A facility shall not fail to be treated as a qualified child care facility of the taxpayer merely because such facility is jointly owned or operated by the taxpayer and other persons.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H025AA8C9FB0C49BC95D20CD45B00710D"><enum>(f)</enum><header>Regulations and guidance</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45F">Section 45F</external-xref> is amended by adding at the end the following new subsection:</text>
<quoted-block id="HF2D8718211FF49B3904ECF6464263C9E" display-inline="no-display-inline" style="OLC">
<subsection id="H1163F34DDDC34C7AB25A7D7CEE6D634A"><enum>(g)</enum><header>Regulations and guidance</header><text>The Secretary shall issue such regulations or other guidance as may be necessary to carry out the purposes of this section, including guidance to carry out the purposes of paragraphs (1)(A)(iii) and (2)(C) of subsection (c).</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HB073C4627C3C4133A39F970E7860E5EE"><enum>(g)</enum><header>Effective date</header><text>The amendments made by this section shall apply to amounts paid or incurred after December 31, 2025.</text></subsection></section>
<section id="HF0DA8F9F997E47FC9838F92B7CA9C2A7"><enum>70402.</enum><header>Enhancement of adoption credit</header>
<subsection id="H702480B0AD68436085912CC2D2B1C92C"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/23">Section 23(a)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block id="HC3DCBFF2B256489F9F74F8592B29871B" display-inline="no-display-inline" style="OLC"> <paragraph id="HAC812695FABB4BCB9326C1EA2E6FA44D"><enum>(4)</enum><header>Portion of credit refundable</header><text>So much of the credit allowed under paragraph (1) as does not exceed $5,000 shall be treated as a credit allowed under subpart C and not as a credit allowed under this subpart.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H5553C378283041CFA710445F519DC9D6"><enum>(b)</enum><header>Adjustments for inflation</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/23">Section 23(h)</external-xref> is amended to read as follows:</text> <quoted-block id="H15A958F6D828406A908EA1586D2E146D" display-inline="no-display-inline" style="OLC"> <subsection id="H513D0639C5334F7BB528B1B1CD837F57"><enum>(h)</enum><header>Adjustments for inflation</header> <paragraph id="H303CF31B773748EA81BFEFECEBA92494"><enum>(1)</enum><header>In general</header><text>In the case of a taxable year beginning after December 31, 2002, each of the dollar amounts in paragraphs (3) and (4) of subsection (a) and paragraphs (1) and (2)(A)(i) of subsection (b) shall be increased by an amount equal to—</text>
<subparagraph id="H9879A4E4CA5A4FEAA45295629D8EDF4D"><enum>(A)</enum><text>such dollar amount, multiplied by</text></subparagraph> <subparagraph id="HE9DC40303B6B40DE8C5B676E587CDD80"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2001</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph></paragraph>
<paragraph id="H0AC8C35AE6AD4853BB2C34B602D7B0C3"><enum>(2)</enum><header>Rounding</header><text>If any amount as increased under paragraph (1) is not a multiple of $10, such amount shall be rounded to the nearest multiple of $10.</text></paragraph> <paragraph id="H86BC954701C3493BB5BB20BAFDC97947"><enum>(3)</enum><header>Special rule for refundable portion</header><text>In the case of the dollar amount in subsection (a)(4), paragraph (1) shall be applied—</text>
<subparagraph id="H71841828C3E447D0B15A5E6445897B2E"><enum>(A)</enum><text>by substituting <quote>2025</quote> for <quote>2002</quote> in the matter preceding subparagraph (A), and</text></subparagraph> <subparagraph id="H79B1FA3CFD5E4CACAC4686AC971028BF"><enum>(B)</enum><text>by substituting <quote>calendar year 2024</quote> for <quote>calendar year 2001</quote> in subparagraph (B) thereof.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HDF798881269542749496711B2D721451"><enum>(c)</enum><header>Exclusion of refundable portion of credit from carryforward</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/23">Section 23(c)(1)</external-xref> is amended by striking <quote>credit allowable under subsection (a)</quote> and inserting <quote>portion of the credit allowable under subsection (a) which is allowed under this subpart</quote>.</text></subsection> <subsection id="H53381A775FEA43EAB5BEDFE001FFC871"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection></section>
<section id="HDFE455A066624D67B5650F99E2C7A2C7"><enum>70403.</enum><header>Recognizing Indian tribal governments for purposes of determining whether a child has special needs for purposes of the adoption credit</header>
<subsection id="H6E347516845A4209B2CCE6217E25B6E4"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/23">Section 23(d)(3)</external-xref> is amended—</text> <paragraph id="HA2C5A489DF10491B89C7A82A8BA1C45E"><enum>(1)</enum><text>in subparagraph (A), by inserting <quote>or Indian tribal government</quote> after <quote>a State</quote>, and</text></paragraph>
<paragraph id="H7702F283F700442B95AF8A28EFA809D7"><enum>(2)</enum><text>in subparagraph (B), by inserting <quote>or Indian tribal government</quote> after <quote>such State</quote>.</text></paragraph></subsection> <subsection id="H38509E3602F6460481E4EDB8B49211B1"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2024.</text></subsection></section>
<section id="H6AC4021E141E4481B9686406753BBE56"><enum>70404.</enum><header>Enhancement of the dependent care assistance program</header>
<subsection id="HA0E3075F31FA4DA7A94A0FADCDFE46F4"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/129">Section 129(a)(2)(A)</external-xref> is amended by striking <quote>$5,000 ($2,500</quote> and inserting <quote>$7,500 ($3,750</quote>.</text></subsection> <subsection id="H1BB34333C52844AAA13BD1ABA4D2A7D3" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section commented="no" display-inline="no-display-inline" id="H9EB00F7D93974B22A2B859DB25AF7FBD"><enum>70405.</enum><header>Enhancement of child and dependent care tax credit</header>
<subsection commented="no" display-inline="no-display-inline" id="H91953BA53E3A490F86A3F107FD62C8B7"><enum>(a)</enum><header>In general</header><text>Paragraph (2) of <external-xref legal-doc="usc" parsable-cite="usc/26/21">section 21(a)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H914BB293B82844A09DC8FE387601AA96"> <paragraph commented="no" display-inline="no-display-inline" id="HE095B1A5CF9846209C23F3E9F0E3B863"><enum>(2)</enum><header>Applicable percentage defined</header><text>For purposes of paragraph (1), the term <term>applicable percentage</term> means 50 percent—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H301FFC6C94934BE2A08C37324991D7A6"><enum>(A)</enum><text>reduced (but not below 35 percent) by 1 percentage point for each $2,000 or fraction thereof by which the taxpayer's adjusted gross income for the taxable year exceeds $15,000, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H76F356BD85D440F3B4BA7DDD5EB67106"><enum>(B)</enum><text>further reduced (but not below 20 percent) by 1 percentage point for each $2,000 ($4,000 in the case of a joint return) or fraction thereof by which the taxpayer's adjusted gross income for the taxable year exceeds $75,000 ($150,000 in the case of a joint return).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H98174FDEB08C4532B28C42A154E88454"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></subchapter> <subchapter id="H72E82A2B355942EA9F48CD11C1F8C8E8" style="OLC"><enum>B</enum><header>Permanent investments in students and reforms to tax-exempt institutions</header> <section id="H40B0CC84AB51493B91EA37B02915C60E"><enum>70411.</enum><header>Tax credit for contributions of individuals to scholarship granting organizations</header> <subsection id="HCCC6344278434521971A1D5A0584C53D"><enum>(a)</enum><header>Allowance of credit for contributions of individuals to scholarship granting organizations</header> <paragraph id="HDF59DF13DB824B659DC8A85ED8BE3E51"><enum>(1)</enum><header>In general</header><text>Subpart A of part IV of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after section 25E the following new section:</text>
<quoted-block id="H6A5DCBA3007B4A05B9B2082FB934BB01" display-inline="no-display-inline" style="OLC">
<section id="H01EB578D904F4089B4DB10A6CADA6CDC"><enum>25F.</enum><header>Qualified elementary and secondary education scholarships</header>
<subsection id="H429EDF0E45AB4360B099F8D0880A6FB3"><enum>(a)</enum><header>Allowance of credit</header><text>In the case of an individual who is a citizen or resident of the United States (within the meaning of section 7701(a)(9)), there shall be allowed as a credit against the tax imposed by this chapter for the taxable year an amount equal to the aggregate amount of qualified contributions made by the taxpayer during the taxable year.</text></subsection> <subsection id="H5B9FC95F98D7416C931A59E692FF15E2"><enum>(b)</enum><header>Limitations</header> <paragraph id="HD1376DBA2ADD42CEA9C24F68D19ABE68"><enum>(1)</enum><header>In general</header><text>The credit allowed under subsection (a) to any taxpayer for any taxable year shall not exceed $1,700.</text></paragraph>
<paragraph id="HF26BA9E61A404671AE73F9ACCFCBEFA0"><enum>(2)</enum><header>Reduction based on state credit</header><text>The amount allowed as a credit under subsection (a) for a taxable year shall be reduced by the amount allowed as a credit on any State tax return of the taxpayer for qualified contributions made by the taxpayer during the taxable year.</text></paragraph></subsection> <subsection id="HDFDD82204DB64DC88EF65FD60DB85E70"><enum>(c)</enum><header>Definitions</header><text>For purposes of this section—</text>
<paragraph id="H04463B6C032F469B972B66002AACB206"><enum>(1)</enum><header>Covered State</header><text>The term <term>covered State</term> means one of the States, or the District of Columbia, that, for a calendar year, voluntarily elects to participate under this section and to identify scholarship granting organizations in the State, in accordance with subsection (g). </text></paragraph> <paragraph id="H7463BC2B38734D94BEA0CF703B4C83B1"><enum>(2)</enum><header>Eligible student</header><text>The term <term>eligible student</term> means an individual who—</text>
<subparagraph id="H0FF1EB2F64F9410A9FF5DE066150C96D"><enum>(A)</enum><text>is a member of a household with an income which, for the calendar year prior to the date of the application for a scholarship, is not greater than 300 percent of the area median gross income (as such term is used in section 42), and</text></subparagraph> <subparagraph id="H761F834238DB4FEDA59EFD2CB65AD983"><enum>(B)</enum><text>is eligible to enroll in a public elementary or secondary school.</text></subparagraph></paragraph>
<paragraph id="H99E815B9FAC2493DBC0063078B201191"><enum>(3)</enum><header>Qualified contribution</header><text>The term <term>qualified contribution</term> means a charitable contribution of cash to a scholarship granting organization that uses the contribution to fund scholarships for eligible students solely within the State in which the organization is listed pursuant to subsection (g).</text></paragraph> <paragraph id="H8DE6A67575B54705B8CB0DCD09FCDF38"><enum>(4)</enum><header>Qualified elementary or secondary education expense</header><text>The term <term>qualified elementary or secondary education expense</term> means any expense of an eligible student which is described in section 530(b)(3)(A).</text></paragraph>
<paragraph id="H827AEB96CB4144048CF3D46F30351A7F"><enum>(5)</enum><header>Scholarship granting organization</header><text>The term <term>scholarship granting organization</term> means any organization—</text> <subparagraph id="H15BC08A2AD764E33A39FCA5945AE4900"><enum>(A)</enum><text>which—</text>
<clause id="H20B9B0DD43A940479DAFA803CA391E7D"><enum>(i)</enum><text>is described in section 501(c)(3) and exempt from tax under section 501(a), and</text></clause> <clause id="HCABBFDA8249749EC914E2DBA3C962F45"><enum>(ii)</enum><text>is not a private foundation,</text></clause></subparagraph>
<subparagraph id="H8076F349ECF2455881D1343E74132D1B"><enum>(B)</enum><text>which prevents the co-mingling of qualified contributions with other amounts by maintaining one or more separate accounts exclusively for qualified contributions, </text></subparagraph> <subparagraph id="H802E782A64414F0395F82AAC355828D6"><enum>(C)</enum><text>which satisfies the requirements of subsection (d), and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H2DF2CCC6197D401D9753D4F50456A7BD"><enum>(D)</enum><text display-inline="yes-display-inline"> which is included on the list submitted for the applicable covered State under subsection (g) for the applicable year.</text></subparagraph></paragraph></subsection> <subsection id="HBC250E6E5B94413F9DA24489B167645D"><enum>(d)</enum><header>Requirements for scholarship granting organizations</header> <paragraph id="H8DB507DB43CF4883BE8C684C8AF4D72C"><enum>(1)</enum><header>In general</header><text>An organization meets the requirements of this subsection if—</text>
<subparagraph id="H6D30C786F8EA48DE9199C45D24F1A44A"><enum>(A)</enum><text>such organization provides scholarships to 10 or more students who do not all attend the same school,</text></subparagraph> <subparagraph id="H1ECD3E1F8CBD4EDBA6252C4FD7E0A1A8"><enum>(B)</enum><text>such organization spends not less than 90 percent of the income of the organization on scholarships for eligible students,</text></subparagraph>
<subparagraph id="H0184B439C7734DBBB8458BBF56197CBF"><enum>(C)</enum><text>such organization does not provide scholarships for any expenses other than qualified elementary or secondary education expenses,</text></subparagraph> <subparagraph id="HD94E01AF42ED47E9995045AE8B5754CE"><enum>(D)</enum><text>such organization provides a scholarship to eligible students with a priority for—</text>
<clause id="H01D77DA16EAB48D395A2039A685C2809"><enum>(i)</enum><text>students awarded a scholarship the previous school year, and</text></clause> <clause id="H33E8AC2FF31A4C31B933E888E2B169FF"><enum>(ii)</enum><text>after application of clause (i), any eligible students who have a sibling who was awarded a scholarship from such organization,</text></clause></subparagraph>
<subparagraph id="HB40D27774FCB490C8E166528B5096AE8" commented="no"><enum>(E)</enum><text>such organization does not earmark or set aside contributions for scholarships on behalf of any particular student, and</text></subparagraph> <subparagraph id="HAC47F209B4714214A80F7ADF6DF25C40" commented="no"><enum>(F)</enum><text>such organization—</text>
<clause commented="no" display-inline="no-display-inline" id="HAAB39D6EB38D47D29F55E530A5E8BE07"><enum>(i)</enum><text display-inline="yes-display-inline">verifies the annual household income and family size of eligible students who apply for scholarships to ensure such students meet the requirement of subsection (c)(2)(A), and </text></clause> <clause commented="no" display-inline="no-display-inline" id="HFAD9890BCD2541039FCD71B5567843B3"><enum>(ii)</enum><text display-inline="yes-display-inline">limits the awarding of scholarships to eligible students who are a member of a household for which the income does not exceed the amount established under subsection (c)(2)(A).</text></clause></subparagraph></paragraph>
<paragraph id="H836189D028EE46DE9A5FEE66E81D4CF9"><enum>(2)</enum><header>Prohibition on self-dealing</header>
<subparagraph id="H4478CB0792834184A9A39CFB822BB6C0"><enum>(A)</enum><header>In general</header><text>A scholarship granting organization may not award a scholarship to any disqualified person.</text></subparagraph> <subparagraph id="H1AA67C63B791404193A6171290E3A90C"><enum>(B)</enum><header>Disqualified person</header><text>For purposes of this paragraph, a disqualified person shall be determined pursuant to rules similar to the rules of section 4946.</text></subparagraph></paragraph></subsection>
<subsection id="H2CA5839ABAAE4AD2B4D45C487539B9FC"><enum>(e)</enum><header>Denial of double benefit</header><text>Any qualified contribution for which a credit is allowed under this section shall not be taken into account as a charitable contribution for purposes of section 170.</text></subsection> <subsection id="H8D9369F18DAE4EB792ED2FA039F622CF"><enum>(f)</enum><header>Carryforward of unused credit</header> <paragraph id="HAF5F2C6AED894DAA81799B9EF026F6A4"><enum>(1)</enum><header>In general</header><text>If the credit allowable under subsection (a) for any taxable year exceeds the limitation imposed by section 26(a) for such taxable year reduced by the sum of the credits allowable under this subpart (other than this section, section 23, and section 25D), such excess shall be carried to the succeeding taxable year and added to the credit allowable under subsection (a) for such taxable year.</text></paragraph>
<paragraph id="HC8EAEA4DF99B45C68FCBF5C1E15B1B5D"><enum>(2)</enum><header>Limitation</header><text>No credit may be carried forward under this subsection to any taxable year following the fifth taxable year after the taxable year in which the credit arose. For purposes of the preceding sentence, credits shall be treated as used on a first-in first-out basis.</text></paragraph></subsection> <subsection id="HA03054FD28DA445BAD2CA1C5BF1E2CD8"><enum>(g)</enum><header>State list of scholarship granting organizations</header> <paragraph id="H0BBDC31F30D84A19A545475B38F87106"><enum>(1)</enum><header>List</header> <subparagraph commented="no" display-inline="no-display-inline" id="HF06BC4BC82304C43B389F5B51FFA1EE8"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Not later than January 1 of each calendar year (or, with respect to the first calendar year for which this section applies, as early as practicable), a State that voluntarily elects to participate under this section shall provide to the Secretary a list of the scholarship granting organizations that meet the requirements described in subsection (c)(5) and are located in the State.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0F4CF532C1514E4D9234F03E307062D1"><enum>(B)</enum><header>Process</header><text>The election under this paragraph shall be made by the Governor of the State or by such other individual, agency, or entity as is designated under State law to make such elections on behalf of the State with respect to Federal tax benefits.</text></subparagraph></paragraph> <paragraph id="HCB92B8F6DA1E4D898F249F192146CAF5"><enum>(2)</enum><header>Certification</header><text>Each list submitted under paragraph (1) shall include a certification that the individual, agency, or entity submitting such list on behalf of the State has the authority to perform this function.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H50C54742419647C7812EB22186DA3217"><enum>(h)</enum><header>Regulations and guidance</header><text display-inline="yes-display-inline">The Secretary shall issue such regulations or other guidance as the Secretary determines necessary to carry out the purposes of this section, including regulations or other guidance—</text> <paragraph commented="no" display-inline="no-display-inline" id="HCECA8392E6CD4E57AD97BB57EB73C7CB"><enum>(1)</enum><text display-inline="yes-display-inline">providing for enforcement of the requirements under subsections (d) and (g), and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H362CB934B0334D5FB28AFB0D43B5E6C2"><enum>(2)</enum><text display-inline="yes-display-inline">with respect to recordkeeping or information reporting for purposes of administering the requirements of this section.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="HE2653BC5F82842718D98D152DD95F849"><enum>(2)</enum><header>Conforming amendments</header> <subparagraph id="H13C03A3C43EB4CAB87BA417C8EA95EAC"><enum>(A)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/25">Section 25(e)(1)(C)</external-xref> is amended by striking <quote>and 25D</quote> and inserting <quote>25D, and 25F</quote>.</text></subparagraph>
<subparagraph id="HBDF6E2C43A3E40418F9D35407CE16633"><enum>(B)</enum><text>The table of sections for subpart A of part IV of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting after the item relating to section 25E the following new item:</text> <quoted-block id="HB61F0EBA02AA42D3A4AD8D640CA4DDA1" display-inline="no-display-inline" style="OLC"> <toc regeneration="no-regeneration"> <toc-entry level="section">Sec. 25F. Qualified elementary and secondary education scholarships. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H0C653BF9FC5F43F19EC5ECEB1464B89D"><enum>(b)</enum><header>Exclusion from gross income for scholarships for qualified elementary or secondary education expenses of eligible students</header> <paragraph id="H9FFD6AB6C41449D59E7A486970884E8F"><enum>(1)</enum><header>In general</header><text>Part III of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting before section 140 the following new section:</text>
<quoted-block id="H3C067471BB0F463386B0987E58E58C35" display-inline="no-display-inline" style="OLC">
<section id="H3ADC05A8DD24495FB8E5DFB340EDB436"><enum>139K.</enum><header>Scholarships for qualified elementary or secondary education expenses of eligible students</header>
<subsection id="H99B7493141034288B45A917FEB20134D"><enum>(a)</enum><header>In general</header><text>In the case of an individual, gross income shall not include any amounts provided to such individual or any dependent of such individual pursuant to a scholarship for qualified elementary or secondary education expenses of an eligible student which is provided by a scholarship granting organization.</text></subsection> <subsection id="HF33A9D2E64BE4B94BC5B71208E8D8F1C"><enum>(b)</enum><header>Definitions</header><text>In this section, the terms <term>qualified elementary or secondary education expense</term>, <term>eligible student</term>, and <term>scholarship granting organization</term> have the same meaning given such terms under section 25F(c).</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HC59A4869176645AD9D895F35675AD669"><enum>(2)</enum><header>Conforming amendment</header><text>The table of sections for part III of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by inserting before the item relating to section 140 the following new item:</text> <quoted-block id="HF7B286A4E03849AFAE1EE993975906B1" display-inline="no-display-inline" style="OLC"> <toc regeneration="no-regeneration"> <toc-entry level="section">Sec. 139K. Scholarships for qualified elementary or secondary education expenses of eligible students. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H97869914051945F096C670F3978C5576"><enum>(c)</enum><header>Effective date</header> <paragraph id="H62733FF47DE24317BB4FF1E5D8AFACD0"><enum>(1)</enum><header>In general</header><text>Except as otherwise provided in this subsection, the amendments made by this section shall apply to taxable years ending after December 31, 2026.</text></paragraph>
<paragraph id="HB6B2A766BF5D4AA8B88989DE50D283DC" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header>Exclusion from gross income</header><text>The amendments made by subsection (b) shall apply to amounts received after December 31, 2026, in taxable years ending after such date.</text></paragraph></subsection></section> <section id="HB97CDED887BE47ABBFFFF65F74682722"><enum>70412.</enum><header>Exclusion for employer payments of student loans</header> <subsection id="HF373437DAB234FD2986F053C441C4661"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/127">Section 127(c)(1)(B)</external-xref> is amended by striking <quote>in the case of payments made before January 1, 2026,</quote>.</text></subsection>
<subsection id="H4964B069E61A412AB0AF9B0B012F0E3E"><enum>(b)</enum><header>Inflation adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/127">Section 127</external-xref> is amended—</text> <paragraph id="H7E242DF370A6448694BB178294AEC124"><enum>(1)</enum><text>by redesignating subsection (d) as subsection (e), and</text></paragraph>
<paragraph id="HDFA0A9A401AE4CD0B45ADF4BC84B174D"><enum>(2)</enum><text>by inserting after subsection (c) the following new subsection:</text> <quoted-block id="H4A8C40AA6CF749528C3AAC4992BBE9AC" display-inline="no-display-inline" style="OLC"> <subsection id="HB88A2A2A9D8249E5866E989413EAF4F4"><enum>(d)</enum><header>Inflation adjustment</header> <paragraph id="H4D6B21C759C54DC58334B03CA7DE2644"><enum>(1)</enum><header>In general</header><text>In the case of any taxable year beginning after 2026, both of the $5,250 amounts in subsection (a)(2) shall each be increased by an amount equal to—</text>
<subparagraph id="HC5B54B3AA5F64FF2A7363C1E096525F5"><enum>(A)</enum><text>such dollar amount, multiplied by</text></subparagraph> <subparagraph id="H3016213621984B8E9251B7B548DD1847"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2025</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph></paragraph>
<paragraph id="H65FD54146C134E5B8BC9E63716AE0FA1"><enum>(2)</enum><header>Rounding</header><text>If any increase under paragraph (1) is not a multiple of $50, such increase shall be rounded to the nearest multiple of $50.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H2AB3098F70F34B3F80742FCB03D346C4"><enum>(c)</enum><header>Effective date</header><text>The amendment made by this section shall apply to payments made after December 31, 2025.</text></subsection></section>
<section id="HA7642B36F3C84E89A85C08B5270DD9F5"><enum>70413.</enum><header>Additional expenses treated as qualified higher education expenses for purposes of 529 accounts</header>
<subsection id="H802A7A2BAD1B41D7964350078C704560"><enum>(a)</enum><header>In general</header>
<paragraph commented="no" display-inline="no-display-inline" id="H0B99547429674E4787E5E0CB0F6B5033"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/529">Section 529(c)(7)</external-xref> is amended to read as follows:</text> <quoted-block id="HA22DAB1AC36344DDA8A55279CF858920" display-inline="no-display-inline" style="OLC"> <paragraph id="H521CE180DC7049ED9AD080A4E3894AAF"><enum>(7)</enum><header>Treatment of elementary and secondary tuition</header><text>Any reference in this section to the term <term>qualified higher education expense</term> shall include a reference to the following expenses in connection with enrollment or attendance at, or for students enrolled at or attending, an elementary or secondary public, private, or religious school:</text>
<subparagraph id="H29391FD072DC43A19CEF97357A7A01BB"><enum>(A)</enum><text>Tuition.</text></subparagraph> <subparagraph id="HF3C8CEB4D19542C08D8FE24028B936CB"><enum>(B)</enum><text>Curriculum and curricular materials.</text></subparagraph>
<subparagraph id="H93312256B4844C759057A1B8E7AB317D"><enum>(C)</enum><text>Books or other instructional materials.</text></subparagraph> <subparagraph id="H2C941EE5600D4337A342654980F82974"><enum>(D)</enum><text>Online educational materials.</text></subparagraph>
<subparagraph id="H3ACED6C8BB5F4DB9B4D0FA1B8AF687EA"><enum>(E)</enum><text>Tuition for tutoring or educational classes outside of the home, including at a tutoring facility, but only if the tutor or instructor is not related to the student and—</text> <clause id="H9900FE3BA1454151BED5295D42613ACA"><enum>(i)</enum><text>is licensed as a teacher in any State,</text></clause>
<clause id="H3EB34727D90042E6B8FDFF7D5F2D2EEC"><enum>(ii)</enum><text>has taught at an eligible educational institution, or</text></clause> <clause id="H8711B4050421429187003A6D892CB6EC"><enum>(iii)</enum><text>is a subject matter expert in the relevant subject.</text></clause></subparagraph>
<subparagraph id="H187FE1801060494BBF002D409C83F1E6"><enum>(F)</enum><text>Fees for a nationally standardized norm-referenced achievement test, an advanced placement examination, or any examinations related to college or university admission.</text></subparagraph> <subparagraph id="H573771BB0F4D4D45B4226219EE638587"><enum>(G)</enum><text>Fees for dual enrollment in an institution of higher education.</text></subparagraph>
<subparagraph id="H2221E7DB90A145BCAF11D05DD6A4CD10"><enum>(H)</enum><text>Educational therapies for students with disabilities provided by a licensed or accredited practitioner or provider, including occupational, behavioral, physical, and speech-language therapies.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="HE4D2761A0DE54258AD51766BE8D8ABFE"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to distributions made after the date of the enactment of this Act.</text></paragraph></subsection>
<subsection id="HA6D1B0006EB44A38AB40554E6BD0C87B"><enum>(b)</enum><header>Increase in limitation</header>
<paragraph commented="no" display-inline="no-display-inline" id="H67A891F642874A42A5D839CD6C2440DE"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The last sentence of <external-xref legal-doc="usc" parsable-cite="usc/26/529">section 529(e)(3)</external-xref> is amended by striking <quote>$10,000</quote> and inserting <quote>$20,000</quote>.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H76DE9734F189480A8A5019973F5534DC"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to taxable years beginning after December 31, 2025.</text></paragraph></subsection></section>
<section section-type="subsequent-section" id="HA38FF97DCB0A41158B3CCDD35B115064"><enum>70414.</enum><header>Certain postsecondary credentialing expenses treated as qualified higher education expenses for purposes of 529 accounts</header>
<subsection id="HB3D6CA267F5D4254BC316CD905B389E9"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/529">Section 529(e)(3)</external-xref> is amended by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" id="H8F73EBE720E84E609A53497F817ADE3A"> <subparagraph id="HF2D22D74D6724E27A93EF5FE494F2E20"><enum>(C)</enum><header>Certain postsecondary credentialing expenses</header><text display-inline="yes-display-inline">The term <term>qualified higher education expenses</term> includes qualified postsecondary credentialing expenses (as defined in subsection (f)).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HFD71B156D3F6487B9BEA05C5243CDABD"><enum>(b)</enum><header>Qualified postsecondary credentialing expenses</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/529">Section 529</external-xref> is amended by redesignating subsection (f) as subsection (g) and by inserting after subsection (e) the following new subsection:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HAFC2E9AD71FB4B95B747ADA2BC9D7A92"> <subsection id="H333733E0BBAE4CEFBCFF78613F999AF0"><enum>(f)</enum><header>Qualified postsecondary credentialing expenses</header><text display-inline="yes-display-inline">For purposes of this section—</text>
<paragraph id="H1755AC74A4034D7F88C918AC3658213A"><enum>(1)</enum><header>In general</header><text>The term <term>qualified postsecondary credentialing expenses</term> means—</text> <subparagraph id="H93AD5545CCDE48B5B98CB5DC12147576"><enum>(A)</enum><text display-inline="yes-display-inline">tuition, fees, books, supplies, and equipment required for the enrollment or attendance of a designated beneficiary in a recognized postsecondary credential program, or any other expense incurred in connection with enrollment in or attendance at a recognized postsecondary credential program if such expense would, if incurred in connection with enrollment or attendance at an eligible educational institution, be covered under subsection (e)(3)(A), </text></subparagraph>
<subparagraph id="HD40B8B1C9E774EFDB2AD12DEBC367711"><enum>(B)</enum><text display-inline="yes-display-inline">fees for testing if such testing is required to obtain or maintain a recognized postsecondary credential, and </text></subparagraph> <subparagraph id="HE9F271BA0DB341EA9A3AE59BF352B11A"><enum>(C)</enum><text display-inline="yes-display-inline">fees for continuing education if such education is required to maintain a recognized postsecondary credential.</text></subparagraph></paragraph>
<paragraph id="H0D11EA9DBB9A456D9C2F85C2341899E5"><enum>(2)</enum><header>Recognized postsecondary credential program</header><text>The term <term>recognized postsecondary credential program</term> means any program to obtain a recognized postsecondary credential if—</text> <subparagraph id="H8691FB0A96C74BD088AAE740D9F02F29"><enum>(A)</enum><text>such program is included on a State list prepared under section 122(d) of the Workforce Innovation and Opportunity Act (<external-xref legal-doc="usc" parsable-cite="usc/29/3152">29 U.S.C. 3152(d)</external-xref>),</text></subparagraph>
<subparagraph id="HA945FF05A1C14C9887B4CF485E499415"><enum>(B)</enum><text>such program is listed in the public directory of the Web Enabled Approval Management System (WEAMS) of the Veterans Benefits Administration, or successor directory such program, </text></subparagraph> <subparagraph id="HFFF951834663409091304F0D9A9FF294"><enum>(C)</enum><text display-inline="yes-display-inline">an examination (developed or administered by an organization widely recognized as providing reputable credentials in the occupation) is required to obtain or maintain such credential and such organization recognizes such program as providing training or education which prepares individuals to take such examination, or</text></subparagraph>
<subparagraph commented="no" id="H59B988C10ECB41CB88E0BAA223B17D1D"><enum>(D)</enum><text display-inline="yes-display-inline">such program is identified by the Secretary, after consultation with the Secretary of Labor, as being a reputable program for obtaining a recognized postsecondary credential for purposes of this subparagraph.</text></subparagraph></paragraph> <paragraph id="H0FA291F8D3864FC7BE02715608363954"><enum>(3)</enum><header>Recognized postsecondary credential</header><text>The term <term>recognized postsecondary credential</term> means—</text>
<subparagraph id="H8F7E5A952BAD4026AB46B40849BBF48E"><enum>(A)</enum><text>any postsecondary employment credential that is industry recognized and is—</text> <clause id="HCDF2CE4B9D8544E1BA837ECE9CF19920"><enum>(i)</enum><text>any postsecondary employment credential issued by a program that is accredited by the Institute for Credentialing Excellence, the National Commission on Certifying Agencies, or the American National Standards Institute,</text></clause>
<clause id="HE74E50E835384D4D9C743C4215961B02"><enum>(ii)</enum><text>any postsecondary employment credential that is included in the Credentialing Opportunities On-Line (COOL) directory of credentialing programs (or successor directory) maintained by the Department of Defense or by any branch of the Armed Forces, or </text></clause> <clause commented="no" display-inline="no-display-inline" id="H307C8D8AFAFE42279A80DFDE5022BAFE"><enum>(iii)</enum><text display-inline="yes-display-inline">any postsecondary employment credential identified for purposes of this clause by the Secretary, after consultation with the Secretary of Labor, as being industry recognized,</text></clause></subparagraph>
<subparagraph id="HDBAD9F02B4A44EA5963D3C761DDA4506"><enum>(B)</enum><text>any certificate of completion of an apprenticeship that is registered and certified with the Secretary of Labor under the Act of August 16, 1937 (commonly known as the <quote>National Apprenticeship Act</quote>; 50 Stat. 664, chapter 663; <external-xref legal-doc="usc" parsable-cite="usc/29/50">29 U.S.C. 50 et seq.</external-xref>),</text></subparagraph> <subparagraph id="H678097E4D5E04597909695E077E122A1"><enum>(C)</enum><text>any occupational or professional license issued or recognized by a State or the Federal Government (and any certification that satisfies a condition for obtaining such a license), and</text></subparagraph>
<subparagraph id="H02E67808FA084392BCD08B793B8677D7"><enum>(D)</enum><text>any recognized postsecondary credential as defined in section 3(52) of the Workforce Innovation and Opportunity Act (<external-xref legal-doc="usc" parsable-cite="usc/29/3102">29 U.S.C. 3102(52)</external-xref>), provided through a program described in paragraph (2)(A). </text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H37D2C1740CB8412FB902B87F583C01C9" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to distributions made after the date of the enactment of this Act.</text></subsection></section>
<section id="H5942BE80BF4E4BF8904995213D712BF0"><enum>70415.</enum><header>Modification of excise tax on investment income of certain private colleges and universities</header>
<subsection id="HE80FE7A4FFFF48C1A56DD43B9D097500"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/4968">Section 4968</external-xref> is amended to read as follows:</text> <quoted-block id="HE4C3D403931C4190B9963A593FA17E00" display-inline="no-display-inline" style="OLC"> <section id="H94E981F172A04908B42484435B9A7C82"><enum>4968.</enum><header>Excise tax based on investment income of private colleges and universities</header> <subsection id="HE43DB52BC1BE45C380850190EF95004A"><enum>(a)</enum><header>Tax imposed</header><text>There is hereby imposed on each applicable educational institution for the taxable year a tax equal to the applicable percentage of the net investment income of such institution for the taxable year.</text></subsection>
<subsection id="H9B89205423A146BDBC1EC3A1D1A7079C"><enum>(b)</enum><header>Applicable percentage</header><text>For purposes of this section, the term <term>applicable percentage</term> means—</text> <paragraph id="HC6A2A44D2B92488C99CE74E5A779F3B7"><enum>(1)</enum><text>1.4 percent in the case of an institution with a student adjusted endowment of at least $500,000, and not in excess of $750,000,</text></paragraph>
<paragraph id="HD1FF42832C0F435F81C0C6AD246CE212"><enum>(2)</enum><text>4 percent in the case of an institution with a student adjusted endowment in excess of $750,000, and not in excess of $2,000,000, and</text></paragraph> <paragraph id="H47283D048F4443928C7FA340D95A959C"><enum>(3)</enum><text>8 percent in the case of an institution with a student adjusted endowment in excess of $2,000,000.</text></paragraph></subsection>
<subsection id="H74449ED2A8794170B984C12E074B56CC"><enum>(c)</enum><header>Applicable educational institution</header><text>For purposes of this subchapter, the term <term>applicable educational institution</term> means an eligible educational institution (as defined in section 25A(f)(2))—</text> <paragraph id="HD6CF60E991C14305A2223866A3585B12"><enum>(1)</enum><text>which had at least 3,000 tuition-paying students during the preceding taxable year,</text></paragraph>
<paragraph id="H60C62D8BD59B411194EE5A183DFE985F"><enum>(2)</enum><text>more than 50 percent of the tuition-paying students of which are located in the United States,</text></paragraph> <paragraph id="HA17F3F10EBF747FB9B85451FC9C37550"><enum>(3)</enum><text>the student adjusted endowment of which is at least $500,000, and</text></paragraph>
<paragraph id="H9AC1BC05A6E44A93B2D37EDEBD209543"><enum>(4)</enum><text>which is not described in the first sentence of section 511(a)(2)(B) (relating to State colleges and universities).</text></paragraph></subsection> <subsection id="H6BF5953A2A3049279C61B89ED2028EAF"><enum>(d)</enum><header>Student adjusted endowment</header><text>For purposes of this section, the term <term>student adjusted endowment</term> means, with respect to any institution for any taxable year—</text>
<paragraph id="HE74D89DB303A44F2A7430F49340C8C20"><enum>(1)</enum><text>the aggregate fair market value of the assets of such institution (determined as of the end of the preceding taxable year), other than those assets which are used directly in carrying out the institution's exempt purpose, divided by</text></paragraph> <paragraph id="H5A775E738B724DA08C6A3ECA86793048"><enum>(2)</enum><text>the number of students of such institution.</text></paragraph></subsection>
<subsection id="H81EAFB00ADED4E2A95C1F1DBB58AD4F8"><enum>(e)</enum><header>Determination of number of students</header><text>For purposes of subsections (c) and (d), the number of students of an institution (including for purposes of determining the number of students at a particular location) shall be based on the daily average number of full-time students attending such institution (with part-time students taken into account on a full-time student equivalent basis).</text></subsection> <subsection id="HAF1DC027AD544571984AB65CE7D5E7C8"><enum>(f)</enum><header>Net investment income</header><text>For purposes of this section—</text>
<paragraph id="H58657CF509454063A5154B5B8E7A7D8E"><enum>(1)</enum><header>In general</header><text>Net investment income shall be determined under rules similar to the rules of section 4940(c).</text></paragraph> <paragraph id="H37D1BEFF63AD417FB71DCAC2ADAD2BD4"><enum>(2)</enum><header>Override of certain regulatory exceptions</header> <subparagraph id="HC132640FABD246DAAE71557F8C9E9E5A"><enum>(A)</enum><header>Student loan interest</header><text>Net investment income shall be determined by taking into account any interest income from a student loan made by the applicable educational institution (or any related organization) as gross investment income.</text></subparagraph>
<subparagraph id="H625FBB8F46484FB1912AF9E528B280A7"><enum>(B)</enum><header>Federally-subsidized royalty income</header>
<clause id="H58641D817C8E4B80ABDF5DAE23ADE3F0"><enum>(i)</enum><header>In general</header><text>Net investment income shall be determined by taking into account any Federally-subsidized royalty income as gross investment income.</text></clause> <clause id="HCED653E2C8964034860510EA86E3ED49"><enum>(ii)</enum><header>Federally-subsidized royalty income</header><text>For purposes of this subparagraph—</text>
<subclause id="H88955B55BD6E4EF3A3818F19F24BF492"><enum>(I)</enum><header>In general</header><text>The term <term>Federally-subsidized royalty income</term> means any otherwise-regulatory-exempt royalty income if any Federal funds were used in the research, development, or creation of the patent, copyright, or other intellectual or intangible property from which such royalty income is derived.</text></subclause> <subclause id="HC518202A713244EE93FBF12EC8DB1CEA"><enum>(II)</enum><header>Otherwise-regulatory-exempt royalty income</header><text>For purposes of this subparagraph, the term <term>otherwise-regulatory-exempt royalty income</term> means royalty income which (but for this subparagraph) would not be taken into account as gross investment income by reason of being derived from patents, copyrights, or other intellectual or intangible property which resulted from the work of students or faculty members in their capacities as such with the applicable educational institution.</text></subclause>
<subclause id="HFDEAC3DA97DA41B6865D6DEB175B4FAD"><enum>(III)</enum><header>Federal funds</header><text>The term <term>Federal funds</term> includes any grant made by, and any payment made under any contract with, any Federal agency to the applicable educational institution, any related organization, or any student or faculty member referred to in subclause (II).</text></subclause></clause></subparagraph></paragraph></subsection> <subsection id="HAE64F022B75748D9BB9ED19E91A1C013"><enum>(g)</enum><header>Assets and net investment income of related organizations</header> <paragraph id="H4C23D9E6643D44C985870A191E020131"><enum>(1)</enum><header>In general</header><text>For purposes of subsections (d) and (f), assets and net investment income of any related organization with respect to an educational institution shall be treated as assets and net investment income, respectively, of the educational institution, except that—</text>
<subparagraph id="HFB1862B6970F46A6B7BE3F8D098CD87C"><enum>(A)</enum><text>no such amount shall be taken into account with respect to more than 1 educational institution, and</text></subparagraph> <subparagraph id="H027AB818A6D64799BB984D37306E226C"><enum>(B)</enum><text>unless such organization is controlled by such institution or is described in section 509(a)(3) with respect to such institution for the taxable year, assets and net investment income which are not intended or available for the use or benefit of the educational institution shall not be taken into account.</text></subparagraph></paragraph>
<paragraph id="H9121182C580D429D99E67998BF7B2DC1"><enum>(2)</enum><header>Related organization</header><text>For purposes of this subsection, the term <term>related organization</term> means, with respect to an educational institution, any organization which—</text> <subparagraph id="H1E785B42205F4D2F88693531AD3D9498"><enum>(A)</enum><text>controls, or is controlled by, such institution,</text></subparagraph>
<subparagraph id="HDAB791C8F284427EB1C52DFCE3ABE072"><enum>(B)</enum><text>is controlled by 1 or more persons which also control such institution, or</text></subparagraph> <subparagraph id="HC7705E1E48584C3080D6EA1D47E43522"><enum>(C)</enum><text>is a supported organization (as defined in section 509(f)(3)), or an organization described in section 509(a)(3), during the taxable year with respect to such institution.</text></subparagraph></paragraph></subsection>
<subsection id="H65C0D9042A114FC68A2C7E080B5F0FC4"><enum>(h)</enum><header>Regulations</header><text>The Secretary shall prescribe such regulations or other guidance as may be necessary to prevent avoidance of the tax under this section, including regulations or other guidance to prevent avoidance of such tax through the restructuring of endowment funds or other arrangements designed to reduce or eliminate the value of net investment income or assets subject to the tax imposed by this section.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H7BBCD92665524CBDA94A57D03077BDE9"><enum>(b)</enum><header>Requirement to report certain information with respect to application of excise tax based on investment income of private colleges and universities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6033">Section 6033</external-xref> is amended by redesignating subsection (o) as subsection (p) and by inserting after subsection (n) the following new subsection:</text>
<quoted-block id="HDF8348A3EAF44297A3BD49EB5A0D1F57" display-inline="no-display-inline" style="OLC">
<subsection id="H81BB8F84C39449B5A7B0208F20500CD2"><enum>(o)</enum><header>Requirement to report certain information with respect to excise tax based on investment income of private colleges and universities</header><text>Each applicable educational institution described in section 4968(c) which is subject to the requirements of subsection (a) shall include on the return required under subsection (a)—</text> <paragraph commented="no" display-inline="no-display-inline" id="H3965CE275FF947F681AE89A9737C6A42"><enum>(1)</enum><text>the number of tuition-paying students taken into account under section 4968(c), and</text></paragraph>
<paragraph id="H4B86A18D3DB246FAB9A7E7DEC9CF3BDD"><enum>(2)</enum><text>the number of students of such institution (determined under the rules of section 4968(e)).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HE8CC11BAD84B40238699178E11BFEAD3"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="HF5542DCA1A504B0A899B4C0728712093"><enum>70416.</enum><header>Expanding application of tax on excess compensation within tax-exempt organizations</header>
<subsection id="HA76AD5871AC04A278D61DF4B942BA3E2"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/4960">Section 4960(c)(2)</external-xref> is amended to read as follows:</text> <quoted-block id="HD32B0AB58394410483F1D46103C3D7F1" display-inline="no-display-inline" style="OLC"> <paragraph id="H6D554E670A2545AD98453F1D7EA27187"><enum>(2)</enum><header>Covered employee</header><text>For purposes of this section, the term <term>covered employee</term> means any employee of an applicable tax-exempt organization (or any predecessor of such an organization) and any former employee of such an organization (or predecessor) who was such an employee during any taxable year beginning after December 31, 2016.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H285698F2998749F7947724CCB1B15718"><enum>(b)</enum><header>Effective date</header><text>The amendment made by subsection (a) shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></subchapter> <subchapter id="HD35921F56E5F4E2785E21BB28768CC2B" style="OLC"><enum>C</enum><header>Permanent investments in community development</header> <section section-type="subsequent-section" id="HEFF0D0991580495ABFAE89F239623E78"><enum>70421.</enum><header>Permanent renewal and enhancement of opportunity zones</header> <subsection commented="no" display-inline="no-display-inline" id="HBF594E630C96407196BE530C547906C2"><enum>(a)</enum><header display-inline="yes-display-inline">Decennial designations</header> <paragraph commented="no" display-inline="no-display-inline" id="HC75E0BF7095647C8867880A90F557C46"><enum>(1)</enum><header>Determination period</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-1(c)(2)(B)</external-xref> is amended by striking <quote>beginning on the date of the enactment of the Tax Cuts and Jobs Act</quote> and inserting <quote>beginning on the decennial determination date</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HBE5E5FBDA84B403796D1CA4EF5D60D90"><enum>(2)</enum><header>Decennial determination date</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-1(c)(2)</external-xref> is amended by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF2002F6251C2483C847D3B6FBB48D411"> <subparagraph commented="no" display-inline="no-display-inline" id="H9409B27E759443DA9D6D182342EAEDB4"><enum>(C)</enum><header>Decennial determination date</header><text>The term <term>decennial determination date</term> means—</text>
<clause commented="no" display-inline="no-display-inline" id="H51F716F8E619401581AD1D41CEFC8A95"><enum>(i)</enum><text display-inline="yes-display-inline">July 1, 2026, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HF322386A68A54FE3A20AD2DEE394CE14"><enum>(ii)</enum><text>each July 1 of the year that is 10 years after the preceding decennial determination date under this subparagraph.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H22893EBCD65F401FBA87AAAC33F5A2B1"><enum>(3)</enum><header>Repeal of special rule for Puerto Rico</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-1(b)</external-xref> is amended by striking paragraph (3).</text></paragraph> <paragraph id="HC6DE7FBD12484960BCB16F2EB080BAF4"><enum>(4)</enum><header>Limitation on number of designations</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-1(d)(1)</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HEE7A74BDBBFB438DA06EFFE03743CBA1"><enum>(A)</enum><text>in paragraph (1)—</text> <clause commented="no" display-inline="no-display-inline" id="H75563CF4BFE84CF6AFBFF6718A54CB5A"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>and subsection (b)(3)</quote>, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H1058B4269C664A77B82FDA69AE17C19D"><enum>(ii)</enum><text>by inserting <quote>during any period</quote> after <quote>the number of population census tracts in a State that may be designated as qualified opportunity zones under this section</quote>, and</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H6C7C203218CD46A7B30BB505389DB7A2"><enum>(B)</enum><text display-inline="yes-display-inline">in paragraph (2), by inserting <quote>during any period</quote> before the period at the end.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HF1C8CAE5A7194DA3B9F9FD5E968750C9"><enum>(5)</enum><header>Effective dates</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HC117A16D4FF64B0390EC5061A4773E93"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Except as provided in subparagraph (B), the amendments made by this subsection shall take effect on the date of the enactment of this Act.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H6FC7D0D6B3C84F478100180691AF465D"><enum>(B)</enum><header>Puerto Rico</header><text>The amendment made by paragraph (3) shall take effect on December 31, 2026.</text></subparagraph></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HAC156B60ACE141B1A9F192F6B8FDDDD5"><enum>(b)</enum><header>Qualification for designations</header>
<paragraph commented="no" display-inline="no-display-inline" id="HCC82B8658EF748049FD67D477E532EAD"><enum>(1)</enum><header display-inline="yes-display-inline">Determination of low-income communities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-1(c)</external-xref> is amended by striking all that precedes paragraph (2) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H3D9B1C882DD04DECA05ACA612423983D"> <subsection commented="no" display-inline="no-display-inline" id="HB6BC3203F14F422D9A9A9C41B617ACB1"><enum>(c)</enum><header>Other definitions</header><text>For purposes of this section—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H485F32A860FD4F9ABBC270C6E2FFB8A9"><enum>(1)</enum><header>Low-income communities</header><text display-inline="yes-display-inline">The term <term>low-income community</term> means any population census tract if—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H4ADD48267174441AA34EA1555F699B2A"><enum>(A)</enum><text>such population census tract has a median family income that—</text>
<clause commented="no" display-inline="no-display-inline" id="HCC3C644A012248AABF294FC83F912553"><enum>(i)</enum><text display-inline="yes-display-inline">in the case of a population census tract not located within a metropolitan area, does not exceed 70 percent of the statewide median family income, or</text></clause> <clause commented="no" display-inline="no-display-inline" id="HD16FD15E9BFA448DA6A55404123035FB"><enum>(ii)</enum><text>in the case of a population census tract located within a metropolitan area, does not exceed 70 percent of the metropolitan area median family income, or</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H061EA05D92794AFCAF60C97E960B2D24"><enum>(B)</enum><text display-inline="yes-display-inline">such population census tract—</text> <clause commented="no" display-inline="no-display-inline" id="HADA2BC3E169E41F6863DEE2DA1FA7004"><enum>(i)</enum><text display-inline="yes-display-inline">has a poverty rate of at least 20 percent, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H6D2436BF3E6242E3B5945F1CCBD3AC56"><enum>(ii)</enum><text>has a median family income that—</text> <subclause commented="no" display-inline="no-display-inline" id="H18E56DDCACE04848A95F3AAC9E6396F2"><enum>(I)</enum><text display-inline="yes-display-inline">in the case of a population census tract not located within a metropolitan area, does not exceed 125 percent of the statewide median family income, or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H22CC729FAF6C42C6911C50A374F93332"><enum>(II)</enum><text>in the case of a population census tract located within a metropolitan area, does not exceed 125 percent of the metropolitan area median family income.</text></subclause></clause></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H806149C0B49C4DD7B48633403918288E"><enum>(2)</enum><header>Repeal of rule for contiguous census tracts</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-1</external-xref> is amended by striking subsection (e) and by redesignating subsection (f) as subsection (e).</text></paragraph>
<paragraph id="HC674EBB256934E6AA393B4A5E5EFDF6D"><enum>(3)</enum><header>Period for which designation is in effect</header><text>Section 1400Z-1(e), as redesignated by paragraph (2), is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H95AC95BE33E748D3B1A35C7D048F53B0"> <subsection commented="no" display-inline="no-display-inline" id="H19A7745B36354084A0344FB837C8B5E6"><enum>(e)</enum><header>Period for which designation is in effect</header> <paragraph commented="no" display-inline="no-display-inline" id="H4433BCD82FD94BE4902FC9AA441944CD"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">A designation as a qualified opportunity zone shall remain in effect for the period beginning on the applicable start date and ending on the day before the date that is 10 years after the applicable start date. </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HF2548BEFF9CD49F68B0C2C9E2CAD551D"><enum>(2)</enum><header>Applicable start date</header><text>For purposes of this section, the term <term>applicable start date</term> means, with respect to any qualified opportunity zone designated under this section, the January 1 following the date on which such qualified opportunity zone was certified and designated by the Secretary under subsection (b)(1)(B).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H19E4DC3709804CFE81F29A8267C69DDF"><enum>(4)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to areas designated under <external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">section 1400Z-1</external-xref> of the Internal Revenue Code of 1986 after the date of the enactment of this Act.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H5ECA5B749049486F801AE352A51DC45D"><enum>(c)</enum><header>Application of special rules for capital gains</header>
<paragraph commented="no" display-inline="no-display-inline" id="HADE531235BE040688CABDA78D455F8B4"><enum>(1)</enum><header display-inline="yes-display-inline">Repeal of sunset on election</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-2(a)(2)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H3341D7BA9DFD43DFA719E03D6330884E"> <paragraph id="HE40B068E9E274F0C95967B2050B24439"><enum>(2)</enum><header>Election</header><text>No election may be made under paragraph (1) with respect to a sale or exchange if an election previously made with respect to such sale or exchange is in effect.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H203FC820F79E4D69AC04CB58438AC109"><enum>(2)</enum><header>Modification of rules for deferral of gain</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-2(b)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H67AB90CF1A7B42A09E0C8750EEC58206"> <subsection id="H6C7CE25AC26A4FFCAFEA96B125A4F20C"><enum>(b)</enum><header>Deferral of gain invested in opportunity zone property</header> <paragraph id="H1508E51DBF8F4F3BBE1ACBAC727675AE"><enum>(1)</enum><header>Year of inclusion</header><text display-inline="yes-display-inline">Gain to which subsection (a)(1)(B) applies shall be included in gross income in the taxable year which includes the earlier of—</text>
<subparagraph id="H0E2C75C247DB45D0B1234B9B4EDE1FE9"><enum>(A)</enum><text>the date on which such investment is sold or exchanged, or</text></subparagraph> <subparagraph id="HE84CCF019C774CA58C3930BD14062522"><enum>(B)</enum><text>the date which is 5 years after the date the investment in the qualified opportunity fund was made.</text></subparagraph></paragraph>
<paragraph id="H8BB18E1169F84AF391A69C23413193C2"><enum>(2)</enum><header>Amount includible</header>
<subparagraph id="H9638B1A5F2D74F0589BFA4CDE4035122"><enum>(A)</enum><header>In general</header><text>The amount of gain included in gross income under subsection (a)(1)(B) shall be the excess of—</text> <clause id="HA900F725AAC64875846829D9759BF18E"><enum>(i)</enum><text>the lesser of the amount of gain excluded under subsection (a)(1)(A) or the fair market value of the investment as determined as of the date described in paragraph (1), over</text></clause>
<clause id="HF3B493B6C402470FB61F398307438AF5"><enum>(ii)</enum><text>the taxpayer’s basis in the investment.</text></clause></subparagraph> <subparagraph id="H16A42E238A934A559DB515DFEE2685CE"><enum>(B)</enum><header>Determination of basis</header> <clause id="H8D3E3E8E028F4C99AA799684FB2A3261"><enum>(i)</enum><header>In general</header><text>Except as otherwise provided in this subparagraph or subsection (c), the taxpayer’s basis in the investment shall be zero.</text></clause>
<clause id="HF00DF44DE6074B13839B1BB3A2DE9D89"><enum>(ii)</enum><header>Increase for gain recognized under subsection <enum-in-header>(a)(1)(B)</enum-in-header></header><text>The basis in the investment shall be increased by the amount of gain recognized by reason of subsection (a)(1)(B) with respect to such investment.</text></clause> <clause id="HC226BFE7049A4BAD820CA172AFD7CFEE"><enum>(iii)</enum><header>Investments held for 5 years</header> <subclause commented="no" display-inline="no-display-inline" id="H9DAEE84608E54083A4A49A6A9D1BD43E"><enum>(I)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of any investment held for at least 5 years, the basis of such investment shall be increased by an amount equal to 10 percent (30 percent in the case of any investment in a qualified rural opportunity fund) of the amount of gain deferred by reason of subsection (a)(1)(A).</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HF4919EAFAB4F44F685E8F8468221728E"><enum>(II)</enum><header>Application of increase</header><text>For purposes of this subsection, any increase in basis under this clause shall be treated as occurring before the date described in paragraph (1)(B).</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H93AD3C9DCFFD4BA79CE22C7C064AC4FA"><enum>(C)</enum><header>Qualified rural opportunity fund</header><text>For purposes of subparagraph (B)(iii)—</text>
<clause id="H205DCB35594045C3BB22FE684B0C05E0"><enum>(i)</enum><header>Qualified rural opportunity fund</header><text>The term <term>qualified rural opportunity fund</term> means a qualified opportunity fund that holds at least 90 percent of its assets in qualified opportunity zone property which—</text> <subclause id="H9DBE25907AA34DC49BA06D474002E6B3"><enum>(I)</enum><text>is qualified opportunity zone business property substantially all of the use of which, during substantially all of the fund's holding period for such property, was in a qualified opportunity zone comprised entirely of a rural area, or</text></subclause>
<subclause id="H28E8E68632014527A72FF46B5A5C59D3"><enum>(II)</enum><text>is qualified opportunity zone stock, or a qualified opportunity zone partnership interest, in a qualified opportunity zone business in which substantially all of the tangible property owned or leased is qualified opportunity zone business property described in subsection (d)(3)(A)(i) and substantially all the use of which is in a qualified opportunity zone comprised entirely of a rural area.</text></subclause><continuation-text continuation-text-level="clause">For purposes of the preceding sentence, property held in the fund shall be measured under rules similar to the rules of subsection (d)(1). </continuation-text></clause> <clause id="HBCABFA39E6C64C63AFD9FF9EED5994B0"><enum>(ii)</enum><header>Rural area</header><text>The term <term>rural area</term> means any area other than—</text>
<subclause id="HEB5246758EB64F96A8E94DCE6B01E1A9"><enum>(I)</enum><text>a city or town that has a population of greater than 50,000 inhabitants, and</text></subclause> <subclause id="H954A2174314F4418B55C5B9935539AF3"><enum>(II)</enum><text>any urbanized area contiguous and adjacent to a city or town described in subclause (I).</text></subclause></clause></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H819753B0EAE84589AB99023A3AC26596"><enum>(3)</enum><header>Special rule for investments held at least 10 years</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-2(c)</external-xref> is amended by striking <quote>makes an election under this clause</quote> and all that follows and inserting </text> <quoted-block style="OLC" display-inline="yes-display-inline" id="H8E2C1FB0CD2D4E66ACB7D156A95DE766"><text>makes an election under this subsection, the basis of such investment shall be equal to—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HB7605AAE0E2D49FC9347916F1ECD4CB8"><enum>(A)</enum><text display-inline="yes-display-inline">in the case of an investment sold before the date that is 30 years after the date of the investment, the fair market value of such investment on the date such investment is sold or exchanged, or</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H9D842CA008FB49D2BB9BB77EC6C904CD"><enum>(B)</enum><text>in any other case, the fair market value of such investment on the date that is 30 years after the date of the investment.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H46298A716A0545DBA40072D50E62E254"><enum>(4)</enum><header>Determination of qualified opportunity zone property</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H79E88A8F3E5341B0B56DF728811F68B7"><enum>(A)</enum><header display-inline="yes-display-inline">Qualified opportunity zone business property</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-2(d)(2)(D)(i)(I)</external-xref> is amended by striking <quote>December 31, 2017</quote> and inserting <quote>the applicable start date (as defined in section 1400Z-1(e)(2)) with respect to the qualified opportunity zone described in subclause (III)</quote>.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H9ED1BCF0E984465C9CCA6689CDE6BE0E"><enum>(B)</enum><header>Qualified opportunity zone stock and partnership interests</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z-2(d)(2)</external-xref> is amended—</text>
<clause commented="no" display-inline="no-display-inline" id="H1AD8B686D3BA46EA99F1A6BF0ABAB946"><enum>(i)</enum><text display-inline="yes-display-inline">by striking <quote>December 31, 2017,</quote> each place it appears in subparagraphs (B)(i)(I) and (C)(i) and inserting <quote>the applicable date</quote>, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HC79231AA64594A06BAFFC2EA76E78B8D"><enum>(ii)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H12A49902D08341D9B01B91CAC18B14AB">
<subparagraph commented="no" display-inline="no-display-inline" id="HE9F239CC572F47819A6F6589AB397FB8"><enum>(E)</enum><header>Applicable date</header><text>For purposes of this subparagraph, the term <term>applicable date</term> means, with respect to any corporation or partnership which is a qualified opportunity zone business, the earliest date described in subparagraph (D)(i)(I) with respect to the qualified opportunity zone business property held by such qualified opportunity zone business.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></clause></subparagraph> <subparagraph id="HE3912E68983C4DC6BB6B703DCC744B62" commented="no"><enum>(C)</enum><header>Special rule for improvement of existing structures in rural areas</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">Section 1400Z–2(d)(2)(D)(ii)</external-xref> is amended by inserting <quote>(50 percent of such adjusted basis in the case of property in a qualified opportunity zone comprised entirely of a rural area (as defined in subsection (b)(2)(C)(ii))</quote> after <quote>the adjusted basis of such property</quote>.</text></subparagraph></paragraph>
<paragraph id="H269462B54C124CFD9E0D35AE97B8BC68"><enum>(5)</enum><header>Effective dates</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HDDFF70E87AE8438DB0A5146B3D9EB796"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Except as otherwise provided in this paragraph, the amendments made by this subsection shall apply to amounts invested in qualified opportunity funds after December 31, 2026.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H34F9F89250984D4AAD94E65A768ACD16"><enum>(B)</enum><header>Acquisition of qualified opportunity zone property</header><text>The amendments made by subparagraphs (A) and (B) of paragraph (4) shall apply to property acquired after December 31, 2026.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE520B158634840C8B56F38AD76550D13"><enum>(C)</enum><header>Substantial Improvement</header><text>The amendment made by paragraph (4)(C) shall take effect on the date of the enactment of this Act.</text></subparagraph></paragraph></subsection> <subsection id="HE9BFB5607487474DAE2543594FF6B416"><enum>(d)</enum><header>Information reporting on qualified opportunity funds and qualified rural opportunity funds</header> <paragraph id="H73D53ADB32484A46B98B42BF27955214"><enum>(1)</enum><header>Filing requirements for funds and investors</header><text>Subpart A of part III of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/61">chapter 61</external-xref> is amended by inserting after section 6039J the following new sections:</text>
<quoted-block id="H49D19CD7ABEA4A7C94EEDC4B683BAF5B" display-inline="no-display-inline" style="OLC">
<section id="HF4D3135E4F7F462B818FD265461C6BB9"><enum>6039K.</enum><header>Returns with respect to qualified opportunity funds and qualified rural opportunity funds</header>
<subsection id="HAD6100CE986144648A1CB1A8442E2866"><enum>(a)</enum><header>In general</header><text>Every qualified opportunity fund shall file an annual return (at such time and in such manner as the Secretary may prescribe) containing the information described in subsection (b).</text></subsection> <subsection id="H693416F0AF1E49CF9B244FC75FF0B0EE"><enum>(b)</enum><header>Information from qualified opportunity funds</header><text>The information described in this subsection is—</text>
<paragraph id="H75B240E34BA044C291A6BA90B02D8942"><enum>(1)</enum><text>the name, address, and taxpayer identification number of the qualified opportunity fund,</text></paragraph> <paragraph id="H4C16A2898EED4D48B9A823C7A1DB57B4"><enum>(2)</enum><text>whether the qualified opportunity fund is organized as a corporation or a partnership,</text></paragraph>
<paragraph id="H219BFAE6B46145D0BF39CE948333FC80"><enum>(3)</enum><text>the value of the total assets held by the qualified opportunity fund as of each date described in section 1400Z–2(d)(1),</text></paragraph> <paragraph id="H6C55EEFA8EA64E6DB53C38740BA71F26"><enum>(4)</enum><text>the value of all qualified opportunity zone property held by the qualified opportunity fund on each such date,</text></paragraph>
<paragraph id="HD1A796F064C443D393AD3D75CE8C5E66"><enum>(5)</enum><text>with respect to each investment held by the qualified opportunity fund in qualified opportunity zone stock or a qualified opportunity zone partnership interest—</text> <subparagraph id="H3F0796A3FDC54950B26E04495EC38B6C"><enum>(A)</enum><text>the name, address, and taxpayer identification number of the corporation in which such stock is held or the partnership in which such interest is held, as the case may be,</text></subparagraph>
<subparagraph id="HE1073E729BAC42549C4FE4A1B41E0F65"><enum>(B)</enum><text>each North American Industry Classification System (NAICS) code that applies to the trades or businesses conducted by such corporation or partnership,</text></subparagraph> <subparagraph id="H9D6DCBC0C1884C8190B1BDCCD9F91376"><enum>(C)</enum><text>the population census tract or population census tracts in which the qualified opportunity zone business property of such corporation or partnership is located,</text></subparagraph>
<subparagraph id="HE2DAB9E1DC18436E9F6A2F780E8EE87D"><enum>(D)</enum><text>the amount of the investment in such stock or partnership interest as of each date described in section 1400Z–2(d)(1),</text></subparagraph> <subparagraph id="HB7C30DD75E0344ECB5A839BC936BF79E"><enum>(E)</enum><text>the value of tangible property held by such corporation or partnership on each such date which is owned by such corporation or partnership,</text></subparagraph>
<subparagraph id="HBE3332988A544334B068A4B336F0BB17"><enum>(F)</enum><text>the value of tangible property held by such corporation or partnership on each such date which is leased by such corporation or partnership,</text></subparagraph> <subparagraph id="HC690767BB71E45E7967BDDE36F8E64FF"><enum>(G)</enum><text>the approximate number of residential units (if any) for any real property held by such corporation or partnership, and</text></subparagraph>
<subparagraph id="H3B4D37D97C414783AF5F8D80E2C8173D"><enum>(H)</enum><text>the approximate average monthly number of full-time equivalent employees of such corporation or partnership for the year (within numerical ranges identified by the Secretary) or such other indication of the employment impact of such corporation or partnership as determined appropriate by the Secretary,</text></subparagraph></paragraph> <paragraph id="HD1FB110AD38C403BB48F779D8DEF74BD"><enum>(6)</enum><text>with respect to the items of qualified opportunity zone business property held by the qualified opportunity fund—</text>
<subparagraph id="HD71D5683A9034BF095A67F9A968D3742"><enum>(A)</enum><text>the North American Industry Classification System (NAICS) code that applies to the trades or businesses in which such property is held,</text></subparagraph> <subparagraph id="HABE912CC444B4874B5B01402E974B345"><enum>(B)</enum><text>the population census tract in which the property is located,</text></subparagraph>
<subparagraph id="H10E3E5CD0A6441EE84459D221F15C4EC"><enum>(C)</enum><text>whether the property is owned or leased,</text></subparagraph> <subparagraph id="H16D48A38B79649F996C10A8890E94CF9"><enum>(D)</enum><text>the aggregate value of the items of qualified opportunity zone property held by the qualified opportunity fund as of each date described in section 1400Z–2(d)(1), and</text></subparagraph>
<subparagraph id="HAC85AA653AED41D190ABDF87819E1ACA"><enum>(E)</enum><text>in the case of real property, the number of residential units (if any),</text></subparagraph></paragraph> <paragraph id="HBB373F8FFCAD40129EF0361BFD9F2B0A"><enum>(7)</enum><text>the approximate average monthly number of full-time equivalent employees for the year of the trades or businesses of the qualified opportunity fund in which qualified opportunity zone business property is held (within numerical ranges identified by the Secretary) or such other indication of the employment impact of such trades or businesses as determined appropriate by the Secretary,</text></paragraph>
<paragraph id="HF37EAF4CCFD74F26B2E424D360709A7F"><enum>(8)</enum><text>with respect to each person who disposed of an investment in the qualified opportunity fund during the year—</text> <subparagraph id="HF216E0EDAD9C4DFAA28736BBC44F1402"><enum>(A)</enum><text>the name, address, and taxpayer identification number of such person,</text></subparagraph>
<subparagraph id="HD19F7829BDAC4A7F93E3224BEE202594"><enum>(B)</enum><text>the date or dates on which the investment disposed was acquired, and</text></subparagraph> <subparagraph id="HCA51BA408B1F487A81416134CB8FB4FA"><enum>(C)</enum><text>the date or dates on which any such investment was disposed and the amount of the investment disposed, and</text></subparagraph></paragraph>
<paragraph id="HB67ACD34AC1D47C88A39C2BFFA86D10E"><enum>(9)</enum><text>such other information as the Secretary may require.</text></paragraph></subsection> <subsection id="HC2F188A2221044F7ACE78305FA8CEA68"><enum>(c)</enum><header>Statement required to be furnished to investors</header><text>Every person required to make a return under subsection (a) shall furnish to each person whose name is required to be set forth in such return by reason of subsection (b)(8) (at such time and in such manner as the Secretary may prescribe) a written statement showing—</text>
<paragraph id="H5AA09F26D37946558CB5C7571AE1FC07"><enum>(1)</enum><text>the name, address, and phone number of the information contact of the person required to make such return, and</text></paragraph> <paragraph id="HBE7FB0FD440940428963B0384C2CD727"><enum>(2)</enum><text>the information required to be shown on such return by reason of subsection (b)(8) with respect to the person whose name is required to be so set forth.</text></paragraph></subsection>
<subsection id="HDDD728AB7E2D48FC8FC03FC5AEE41C63"><enum>(d)</enum><header>Definitions</header><text>For purposes of this section—</text> <paragraph id="H8A4398AE0D37435AA3F2425F41761B99"><enum>(1)</enum><header>In general</header><text>Any term used in this section which is also used in subchapter Z of chapter 1 shall have the meaning given such term under such subchapter.</text></paragraph>
<paragraph id="H8CEF03F0FB99499AB0C7B15491F70168"><enum>(2)</enum><header>Full-time equivalent employees</header><text>The term <term>full-time equivalent employees</term> means, with respect to any month, the sum of—</text> <subparagraph id="H5F98AF5A181E4F4494FC89D0CA08B276"><enum>(A)</enum><text>the number of full-time employees (as defined in section 4980H(c)(4)) for the month, plus</text></subparagraph>
<subparagraph id="H53990ED50F494377B3446301F21115E8"><enum>(B)</enum><text>the number of employees determined (under rules similar to the rules of section 4980H(c)(2)(E)) by dividing the aggregate number of hours of service of employees who are not full-time employees for the month by 120.</text></subparagraph></paragraph></subsection> <subsection id="H5C63C5A27ED84C0E835BF9CA22D13323"><enum>(e)</enum><header>Application to qualified rural opportunity funds</header><text>Every qualified rural opportunity fund (as defined in section 1400Z–2(b)(2)(C)) shall file the annual return required under subsection (a), and the statements required under subsection (c), applied—</text>
<paragraph id="HBFFF7E6C764F44EB968F680B5F99B558"><enum>(1)</enum><text>by substituting <quote>qualified rural opportunity</quote> for <quote>qualified opportunity</quote> each place it appears,</text></paragraph> <paragraph id="H2F7A200CBDBA44E6A317ECBA6BCF6452"><enum>(2)</enum><text>by substituting <quote>section 1400Z–2(b)(2)(C)</quote> for <quote>section 1400Z–2(d)(1)</quote> each place it appears, and</text></paragraph>
<paragraph id="HDBF562A3E67A4BFE88C8269599EDA35B"><enum>(3)</enum><text>by treating any reference (after the application of paragraph (1)) to qualified rural opportunity zone stock, a qualified rural opportunity zone partnership interest, a qualified rural opportunity zone business, or qualified opportunity zone business property as stock, an interest, a business, or property, respectively, described in subclause (I) or (II), as the case may be, of section 1400Z–2(b)(2)(C)(i).</text></paragraph></subsection></section> <section id="H2A80F5B803744975B02A9EC8934E48C9"><enum>6039L.</enum><header>Information required from qualified opportunity zone businesses and qualified rural opportunity zone businesses</header> <subsection id="HE2DC34D0AF704B3CB6BF55FD0B069C12"><enum>(a)</enum><header>In general</header><text>Every applicable qualified opportunity zone business shall furnish to the qualified opportunity fund described in subsection (b) a written statement at such time, in such manner, and setting forth such information as the Secretary may by regulations prescribe for purposes of enabling such qualified opportunity fund to meet the requirements of section 6039K(b)(5).</text></subsection>
<subsection id="HCD917B53B5FE4AFC8D7ED144AC8B0B78"><enum>(b)</enum><header>Applicable qualified opportunity zone business</header><text>For purposes of subsection (a), the term <term>applicable qualified opportunity zone business</term> means any qualified opportunity zone business—</text> <paragraph id="HFA4839CA08E840B9A1E194F853C1566B"><enum>(1)</enum><text>which is a trade or business of a qualified opportunity fund,</text></paragraph>
<paragraph id="HED4D54E5DEF94D17B37A22BCB7EAF057"><enum>(2)</enum><text>in which a qualified opportunity fund holds qualified opportunity zone stock, or</text></paragraph> <paragraph id="H8DE21D0794A94DB0BC7DB260E859BE53"><enum>(3)</enum><text>in which a qualified opportunity fund holds a qualified opportunity zone partnership interest.</text></paragraph></subsection>
<subsection id="H54EBBB8E4C274D699DA661EB8E5AFAB1"><enum>(c)</enum><header>Other terms</header><text>Any term used in this section which is also used in subchapter Z of chapter 1 shall have the meaning given such term under such subchapter.</text></subsection> <subsection id="HDDB72E167C4541C6B9F71F3E913C0383"><enum>(d)</enum><header>Application to qualified rural opportunity businesses</header><text>Every applicable qualified rural opportunity zone business (as defined in subsection (b) determined after application of the substitutions described in this sentence) shall furnish the written statement required under subsection (a), applied—</text>
<paragraph id="H11B4DE15C05F4FAEAC08BF34B3F40B33"><enum>(1)</enum><text>by substituting <quote>qualified rural opportunity</quote> for <quote>qualified opportunity</quote> each place it appears, and</text></paragraph> <paragraph id="H71A49E43A5764607AE60C0CEBFC05C71"><enum>(2)</enum><text>by treating any reference (after the application of paragraph (1)) to qualified rural opportunity zone stock, a qualified rural opportunity zone partnership interest, or a qualified rural opportunity zone business as stock, an interest, or a business, respectively, described in subclause (I) or (II), as the case may be, of section 1400Z–2(b)(2)(C)(i).</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H5C7F50B181894356A87A82C29A771E63"><enum>(2)</enum><header>Penalties</header>
<subparagraph id="H6EAB68825E95488AAAB2EC345403D316"><enum>(A)</enum><header>In general</header><text>Part II of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/68">chapter 68</external-xref> is amended by inserting after section 6725 the following new section:</text> <quoted-block id="HED32A32EC4A1471BA3D5CC1979A7B8E4" display-inline="no-display-inline" style="OLC"> <section id="H066BBC4201E6448CB1375B18D8181957"><enum>6726.</enum><header>Failure to comply with information reporting requirements relating to qualified opportunity funds and qualified rural opportunity funds</header> <subsection id="HF85ADAD4C3DA42D4902DE4EDE8937409"><enum>(a)</enum><header>In general</header><text>If any person required to file a return under section 6039K fails to file a complete and correct return under such section in the time and in the manner prescribed therefor, such person shall pay a penalty of $500 for each day during which such failure continues.</text></subsection>
<subsection id="H8B51F58905AE4B06854CD5B1CD5A132C"><enum>(b)</enum><header>Limitation</header>
<paragraph id="HA39AC3FF99074497B95597E5B8AE380D"><enum>(1)</enum><header>In general</header><text>The maximum penalty under this section on failures with respect to any 1 return shall not exceed $10,000.</text></paragraph> <paragraph id="H8DE06B7650C4412FBFCED786856617DA"><enum>(2)</enum><header>Large qualified opportunity funds</header><text>In the case of any failure described in subsection (a) with respect to a fund the gross assets of which (determined on the last day of the taxable year) are in excess of $10,000,000, paragraph (1) shall be applied by substituting <quote>$50,000</quote> for <quote>$10,000</quote>.</text></paragraph></subsection>
<subsection id="HDA6FCA4B8B4F4CAB89F545F0C1E4CC93"><enum>(c)</enum><header>Penalty in cases of intentional disregard</header><text>If a failure described in subsection (a) is due to intentional disregard, then—</text> <paragraph id="H89E6A8039E054C5899AB8FA44DD9A43B"><enum>(1)</enum><text>subsection (a) shall be applied by substituting <quote>$2,500</quote> for <quote>$500</quote>,</text></paragraph>
<paragraph id="H01BF8C0490FC43179A157796EAB47D31"><enum>(2)</enum><text>subsection (b)(1) shall be applied by substituting <quote>$50,000</quote> for <quote>$10,000</quote>, and</text></paragraph> <paragraph id="HD23C9FB8A69B4250B2ADF6CBD1E64968"><enum>(3)</enum><text>subsection (b)(2) shall be applied by substituting <quote>$250,000</quote> for <quote>$50,000</quote>.</text></paragraph></subsection>
<subsection id="H2DBE5B97C2F44FA29E2E1613396CC4F3"><enum>(d)</enum><header>Inflation adjustment</header>
<paragraph id="H73A6D21CC19849A58452809CEFD8C388"><enum>(1)</enum><header>In general</header><text>In the case of any failure relating to a return required to be filed in a calendar year beginning after 2025, each of the dollar amounts in subsections (a), (b), and (c) shall be increased by an amount equal to—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HAE8B0B622E2E444ABC54212F75B5AF4D"><enum>(A)</enum><text display-inline="yes-display-inline">such dollar amount, multiplied by </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0FC39D79B2594BF99207B7840544E979"><enum>(B)</enum><text display-inline="yes-display-inline">the cost-of-living adjustment determined under section 1(f)(3) for the calendar year determined by substituting <quote>calendar year 2024</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph></paragraph> <paragraph id="H4DA8812B7FC248E5A870CEA3966CAD1D"><enum>(2)</enum><header>Rounding</header> <subparagraph id="HE2077A61D03240118A7817B57194DA68"><enum>(A)</enum><header>In general</header><text>If the $500 dollar amount in subsection (a) and (c)(1) or the $2,500 amount in subsection (c)(1), after being increased under paragraph (1), is not a multiple of $10, such dollar amount shall be rounded to the next lowest multiple of $10.</text></subparagraph>
<subparagraph id="H69CADA7E80DE488489D0DF018238B443"><enum>(B)</enum><header>Asset threshold</header><text>If the $10,000,000 dollar amount in subsection (b)(2), after being increased under paragraph (1), is not a multiple of $10,000, such dollar amount shall be rounded to the next lowest multiple of $10,000.</text></subparagraph> <subparagraph id="HB9F7AD3C67BF4DEB9E911296039B6A6F"><enum>(C)</enum><header>Other dollar amounts</header><text>If any dollar amount in subsection (b) or (c) (other than any amount to which subparagraph (A) or (B) applies), after being increased under paragraph (1), is not a multiple of $1,000, such dollar amount shall be rounded to the next lowest multiple of $1,000.</text></subparagraph></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="HB643A03236884CE3A737206F23247FF8"><enum>(B)</enum><header>Information required to be sent to other taxpayers</header><text>Section 6724(d)(2), as amended by the preceding provisions of this Act, is amended—</text> <clause id="HA0F0C993566B43C0B485657353710816"><enum>(i)</enum><text>by striking <quote>or</quote> at the end of subparagraph (LL),</text></clause>
<clause id="HD772CB0072DB486B9A9001030E374FFA"><enum>(ii)</enum><text>by striking the period at the end of subparagraph (MM) and inserting a comma, and</text></clause> <clause id="H88044DA964E2429EBF985CCD7225007C"><enum>(iii)</enum><text>by inserting after subparagraph (MM) the following new subparagraphs:</text>
<quoted-block id="HBCB3714E2A50456F8E4F3423E4D2D310" display-inline="no-display-inline" style="OLC">
<subitem indent="up4" id="H72A1925C24CC49D587E127BAFD7DAD00"><enum>(NN)</enum><text>section 6039K(c) (relating to disposition of qualified opportunity fund investments), or</text></subitem> <subitem indent="up4" id="H3BECEA582EE44D748BF3C3F39C40E316"><enum>(OO)</enum><text>section 6039L (relating to information required from certain qualified opportunity zone businesses and qualified rural opportunity zone businesses).</text></subitem><after-quoted-block>.</after-quoted-block></quoted-block></clause></subparagraph></paragraph>
<paragraph id="H5A81CC2DA24B4BD0832DD4DD626510DE"><enum>(3)</enum><header>Electronic filing</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6011">Section 6011(e)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block id="HBC46ECA7D3C140DBB985704467330E64" display-inline="no-display-inline" style="OLC"> <paragraph id="H28604B85F6DD418AADFD90899E76042A"><enum>(8)</enum><header>Qualified opportunity funds and qualified rural opportunity funds</header><text>Notwithstanding paragraphs (1) and (2), any return filed by a qualified opportunity fund or qualified rural opportunity fund under section 6039K shall be filed on magnetic media or other machine-readable form.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HF474553184AD4F01ADDF37EE75596E6B"><enum>(4)</enum><header>Clerical amendments</header>
<subparagraph id="HA848E9CC30E6495CB878267EF18313F9"><enum>(A)</enum><text>The table of sections for subpart A of part III of subchapter A of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/61">chapter 61</external-xref> is amended by inserting after the item relating to section 6039J the following new items:</text> <quoted-block id="H2D5E79A4EB19475983B3781D62621EBA" display-inline="no-display-inline" style="OLC"> <toc regeneration="no-regeneration"> <toc-entry level="section">Sec. 6039K. Returns with respect to qualified opportunity funds and qualified rural opportunity funds. </toc-entry> <toc-entry level="section">Sec. 6039L. Information required from qualified opportunity zone businesses and qualified rural opportunity zone businesses.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph> <subparagraph id="H7F4AD405DE4645BDA29C4CF21E8BF757"><enum>(B)</enum><text>The table of sections for part II of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/68">chapter 68</external-xref> is amended by inserting after the item relating to section 6725 the following new item:</text>
<quoted-block id="H4562D23D39414B18A950611B07A530BB" display-inline="no-display-inline" style="OLC">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 6726. Failure to comply with information reporting requirements relating to qualified opportunity funds and qualified rural opportunity funds.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HF7B45EBFF651471D90E3E03A6AC139EC"><enum>(5)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to taxable years beginning after the date of the enactment of this Act.</text></paragraph></subsection> <subsection id="H7D7F286D226C467CA81BFEE82110E6F0"><enum>(e)</enum><header>Secretary reporting of data on opportunity zone and rural opportunity zone tax incentives</header> <paragraph commented="no" display-inline="no-display-inline" id="HE0575C1EDE05464983E975E9DC30E8E8"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>In addition to amounts otherwise available, there is appropriated, out of any money in the Treasury not otherwise appropriated, $15,000,000, to remain available until September 30, 2028, for necessary expenses of the Internal Revenue Service to make the reports described in paragraph (2). </text></paragraph>
<paragraph id="H1B488AF961B7444BB7F217CB86A81145"><enum>(2)</enum><header>Reports</header><text>As soon as practical after the date of the enactment of this Act, and annually thereafter, the Secretary of the Treasury, or the Secretary's delegate (referred to in this section as the <quote>Secretary</quote>) shall make publicly available a report on qualified opportunity funds.</text></paragraph> <paragraph id="H790E46C9FF65435E8AEA6FBA0E24181F"><enum>(3)</enum><header>Information included</header><text>The report required under paragraph (2) shall include, to the extent available, the following information:</text>
<subparagraph id="H98D13A75B2FB409AB2A18782DDA6B5D9"><enum>(A)</enum><text>The number of qualified opportunity funds.</text></subparagraph> <subparagraph id="H57A099A860D44F9AAEA3EFD3A5359E82"><enum>(B)</enum><text>The aggregate dollar amount of assets held in qualified opportunity funds.</text></subparagraph>
<subparagraph id="HDE3B1552EE0547DBB9757B15590791F3"><enum>(C)</enum><text>The aggregate dollar amount of investments made by qualified opportunity funds in qualified opportunity fund property, stated separately for each North American Industry Classification System (NAICS) code.</text></subparagraph> <subparagraph id="H8570A6F4B3964360B004C786F2DFE870"><enum>(D)</enum><text>The percentage of population census tracts designated as qualified opportunity zones that have received qualified opportunity fund investments.</text></subparagraph>
<subparagraph id="H73124F9A36C7467AA4BF0BF523F4C0A0"><enum>(E)</enum><text>For each population census tract designated as a qualified opportunity zone, the approximate average monthly number of full-time equivalent employees of the qualified opportunity zone businesses in such qualified opportunity zone for the preceding 12-month period (within numerical ranges identified by the Secretary) or such other indication of the employment impact of such qualified opportunity fund businesses as determined appropriate by the Secretary.</text></subparagraph> <subparagraph id="H6ACD30F9A8E1400DB93E6298220A71CD"><enum>(F)</enum><text>The percentage of the total amount of investments made by qualified opportunity funds in—</text>
<clause id="H5C02F5BA449C4A3F8CB50FFC88CF42FD"><enum>(i)</enum><text>qualified opportunity zone property which is real property; and</text></clause> <clause id="H57945A46A8484EC6AAA13284EEA79821"><enum>(ii)</enum><text>other qualified opportunity zone property.</text></clause></subparagraph>
<subparagraph id="HF2663CD4BFC8495B8D4E50E85C6C419B"><enum>(G)</enum><text>For each population census tract, the aggregate approximate number of residential units resulting from investments made by qualified opportunity funds in real property.</text></subparagraph> <subparagraph id="HCEA758ED3A084B2E9FE03FC559FD1C48"><enum>(H)</enum><text>The aggregate dollar amount of investments made by qualified opportunity funds in each population census tract.</text></subparagraph></paragraph>
<paragraph id="HB646BE598DCE4442976165B754C7CE82"><enum>(4)</enum><header>Additional information</header>
<subparagraph id="H4C05FDCA894349F0B8D626BD5BF633EA"><enum>(A)</enum><header>In general</header><text>Beginning with the report submitted under paragraph (2) for the 6th year after the date of the enactment of this Act, the Secretary shall include in such report the impacts and outcomes of a designation of a population census tract as a qualified opportunity zone as measured by economic indicators, such as job creation, poverty reduction, new business starts, and other metrics as determined by the Secretary.</text></subparagraph> <subparagraph id="H84E19B73E6D948FAA3494FEE01D7B3D6"><enum>(B)</enum><header>Semi-decennial information</header> <clause id="HFE0AF5141FB940B1BCB183166E7CB4EC"><enum>(i)</enum><header>In general</header><text>In the case of any report submitted under paragraph (2) in the 6th year or the 11th year after the date of the enactment of this Act, the Secretary shall include the following information:</text>
<subclause id="H1B7F1664D16748C5BAE6AB77C8E623E5"><enum>(I)</enum><text>For population census tracts designated as a qualified opportunity zone, a comparison (based on aggregate information) of the factors listed in clause (iii) between the 5-year period ending on the date of the enactment of <external-xref legal-doc="public-law" parsable-cite="pl/115/97">Public Law 115–97</external-xref> and the most recent 5-year period for which data is available.</text></subclause> <subclause id="H63DEB3BD238F47C6A9C882F8F3C982C5"><enum>(II)</enum><text>For population census tracts designated as a qualified opportunity zone, a comparison (based on aggregate information) of the factors listed in clause (iii) for the most recent 5-year period for which data is available between such population census tracts and similar population census tracts that were not designated as a qualified opportunity zone.</text></subclause></clause>
<clause id="HDF4D6BBDFF1842C49F179765C9D673FE"><enum>(ii)</enum><header>Control groups</header><text>For purposes of clause (i), the Secretary may combine population census tracts into such groups as the Secretary determines appropriate for purposes of making comparisons.</text></clause> <clause id="HECE25642424F41F1B201B1EB1510E348"><enum>(iii)</enum><header>Factors listed</header><text>The factors listed in this clause are the following:</text>
<subclause id="H64501C411E7147518DF72EB32FD682F4"><enum>(I)</enum><text>The unemployment rate.</text></subclause> <subclause id="H36D85BD3B4FE4255B1E64D31BFD573BC"><enum>(II)</enum><text>The number of persons working in the population census tract, including the percentage of such persons who were not residents in the population census tract in the preceding year.</text></subclause>
<subclause id="H22F7ECAD1E68483FAAD2ABD481B0CDD6"><enum>(III)</enum><text>Individual, family, and household poverty rates.</text></subclause> <subclause id="H12C1DC6A893B4F0594E70FA53277B378"><enum>(IV)</enum><text>Median family income of residents of the population census tract.</text></subclause>
<subclause id="H24C3920E623A4A958FA5908C878ADF5C"><enum>(V)</enum><text>Demographic information on residents of the population census tract, including age, income, education, race, and employment.</text></subclause> <subclause id="H1E54991CBA3547579B43B4410384EA2F"><enum>(VI)</enum><text>The average percentage of income of residents of the population census tract spent on rent annually.</text></subclause>
<subclause id="H757049ED867943D9885EA6B840E9F9EF"><enum>(VII)</enum><text>The number of residences in the population census tract.</text></subclause> <subclause id="HDF7B72D462A447D89E8F41894F020161"><enum>(VIII)</enum><text>The rate of home ownership in the population census tract.</text></subclause>
<subclause id="H05707BDF18C446A5870D3288B24835E1"><enum>(IX)</enum><text>The average value of residential property in the population census tract.</text></subclause> <subclause id="HED99FE5EA61A489484D7D9B3A4194719"><enum>(X)</enum><text>The number of affordable housing units in the population census tract.</text></subclause>
<subclause id="HF111065D672143628D4036A5047EDD20"><enum>(XI)</enum><text>The number of new business starts in the population census tract.</text></subclause> <subclause id="HED71F827BDBC4B8589DA6F2C96F0CECF"><enum>(XII)</enum><text>The distribution of employees in the population census tract by North American Industry Classification System (NAICS) code.</text></subclause></clause></subparagraph></paragraph>
<paragraph id="H7972CB3A52E84A52A20CD694FF452351"><enum>(5)</enum><header>Protection of identifiable return information</header><text>In making reports required under this subsection, the Secretary—</text> <subparagraph id="H79DC4CD701AD4A9A8B8850D91CDB0D6E"><enum>(A)</enum><text>shall establish appropriate procedures to ensure that any amounts reported do not disclose taxpayer return information that can be associated with any particular taxpayer or competitive or proprietary information, and</text></subparagraph>
<subparagraph id="HD4CA462DB1EA4D538AA6931486EE1E7E"><enum>(B)</enum><text>if necessary to protect taxpayer return information, may combine information required with respect to individual population census tracts into larger geographic areas.</text></subparagraph></paragraph> <paragraph id="HD2AEA4045E69495592F25FE69AF4C689"><enum>(6)</enum><header>Definitions</header><text>Any term used in this subsection which is also used in subchapter Z of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> of the Internal Revenue Code of 1986 shall have the meaning given such term under such subchapter.</text></paragraph>
<paragraph id="H84192667A5AB4642B0B4DC3114129090"><enum>(7)</enum><header>Reports on qualified rural opportunity funds</header><text>The Secretary shall make publicly available, with respect to qualified rural opportunity funds, separate reports as required under this subsection, applied—</text> <subparagraph id="H7C687B856E924165BAA6631865B1C5BB"><enum>(A)</enum><text>by substituting <quote>qualified rural opportunity</quote> for <quote>qualified opportunity</quote> each place it appears,</text></subparagraph>
<subparagraph id="HA0BB39C5A7C0429598B5E77B445568C0"><enum>(B)</enum><text>by substituting a reference to this Act for <quote>Public Law 115–97</quote>, and</text></subparagraph> <subparagraph id="HFFD02092562647CCB155532A8A638345"><enum>(C)</enum><text>by treating any reference (after the application of subparagraph (A)) to qualified rural opportunity zone stock, qualified rural opportunity zone partnership interest, qualified rural opportunity zone business, or qualified opportunity zone business property as stock, interest, business, or property, respectively, described in subclause (I) or (II), as the case may be, of <external-xref legal-doc="usc" parsable-cite="usc/26/1400Z">section 1400Z–2(b)(2)(C)(i)</external-xref> of the Internal Revenue Code of 1986.</text></subparagraph></paragraph></subsection></section>
<section id="H36557B26CC17434CA62F7B92CF38DA76"><enum>70422.</enum><header>Permanent enhancement of low-income housing tax credit</header>
<subsection id="HB1EC2232AEAF418390564125CD7EBEA0"><enum>(a)</enum><header>Permanent State housing credit ceiling increase for low-income housing credit</header>
<paragraph id="HF7AE32806F3C45E080E955658DD9731F"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/42">Section 42(h)(3)(I)</external-xref> is amended—</text> <subparagraph id="HD758BC4399BE4949B5723CA2413C2A03"><enum>(A)</enum><text>by striking <quote>2018, 2019, 2020, and 2021,</quote> and inserting <quote>beginning after December 31, 2025,</quote>,</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HAD7462EE61824AA2AE62264248A3FFE5"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>1.125</quote> and inserting <quote>1.12</quote>, and</text></subparagraph> <subparagraph id="HBD5476842EDB4AE08E864B0CFDCC4B4B"><enum>(C)</enum><text>by striking <quote><header-in-text level="section" style="traditional">2018, 2019, 2020, and 2021</header-in-text></quote> in the heading and inserting <quote><header-in-text level="section" style="traditional">calendar years after 2025</header-in-text></quote>.</text></subparagraph></paragraph>
<paragraph id="HB5BD0B1AC8374EC9B9D3EE2AF31867CE"><enum>(2)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to calendar years beginning after December 31, 2025.</text></paragraph></subsection> <subsection id="H09782A3719DE4BD7BAD57C15F5EAE094"><enum>(b)</enum><header>Tax-exempt bond financing requirement</header> <paragraph id="H02B5FDAC6C5B427289FBFB5D015B5A1C"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/42">Section 42(h)(4)</external-xref> is amended by striking subparagraph (B) and inserting the following:</text>
<quoted-block id="H40891B4D65134552A92DCD1C8AC07727" display-inline="no-display-inline" style="OLC">
<subparagraph id="HA32A570142434B7B989A8C829DC6FA22"><enum>(B)</enum><header>Special rule where minimum percent of buildings is financed with tax-exempt bonds subject to volume cap</header><text>For purposes of subparagraph (A), paragraph (1) shall not apply to any portion of the credit allowable under subsection (a) with respect to a building if—</text> <clause id="H90C17A7DB9CD41D287C38DE3E777CA90"><enum>(i)</enum><text>50 percent or more of the aggregate basis of such building and the land on which the building is located is financed by 1 or more obligations described in subparagraph (A), or</text></clause>
<clause id="H57E5F8357D924E3C89B5539AA52E7B31"><enum>(ii)</enum>
<subclause commented="no" display-inline="yes-display-inline" id="H54BEEDDDDB22470F879CB9140E28704C"><enum>(I)</enum><text>25 percent or more of the aggregate basis of such building and the land on which the building is located is financed by 1 or more obligations described in subparagraph (A), and</text></subclause> <subclause indent="up1" id="H60C78E59B5014C8E84BE967B7E8FB41A"><enum>(II)</enum><text>1 or more of such obligations—</text>
<item id="H154654622EBF43B18F7FA4B7029AA5A6"><enum>(aa)</enum><text>are part of an issue the issue date of which is after December 31, 2025, and</text></item> <item id="H00B9159752AB40B6BD85CF6E97A2DB18"><enum>(bb)</enum><text>provide the financing for not less than 5 percent of the aggregate basis of such building and the land on which the building is located.</text></item></subclause></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HF36818C9EDC64A9ABCB9C01FD77F4210"><enum>(2)</enum><header>Effective date</header>
<subparagraph id="HBB84D7034F7F495989435CDBA90E28A7"><enum>(A)</enum><header>In general</header><text>The amendment made by this subsection shall apply to buildings placed in service in taxable years beginning after December 31, 2025.</text></subparagraph> <subparagraph id="H7DBC52146A7D4127AC0F79A35DCE5AB4"><enum>(B)</enum><header>Rehabilitation expenditures treated as separate new building</header><text>In the case of any building with respect to which any expenditures are treated as a separate new building under <external-xref legal-doc="usc" parsable-cite="usc/26/42">section 42(e)</external-xref> of the Internal Revenue Code of 1986, for purposes of subparagraph (A), both the existing building and the separate new building shall be treated as having been placed in service on the date such expenditures are treated as placed in service under section 42(e)(4) of such Code.</text></subparagraph></paragraph></subsection></section>
<section commented="no" display-inline="no-display-inline" id="HAF72FA0841EB47079813350ADDB4D923"><enum>70423.</enum><header>Permanent extension of new markets tax credit</header>
<subsection id="HA0EDD7E543A246658C42378E56A6496A"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45D">Section 45D(f)(1)(H)</external-xref> is amended by striking <quote>for for each of calendar years 2020 through 2025</quote> and inserting <quote> for each calendar year after 2019</quote>.</text></subsection> <subsection id="H9DAA771B9EA44A48811A449EDE86A6A9"><enum>(b)</enum><header>Carryover of unused limitation</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45D">Section 45D(f)(3)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H8C2DABEE9C5047F9A80650B2FD245DD8"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>If the</quote> and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H4A694C59E5424AE68D9860B052CDD0F4"> <subparagraph commented="no" display-inline="no-display-inline" id="H5DF31490F78247E8BBBA2E104D51466A"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">If the</text></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H36CB9A7A9B114B05B7C586BBD5A3D8F5"><enum>(2)</enum><text display-inline="yes-display-inline">by striking the second sentence and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HA86D085F429845C183DBEB61B88491F2"> <subparagraph commented="no" display-inline="no-display-inline" id="H9B3CEC3CB1F244EEBABA59CD1F121722"><enum>(B)</enum><header>Limitation</header><text display-inline="yes-display-inline">No amount may be carried under subparagraph (A) to any calendar year afer the fifth calendar year after the calendar year in which the excess described in such subparagraph occurred. For purposes of this subparagraph, any excess described in subparagraph (A) with respect to any calendar year before 2026 shall be treated as occurring in calendar year 2025.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H1FE491FADE3B49489115CBFF3EA99D9A"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to calendar years beginning after December 31, 2025. </text></subsection></section> <section id="H554B87EA6F5742A792B7362A9C13F1BB"><enum>70424.</enum><header>Permanent and expanded reinstatement of partial deduction for charitable contributions of individuals who do not elect to itemize</header> <subsection id="H4E793FD858F14CBEAE6297FCFABA0FA2"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/170">Section 170(p)</external-xref> is amended—</text>
<paragraph id="H6DF74571416D48B881A95E54BC91C87F"><enum>(1)</enum><text>by striking <quote>$300 ($600</quote> and inserting <quote>$1,000 ($2,000</quote>, and</text></paragraph> <paragraph id="HEB181E29D76F4F0BA3042EA9FE6E20EB"><enum>(2)</enum><text>by striking <quote>beginning in 2021</quote>.</text></paragraph></subsection>
<subsection id="H3E2268B3CE4C4BDFBACE8BF5C51FF3D9"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="H4A3AAA7E686546BC93A18D28A87EA284"><enum>70425.</enum><header>0.5 percent floor on deduction of contributions made by individuals</header> <subsection id="H000B7D6850FD4DD6910B33C7159809BE"><enum>(a)</enum><header>In general</header> <paragraph commented="no" display-inline="no-display-inline" id="H34C2EFF9B2B44735A15123A022FC1485"><enum>(1)</enum><header>In general</header><text>Paragraph (1) of <external-xref legal-doc="usc" parsable-cite="usc/26/170">section 170(b)</external-xref> is amended by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H6BF1F9516AC14775B22BBCF7C9454A68">
<subparagraph commented="no" display-inline="no-display-inline" id="HC2A16C56C7B940168D4E27FB9BDED78B"><enum>(I)</enum><header>0.5-percent floor</header><text>Any charitable contribution otherwise allowable (without regard to this subparagraph) as a deduction under this section shall be allowed only to the extent that the aggregate of such contributions exceeds 0.5 percent of the taxpayer's contribution base for the taxable year. The preceding sentence shall be applied—</text> <clause commented="no" display-inline="no-display-inline" id="H8547473C7FBA4E94AE67AE882E6F3174"><enum>(i)</enum><text>first, by taking into account charitable contributions to which subparagraph (D) applies to the extent thereof,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HA01878D5B0DA4F8F9079B74F3F5025FE"><enum>(ii)</enum><text>second, by taking into account charitable contributions to which subparagraph (C) applies to the extent thereof,</text></clause> <clause commented="no" display-inline="no-display-inline" id="H29841A13AE784D4F9D796533D41D5280"><enum>(iii)</enum><text>third, by taking into account charitable contributions to which subparagraph (B) applies to the extent thereof,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HD46490CB0D63446E9BAFDD77C97864C5"><enum>(iv)</enum><text>fourth, by taking into account charitable contributions to which subparagraph (E) applies to the extent thereof,</text></clause> <clause commented="no" display-inline="no-display-inline" id="HBFC4C63A04D8459B93E18336ABFAEA42"><enum>(v)</enum><text>fifth, by taking into account charitable contributions to which subparagraph (A) applies to the extent thereof, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H684779278BBF49A48EA6308C9ED5924B"><enum>(vi)</enum><text display-inline="yes-display-inline">sixth, by taking into account charitable contributions to which subparagraph (G) applies to the extent thereof.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H6EF89ED5BE71497E80ECE95585FFCBCA"><enum>(2)</enum><header>Application of carryforward</header><text>Paragraph (1) of <external-xref legal-doc="usc" parsable-cite="usc/26/170">section 170(d)</external-xref> is amended by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB20A3803E10D41F1B06A687A25A895DD">
<subparagraph commented="no" display-inline="no-display-inline" id="H77524BE7907A4E239E66A4530EFB23A1"><enum>(C)</enum><header>Contributions disallowed by 0.5-percent floor carried forward only from years in which limitation is exceeded</header>
<clause commented="no" display-inline="no-display-inline" id="H6486B1E562674914882E63DD577A203C"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">In the case of any taxable year from which an excess is carried forward (determined without regard to this subparagraph) under any carryover rule, the applicable carryover rule shall be applied by increasing the excess determined under such applicable carryover rule for the contribution year (before the application of subparagraph (B)) by the amount attributable to the charitable contributions to which such rule applies which is not allowed as a deduction for the contribution year by reason of subsection (b)(1)(I).</text></clause> <clause commented="no" display-inline="no-display-inline" id="HAAE3EAD799674AD3BF8EFC3E6CED4DCF"><enum>(ii)</enum><header>Carryover rule</header><text>For purposes of this subparagraph, the term <term>carryover rule</term> means—</text>
<subclause commented="no" display-inline="no-display-inline" id="HBB219E14C2774269A3F3E11FED81E3DB"><enum>(I)</enum><text display-inline="yes-display-inline">subparagraph (A) of this paragraph, </text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H78A7523E634F4BC3828DC6E041B2F65E"><enum>(II)</enum><text display-inline="yes-display-inline">subparagraphs (C)(ii), (D)(ii), (E)(ii), and (G)(ii) of subsection (b)(1), and </text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HC07CDDF0588842E8B1331024532B3999"><enum>(III)</enum><text display-inline="yes-display-inline">the second sentence of subsection (b)(1)(B).</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="H892625EE09AD4F81A60A6B1276F32F58"><enum>(iii)</enum><header>Applicable carryover rule</header><text display-inline="yes-display-inline">For purposes of this subparagraph, the term <term>applicable carryover rule</term> means any carryover rule applicable to charitable contributions which were (in whole or in part) not allowed as a deduction for the contribution year by reason of subsection (b)(1)(I).</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HAE0E3E43C22E497CBA1E5080EA1166A9"><enum>(3)</enum><header>Coordination with deduction for nonitemizers</header><text>Section 170(p), as amended by this Act, is further amended by inserting <quote>, (b)(1)(I),</quote> after <quote>subsections (b)(1)(G)(ii)</quote>.</text></paragraph></subsection> <subsection id="H0FC2DD22DC8848289A0BC8262CA3EE86"><enum>(b)</enum><header>Modification of limitation for cash contributions</header> <paragraph commented="no" display-inline="no-display-inline" id="HD6FCFC134AA042DC95AD6C31DB811F9D"><enum>(1)</enum><header>In general</header><text>Clause (i) of <external-xref legal-doc="usc" parsable-cite="usc/26/170">section 170(b)(1)(G)</external-xref> is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HDB315EE50880433F8D4880A2A5F4424D">
<clause id="H0714FF1BFB024BF38C480D4AF2FA509A"><enum>(i)</enum><header>In general</header><text>For taxable years beginning after December 31, 2017, any contribution of cash to an organization described in subparagraph (A) shall be allowed as a deduction under subsection (a) to the extent that the aggregate of such contributions does not exceed the excess of—</text> <subclause id="H48A6723AAF6C44A8A1665B5852C817A2"><enum>(I)</enum><text>60 percent of the taxpayer’s contribution base for the taxable year, over</text></subclause>
<subclause id="H125DB746CEFF4D91B9EBDF5E6F4C936C"><enum>(II)</enum><text>the aggregate amount of contributions taken into account under subparagraph (A) for such taxable year.</text></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HFDF69B6C01C54516AF38A0DD68CA45F3"><enum>(2)</enum><header>Coordination with other limitations</header> <subparagraph commented="no" display-inline="no-display-inline" id="H20AC4E808ABE440A93C253022412B92F"><enum>(A)</enum><header>In general</header><text>Clause (iii) of <external-xref legal-doc="usc" parsable-cite="usc/26/170">section 170(b)(1)(G)</external-xref> is amended—</text>
<clause commented="no" display-inline="no-display-inline" id="H713A0685F780497E94FB0BFC8C2582F9"><enum>(i)</enum><text>by striking <quote><header-in-text style="OLC" level="clause">subparagraphs (A) and (B)</header-in-text></quote> in the heading and inserting <quote><header-in-text style="OLC" level="clause">subparagraph (A)</header-in-text></quote>, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HFC95496671E54678A958342F0611E9B9"><enum>(ii)</enum><text>in subclause (II), by striking <quote>, and subparagraph (B)</quote> and all that follows through <quote>this subparagraph</quote>.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF978E5AC062A4B0C920FF2F532E9572F"><enum>(B)</enum><header>Other contributions</header><text>Subparagraph (B) of <external-xref legal-doc="usc" parsable-cite="usc/26/170">section 170(b)(1)</external-xref> is amended—</text> <clause commented="no" display-inline="no-display-inline" id="H81B19A6FD7CF420EBCC2457AB531F64D"><enum>(i)</enum><text>by striking <quote>to which subparagraph (A)</quote> both places it appears and inserting <quote>to which subparagraph (A) or (G)</quote>, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HA02BBD5120394E76B838F6F644519C9A"><enum>(ii)</enum><text>in clause (ii), by striking <quote>over the amount</quote> and all that follows through <quote>subparagraph (C)).</quote> and inserting “over—</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H77CDE1D3DE7C42399408780714A7BC0E"> <subclause id="HFC905099C23F441ABD7068D9CF21FF9A"><enum>(I)</enum><text>the amount of charitable contributions allowable under subparagraph (A) (determined without regard to subparagraph (C)) and subparagraph (G), reduced by</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H982155DCFF5E4E59807E46E8147912EF"><enum>(II)</enum><text>so much of the contributions taken into account under subparagraph (G) as does not exceed 10 percent of the taxpayer’s contribution base.</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></clause></subparagraph></paragraph></subsection> <subsection id="HF0F76E90882344AFBF65BA59E870D429" commented="no"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="H565E8326D21B4578AE996793C06265F6"><enum>70426.</enum><header>1-percent floor on deduction of charitable contributions made by corporations</header>
<subsection id="HAEA9EB5B58A94D25AA409FD48C629E7B"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/170">Section 170(b)(2)(A)</external-xref> is amended to read as follows:</text> <quoted-block id="H0A30B45F11F445C2A8ABB8D39A1F30DB" display-inline="no-display-inline" style="OLC"> <subparagraph id="HE22BC618E5AD4D19AEC56FF93A60685C"><enum>(A)</enum><header>In general</header><text>Any charitable contribution otherwise allowable (without regard to this subparagraph) as a deduction under this section for any taxable year, other than any contribution to which subparagraph (B) or (C) applies, shall be allowed only to the extent that the aggregate of such contributions—</text>
<clause id="H6E6AF18FAE284BE48C13ECF338282B73"><enum>(i)</enum><text>exceeds 1 percent of the taxpayer's taxable income for the taxable year, and</text></clause> <clause id="HA2AA584C29B245EFA5BCC31D11732858"><enum>(ii)</enum><text>does not exceed 10 percent of the taxpayer's taxable income for the taxable year.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H34190AAA0EAE422288F6FC7B1DE5C153"><enum>(b)</enum><header>Application of carryforward</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/170">Section 170(d)(2)</external-xref> is amended to read as follows:</text> <quoted-block id="H16AE9EFCE1CE41D283A872799401CEB3" display-inline="no-display-inline" style="OLC"> <paragraph id="H7F7E76AE3D4A4F2CAAFEE092265E5D42"><enum>(2)</enum><header>Corporations</header> <subparagraph id="HA1C1392A975B45418CD1A7E38B913139"><enum>(A)</enum><header>In general</header><text>Any charitable contribution taken into account under subsection (b)(2)(A) for any taxable year which is not allowed as a deduction by reason of clause (ii) thereof shall be taken into account as a charitable contribution for the succeeding taxable year, except that, for purposes of determining under this subparagraph whether such contribution is allowed in such succeeding taxable year, contributions in such succeeding taxable year (determined without regard to this paragraph) shall be taken into account under subsection (b)(2)(A) before any contribution taken into account by reason of this paragraph.</text></subparagraph>
<subparagraph id="H81772D8F7D904EBEABBB1E17C22A555D"><enum>(B)</enum><header>5-year carryforward</header><text>No charitable contribution may be carried forward under subparagraph (A) to any taxable year following the fifth taxable year after the taxable year in which the charitable contribution was first taken into account. For purposes of the preceding sentence, contributions shall be treated as allowed on a first-in first-out basis.</text></subparagraph> <subparagraph id="H3FD609BEAECC41B39FDF0393E08F1BCB"><enum>(C)</enum><header>Contributions disallowed by 1-percent floor carried forward only from years in which 10 percent limitation is exceeded</header><text>In the case of any taxable year from which a charitable contribution is carried forward under subparagraph (A) (determined without regard this subparagraph), subparagraph (A) shall be applied by substituting <quote>clause (i) or (ii)</quote> for <quote>clause (ii)</quote>.</text></subparagraph>
<subparagraph id="H4555EF68ACB44607A21F2DC885E866E7"><enum>(D)</enum><header>Special rule for net operating loss carryovers</header><text>The amount of charitable contributions carried forward under subparagraph (A) shall be reduced to the extent that such carryfoward would (but for this subparagraph) reduce taxable income (as computed for purposes of the second sentence of section 172(b)(2)) and increase a net operating loss carryover under section 172 to a succeeding taxable year.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H2C1829BE62FB425D80084242C07359A7"><enum>(c)</enum><header>Conforming amendments</header><text>Subparagraphs (B)(ii) and (C)(ii) of section 170(b)(2) are each amended by inserting <quote>other than subparagraph (C) thereof</quote> after <quote>subsection (d)(2)</quote>.</text></subsection>
<subsection id="HC37CD3306C194E28865738CD08131C85"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="H2B15520D01C94A7A9990AED91D82D63C"><enum>70427.</enum><header>Permanent increase in limitation on cover over of tax on distilled spirits</header> <subsection commented="no" display-inline="no-display-inline" id="H5D984F46B84A44ECA42FF7D29B9BF61B"><enum>(a)</enum><header>In general</header><text>Paragraph (1) of <external-xref legal-doc="usc" parsable-cite="usc/26/7652">section 7652(f)</external-xref> is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H010462A38C6D427588C68390EDE6E187">
<paragraph commented="no" display-inline="no-display-inline" id="HF925E28072544C7E8B09C90968861E99"><enum>(1)</enum><text>$13.25, or</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="HE1ED52A090F44316A2ED5F1B9BA2E21F"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to distilled spirits brought into the United States after December 31, 2025.</text></subsection></section>
<section section-type="subsequent-section" id="H3BE72A608E5A4B2E8FE538227DF60125"><enum>70428.</enum><header>Nonprofit community development activities in remote native villages</header>
<subsection id="H9F2398CBDF9744A88F9597F1C20C2E2F"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">For purposes of subchapter F of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> of the Internal Revenue Code of 1986, any activity substantially related to participation or investment in fisheries in the Bering Sea and Aleutian Islands statistical and reporting areas (as described in Figure 1 of section 679 of title 50, Code of Federal Regulations) carried on by an entity identified in section 305(i)(1)(D) of the Magnuson-Stevens Fishery Conservation and Management Act (<external-xref legal-doc="usc" parsable-cite="usc/16/1855">16 U.S.C. 1855(i)(1)(D)</external-xref>) (as in effect on the date of enactment of this section) shall be considered substantially related to the exercise or performance of the purpose constituting the basis of such entity's exemption under section 501(a) of such Code if the conduct of such activity is in furtherance of 1 or more of the purposes specified in section 305(i)(1)(A) of such Act (as so in effect). For purposes of this paragraph, activities substantially related to participation or investment in fisheries include the harvesting, processing, transportation, sales, and marketing of fish and fish products of the Bering Sea and Aleutian Islands statistical and reporting areas.</text></subsection> <subsection id="H6C85C2B465BE4893A0CB139F3A733288"><enum>(b)</enum><header>Application to certain wholly owned subsidiaries</header><text>If the assets of a trade or business relating to an activity described in subsection (a) of any subsidiary wholly owned by an entity identified in section 305(i)(1)(D) of the Magnuson-Stevens Fishery Conservation and Management Act (<external-xref legal-doc="usc" parsable-cite="usc/16/1855">16 U.S.C. 1855(i)(1)(D)</external-xref>) (as in effect on the date of enactment of this section) are transferred to such entity (including in liquidation of such subsidiary) not later than 18 months after the date of the enactment of this Act—</text>
<paragraph id="H9EB4B4D38A3E4B40B333C767B74E2829"><enum>(1)</enum><text>no gain or income resulting from such transfer shall be recognized to either such subsidiary or such entity under such Code, and</text></paragraph> <paragraph id="H91BDCE18F13D442DBD6CBCCE655A0112"><enum>(2)</enum><text>all income derived from such subsidiary from such transferred trade or business shall be exempt from taxation under such Code.</text></paragraph></subsection>
<subsection id="HE6699FEAD83A4E5693AA4895986DDDD1" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text>This section shall take effect on the date of the enactment of this Act and shall remain effective during the existence of the western Alaska community development quota program established by Section 305(i)(1) of the Magnuson-Stevens Fishery Conservation and Management Act (<external-xref legal-doc="usc" parsable-cite="usc/16/1855">16 U.S.C. 1855(i)(1)</external-xref>), as amended.</text></subsection></section> <section id="H6385D0FAD5B141368FBFB6806ED911DA"><enum>70429.</enum><header>Adjustment of charitable deduction for certain expenses incurred in support of Native Alaskan subsistence whaling</header> <subsection commented="no" display-inline="no-display-inline" id="HED6FF02F3936418980ACF919BF774FD3"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/170">Section 170(n)(1)</external-xref> of the Internal Revenue Code of 1986 is amended by striking <quote>$10,000</quote> and inserting <quote>$50,000</quote>.</text></subsection>
<subsection id="HA9973A0AB4AB42F7BCD121DE0B788E96" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section id="H461C8E6EAE044E17A3CA8F2CEB0BE71F"><enum>70430.</enum><header>Exception to percentage of completion method of accounting for certain residential construction contracts</header> <subsection id="H996663FF4A5941BF9A2B07794D83A4B8"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/460">Section 460(e)</external-xref> is amended—</text>
<paragraph id="H3A42019625A54155A8E57019FB3FE92E"><enum>(1)</enum><text>in paragraph (1)—</text> <subparagraph id="H529F59D082374D1EA59C9F9442731282"><enum>(A)</enum><text>by striking <quote>home construction contract</quote> both places it appears and inserting <quote>residential construction contract</quote>, and</text></subparagraph>
<subparagraph id="H990274350EDF482E9703E63F2B17EBB3"><enum>(B)</enum><text>by inserting <quote>(determined by substituting <quote>3-year</quote> for <quote>2-year</quote> in subparagraph (B)(i) for any residential construction contract which is not a home construction contract)</quote> after <quote>the requirements of clauses (i) and (ii) of subparagraph (B)</quote>,</text></subparagraph></paragraph> <paragraph id="HBF1FD3E640CF472B908638146A32B0F8"><enum>(2)</enum><text>by striking paragraph (4) and redesignating paragraph (5) as paragraph (4), and</text></paragraph>
<paragraph id="H3E118635BEE94A2FA645D0E940BACCA5"><enum>(3)</enum><text>in subparagraph (A) of paragraph (4), as so redesignated, by striking <quote>paragraph (4)</quote> and inserting <quote>paragraph (3)</quote>.</text></paragraph></subsection> <subsection id="H1A0BCE89E8C24C0E8713811F55A3CA7E"><enum>(b)</enum><header>Application of exception for purposes of alternative minimum tax</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/56">Section 56(a)(3)</external-xref> is amended by striking <quote>any home construction contract (as defined in section 460(e)(6))</quote> and inserting <quote>any residential construction contract (as defined in section 460(e)(4))</quote>.</text></subsection>
<subsection id="H0C99562DD4E34BA993C404CDF68ACC73" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to contracts entered into in taxable years beginning after the date of the enactment of this Act.</text></subsection></section></subchapter> <subchapter id="H020D2D68938246608C6D660BFE10B94A" style="OLC"><enum>D</enum><header>Permanent investments in small business and rural America</header> <section id="H8C7BBB6132E84634896675D8AC771FDD"><enum>70431.</enum><header>Expansion of qualified small business stock gain exclusion</header> <subsection id="H9363F72B45BD436D8608B89CD64C39F4"><enum>(a)</enum><header>Phased increase in exclusion for gain from qualified small business stock</header> <paragraph id="H1403E36496ED4E898CABC908C663E020"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/1202">Section 1202(a)(1)</external-xref> is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HD3CF4764FD4A4BECB9B471411D96C154">
<paragraph commented="no" display-inline="no-display-inline" id="H079C5B8C3954429DA947DCF04CDEFBE3"><enum>(1)</enum><header>In general</header><text> In the case of a taxpayer other than a corporation, gross income shall not include—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H5183BF3A44D74265B107AF4E3F45AA85"><enum>(A)</enum><text display-inline="yes-display-inline">except as provided in paragraphs (3) and (4), 50 percent of any gain from the sale or exchange of qualified small business stock acquired on or before the applicable date and held for more than 5 years, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H48B8B922D6D347579D71105F37ED8BA4"><enum>(B)</enum><text display-inline="yes-display-inline">the applicable percentage of any gain from the sale or exchange of qualified small business stock acquired after the applicable date and held for at least 3 years.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H95FB2F49B7B74B18902354E5CBD8AC97"><enum>(2)</enum><header>Applicable percentage</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1202">Section 1202(a)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HC5DD175AAB7A4FA98CFE620104CF428E">
<paragraph id="HA2E1286C30F844C6B4BBAD0134A9E880"><enum>(5)</enum><header>Applicable percentage</header><text display-inline="yes-display-inline">The applicable percentage under paragraph (1) shall be determined under the following table:</text> <table blank-lines-before="1" table-type="" table-template-name="Generic: 1 text, 1 num" align-to-level="section" frame="none" colsep="0" rowsep="0" line-rules="no-gen" rule-weights="0.0.0.0.0.0"> <tgroup cols="2" grid-typeface="1.1" rowsep="0" thead-tbody-ldg-size="10.10.12"><colspec coldef="txt" colname="column1" min-data-value="55" colwidth="253pts"/><colspec coldef="fig" colname="column2" min-data-value="13" colwidth="72pts"/><thead> <row><entry align="left" morerows="0" namest="column1" colname="column1"><bold>Years stock held:</bold></entry><entry align="right" morerows="0" namest="column2" colname="column2"><bold>Applicable percentage:</bold></entry></row></thead> <tbody> <row><entry align="left" stub-definition="txt-ldr" stub-hierarchy="1" colname="column1">3 years</entry><entry align="right" colname="column2">50%</entry></row> <row><entry align="left" stub-definition="txt-ldr" stub-hierarchy="1" colname="column1">4 years</entry><entry align="right" colname="column2">75%</entry></row> <row><entry align="left" stub-definition="txt-ldr" stub-hierarchy="1" colname="column1">5 years or more</entry><entry align="right" colname="column2">100%</entry></row></tbody></tgroup></table></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H359865DB2F4E439DAED55D20DFB894DA"><enum>(3)</enum><header>Applicable date; acquisition date</header><text>Section 1202(a), as amended by paragraph (2), is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE788E6F5528B45278C76CA599F8A3E5A">
<paragraph commented="no" display-inline="no-display-inline" id="HCCCFB268702C4E6DA8ACB5567C31C66F"><enum>(6)</enum><header>Applicable date; acquisition date</header><text>For purposes of this section—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HA5B8EBFAB74D492B934D8A7575A6673F"><enum>(A)</enum><header>Applicable date</header><text display-inline="yes-display-inline">The term <term>applicable date</term> means the date of the enactment of this paragraph.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HFA7E2FB8070B45CB962DA340D28C1398"><enum>(B)</enum><header>Acquisition date</header><text>In the case of any stock which would (but for this paragraph) be treated as having been acquired before, on, or after the applicable date, whichever is applicable, the acquisition date for purposes of this section shall be the first day on which such stock was held by the taxpayer determined after the application of section 1223.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" id="H14BCDD69820B4D61A16E95328ACF5DD1"><enum>(4)</enum><header>Continued treatment as not item of tax preference</header> <subparagraph commented="no" id="H0BF41001EA0E4096A00CEF0B1EC2636F"><enum>(A)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/57">Section 57(a)(7)</external-xref> is amended by striking <quote>An amount</quote> and inserting <quote>In the case of stock acquired on or before the date of the enactment of the Creating Small Business Jobs Act of 2010, an amount</quote>.</text></subparagraph>
<subparagraph commented="no" id="HA356CF6251FB4178B4A95A49997696F2"><enum>(B)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1202">Section 1202(a)(4)</external-xref> is amended—</text> <clause commented="no" id="HBCA566BA43D04CC297E84697DA1E586F"><enum>(i)</enum><text>by striking <quote>, and</quote> at the end of subparagraph (B) and inserting a period, and</text></clause>
<clause commented="no" id="H1C831749F09A4487A63185FDA7CF8721"><enum>(ii)</enum><text>by striking subparagraph (C).</text></clause></subparagraph></paragraph> <paragraph id="H4272A31F9AA9413BBB86291EC52EF434"><enum>(5)</enum><header>Other conforming amendments</header> <subparagraph id="HFE5453BCDF754AA1B5D622246FCA6E3C"><enum>(A)</enum><text>Paragraphs (3)(A) and (4)(A) of section 1202(a) are each amended by striking <quote>paragraph (1)</quote> and inserting <quote>paragraph (1)(A)</quote>.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF52A11285372427495949811EA446CB6"><enum>(B)</enum><text>Paragraph (4)(A) of <external-xref legal-doc="usc" parsable-cite="usc/26/1202">section 1202(a)</external-xref> is amended by inserting <quote>and on or before the applicable date</quote> after <quote>2010</quote>.</text></subparagraph> <subparagraph id="HB20245F3A74141B9BF3B07EB44A43FE9"><enum>(C)</enum><text>Sections 1202(b)(2), 1202(g)(2)(A), and 1202(j)(1)(A) are each amended by striking <quote>more than 5 years</quote> and inserting <quote>at least 3 years (more than 5 years in the case of stock acquired on or before the applicable date)</quote>.</text></subparagraph></paragraph>
<paragraph id="H46B8C5939E9944178203D75811517F22"><enum>(6)</enum><header>Effective dates</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H41108A77B65149C8AB01FBDDFEFA21AB"><enum>(A)</enum><header>In general</header><text>Except as provided in subparagraph (B), the amendments made by this subsection shall apply to taxable years beginning after the date of the enactment of this Act.</text></subparagraph> <subparagraph id="H48C32836458949D6B9526A984A413998" commented="no" display-inline="no-display-inline"><enum>(B)</enum><header>Continued treatment as not item of tax preference</header><text display-inline="yes-display-inline">The amendments made by paragraph (4) shall take effect as if included in the enactment of section 2011 of the Creating Small Business Jobs Act of 2010.</text></subparagraph></paragraph></subsection>
<subsection id="HEE4268706D4C4BB0B59540249E28D164"><enum>(b)</enum><header>Increase in per issuer limitation</header>
<paragraph commented="no" display-inline="no-display-inline" id="H6ED08854546A4E63AC217E2A8AE21645"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Subparagraph (A) of <external-xref legal-doc="usc" parsable-cite="usc/26/1202">section 1202(b)(1)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H5B8F5F29859242B48D414C680C8D508B"> <subparagraph commented="no" display-inline="no-display-inline" id="HB3DD1921A605427EBCD1EC506B518E2D"><enum>(A)</enum><text display-inline="yes-display-inline">the applicable dollar limit for the taxable year, or</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H0584EEC4B9DD4488AD1AC95B305B242D"><enum>(2)</enum><header>Applicable dollar limit</header><text>Section 1202 (b) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H816829CEAF0743FB94B6D5522FCFBCAF"> <paragraph commented="no" display-inline="no-display-inline" id="H79F5027A94404F788FF0FC20DFB12261"><enum>(4)</enum><header>Applicable dollar limit</header><text>For purposes of paragraph (1)(A), the applicable dollar limit for any taxable year with respect to eligible gain from 1 or more dispositions by a taxpayer of qualified business stock of a corporation is—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H794D88D347AB49A8B5156A09FB143B42"><enum>(A)</enum><text display-inline="yes-display-inline">if such stock was acquired by the taxpayer on or before the applicable date, $10,000,000, reduced by the aggregate amount of eligible gain taken into account by the taxpayer under subsection (a) for prior taxable years and attributable to dispositions of stock issued by such corporation and acquired by the taxpayer before, on, or after the applicable date, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H61A8F6B712344B1582A934F728F85ABD"><enum>(B)</enum><text display-inline="yes-display-inline">if such stock was acquired by the taxpayer after the applicable date, $15,000,000, reduced by the sum of—</text>
<clause commented="no" display-inline="no-display-inline" id="HC9A80BD575224E13A7A156C19ACBCFF5"><enum>(i)</enum><text display-inline="yes-display-inline">the aggregate amount of eligible gain taken into account by the taxpayer under subsection (a) for prior taxable years and attributable to dispositions of stock issued by such corporation and acquired by the taxpayer before, on, or after the applicable date, plus</text></clause> <clause commented="no" display-inline="no-display-inline" id="HEDC14B2957D1460BAABCCEEBE66C96DE"><enum>(ii)</enum><text>the aggregate amount of eligible gain taken into account by the taxpayer under subsection (a) for the taxable year and attributable to dispositions of stock issued by such corporation and acquired by the taxpayer on or before the applicable date.</text></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9CE2168A9BA3492B8418512574136AC5"><enum>(5)</enum><header>Inflation adjustment</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H433E683D539E4569B64600BA8045F600"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">In the case of any taxable year beginning after 2026, the $15,000,000 amount in paragraph (4)(B) shall be increased by an amount equal to —</text> <clause commented="no" display-inline="no-display-inline" id="H90DE37FF53064B1C93EFA4CA982487EB"><enum>(i)</enum><text display-inline="yes-display-inline">such dollar amount, multiplied by</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H5304E1E7506B4418A934E924F07D6B1D"><enum>(ii)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2025</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></clause><continuation-text continuation-text-level="subparagraph">If any increase under this subparagraph is not a multiple of $10,000, such increase shall be rounded to the nearest multiple of $10,000.</continuation-text></subparagraph> <subparagraph id="HF5ADA8A37EE747209CB923032EEB1974"><enum>(B)</enum><header>No increase once limit reached</header><text>If, for any taxable year, the eligible gain attributable to dispositions of stock issued by a corporation and acquired by the taxpayer after the applicable date exceeds the applicable dollar limit, then notwithstanding any increase under subparagraph (A) for any subsequent taxable year, the applicable dollar limit for such subsequent taxable year shall be zero.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HE6D80EEECFD04D50BCF4AAD8F10B083B"><enum>(3)</enum><header>Separate returns</header><text>Subparagraph (A) of <external-xref legal-doc="usc" parsable-cite="usc/26/1202">section 1202(b)(3)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H2488887CBF20453297BB66922227418B"> <subparagraph commented="no" display-inline="no-display-inline" id="HCAE25BFAAD9C4A1D8FF3E0E56783E2FF"><enum>(A)</enum><header>Separate returns</header><text display-inline="yes-display-inline">In the case of a separate return by a married individual for any taxable year—</text>
<clause commented="no" display-inline="no-display-inline" id="H69F478AF446948FFA3F3718E65BF6A07"><enum>(i)</enum><text display-inline="yes-display-inline">paragraph (4)(A) shall be applied by substituting <quote>$5,000,000</quote> for <quote>$10,000,000</quote>, and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H3B928B1DFB9546B9A711DF0D0EB3278F"><enum>(ii)</enum><text display-inline="yes-display-inline">paragraph (4)(B) shall be applied by substituting one-half of the dollar amount in effect under such paragraph for the taxable year for the amount so in effect.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="HDD485598BC4B4144954C42904601C2B8"><enum>(4)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to taxable years beginning after the date of the enactment of this Act.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HD8AA73AA08B24B73A66A3FEADA271B5D"><enum>(c)</enum><header>Increase in limit in aggregate gross assets</header> <paragraph commented="no" display-inline="no-display-inline" id="HB1D1564740244F68B318E12D35257F6B"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Subparagraphs (A) and (B) of section 1202(d)(1) are each amended by striking <quote>$50,000,000</quote> and inserting <quote>$75,000,000</quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H77CD67B63B5641BEAC5CF7A66FA10A88"><enum>(2)</enum><header>Inflation adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/1202">Section 1202(b)</external-xref> is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HCB82FA2FFD954F8CAB50D50A2FAE3737"> <paragraph commented="no" display-inline="no-display-inline" id="H89BF86668ECD4E3CB1BD52C243BCB912"><enum>(4)</enum><header>Inflation adjustment</header><text display-inline="yes-display-inline">In the case of any taxable year beginning after 2026, the $75,000,000 amounts in paragraphs (1)(A) and (1)(B) shall each be increased by an amount equal to—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HBDB59E44490E466589EDAF957F93D0C2"><enum>(A)</enum><text display-inline="yes-display-inline">such dollar amount, multiplied by</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H02C2A0CB75BF47E4A97C1ABF9E407B03"><enum>(B)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for the calendar year in which the taxable year begins, determined by substituting <quote>calendar year 2025</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></subparagraph><continuation-text continuation-text-level="paragraph">If any increase under this paragraph is not a multiple of $10,000, such increase shall be rounded to the nearest multiple of $10,000.</continuation-text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H7D3478F68FE24887962A7DAB4351A0FC"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to stock issued after the date of the enactment of this Act.</text></paragraph></subsection></section> <section id="H6448B72F3C5843B59978668EB63CF233"><enum>70432.</enum><header>Repeal of revision to de minimis rules for third party network transactions</header> <subsection id="HB2D71CAF73104E89B4EA8535E1208D39"><enum>(a)</enum><header>Reinstatement of exception for de minimis payments as in effect prior to enactment of American Rescue Plan Act of 2021</header> <paragraph id="HA457D4274B06434DB5E37B949C29A688"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6050W">Section 6050W(e)</external-xref> is amended to read as follows:</text>
<quoted-block id="HDF729384AC1C490D8FCC560F784B1732" display-inline="no-display-inline" style="OLC">
<subsection id="HDF0D342A7AE34910850EC250A82EEC58"><enum>(e)</enum><header>Exception for de minimis payments by third party settlement organizations</header><text>A third party settlement organization shall be required to report any information under subsection (a) with respect to third party network transactions of any participating payee only if—</text> <paragraph id="H6F7E75C733AA4EC3AFA73A4E5FDA06D9"><enum>(1)</enum><text>the amount which would otherwise be reported under subsection (a)(2) with respect to such transactions exceeds $20,000, and</text></paragraph>
<paragraph id="H22FE3A3855FA439FA4BB8903C384B5FF"><enum>(2)</enum><text>the aggregate number of such transactions exceeds 200.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H82F230FDDAB9424A91D762956DD3ED62"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall take effect as if included in section 9674 of the American Rescue Plan Act.</text></paragraph></subsection>
<subsection id="H67D01D2019F9475DADE702262B483C11"><enum>(b)</enum><header>Application of de minimis rule for third party network transactions to backup withholding</header>
<paragraph id="H48704DE664C74CFBA80CBC9FC7EF668E"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/3406">Section 3406(b)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block id="HF8D856FCAAFB4690956A955A85234C83" display-inline="no-display-inline" style="OLC"> <paragraph id="H9F18CC55F54845DCB8B30E007628B21C"><enum>(8)</enum><header>Other reportable payments include payments in settlement of third party network transactions only where aggregate transactions exceed reporting threshold for the calendar year</header> <subparagraph id="HED03F5753A9542C9B475A8C1DD163373"><enum>(A)</enum><header>In general</header><text>Any payment in settlement of a third party network transaction required to be shown on a return required under section 6050W which is made during any calendar year shall be treated as a reportable payment only if—</text>
<clause id="HFCA4878261714173899FD0D8326718DD"><enum>(i)</enum><text>the aggregate number of transactions with respect to the participating payee during such calendar year exceeds the number of transactions specified in section 6050W(e)(2), and</text></clause> <clause id="H2DDBD220B93D4B9C84E016B12EC967C3"><enum>(ii)</enum><text>the aggregate amount of transactions with respect to the participating payee during such calendar year exceeds the dollar amount specified in section 6050W(e)(1) at the time of such payment.</text></clause></subparagraph>
<subparagraph id="H75C1270DB366426F80A22AB3341D4A9E"><enum>(B)</enum><header>Exception if third party network transactions made in prior year were reportable</header><text>Subparagraph (A) shall not apply with respect to payments to any participating payee during any calendar year if one or more payments in settlement of third party network transactions made by the payor to the participating payee during the preceding calendar year were reportable payments.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H7EC6B60E405C4A5C8E4035F8AA4EE0E7"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to calendar years beginning after December 31, 2024.</text></paragraph></subsection></section>
<section id="H794D9A63A94540BAB37B084DE0966075"><enum>70433.</enum><header>Increase in threshold for requiring information reporting with respect to certain payees</header>
<subsection id="HB9C60FEEC1FC41959AB37EF3BFF78C08"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041">Section 6041(a)</external-xref> is amended by striking <quote>$600</quote> and inserting <quote>$2,000</quote>.</text></subsection> <subsection id="H4E8262DA1A764842A64FDD1804F78310"><enum>(b)</enum><header>Inflation adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041">Section 6041</external-xref> is amended by adding at the end the following new subsection:</text>
<quoted-block id="HCB6B0A31C2DA44329FBCB07070C5FAAA" display-inline="no-display-inline" style="OLC">
<subsection id="H4C029E0884C840D98A835ABD287E4ADD"><enum>(h)</enum><header>Inflation adjustment</header><text>In the case of any calendar year after 2026, the dollar amount in subsection (a) shall be increased by an amount equal to—</text> <paragraph id="HF1E889F351B54F10A3F831B5123088CF"><enum>(1)</enum><text>such dollar amount, multiplied by</text></paragraph>
<paragraph id="HBC5B407CC605494598DCF04979554C9B"><enum>(2)</enum><text>the cost-of-living adjustment determined under section 1(f)(3) for such calendar year, determined by substituting <quote>calendar year 2025</quote> for <quote>calendar year 2016</quote> in subparagraph (A)(ii) thereof.</text></paragraph><continuation-text continuation-text-level="subsection">If any increase under the preceding sentence is not a multiple of $100, such increase shall be rounded to the nearest multiple of $100. </continuation-text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HED325B445DD44D299999C2974D49DDBD"><enum>(c)</enum><header>Application to reporting on remuneration for services</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041A">Section 6041A(a)(2)</external-xref> is amended by striking <quote>is $600 or more</quote> and inserting <quote>equals or exceeds the dollar amount in effect for such calendar year under section 6041(a)</quote>.</text></subsection>
<subsection id="H6302701B11184DEDAC6D905A14CFD55F"><enum>(d)</enum><header>Application to backup withholding</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/3406">Section 3406(b)(6)</external-xref> is amended—</text> <paragraph id="H23B0ABEE1E854229BA0EE81156E10516"><enum>(1)</enum><text>by striking <quote>$600</quote> in subparagraph (A) and inserting <quote>the dollar amount in effect for such calendar year under section 6041(a)</quote>, and</text></paragraph>
<paragraph id="H135608D16ECA4814ADAB8B893DEEEBBB"><enum>(2)</enum><text>by striking <quote><header-in-text style="OLC" level="subsection">only where aggregate for calendar year is $600 or more</header-in-text></quote> in the heading and inserting <quote><header-in-text style="OLC" level="subsection">only where in excess of threshold</header-in-text></quote>.</text></paragraph></subsection> <subsection id="H88D8EE3C041A42C987F53E9B0791BE7E"><enum>(e)</enum><header>Conforming amendments</header> <paragraph id="HDF94673BBA9749D9B54CE41F4F41A32B"><enum>(1)</enum><text>The heading of <external-xref legal-doc="usc" parsable-cite="usc/26/6041">section 6041(a)</external-xref> is amended by striking <quote><header-in-text level="subsection">of $600 or more</header-in-text></quote> and inserting <quote><header-in-text level="subsection">exceeding threshold</header-in-text></quote>.</text></paragraph>
<paragraph id="H8368FD178FC94EFFBCD5519BB5AFCC17"><enum>(2)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/6041">Section 6041(a)</external-xref> is amended by striking <quote>taxable year</quote> and inserting <quote>calendar year</quote>.</text></paragraph></subsection> <subsection id="HE55000E7087B4EF8AA6829ED49C4701C"><enum>(f)</enum><header>Effective date</header><text>The amendments made by this section shall apply with respect to payments made after December 31, 2025.</text></subsection></section>
<section id="H5C54534E2C0344EA85412227D556A42D"><enum>70434.</enum><header>Treatment of certain qualified sound recording productions</header>
<subsection id="H28618A17F9EA45C4A1B5B9A535CF7406"><enum>(a)</enum><header>Election to treat costs as expenses</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/181">Section 181(a)(1)</external-xref> is amended by striking <quote>qualified film or television production, and any qualified live theatrical production,</quote> and inserting <quote>qualified film or television production, any qualified live theatrical production, and any qualified sound recording production</quote>.</text></subsection> <subsection id="H389430A3C461416DB7B193E0D1A70082"><enum>(b)</enum><header>Dollar limitation</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/181">Section 181(a)(2)</external-xref> is amended by adding at the end the following new subparagraph:</text>
<quoted-block id="H75158D2949894DB68A682B9A8B23DC1A" display-inline="no-display-inline" style="OLC">
<subparagraph id="HDF5501FB448B46FB9FB1DBFF35B0575E"><enum>(C)</enum><header>Qualified sound recording production</header><text>Paragraph (1) shall not apply to so much of the aggregate cost of any qualified sound recording production, or to so much of the aggregate, cumulative cost of all such qualified sound recording productions in the taxable year, as exceeds $150,000.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H519DF21564924955931C38C9021E7837"><enum>(c)</enum><header>No other deduction or amortization deduction allowable</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/181">Section 181(b)</external-xref> is amended by striking <quote>qualified film or television production or any qualified live theatrical production</quote> and inserting <quote>qualified film or television production, any qualified live theatrical production, or any qualified sound recording production</quote>.</text></subsection>
<subsection id="H12D1E7C214A145BD9FF1C20244037D85"><enum>(d)</enum><header>Election</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/181">Section 181(c)(1)</external-xref> is amended by striking <quote>qualified film or television production or any qualified live theatrical production</quote> and inserting <quote>qualified film or television production, any qualified live theatrical production, or any qualified sound recording production</quote>.</text></subsection> <subsection id="HB98D28756F1F4FC98A15FDC2DEF774C8"><enum>(e)</enum><header>Qualified sound recording production defined</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/181">Section 181</external-xref> is amended by redesignating subsections (f) and (g) as subsections (g) and (h), respectively, and by inserting after subsection (e) the following new subsection:</text>
<quoted-block id="H4CF2E31E3A2444BB8B2EF6841D671600" display-inline="no-display-inline" style="OLC">
<subsection id="H9AC3F2BBE80E4A03A4F04EF14E77B1CA"><enum>(f)</enum><header>Qualified sound recording production</header><text>For purposes of this section, the term <term>qualified sound recording production</term> means a sound recording (as defined in section 101 of title 17, United States Code) produced and recorded in the United States.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H11D7F6C44F0849659ADA3AD90BA5C1C6"><enum>(f)</enum><header>Application of termination</header><text>Section 181(h), as redesignated by subsection (e), is amended by striking <quote>qualified film and television productions or qualified live theatrical productions</quote> and inserting <quote>qualified film and television productions, qualified live theatrical productions, or qualified sound recording productions</quote>.</text></subsection>
<subsection id="H8AFA5A9FC8034C309F71F52F88B7F479"><enum>(g)</enum><header>Bonus depreciation</header>
<paragraph id="H57527A7714404514920EE3521BE13A4D"><enum>(1)</enum><header>Qualified sound recording production as qualified property</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(A)(i)</external-xref> is amended—</text> <subparagraph id="H7ED6006F37694D95AD50D6A88CA77CA6"><enum>(A)</enum><text>by striking <quote>or</quote> at the end of subclause (IV), by inserting <quote>or</quote> at the end of subclause (V), and by inserting after subclause (V) the following:</text>
<quoted-block id="HDD7D3A680846496CBFFE359777BFBD1D" display-inline="no-display-inline" style="OLC">
<subclause id="H55BC6F3BA518451A9653B007FD536B79"><enum>(VI)</enum><text>which is a qualified sound recording production (as defined in subsection (f) of section 181) for which a deduction would have been allowable under section 181 without regard to subsections (a)(2) and (h) of such section or this subsection, and</text></subclause><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="HB8C20869950F4EF5B77805B812C92B6A"><enum>(B)</enum><text>in subclauses (IV) and (V) (as so amended) by striking <quote>without regard to subsections (a)(2) and (g)</quote> both places it appears and inserting <quote>without regard to subsections (a)(2) and (h)</quote>.</text></subparagraph></paragraph>
<paragraph id="HC98D34C133534E8AA1E0625D85D395A6"><enum>(2)</enum><header>Production placed in service</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/168">Section 168(k)(2)(H)</external-xref> is amended by striking <quote>and</quote> at the end of clause (i), by striking the period at the end of clause (ii) and inserting <quote>, and</quote>, and by adding after clause (ii) the following:</text> <quoted-block id="HC0C345CF4EA241C594B847FD46423A84" display-inline="no-display-inline" style="OLC"> <clause id="HF809ABA0B3464CD68A62E22E53A208C5"><enum>(iii)</enum><text>a qualified sound recording production shall be considered to be placed in service at the time of initial release or broadcast.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H2D3C6644CC2B451999FCE4CA48916A6A"><enum>(h)</enum><header>Conforming amendments</header>
<paragraph id="H3BFB63DFE28945EEB77D0DCACB7B3586"><enum>(1)</enum><text>The heading for <external-xref legal-doc="usc" parsable-cite="usc/26/181">section 181</external-xref> is amended to read as follows: <quote><header-in-text level="section">treatment of certain qualified productions</header-in-text>.</quote>.</text></paragraph> <paragraph id="HD5401AEEC1614DF3866BFE2C94C63596"><enum>(2)</enum><text>The table of sections for part VI of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by striking the item relating to section 181 and inserting the following new item:</text>
<quoted-block id="HB82A79B735EB45E08DC05C70C55016DC" display-inline="no-display-inline" style="OLC">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 181. Treatment of certain qualified productions. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H70A4BC414D3C41E1AAE257269B616236"><enum>(i)</enum><header>Effective date</header><text>The amendments made by this section shall apply to productions commencing in taxable years ending after the date of the enactment of this Act.</text></subsection></section> <section id="HCF9EB26A2DF34FA6A88BB84FF8207E3A"><enum>70435.</enum><header>Exclusion of interest on loans secured by rural or agricultural real property</header> <subsection id="HC5B3818372A4427393F5A22E8867B0A2"><enum>(a)</enum><header>In general</header><text>Part III of subchapter B of chapter 1, as amended by the preceding provisions of this Act, is amended by inserting after section 139K the following new section:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H44F8BACAC2C14CAEAEFA0AB6685DB8DF">
<section id="H212256D6F802442C8AE87CEADF05DF79"><enum>139L.</enum><header>Interest on loans secured by rural or agricultural real property</header>
<subsection id="HF08D32B99B1C48418F8137BED557F3FB"><enum>(a)</enum><header>In general</header><text>Gross income shall not include 25 percent of the interest received by a qualified lender on any qualified real estate loan.</text></subsection> <subsection id="H16633C48AD4B49E9873EFB5C94F85B19"><enum>(b)</enum><header>Qualified lender</header><text>For purposes of this section, the term <term>qualified lender</term> means—</text>
<paragraph id="H31028D9B7C0E47ABA8498F6C8B342B6D"><enum>(1)</enum><text>any bank or savings association the deposits of which are insured under the <act-name parsable-cite="FDIA">Federal Deposit Insurance Act</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/12/1811">12 U.S.C. 1811 et seq.</external-xref>),</text></paragraph> <paragraph id="H1D0A8462097949448754BA97C487098B"><enum>(2)</enum><text>any State- or federally-regulated insurance company,</text></paragraph>
<paragraph id="H18DC93696FFB49BABAFDDC8ACA484612"><enum>(3)</enum><text>any entity wholly owned, directly or indirectly, by a company that is treated as a bank holding company for purposes of section 8 of the <act-name parsable-cite="IBA78">International Banking Act of 1978</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/12/3106">12 U.S.C. 3106</external-xref>) if—</text> <subparagraph id="HE3971277A61B4C2FA1B851C637BC6687"><enum>(A)</enum><text>such entity is organized, incorporated, or established under the laws of the United States or any State, and</text></subparagraph>
<subparagraph id="H13DF29F555A1488EAFFDD7A064C0033D"><enum>(B)</enum><text>the principal place of business of such entity is in the United States (including any territory of the United States),</text></subparagraph></paragraph> <paragraph id="H644E44B2B6A2440694B96153BA204499"><enum>(4)</enum><text>any entity wholly owned, directly or indirectly, by a company that is considered an insurance holding company under the laws of any State if such entity satisfies the requirements described in subparagraphs (A) and (B) of paragraph (3), and</text></paragraph>
<paragraph id="H0AF77E8FFF3D468BA42FBB20E8180F72"><enum>(5)</enum><text>with respect to interest received on a qualified real estate loan secured by real estate described in subsection (c)(3)(A), any federally chartered instrumentality of the United States established under section 8.1(a) of the <act-name parsable-cite="FCA71">Farm Credit Act of 1971</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/12/2279aa-1">12 U.S.C. 2279aa-1(a)</external-xref>).</text></paragraph></subsection> <subsection id="HAE45474CFAD54A7BAACEC8DC03937105"><enum>(c)</enum><header>Qualified real estate loan</header><text>For purposes of this section—</text>
<paragraph id="H6FFF551862CD45BE894686DCF976C039"><enum>(1)</enum><header>In general</header><text>The term <term>qualified real estate loan</term> means any loan—</text> <subparagraph id="H1673D82CFE974E7BB8D32C2E024D7646"><enum>(A)</enum><text>secured by—</text>
<clause id="H79BD24DCE74041AF9906A09B91FBCA46"><enum>(i)</enum><text>rural or agricultural real estate, or</text></clause> <clause id="HD588B5A61D724B17ABF0DBA01AAC8299"><enum>(ii)</enum><text>a leasehold mortgage (with a status as a lien) on rural or agricultural real estate,</text></clause></subparagraph>
<subparagraph id="HC07766268AF44BB6995B6D8F84A30466"><enum>(B)</enum><text>made to a person other than a specified foreign entity (as defined in section 7701(a)(51)), and</text></subparagraph> <subparagraph id="H7F0BAB570546421E8167699FDBACC08A"><enum>(C)</enum><text>made after the date of the enactment of this section.</text></subparagraph><continuation-text continuation-text-level="paragraph">For purposes of the preceding sentence, the determination of whether property securing such loan is rural or agricultural real estate shall be made as of the time the interest income on such loan is accrued. </continuation-text></paragraph>
<paragraph id="H175677748D8F4EE8BB2DBD11450FA2AA"><enum>(2)</enum><header>Refinancings</header><text>For purposes of subparagraphs (A) and (C) of paragraph (1), a loan shall not be treated as made after the date of the enactment of this section to the extent that the proceeds of such loan are used to refinance a loan which was made on or before the date of the enactment of this section (or, in the case of any series of refinancings, the original loan was made on or before such date).</text></paragraph> <paragraph id="H736CB6160C1E47679F2F7255BB97D756"><enum>(3)</enum><header>Rural or agricultural real estate</header><text>The term <term>rural or agricultural real estate</term> means—</text>
<subparagraph id="H6D2E64165CE94EABA41F3939B915D2C0"><enum>(A)</enum><text>any real property which is substantially used for the production of one or more agricultural products,</text></subparagraph> <subparagraph id="H8EA5A3A75A37486E8BDC385DC5017F5F"><enum>(B)</enum><text>any real property which is substantially used in the trade or business of fishing or seafood processing, and</text></subparagraph>
<subparagraph id="H9F0810388C32427EA7F43DD04CEEE7BA"><enum>(C)</enum><text>any aquaculture facility.</text></subparagraph><continuation-text continuation-text-level="paragraph">Such term shall not include any property which is not located in a State or a possession of the United States. </continuation-text></paragraph> <paragraph id="H14C30C13AE724C7CAC76BB2EF514C90A"><enum>(4)</enum><header>Aquaculture facility</header><text>The term <term>aquaculture facility</term> means any land, structure, or other appurtenance that is used for aquaculture (including any hatchery, rearing pond, raceway, pen, or incubator).</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H8A1E0BC7F7C54D04AA056D0013ACE3C3"><enum>(d)</enum><header>Coordination with section 265</header><text>In the case of any qualified real estate loan, section 265 shall be applied—</text> <paragraph id="H5EA1E73809DC49A9A1CD69E8DA014046"><enum>(1)</enum><text>by treating any qualified real estate loan for purposes of subsection (a)(2) thereof as an obligation the interest on which is wholly exempt from the taxes imposed by this subtitle,</text></paragraph>
<paragraph id="HB426A73D6F934D81BC0297502F35592E"><enum>(2)</enum><text>by substituting <quote>25 percent of the interest on indebtedness</quote> for <quote>Interest on indebtedness</quote> in such subsection (a)(2),</text></paragraph> <paragraph id="HB854897A525A4B09BF48B1D74F8377D5"><enum>(3)</enum><text>by treating 25 percent of the adjusted basis of any qualified real estate loan as adjusted basis of a tax-exempt obligation described in subsection (b)(4)(B) thereof, and</text></paragraph>
<paragraph id="H9E47F7538A2F45AF9CECDD10EA7FDE38"><enum>(4)</enum><text>by substituting <quote>25 percent of the amount of such indebtedness</quote> for <quote>the amount of such indebtedness</quote> in subsection (b)(6)(A)(a)(ii) thereof.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HAF42394E37F648D6A5E9E15885C0E3DE"><enum>(b)</enum><header>Clerical amendment</header><text>The table of sections for part III of subchapter B of chapter 1, as amended by the preceding provisions of this Act, is amended by inserting after the item relating to section 139K the following new item:</text>
<quoted-block id="HEF383574AE464BC4BCEB6C62E785260D" display-inline="no-display-inline" style="OLC">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 139L. Interest on loans secured by rural or agricultural real property. </toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H97CE8C39620D4E10B8402077F3B9F194" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years ending after the date of the enactment of this Act.</text></subsection></section> <section id="HAB10C06BE45140649020370A1C0B3E65"><enum>70436.</enum><header>Reduction of transfer and manufacturing taxes for certain devices</header> <subsection id="H89153981ACCC40AEB4DB0BA7DE556C31"><enum>(a)</enum><header>Transfer tax</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/5811">Section 5811(a)</external-xref> is amended to read as follows:</text>
<quoted-block id="H5D703A7F12AE45C79295FAD82041F2CA" display-inline="no-display-inline" style="OLC">
<subsection id="H59A8D842D70441AD9FBDBD0C97056705"><enum>(a)</enum><header>Rate</header><text>There shall be levied, collected, and paid on firearms transferred a tax at the rate of—</text> <paragraph commented="no" display-inline="no-display-inline" id="H8D5D6E439944482CACD20F1334AFDD37"><enum>(1)</enum><text>$200 for each firearm transferred in the case of a machinegun or a destructive device, and</text></paragraph>
<paragraph id="H23368CC2657845ACAEFF56289E1D8147"><enum>(2)</enum><text>$0 for any firearm transferred which is not described in paragraph (1).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HA99947611C9346AEBC2D78C4A3E80A57"><enum>(b)</enum><header>Making tax</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/5821">Section 5821(a)</external-xref> is amended to read as follows:</text>
<quoted-block id="H5460057CE5644EFAB89D1B92C5B0ADA1" display-inline="no-display-inline" style="OLC">
<subsection id="H1989C5DA01934CB68CA649E060138029"><enum>(a)</enum><header>Rate</header><text>There shall be levied, collected, and paid upon the making of a firearm a tax at the rate of—</text> <paragraph id="H5E34726BF7BF4E6DA592A2BA97471AF4"><enum>(1)</enum><text>$200 for each firearm made in the case of a machinegun or a destructive device, and</text></paragraph>
<paragraph id="HD604D4C2B55E476EA22E69BAD63D1961"><enum>(2)</enum><text>$0 for any firearm made which is not described in paragraph (1).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HCE4F707F5DE24391B252165244462116"><enum>(c)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/4182">Section 4182(a)</external-xref> is amended by adding at the end the following: <quote>For purposes of the preceding sentence, any firearm described in section 5811(a)(2) shall be deemed to be a firearm on which the tax provided by section 5811 has been paid.</quote></text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HCFC7CC3F3B1D4C1496F875AD387DDE1C"><enum>(d)</enum><header display-inline="yes-display-inline">Effective date</header><text>The amendments made by this section shall apply to calendar quarters beginning more than 90 days after the date of the enactment of this Act.</text></subsection></section> <section section-type="subsequent-section" commented="no" display-inline="no-display-inline" id="H5DE7C262E69C44458F20EFA88A8F10EA"><enum>70437.</enum><header display-inline="yes-display-inline">Treatment of capital gains from the sale of certain farmland property</header> <subsection commented="no" display-inline="no-display-inline" id="H45BFCF9743CF442CB2DD0175D2C643C6"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Part IV of subchapter O of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by redesignating section 1062 as section 1063 and by inserting after section 1061 the following new section:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H012F40310B4E4F1EBB7CA6AE4D5A24EB">
<section id="H575EFF9132724AF392E723788F5A9A00"><enum>1062.</enum><header>Gain from the sale or exchange of qualified farmland property to qualified farmers</header>
<subsection commented="no" display-inline="no-display-inline" id="HADF6605DF2D547459ED07544AB5722F1"><enum>(a)</enum><header display-inline="yes-display-inline">Election to pay tax in installments</header><text display-inline="yes-display-inline">In the case of gain from the sale or exchange of qualified farmland property to a qualified farmer, at the election of the taxpayer, the portion of the net income tax of such taxpayer for the taxable year of the sale or exchange which is equal to the applicable net tax liability shall be paid in 4 equal installments.</text></subsection> <subsection id="HFCA93101E9D543CE94818B0CF3AE1271"><enum>(b)</enum><header>Rules relating to installment payments</header> <paragraph commented="no" display-inline="no-display-inline" id="H794B77D373C548098361BA641A76936D"><enum>(1)</enum><header display-inline="yes-display-inline">Date for payment of installments</header><text>If an election is made under subsection (a), the first installment shall be paid on the due date (determined without regard to any extension of time for filing the return) for the return of tax for the taxable year in which the sale or exchange occurs and each succeeding installment shall be paid on the due date (as so determined) for the return of tax for the taxable year following the taxable year with respect to which the preceding installment was made.</text></paragraph>
<paragraph id="H65420BD17D9B40CBAFE669C84646088A"><enum>(2)</enum><header>Acceleration of payment</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HB2A571629DDA431E8C3E565D4E0E171A"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>If there is an addition to tax for failure to timely pay any installment required under this section, then the unpaid portion of all remaining installments shall be due on the date of such failure.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H9E0A555348B9453388D4D02610AE9183"><enum>(B)</enum><header>Individuals</header><text>In the case of an individual, if the individual dies, then the unpaid portion of all remaining installment shall be paid on the due date for the return of tax for the taxable year in which the taxpayer dies.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF224CB0F8FD74B9A861AC4BE34F87764"><enum>(C)</enum><header>C corporations</header><text display-inline="yes-display-inline">In the case of a taxpayer which is a C corporation, trust, or estate, if there is a liquidation or sale of substantially all the assets of the taxpayer (including in a title 11 or similar case), a cessation of business by the taxpayer (in the case of a C corporation), or any similar circumstance, then the unpaid portion of all remaining installments shall be due on the date of such event (or in the case of a title 11 or similar case, the day before the petition is filed). The preceding sentence shall not apply to the sale of substantially all the assets of a taxpayer to a buyer if such buyer enters into an agreement with the Secretary under which such buyer is liable for the remaining installments due under this subsection in the same manner as if such buyer were the taxpayer.</text></subparagraph></paragraph> <paragraph id="HE7655982815B449D93F2358AFC7F86E3"><enum>(3)</enum><header>Proration of deficiency to installments</header><text>If an election is made under subsection (a) to pay the applicable net tax liability in installments and a deficiency has been assessed with respect to such applicable net tax liability, the deficiency shall be prorated to the installments payable under subsection (a). The part of the deficiency so prorated to any installment the date for payment of which has not arrived shall be collected at the same time as, and as a part of, such installment. The part of the deficiency so prorated to any installment the date for payment of which has arrived shall be paid upon notice and demand from the Secretary. This section shall not apply if the deficiency is due to negligence, to intentional disregard of rules and regulations, or to fraud with intent to evade tax.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HB9EC8FCEC9DF436AB618D21924AC50FD"><enum>(c)</enum><header>Election</header>
<paragraph commented="no" display-inline="no-display-inline" id="H49DE8FADC39743B088C6D3D38603CD65"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Any election under subsection (a) shall be made not later than the due date for the return of tax for the taxable year described in subsection (a). </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H7E0C091514454405BBC6C8C840E4CD9A"><enum>(2)</enum><header>Partnerships and S corporations</header><text>In the case of a sale or exchange described in subsection (a) by a partnership or S corporation, the election under subsection (a) shall be made at the partner or shareholder level. The Secretary may prescribe such regulations or other guidance as necessary to carry out the purposes of this paragraph. </text></paragraph></subsection>
<subsection id="H512990462AC34084930B87A6A036C686"><enum>(d)</enum><header>Definitions</header><text>For purposes of this section—</text> <paragraph commented="no" display-inline="no-display-inline" id="H9FAAF53D1FCA424884216894965316B8"><enum>(1)</enum><header display-inline="yes-display-inline">Applicable net tax liability</header> <subparagraph commented="no" display-inline="no-display-inline" id="H4E43A478F6E84F7EB2BEB17AE24391B2"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The applicable net tax liability with respect to the sale or exchange of any property described in subsection (a) is the excess (if any) of—</text>
<clause id="H2BC5D8E8971947769FE4FC4AA883AE8A"><enum>(i)</enum><text>such taxpayer's net income tax for the taxable year, over</text></clause> <clause id="H946A0690EB6945A6B7FA9E5133A8E8C0"><enum>(ii)</enum><text>such taxpayer's net income tax for such taxable year determined without regard to any gain recognized from the sale or exchange of such property.</text></clause></subparagraph>
<subparagraph id="H794CAFFFAF93424A8C0270E813C6DAA1"><enum>(B)</enum><header>Net Income Tax</header><text>The term <term>net income tax</term> means the regular tax liability reduced by the credits allowed under subparts A, B, and D of part IV of subchapter A.</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HB5A160414D6849CCBAE3E4B3F1B8C4C6"><enum>(2)</enum><header>Qualified farmland property</header> <subparagraph commented="no" display-inline="no-display-inline" id="H24B97A6F2AC3444BA8AD388F749944BB"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The term <term>qualified farmland property</term> means real property located in the United States—</text>
<clause commented="no" display-inline="no-display-inline" id="HE394B253B13F4846BC0BDC785D673DF8"><enum>(i)</enum><text display-inline="yes-display-inline">which—</text> <subclause commented="no" display-inline="no-display-inline" id="H5492F6A5656340F9935A31FE5A914894"><enum>(I)</enum><text display-inline="yes-display-inline">has been used by the taxpayer as a farm for farming purposes, or </text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HC9C36ECCEAA340E9892F0A5FF36996E2"><enum>(II)</enum><text display-inline="yes-display-inline">leased by the taxpayer to a qualified farmer for farming purposes,</text></subclause><continuation-text continuation-text-level="clause">during substantially all of the 10-year period ending on the date of the qualified sale or exchange, and</continuation-text></clause> <clause id="HDFD9279B353847EA88C73C0D74368D41"><enum>(ii)</enum><text>which is subject to a covenant or other legally enforceable restriction which prohibits the use of such property other than as a farm for farming purposes for any period before the date that is 10 years after the date of the sale or exchange described in subsection (a).</text></clause><continuation-text continuation-text-level="subparagraph">For purposes of clause (i), property which is used or leased by a partnership or S corporation in a manner described in such clause shall be treated as used or leased in such manner by each person who holds a direct or indirect interest in such partnership or S corporation. </continuation-text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H47C4D322C0E443B184069A2592932DA6"><enum>(B)</enum><header display-inline="yes-display-inline">Farm; farming purposes</header><text display-inline="yes-display-inline">The terms <term>farm</term> and <term>farming purposes</term> have the respective meanings given such terms under section 2032A(e).</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H750BD5C927D0447FA54FF898E8E86208"><enum>(3)</enum><header>Qualified farmer</header><text>The term <term>qualified farmer</term> means any individual who is actively engaged in farming (within the meaning of subsections (b) and (c) of section 1001 of the Food Security Act of 1986 (<external-xref legal-doc="usc" parsable-cite="usc/7/1308-1">7 U.S.C. 1308–1(b)</external-xref> and (c))).</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H402184875A2A4A0D969112568A004436"><enum>(e)</enum><header>Return requirement</header><text display-inline="yes-display-inline">A taxpayer making an election under subsection (a) shall include with the return for the taxable year of the sale or exchange described in subsection (a) a copy of the covenant or other legally enforceable restriction described in subsection (d)(2)(A)(ii).</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H9C0736CAC7E84AF38454864111EA8C74"><enum>(b)</enum><header>Clerical amendment</header><text>The table of sections for part IV of subchapter O of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/1">chapter 1</external-xref> is amended by redesignating the item relating to section 1062 as relating to section 1063 and by inserting after the item relating to section 1061 the following new item:</text>
<quoted-block style="OLC" id="HFDDBAF0A631547A6AAC4378EF9218645">
<toc>
<toc-entry level="section" idref="H575EFF9132724AF392E723788F5A9A00">Sec. 1062. Gain from the sale or exchange of qualified farmland property to qualified farmers.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HCE59526C3B2744AC8B6285C8DC6E00C8" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to sales or exchanges in taxable years beginning after the date of the enactment of this Act.</text></subsection></section> <section id="H36E3CF48C3FE4BF6A36D536547DCE942" commented="no" display-inline="no-display-inline" section-type="subsequent-section"><enum>70438.</enum><header>Extension of rules for treatment of certain disaster-related personal casualty losses</header><text display-inline="no-display-inline">For purposes of applying section 304(b) of the Taxpayer Certainty and Disaster Tax Relief Act of 2020 (division EE of <external-xref legal-doc="public-law" parsable-cite="pl/116/260">Public Law 116–260</external-xref>), section 301 of such Act shall be applied by substituting the date of the enactment of this section for <quote>the date of the enactment of this Act</quote> each place it appears.</text></section>
<section id="H5AB3E8F5C44943FC86D4AE8568E6D725" section-type="subsequent-section"><enum>70439.</enum><header>Restoration of taxable REIT subsidiary asset test</header>
<subsection id="H674E87602CEC45F5B152E568049C547E"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/856">Section 856(c)(4)(B)(ii)</external-xref> is amended by striking <quote>20 percent</quote> and inserting <quote>25 percent</quote>. </text></subsection> <subsection id="HF48A9D69CF024AB281FE396D0205DEE9" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025. </text></subsection></section></subchapter></chapter>
<chapter id="HB9E397B6F01947F0B2527430E65A644E" style="OLC"><enum>5</enum><header>Ending Green New Deal spending, promoting America-first energy, and other reforms</header>
<subchapter style="OLC" commented="no" level-type="subsequent" id="H396ED1AC30564C119F328D817071E19B"><enum>A</enum><header>Termination of Green New Deal subsidies</header>
<section id="H2396365E65244C9880FEA63E0C5F973A"><enum>70501.</enum><header>Termination of previously-owned clean vehicle credit</header><text display-inline="no-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/25E">Section 25E(g)</external-xref> is amended by striking <quote>December 31, 2032</quote> and inserting <quote>September 30, 2025</quote>.</text></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H72E7F1597BE24B8288EC64EA912EDC63"><enum>70502.</enum><header>Termination of clean vehicle credit</header> <subsection commented="no" display-inline="no-display-inline" id="H72F3C11EC1624ECF8FEA36445B2EE858"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/30D">Section 30D(h)</external-xref> is amended by striking <quote>placed in service after December 31, 2032</quote> and inserting <quote>acquired after September 30, 2025</quote>.</text></subsection>
<subsection id="H540BF9F833BA44C38FE08C6F7CB32237"><enum>(b)</enum><header>Conforming amendments</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/30D">Section 30D(e)</external-xref> is amended—</text> <paragraph id="H14210A8B90CF4E069F83CFD9EF81A9AC"><enum>(1)</enum><text>in paragraph (1)(B)—</text>
<subparagraph id="H57A16274AED14D8085C3D54B537C166C"><enum>(A)</enum><text>in clause (iii), by inserting <quote>and</quote> after the comma at the end,</text></subparagraph> <subparagraph id="H4061EB5E0EF148FCA0BB302173CD5E00"><enum>(B)</enum><text>in clause (iv), by striking <quote>, and</quote> and inserting a period, and</text></subparagraph>
<subparagraph id="HC5BBE8D2FAEC45A19AEE11BFF456F10F"><enum>(C)</enum><text>by striking clause (v), and</text></subparagraph></paragraph> <paragraph id="H109776238D9F4874AFF52EB77C0F468D"><enum>(2)</enum><text>in paragraph (2)(B)—</text>
<subparagraph id="H623B65C169D14A0B81DFD37994617073"><enum>(A)</enum><text>in clause (ii), by inserting <quote>and</quote> after the comma at the end,</text></subparagraph> <subparagraph id="H144AEA5EBF3543EA8DF266E22DD52B7A"><enum>(B)</enum><text>in clause (iii), by striking the comma at the end and inserting a period, and</text></subparagraph>
<subparagraph id="HCE67881DB930409D953947DD773DE286"><enum>(C)</enum><text>by striking clauses (iv) through (vi).</text></subparagraph></paragraph></subsection></section> <section id="HD4641741D44742F6BCB1ADA27FAF16B2"><enum>70503.</enum><header>Termination of qualified commercial clean vehicles credit</header><text display-inline="no-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/45W">Section 45W(g)</external-xref> is amended by striking <quote>December 31, 2032</quote> and inserting <quote>September 30, 2025</quote>.</text></section>
<section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HF291377854D142CC8CA425A598AD84F5"><enum>70504.</enum><header>Termination of alternative fuel vehicle refueling property credit</header><text display-inline="no-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/30C">Section 30C(i)</external-xref> is amended by striking <quote>December 31, 2032</quote> and inserting <quote>June 30, 2026</quote>.</text></section> <section id="H2471A3F2005F4E7C83DB4B90BC08775C"><enum>70505.</enum><header>Termination of energy efficient home improvement credit</header> <subsection commented="no" display-inline="no-display-inline" id="H7D712882F9A0483E98401F7FA4477E2B"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/25C">Section 25C(h)</external-xref> is amended by striking <quote>placed in service</quote> and all that follows through <quote>December 31, 2032</quote> and inserting <quote>placed in service after December 31, 2025</quote>.</text></subsection>
<subsection id="H331C3B89F9D2467598D20C56D7862BBA"><enum>(b)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/25C">Section 25C(d)(2)(C)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HDCA6F78AA8ED4C6D943073518BC3559D"> <subparagraph id="H9D3093DEC9644699B97F6B696AAA6851"><enum>(C)</enum><text>Any oil furnace or hot water boiler which—</text>
<clause id="H1267EFF0182B42B6AEF8416317D6517B"><enum>(i)</enum><text>meets or exceeds 2021 Energy Star efficiency criteria, and</text></clause> <clause id="H4E0B86F9B4F044F98BD9AD6F12E26AF4"><enum>(ii)</enum><text>is rated by the manufacturer for use with fuel blends at least 20 percent of the volume of which consists of an eligible fuel.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section>
<section id="H41057BDED5544D4FBD27A4ABFAE3E3CC"><enum>70506.</enum><header>Termination of residential clean energy credit</header>
<subsection commented="no" display-inline="no-display-inline" id="HCA5079EEC98543F7A220292919A07A4C"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/25D">Section 25D(h)</external-xref> is amended by striking <quote>to property placed in service after December 31, 2034</quote> and inserting <quote>with respect to any expenditures made after December 31, 2025</quote>.</text></subsection> <subsection id="H439600FF1D0E49048918951D5AB8E2D1"><enum>(b)</enum><header>Conforming amendments</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/25D">Section 25D(g)</external-xref> is amended—</text>
<paragraph id="H035D64964B0541E98060426740B7E585"><enum>(1)</enum><text>in paragraph (2), by inserting <quote>and</quote> after the comma at the end,</text></paragraph> <paragraph id="H87DECC7CFAD249B7BA8E0A8DD556BBF8"><enum>(2)</enum><text>in paragraph (3), by striking <quote> and before January 1, 2033, 30 percent,</quote> and inserting <quote>30 percent.</quote>, and</text></paragraph>
<paragraph id="H299E4FC4B4EB4D968623B4DEF57A9A0F"><enum>(3)</enum><text>by striking paragraphs (4) and (5).</text></paragraph></subsection></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H3D8B9C0FE3DF4642992B55D4452512EC"><enum>70507.</enum><header display-inline="yes-display-inline">Termination of energy efficient commercial buildings deduction</header><text display-inline="no-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/179D">Section 179D</external-xref> is amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE3B820A0E4D94ADB8D4F21B3FFA2C0CD">
<subsection commented="no" display-inline="no-display-inline" id="HD32B286E680B408795A4A03E5D17BD14"><enum>(i)</enum><header>Termination</header><text>This section shall not apply with respect to property the construction of which begins after June 30, 2026.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></section> <section id="H9E3BE194EF5A49B8996E9EF6D24CC043"><enum>70508.</enum><header>Termination of new energy efficient home credit</header><text display-inline="no-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/45L">Section 45L(h)</external-xref> is amended by striking <quote>December 31, 2032</quote> and inserting <quote>June 30, 2026</quote>.</text></section>
<section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="H4ABBEFBD7B774E028E2DC3FC4BD15C6E"><enum>70509.</enum><header>Termination of cost recovery for energy property</header>
<subsection commented="no" display-inline="no-display-inline" id="H8933B4DC0F6144C7862303A7B3AD93EB"><enum>(a)</enum><header display-inline="yes-display-inline">Energy property</header><text>Section 168(e)(3)(B)(vi), as amended by section 13703 of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref>, is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HC6F2695430294CDC90AD04C8BBF9DC32"><enum>(1)</enum><text display-inline="yes-display-inline">by striking subclause (I), and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HE052F346BC94462E909677326CEA1F71"><enum>(2)</enum><text>by redesignating subclauses (II) and (III) as subclauses (I) and (II), respectively.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H427ADE79AE6B4E7A9791D2A5CED9667B"><enum>(b)</enum><header display-inline="yes-display-inline">Effective date</header><text display-inline="yes-display-inline">The amendments made by subsection (a) shall apply to property the construction of which begins after December 31, 2024.</text></subsection></section>
<section id="HAC4357D4B1B2461E9299422BB48292A6"><enum>70510.</enum><header>Modifications of zero-emission nuclear power production credit</header>
<subsection id="HD3FB926DD8B3419A8E3A4BDC205EDC35"><enum>(a)</enum><header>Restrictions relating to prohibited foreign entities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45U">Section 45U(c)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block id="H620AC7A8AF8D491FA38C9E097D0DC950" display-inline="no-display-inline" style="OLC"> <paragraph id="H365D2E1EE35548E4BE51C912E76FAD99"><enum>(3)</enum><header>Restrictions relating to prohibited foreign entities</header> <subparagraph id="HFB9B71D1B4C345B7ADCF56DFCD059B54"><enum>(A)</enum><header>In general</header><text>No credit shall be determined under subsection (a) for any taxable year beginning after the date of enactment of this paragraph if the taxpayer is a specified foreign entity (as defined in section 7701(a)(51)(B)).</text></subparagraph>
<subparagraph id="H5831F06FA9704DA0A11F752B251E1BFC"><enum>(B)</enum><header>Other prohibited foreign entities</header><text>No credit shall be determined under subsection (a) for any taxable year beginning after the date which is 2 years after the date of enactment of this paragraph if the taxpayer is a foreign-influenced entity (as defined in section 7701(a)(51)(D), without regard to clause (i)(II) thereof).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="H25592D8BA7BD474C83267671D33214A4"><enum>(b)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to taxable years beginning after the date of enactment of this Act.</text></subsection></section>
<section id="H6E2AADA860494E70A75DC92B80DC2CD5"><enum>70511.</enum><header>Termination of clean hydrogen production credit</header><text display-inline="no-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/45V">Section 45V(c)(3)(C)</external-xref> is amended by striking <quote>January 1, 2033</quote> and inserting <quote>January 1, 2028</quote>.</text></section> <section id="H4B1A78567FFE4137AF415D615AF739F5"><enum>70512.</enum><header>Termination and restrictions on clean electricity production credit</header> <subsection commented="no" display-inline="no-display-inline" id="H0557DE5CC8464910B8E4998155ADC7AC"><enum>(a)</enum><header display-inline="yes-display-inline">Termination for wind and solar facilities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Y">Section 45Y(d)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H5DE28A7804D449BF9C84071511E12AB3"><enum>(1)</enum><text display-inline="yes-display-inline">in paragraph (1), by striking <quote>The amount of</quote> and inserting <quote>Subject to paragraph (4), the amount of</quote>, and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H560F5EFA2FCC47DD8AE10AEC71A8FEF9"><enum>(2)</enum><text>by striking paragraph (3) and inserting the following new paragraphs:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H1C06C6467182481F97A02FEFB9A625C0">
<paragraph commented="no" display-inline="no-display-inline" id="H5C4A5D7578A74DA58E729DE62A029E85"><enum>(3)</enum><header>Applicable year</header><text>For purposes of this subsection, the term <term>applicable year</term> means calendar year 2032.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H2AF635AFCB6949E1AFE59A09AEC60904"><enum>(4)</enum><header>Termination for wind and solar facilities</header> <subparagraph commented="no" display-inline="no-display-inline" id="H792BB3149EC543F9BAB34E5AD96D7C67"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">This section shall not apply with respect to any applicable facility placed in service after December 31, 2027.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H343B0FFED4A14E1AAF8427E9A263FFAB"><enum>(B)</enum><header>Applicable facility</header><text display-inline="yes-display-inline">For purposes of this paragraph, the term <term>applicable facility</term> means a qualified facility which—</text> <clause commented="no" display-inline="no-display-inline" id="HB9DBE0535C884D42B7C9E4CE4ADCA5F1"><enum>(i)</enum><text display-inline="yes-display-inline">uses wind to produce electricity (within the meaning of such term as used in section 45(d)(1), as determined without regard to any requirement under such section with respect to the date on which construction of property begins), or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HEDAEDC8FF7DD4E1D98B34DCF98020B44"><enum>(ii)</enum><text display-inline="yes-display-inline">uses solar energy to produce electricity (within the meaning of such term as used in section 45(d)(4), as determined without regard to any requirement under such section with respect to the date on which construction of property begins).</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H9C7D5579F2D0452394FFCEE6CF7AE820" commented="no"><enum>(b)</enum><header>Restrictions relating to prohibited foreign entities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Y">Section 45Y</external-xref> is amended—</text>
<paragraph id="HA303289588FB4D8D940AC440D5A75987" commented="no"><enum>(1)</enum><text>in subsection (b)(1), by adding at the end the following new subparagraph:</text> <quoted-block id="HB111D333CE604972859149DD4116C60C" display-inline="no-display-inline" style="OLC"> <subparagraph id="H1EA073E0DA67439F918914B4DE7AB3B8" commented="no"><enum>(E)</enum><header>Material assistance from prohibited foreign entities</header><text>The term <term>qualified facility</term> shall not include any facility for which construction begins after December 31, 2025, if the construction of such facility includes any material assistance from a prohibited foreign entity (as defined in section 7701(a)(52)).</text></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph>
<paragraph id="HAD55194CC754482A8AEADBF58AA39585" commented="no"><enum>(2)</enum><text>in subsection (g), by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H5AA7B61ECD2F475F838F2353FFDAA140"> <paragraph id="H47C318096FFE48ECA6EBE1BC1F6DB0F0" commented="no"><enum>(13)</enum><header>Restrictions relating to prohibited foreign entities</header> <subparagraph commented="no" display-inline="no-display-inline" id="H8DC2EEB200E147A59B75BA0C862B005E"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">No credit shall be determined under subsection (a) for any taxable year if the taxpayer is—</text>
<clause commented="no" display-inline="no-display-inline" id="H8756FDE9EA8548D582587BD1ED2646C9"><enum>(i)</enum><text display-inline="yes-display-inline">a specified foreign entity (as defined in section 7701(a)(51)(B)), or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H19EE17A5C1EB41A3AD4244CF3CE77579"><enum>(ii)</enum><text display-inline="yes-display-inline">a foreign-influenced entity (as defined in section 7701(a)(51)(D), without regard to clause (i)(II) thereof).</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF3B9BF5296BE4AF38BAAFF344465A0A3"><enum>(B)</enum><header>Effective control</header><text display-inline="yes-display-inline">In the case of a taxpayer for which section 7701(a)(51)(D)(i)(II) is determined to apply for any taxable year, no credit shall be determined under subsection (a) for such taxable year if such determination relates to a qualified facility described in subsection (b)(1).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HA6769D9B0D094DF5A8354B4466BDFAEA" commented="no"><enum>(c)</enum><header>Definitions relating to prohibited foreign entities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/7701">Section 7701(a)</external-xref> is amended by adding at the end the following new paragraphs:</text>
<quoted-block id="H32F9376043054EF39DF360A6641C71A9" display-inline="no-display-inline" style="OLC">
<paragraph id="H56DC7EA6A5C948EEAA70ADD8C841F7F8" commented="no"><enum>(51)</enum><header>Prohibited foreign entity</header>
<subparagraph id="HA47CA8C7763B4ACC94B28E9765A72F1F" commented="no"><enum>(A)</enum><header>In general</header>
<clause commented="no" display-inline="no-display-inline" id="HE3C7A87392654B8F95FEAB407587576E"><enum>(i)</enum><header>Definition</header><text display-inline="yes-display-inline">The term <term>prohibited foreign entity</term> means a specified foreign entity or a foreign-influenced entity.</text></clause> <clause commented="no" display-inline="no-display-inline" id="H804F3866A5BF4CDEBE1C41B2CD52BDAE"><enum>(ii)</enum><header>Determination</header> <subclause commented="no" display-inline="no-display-inline" id="H590594384EEA4742B94A13AA248B4516"><enum>(I)</enum><header display-inline="yes-display-inline">In general</header><text>Subject to subclause (II), for any taxable year, the determination as to whether an entity is a specified foreign entity or foreign-influenced entity shall be made as of the last day of such taxable year.</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HA33998ABA28141C6A4A536673D8BB3A4"><enum>(II)</enum><header>Initial taxable year</header><text>For purposes of the first taxable year beginning after the date of enactment of this paragraph, the determination as to whether an entity is a specified foreign entity described in clauses (i) through (iv) of subparagraph (B) shall be made as of the first day of such taxable year. </text></subclause></clause></subparagraph> <subparagraph id="H91B24D8E99B84ED189C208BA7B9EACC6" commented="no"><enum>(B)</enum><header>Specified foreign entity</header><text>For purposes of this paragraph, the term <term>specified foreign entity</term> means—</text>
<clause id="HAA3D4358192F401BA879C42974C960C7" commented="no"><enum>(i)</enum><text>a foreign entity of concern described in subparagraph (A), (B), (D), or (E) of section 9901(8) of the William M. (Mac) Thornberry National Defense Authorization Act for Fiscal Year 2021 (<external-xref legal-doc="public-law" parsable-cite="pl/116/283">Public Law 116–283</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/15/4651">15 U.S.C. 4651</external-xref>),</text></clause> <clause id="H780A4A21ABC54C79A419275BF34DE23C" commented="no"><enum>(ii)</enum><text>an entity identified as a Chinese military company operating in the United States in accordance with section 1260H of the William M. (Mac) Thornberry National Defense Authorization Act for Fiscal Year 2021 (<external-xref legal-doc="public-law" parsable-cite="pl/116/283">Public Law 116–283</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/10/113">10 U.S.C. 113</external-xref> note),</text></clause>
<clause id="H6FD824C5E7894674A4A81ACD9C88DB84" commented="no"><enum>(iii)</enum><text>an entity included on a list required by clause (i), (ii), (iv), or (v) of section 2(d)(2)(B) of <external-xref legal-doc="public-law" parsable-cite="pl/117/78">Public Law 117–78</external-xref> (135 Stat. 1527),</text></clause> <clause id="HF2BD1505A1C14ACE92E84C7EF97CD53C" commented="no"><enum>(iv)</enum><text>an entity specified under section 154(b) of the National Defense Authorization Act for Fiscal Year 2024 (<external-xref legal-doc="public-law" parsable-cite="pl/118/31">Public Law 118–31</external-xref>; 10 U.S.C. note prec. 4651), or</text></clause>
<clause id="H9ACE4079D05B4685B5E98273416970B2" commented="no"><enum>(v)</enum><text>a foreign-controlled entity.</text></clause></subparagraph> <subparagraph id="HBA329256FCB14DB2A14DADE287846AE9" commented="no"><enum>(C)</enum><header>Foreign-controlled entity</header><text>For purposes of subparagraph (B), the term <term>foreign-controlled entity</term> means—</text>
<clause id="HFB9752E84475480AB399B53D05995E32" commented="no"><enum>(i)</enum><text>the government (including any level of government below the national level) of a covered nation,</text></clause> <clause id="HAA17D6DAF29F45A08E63459A1B844329" commented="no"><enum>(ii)</enum><text>an agency or instrumentality of a government described in clause (i),</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HA89F8E5832A94CB5980E5AB02D3E7952"><enum>(iii)</enum><text display-inline="yes-display-inline">a person who is a citizen or national of a covered nation, provided that such person is not an individual who is a citizen, national, or lawful permanent resident of the United States,</text></clause> <clause id="HE21492AE1499430BBFC880FA2FA19DAD" commented="no"><enum>(iv)</enum><text>an entity or a qualified business unit (as defined in section 989(a)) incorporated or organized under the laws of, or having its principal place of business in, a covered nation, or</text></clause>
<clause id="H92EB077CDDAB4F62AC893C62A777AAF7" commented="no"><enum>(v)</enum><text>an entity (including subsidiary entities) controlled (as determined under subparagraph (G)) by an entity described in clause (i), (ii), (iii), or (iv).</text></clause></subparagraph> <subparagraph id="H7E0815E4E47840D8B8EFF8110FB9B015" commented="no"><enum>(D)</enum><header>Foreign-influenced entity</header> <clause commented="no" display-inline="no-display-inline" id="H529E0890369E4C749D80F2AC12D9B623"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">For purposes of subparagraph (A), the term <term>foreign-influenced entity</term> means an entity—</text>
<subclause id="H55443C28898F4C12A4D6BBDAA50E697F" commented="no"><enum>(I)</enum><text>with respect to which, during the taxable year—</text> <item id="HC8E191A8FB374238A43DA82D906A7975" commented="no"><enum>(aa)</enum><text>a specified foreign entity has the direct authority to appoint a covered officer of such entity,</text></item>
<item id="H3838FFF779BE43FF91F91F2DDD44C2C9" commented="no"><enum>(bb)</enum><text>a single specified foreign entity owns at least 25 percent of such entity,</text></item> <item id="H4B4E14D0410D48B2B68D99BBF26F1E21" commented="no"><enum>(cc)</enum><text>one or more specified foreign entities own in the aggregate at least 40 percent of such entity, or</text></item>
<item id="H8D32D6AFDD4D4CFC83072588B9DF00E8" commented="no"><enum>(dd)</enum><text>at least 15 percent of the debt of such entity has been issued, in the aggregate, to 1 or more specified foreign entities, or</text></item></subclause> <subclause id="H792359150E4A4EBAA5C1FE1B23F94F64" commented="no"><enum>(II)</enum><text>which, during the previous taxable year, made a payment to a specified foreign entity pursuant to a contract, agreement, or other arrangement which entitles such specified foreign entity (or an entity related to such specified foreign entity) to exercise effective control over—</text>
<item commented="no" display-inline="no-display-inline" id="H97DC8186E0A84A7CB4117B8BA02E3C36"><enum>(aa)</enum><text>any qualified facility or energy storage technology of the taxpayer (or any person related to the taxpayer), or</text></item> <item commented="no" display-inline="no-display-inline" id="HD939EB69CE674F27850709AF1ED1F705"><enum>(bb)</enum><text>with respect to any eligible component produced by the taxpayer (or any person related to the taxpayer)—</text>
<subitem commented="no" display-inline="no-display-inline" id="HDFA084A3F09644B9B05B70FE13DF6BE6"><enum>(AA)</enum><text display-inline="yes-display-inline">the extraction, processing, or recycling of any applicable critical mineral, or</text></subitem> <subitem commented="no" display-inline="no-display-inline" id="H47AE36048C8548DAA6FF37E1C7F7B74C"><enum>(BB)</enum><text display-inline="yes-display-inline">the production of an eligible component which is not an applicable critical mineral.</text></subitem></item></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="HBCF13692A4C240F296AE6F0561DCB6FF"><enum>(ii)</enum><header>Effective control</header>
<subclause commented="no" display-inline="no-display-inline" id="H3AE8A12A17964DBF8F63DC3B5388731E"><enum>(I)</enum><header display-inline="yes-display-inline">In general</header>
<item commented="no" display-inline="no-display-inline" id="H560211434CC941218E79CFEB5A1EDD99"><enum>(aa)</enum><header>General rule</header><text display-inline="yes-display-inline">Subject to subclause (II), for purposes of clause (i)(II), the term <term>effective control</term> means 1 or more agreements or arrangements similar to those described in subclauses (II) and (III) which provide 1 or more contractual counterparties of a taxpayer with specific authority over key aspects of the production of eligible components, energy generation in a qualified facility, or energy storage which are not included in the measures of control through authority, ownership, or debt held which are described in clause (i)(I).</text></item> <item commented="no" display-inline="no-display-inline" id="HE1CD513D4AC9420CB979E4C864D4F1CC"><enum>(bb)</enum><header>Guidance</header><text display-inline="yes-display-inline">The Secretary shall issue such guidance as is necessary to carry out the purposes of this clause, including the establishment of rules to prevent entities from evading, circumventing, or abusing the application of the restrictions described subparagraph (C) and subclauses (II) and (III) of this clause through a contract, agreement, or other arrangement.</text></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H66DEDFCCC33146AC8852AC9F39F22F24"><enum>(II)</enum><header>Application of rules prior to issuance of guidance</header><text display-inline="yes-display-inline">During any period prior to the date that the guidance described in subclause (I)(bb) is issued by the Secretary, for purposes of clause (i)(II), the term <term>effective control</term> means the unrestricted contractual right of a contractual counterparty to—</text> <item commented="no" display-inline="no-display-inline" id="HAB70BE58F5404E64894950CB7E9C2320"><enum>(aa)</enum><text display-inline="yes-display-inline">determine the quantity or timing of production of an eligible component produced by the taxpayer,</text></item>
<item commented="no" display-inline="no-display-inline" id="H255A9DA97CCE49D9877EC7982E7D61FF"><enum>(bb)</enum><text>determine the amount or timing of activities related to the production of electricity undertaken at a qualified facility of the taxpayer or the storage of electrical energy in energy storage technology of the taxpayer,</text></item> <item commented="no" display-inline="no-display-inline" id="H8B930602A3C64E4FAAD546CAA2C91F89"><enum>(cc)</enum><text>determine which entity may purchase or use the output of a production unit of the taxpayer that produces eligible components,</text></item>
<item commented="no" display-inline="no-display-inline" id="HC9FCD2F4B5EC4E9FB266E13A40BEBEA8"><enum>(dd)</enum><text>determine which entity may purchase or use the output of a qualified facility of the taxpayer,</text></item> <item commented="no" display-inline="no-display-inline" id="H02C5D5280B6146BFAB82498A753B1550"><enum>(ee)</enum><text>restrict access to data critical to production or storage of energy undertaken at a qualified facility of the taxpayer, or to the site of production or any part of a qualified facility or energy storage technology of the taxpayer, to the personnel or agents of such contractual counterparty, or</text></item>
<item commented="no" display-inline="no-display-inline" id="H7BD2AA21AFE14B68A2F1616ED99ED017"><enum>(ff)</enum><text>on an exclusive basis, maintain, repair, or operate any plant or equipment which is necessary to the production by the taxpayer of eligible components or electricity.</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="H64A10FBCC676412EA6ADD4540046B711"><enum>(III)</enum><header>Licensing and other agreements</header> <item commented="no" display-inline="no-display-inline" id="HECE0CE317F19488184C9ADC0BEABB5B4"><enum>(aa)</enum><header>In general</header><text display-inline="yes-display-inline">In addition to subclause (II), for purposes of clause (i)(II), the term <term>effective control</term> means, with respect to a licensing agreement for the provision of intellectual property (or any other contract, agreement or other arrangement entered into with a contractual counterparty related to such licensing agreement) with respect to a qualified facility, energy storage technology, or the production of an eligible component, any of the following:</text>
<subitem commented="no" display-inline="no-display-inline" id="H740F90EC3E4744AE8AF76824A960989F"><enum>(AA)</enum><text>A contractual right retained by the contractual counterparty to specify or otherwise direct 1 or more sources of components, subcomponents, or applicable critical minerals utilized in a qualified facility, energy storage technology, or in the production of an eligible component.</text></subitem> <subitem id="HEFA77A186C5A46E6A3A798FC503A9542"><enum>(BB)</enum><text>A contractual right retained by the contractual counterparty to direct the operation of any qualified facility, any energy storage technology, or any production unit that produces an eligible component.</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="HE6A9FA4ED51541469C3C4928F95E4A04"><enum>(CC)</enum><text>A contractual right retained by the contractual counterparty to limit the taxpayer’s utilization of intellectual property related to the operation of a qualified facility or energy storage technology, or in the production of an eligible component.</text></subitem> <subitem commented="no" display-inline="no-display-inline" id="HDDF30623C1A94FF7B0F8F4D99316A59F"><enum>(DD)</enum><text>A contractual right retained by the contractual counterparty to receive royalties under the licensing agreement or any similar agreement (or payments under any related agreement) beyond the 10th year of the agreement (including modifications or extensions thereof).</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="HA8EC7F562735407F8E5103E73816CC6A"><enum>(EE)</enum><text>A contractual right retained by the contractual counterparty to direct or otherwise require the taxpayer to enter into an agreement for the provision of services for a duration longer than 2 years (including any modifications or extensions thereof).</text></subitem> <subitem commented="no" display-inline="no-display-inline" id="HFECE006863EF4D668C07B292ED3F5EC5"><enum>(FF)</enum><text>Such contract, agreement, or other arrangement does not provide the licensee with all the technical data, information, and know-how necessary to enable the licensee to produce the eligible component or components subject to the contract, agreement, or other arrangement without further involvement from the contractual counterparty or a specified foreign entity.</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="H3F310C746F1646869CD611C7BBC868A9"><enum>(GG)</enum><text>Such contract, agreement, or other arrangement was entered into (or modified) on or after the date of enactment of this paragraph.</text></subitem></item> <item commented="no" display-inline="no-display-inline" id="H8A7A1F3F03554307A640D5C6918F2723"><enum>(bb)</enum><header>Exception</header> <subitem commented="no" display-inline="no-display-inline" id="H33F48F0A86E442B79562CCB0B6A11702"><enum>(AA)</enum><header>In general</header><text display-inline="yes-display-inline">Item (aa) shall not apply in the case of a bona fide purchase or sale of intellectual property.</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="HBF4DF9E651B44C8CAF48A203A6BA9C78"><enum>(BB)</enum><header>Bona fide purchase or sale</header><text>For purposes of item (aa), any purchase or sale of intellectual property where the agreement provides that ownership of the intellectual property reverts to the contractual counterparty after a period of time shall not be considered a bona-fide purchase or sale.</text></subitem></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="H6A688EB2853D4E5D88B280E745EAC1C7"><enum>(IV)</enum><header>Persons related to the taxpayer</header><text>For purposes of subclauses (I), (II), and (III), the term <term>taxpayer</term> shall include any person related to the taxpayer.</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H6D0684FA7FED4C598E89943CF758B16B"><enum>(V)</enum><header display-inline="yes-display-inline">Contractual counterparty</header><text>For purposes of this clause, the term <term>contractual counterparty</term> means an entity with which the taxpayer has entered into a contract, agreement, or other arrangement.</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="HD47C32E70FED4890A60BA7D13D1C66A0"><enum>(iii)</enum><header>Guidance</header><text display-inline="yes-display-inline">Not later than December 31, 2026, the Secretary shall issue such guidance as is necessary to carry out the purposes of this subparagraph, including establishment of rules to prevent entities from evading, circumventing, or abusing the application of the restrictions against impermissible technology licensing arrangements with specified foreign entities, such as through temporary transfers of intellectual property, retention by a specified foreign entity of a reversionary interest in transferred intellectual property, or otherwise.</text></clause></subparagraph>
<subparagraph id="HC406E456FF7D4E96B5BA06ACC72EC0A8" commented="no"><enum>(E)</enum><header>Publicly traded entities</header>
<clause commented="no" display-inline="no-display-inline" id="H145ACEF07706460A8B76073E1D47BB08"><enum>(i)</enum><header display-inline="yes-display-inline">In general</header>
<subclause commented="no" display-inline="no-display-inline" id="HA79BB9EF2ECD4C1998C69EDD7727BCA2"><enum>(I)</enum><header>Nonapplication of certain foreign-controlled entity rules</header><text display-inline="yes-display-inline">Subparagraph (C)(v) shall not apply in the case of any entity the securities of which are regularly traded on—</text> <item commented="no" display-inline="no-display-inline" id="H36F1DECAA1A3436E8E2F964D3B0840D1"><enum>(aa)</enum><text display-inline="yes-display-inline">a national securities exchange which is registered with the Securities and Exchange Commission, </text></item>
<item commented="no" display-inline="no-display-inline" id="H3533408BD7834F8F9FBD6BF7386A1C95"><enum>(bb)</enum><text display-inline="yes-display-inline">the national market system established pursuant to section 11A of the Securities and Exchange Act of 1934, or </text></item> <item commented="no" display-inline="no-display-inline" id="HF0A7BFC64A544BADA09EE83C5BC90263"><enum>(cc)</enum><text display-inline="yes-display-inline">any other exchange or other market which the Secretary has determined in guidance issued under section 1296(e)(1)(A)(ii) has rules adequate to carry out the purposes of part VI of subchapter P of chapter 1 of subtitle A.</text></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H70CE83E814DC4CBA86FA259F969938EC"><enum>(II)</enum><header>Nonapplication of certain foreign-influenced entity rules</header><text>Subparagraph (D)(i)(I) shall not apply in the case of any entity—</text> <item commented="no" display-inline="no-display-inline" id="HCAFA61F328AE42C082E43A18A62E5721"><enum>(aa)</enum><text display-inline="yes-display-inline">the securities of which are regularly traded in a manner described in subclause (I), or</text></item>
<item commented="no" display-inline="no-display-inline" id="HB45B950E03D84D94B380C4C514BBA937"><enum>(bb)</enum><text display-inline="yes-display-inline">for which not less than 80 percent of the equity securities of such entity are owned directly or indirectly by an entity which is described in item (aa).</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="HFFDE3E10A0D44E5C85816CFD149F0BEA"><enum>(III)</enum><header>Exclusion of exchanges or markets in covered nations</header><text>Subclause (I)(cc) shall not apply with respect to any exchange or market which—</text>
<item commented="no" display-inline="no-display-inline" id="H8778E937F1094219AEF0C6DB6CF39C31"><enum>(aa)</enum><text display-inline="yes-display-inline">is incorporated or organized under the laws of a covered nation, or</text></item> <item commented="no" display-inline="no-display-inline" id="H9784D0434456405681EC9BDAFB14266B"><enum>(bb)</enum><text>has its principal place of business in a covered nation.</text></item></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H9CD1F6742C194A30B8E395050C4DEACE"><enum>(ii)</enum><header>Additional foreign-controlled entity requirements for publicly traded companies</header><text>In the case of an entity described in clause (i)(I), such entity shall be deemed to be a foreign-controlled entity under subparagraph (C)(v) if such entity is controlled (as determined under subparagraph (G)) by—</text> <subclause commented="no" display-inline="no-display-inline" id="H6AAA99AA0BF64F42A329BFFF7A37F1A0"><enum>(I)</enum><text>1 or more specified foreign entities (as determined without regard to subparagraph (B)(v)) that are each required to report their beneficial ownership pursuant to a rule described in clause (iii)(I)(bb), or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H66D0120270FE4B2287C38F26DE6CF90B"><enum>(II)</enum><text>1 or more foreign-controlled entities (as determined without regard to subparagraph (C)(v)) that are each required to report their beneficial ownership pursuant to a rule described in such clause.</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="HA25E19BE6FBE4BFDBFDCD0ABC12A01CD"><enum>(iii)</enum><header display-inline="yes-display-inline">Additional foreign-influenced entity requirements for publicly traded companies</header><text display-inline="yes-display-inline">In the case of an entity described in clause (i)(II), such entity shall be deemed to be a foreign-influenced entity under subparagraph (D)(i)(I) if—</text>
<subclause commented="no" display-inline="no-display-inline" id="HB6A4FE56C6384922BA74A7281D1EABFE"><enum>(I)</enum><text>during the taxable year—</text> <item commented="no" display-inline="no-display-inline" id="H97E6314199F74FBBA28B34EBB1A9DE7A"><enum>(aa)</enum><text display-inline="yes-display-inline">a specified foreign entity has the authority to appoint a covered officer of such entity,</text></item>
<item commented="no" display-inline="no-display-inline" id="H9F6302B6C45A42A996A1CB69EE69976A"><enum>(bb)</enum><text>a single specified foreign entity required to report its beneficial ownership under Rule 13d-3 of the Securities and Exchange Act of 1934 (or, in the case of an exchange or market described in clause (i)(I)(cc), an equivalent rule) owns not less than 25 percent of such entity, or</text></item> <item id="HF874E42D1F19493EAF3A9E73862868BE"><enum>(cc)</enum><text>1 or more specified foreign entities that are each required to report their beneficial ownership under Rule 13d-3 of the Securities and Exchange Act of 1934 own, in the aggregate, not less than 40 percent of such entity, or</text></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H338E4548AC134B0A8B6B04E794B9DAFC"><enum>(II)</enum><text>such entity has issued debt, as part of an original issuance, in excess of 15 percent of its publicly-traded debt to 1 or more specified foreign entities.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H7F09E7C013474134A6AF9588C7F2B396"><enum>(F)</enum><header display-inline="yes-display-inline">Covered officer</header><text>For purposes of this paragraph, the term <term>covered officer</term> means, with respect to an entity—</text>
<clause id="H020C17015FBE4849AED50C7433A51ADD" commented="no"><enum>(i)</enum><text>a member of the board of directors, board of supervisors, or equivalent governing body,</text></clause> <clause id="H24B07D4A72A644DAA7D3655258912D05" commented="no"><enum>(ii)</enum><text>an executive-level officer, including the president, chief executive officer, chief operating officer, chief financial officer, general counsel, or senior vice president, or</text></clause>
<clause id="HD182A09F2C474E34AD68DDCC7C5F00C6" commented="no"><enum>(iii)</enum><text>an individual having powers or responsibilities similar to those of officers or members described in clause (i) or (ii).</text></clause></subparagraph> <subparagraph id="HED7A304CF7984040A2E90B796538D589" commented="no"><enum>(G)</enum><header>Determination of control</header><text>For purposes of subparagraph (C)(v), the term <term>control</term> means—</text>
<clause id="H81DAFA2BF5504B3AB63172868190E39F" commented="no"><enum>(i)</enum><text>in the case of a corporation, ownership (by vote or value) of more than 50 percent of the stock in such corporation,</text></clause> <clause id="H8F2F1D31D47F4500B62FD0814775CD0D" commented="no"><enum>(ii)</enum><text>in the case of a partnership, ownership of more than 50 percent of the profits interests or capital interests in such partnership, or</text></clause>
<clause id="H9EA97D1B41EC4D9A8D75C0C62ECC0380" commented="no"><enum>(iii)</enum><text>in any other case, ownership of more than 50 percent of the beneficial interests in the entity.</text></clause></subparagraph> <subparagraph id="H91AD2A53C1394FC49AC8FB9EDD582739" commented="no"><enum>(H)</enum><header>Determination of ownership</header><text>For purposes of this paragraph, section 318(a)(2) shall apply for purposes of determining ownership of stock in a corporation. Similar principles shall apply for purposes of determining ownership of interests in any other entity.</text></subparagraph>
<subparagraph id="H92297AE7D65040FDA965D3FA3A618661" commented="no"><enum>(I)</enum><header>Other definitions</header><text>For purposes of this paragraph—</text> <clause commented="no" display-inline="no-display-inline" id="H37DB3281262E41D881DD333AC9BD9E1A"><enum>(i)</enum><header display-inline="yes-display-inline">Applicable critical mineral</header><text>The term <term>applicable critical mineral</term> has the same meaning given such term under section 45X(c)(6).</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HE3A7AC4465084A05AE47B3B7192A91DE"><enum>(ii)</enum><header>Covered nation</header><text>The term <term>covered nation</term> has the same meaning given such term under section 4872(f)(2) of title 10, United States Code.</text></clause> <clause commented="no" display-inline="no-display-inline" id="H6456E1B3D5234279A85DB009C416865E"><enum>(iii)</enum><header display-inline="yes-display-inline">Eligible component</header><text>The term <term>eligible component</term> has the same meaning given such term under section 45X(c)(1).</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H47BC2023982C429780FC8E79A602EC75"><enum>(iv)</enum><header>Energy storage technology</header><text>The term <term>energy storage technology</term> has the same meaning given such term under section 48E(c)(2).</text></clause> <clause commented="no" display-inline="no-display-inline" id="H022DA8683DBB4C3B942DA700C755CBBA"><enum>(v)</enum><header display-inline="yes-display-inline">Qualified facility</header><text>The term <term>qualified facility</term> means—</text>
<subclause commented="no" display-inline="no-display-inline" id="H178D5D31D43147DA982A699C7DE3FB99"><enum>(I)</enum><text display-inline="yes-display-inline">a qualified facility, as defined in section 45Y(b)(1), and</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HDF49AD5C59964D258B5DDE952928B90B"><enum>(II)</enum><text>a qualified facility, as defined in section 48E(b)(3).</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H221CDB3C357C41A7AC7256A31C57CF64"><enum>(vi)</enum><header>Related</header><text>The term <term>related</term> shall have the same meaning given such term under sections 267(b) and 707(b).</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H69D0D8B1F9AB42DC9845D33680389014"><enum>(J)</enum><header display-inline="yes-display-inline">Beginning of construction</header><text>For purposes of applying any provision under this paragraph, the beginning of construction with respect to any property shall be determined pursuant to rules similar to the rules under Internal Revenue Service Notice 2013–29 and Internal Revenue Service Notice 2018-59 (as well as any subsequently issued guidance clarifying, modifying, or updating either such Notice), as in effect on January 1, 2025.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H4208DDC0B7CE4E7FBF1FB37A3F971850"><enum>(K)</enum><header display-inline="yes-display-inline">Regulations and guidance</header><text>The Secretary may prescribe such regulations and guidance as may be necessary or appropriate to carry out the provisions of this paragraph, including rules to prevent the circumvention of any rules or restrictions with respect to prohibited foreign entities.</text></subparagraph></paragraph> <paragraph id="HC6DFCC19B8DB4AC9A7DE60F0E07B0C6D" commented="no"><enum>(52)</enum><header>Material assistance from a prohibited foreign entity</header> <subparagraph id="H78316937F20B413299A3369E722AECDB" commented="no"><enum>(A)</enum><header>In general</header><text>The term <term>material assistance from a prohibited foreign entity</term> means—</text>
<clause commented="no" display-inline="no-display-inline" id="H97D13673C88B4EC1867B074598DF9E21"><enum>(i)</enum><text display-inline="yes-display-inline">with respect to any qualified facility or energy storage technology, a material assistance cost ratio which is less than the threshold percentage applicable under subparagraph (B), or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H4591ED47062147EE8A3C97E15C0FA5F2"><enum>(ii)</enum><text>with respect to any facility which produces eligible components, a material assistance cost ratio which is less than the threshold percentage applicable under subparagraph (C).</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF807416967324726BFBAF35BA86B289A"><enum>(B)</enum><header>Threshold percentage for qualified facilities and energy storage technology</header><text>For purposes of subparagraph (A)(i), the threshold percentage shall be—</text> <clause commented="no" display-inline="no-display-inline" id="HB7385F8D94F84279AD66981AC55AEAB7"><enum>(i)</enum><text display-inline="yes-display-inline">in the case of a qualified facility the construction of which begins—</text>
<subclause commented="no" display-inline="no-display-inline" id="HBB9B83BEFCF5496389CE5A6391015AB3"><enum>(I)</enum><text display-inline="yes-display-inline">during calendar year 2026, 40 percent,</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H0C7236C2CEFC4147B29C668866239F2E"><enum>(II)</enum><text display-inline="yes-display-inline">during calendar year 2027, 45 percent,</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H501451D2C0CC48659499796B62D2224B"><enum>(III)</enum><text display-inline="yes-display-inline">during calendar year 2028, 50 percent,</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HC41891ABE4994A779606000FCE19887D"><enum>(IV)</enum><text display-inline="yes-display-inline">during calendar year 2029, 55 percent, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HAF5ED24071F7469296FFCEC137E88EC0"><enum>(V)</enum><text display-inline="yes-display-inline">after December 31, 2029, 60 percent, and</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="H3C83DA18CB134473BD53CE4BE86FC61C"><enum>(ii)</enum><text display-inline="yes-display-inline">in the case of energy storage technology the construction of which begins—</text>
<subclause commented="no" display-inline="no-display-inline" id="HC031A9FE70E144E291AD211FD1BB3D8C"><enum>(I)</enum><text display-inline="yes-display-inline">during calendar year 2026, 55 percent,</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H4752E03745794C38A4B95047830FAC3C"><enum>(II)</enum><text display-inline="yes-display-inline">during calendar year 2027, 60 percent,</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H7E49B0D6F26448D98A2B8B231282F99C"><enum>(III)</enum><text display-inline="yes-display-inline">during calendar year 2028, 65 percent,</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H69BB918B2F034709B135A9CB0CE924D2"><enum>(IV)</enum><text display-inline="yes-display-inline">during calendar year 2029, 70 percent, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H22363E2C706744FA8C0D822379B469A1"><enum>(V)</enum><text display-inline="yes-display-inline">after December 31, 2029, 75 percent.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H78344037B6AC4C9686A3CC4A4F59FF18"><enum>(C)</enum><header>Threshold percentage for eligible components</header> <clause commented="no" display-inline="no-display-inline" id="H3F7D8A4EDF0B48A1B52833DE60AD20F5"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">For purposes of subparagraph (A)(ii), the threshold percentage shall be—</text>
<subclause commented="no" display-inline="no-display-inline" id="H3908409BAE354970BF9B06846FEEA359"><enum>(I)</enum><text>in the case of any solar energy component (as such term is defined in section 45X(c)(3)(A)) which is sold—</text> <item commented="no" display-inline="no-display-inline" id="H4A2098F170E54145845DC87F66107E8F"><enum>(aa)</enum><text display-inline="yes-display-inline">during calendar year 2026, 50 percent, </text></item>
<item commented="no" display-inline="no-display-inline" id="H5A51B043A0E74EA1AD18626D463C39C9"><enum>(bb)</enum><text display-inline="yes-display-inline">during calendar year 2027, 60 percent,</text></item> <item commented="no" display-inline="no-display-inline" id="HD066890E621D48448B898FD5D85EB0AB"><enum>(cc)</enum><text display-inline="yes-display-inline">during calendar year 2028, 70 percent, </text></item>
<item commented="no" display-inline="no-display-inline" id="H4D869C3D12C04C0CB7FAD1AB9874147A"><enum>(dd)</enum><text display-inline="yes-display-inline">during calendar year 2029, 80 percent, and </text></item> <item commented="no" display-inline="no-display-inline" id="HB276A91D6C7048BEBD89FF31AC859ED7"><enum>(ee)</enum><text display-inline="yes-display-inline">after December 31, 2029, 85 percent,</text></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H70B6C2927CEB489BA82CF60D3F44FC8F"><enum>(II)</enum><text>in the case of any wind energy component (as such term is defined in section 45X(c)(4)(A)) which is sold—</text> <item commented="no" display-inline="no-display-inline" id="HCCCB33844CF249589791D12D3B1CA5F5"><enum>(aa)</enum><text display-inline="yes-display-inline">during calendar year 2026, 85 percent, and</text></item>
<item commented="no" display-inline="no-display-inline" id="H01F3C21E7A92442C9F32FCFC6D0909DF"><enum>(bb)</enum><text display-inline="yes-display-inline">during calendar year 2027, 90 percent,</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="HA5B431DB2A5142F5AC486ADF0463B4A3"><enum>(III)</enum><text>in the case of any inverter described in subparagraphs (B) through (G) of section 45X(c)(2) which is sold—</text>
<item commented="no" display-inline="no-display-inline" id="H97564DB35B6D4FBC9FF15FD6FC9D804B"><enum>(aa)</enum><text display-inline="yes-display-inline">during calendar year 2026, 50 percent, </text></item> <item commented="no" display-inline="no-display-inline" id="H01441D77BDD34E98A78355B4DA81D160"><enum>(bb)</enum><text display-inline="yes-display-inline">during calendar year 2027, 55 percent,</text></item>
<item commented="no" display-inline="no-display-inline" id="HF6A68F3C74D847FFB5757F75C3B3CC3F"><enum>(cc)</enum><text display-inline="yes-display-inline">during calendar year 2028, 60 percent, </text></item> <item commented="no" display-inline="no-display-inline" id="H7985428968104F42A38923A16CB42B43"><enum>(dd)</enum><text display-inline="yes-display-inline">during calendar year 2029, 65 percent, and </text></item>
<item commented="no" display-inline="no-display-inline" id="H5641FDD05BEB46BB8F0420EDF4BF5729"><enum>(ee)</enum><text display-inline="yes-display-inline">after December 31, 2029, 70 percent,</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="HB17F1259A41643B99EDCF4C32EDDD7F2"><enum>(IV)</enum><text>in the case of any qualifying battery component (as such term is defined in section 45X(c)(5)(A)) which is sold—</text>
<item commented="no" display-inline="no-display-inline" id="H946E079A787A4F879AC75EA4E005842F"><enum>(aa)</enum><text display-inline="yes-display-inline">during calendar year 2026, 60 percent, </text></item> <item commented="no" display-inline="no-display-inline" id="H6F7B5F038BE94A989DB886092ADE1352"><enum>(bb)</enum><text display-inline="yes-display-inline">during calendar year 2027, 65 percent,</text></item>
<item commented="no" display-inline="no-display-inline" id="H36342438636D4625A914198AAC73ECA6"><enum>(cc)</enum><text display-inline="yes-display-inline">during calendar year 2028, 70 percent, </text></item> <item commented="no" display-inline="no-display-inline" id="H504C690C62A748B28F1712320286C830"><enum>(dd)</enum><text display-inline="yes-display-inline">during calendar year 2029, 80 percent, and </text></item>
<item commented="no" display-inline="no-display-inline" id="H8277D0333707449EACE0081D57EBC3FB"><enum>(ee)</enum><text display-inline="yes-display-inline">after December 31, 2029, 85 percent, and</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="H7D0B30F3FC074C659D3D33CAB341F448"><enum>(V)</enum><text>subject to clause (ii), in the case of any applicable critical mineral (as such term is defined in section 45X(c)(6)) which is sold—</text>
<item commented="no" display-inline="no-display-inline" id="H54D2858B502F4B8F87B8CCF6CD48FBF5"><enum>(aa)</enum><text display-inline="yes-display-inline">after December 31, 2025, and before January 1, 2030, 0 percent, </text></item> <item commented="no" display-inline="no-display-inline" id="HB86EBF2BF1794DD2960722C2341755CD"><enum>(bb)</enum><text display-inline="yes-display-inline">during calendar year 2030, 25 percent,</text></item>
<item commented="no" display-inline="no-display-inline" id="H2E6AAD1CBEA147D49447898B1E7E56E0"><enum>(cc)</enum><text display-inline="yes-display-inline">during calendar year 2031, 30 percent, </text></item> <item commented="no" display-inline="no-display-inline" id="H3D744F6343AE4ECC822D7A9AAF113C8A"><enum>(dd)</enum><text display-inline="yes-display-inline">during calendar year 2032, 40 percent, and </text></item>
<item commented="no" display-inline="no-display-inline" id="H166E84592AFC41EEABA0C525E3A001CA"><enum>(ee)</enum><text display-inline="yes-display-inline">after December 31, 2032, 50 percent.</text></item></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="HDA31D8807F9A4689B8BC46197B5BEE62"><enum>(ii)</enum><header>Adjusted threshold percentage for applicable critical minerals</header><text>Not later than December 31, 2027, the Secretary shall issue threshold percentages for each of the applicable critical minerals described in section 45X(c)(6)), which shall—</text>
<subclause commented="no" display-inline="no-display-inline" id="HDCBEE0BACF714D1782B14854C1DF45CC"><enum>(I)</enum><text display-inline="yes-display-inline">apply in lieu of the threshold percentage determined under clause (i)(V) for each calendar year, and</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H862434386BF94814817ADEFC5CBAC152"><enum>(II)</enum><text display-inline="yes-display-inline">equal or exceed the threshold percentage which would otherwise apply with respect to such applicable critical mineral under such clause for such calendar year, taking into account—</text>
<item commented="no" display-inline="no-display-inline" id="H6BC30521922C42859C776200741C6705"><enum>(aa)</enum><text display-inline="yes-display-inline">domestic geographic availability, </text></item> <item commented="no" display-inline="no-display-inline" id="H3D35247A5CDF4A6A9E06DE6E6989E8BA"><enum>(bb)</enum><text display-inline="yes-display-inline">supply chain constraints, </text></item>
<item commented="no" display-inline="no-display-inline" id="H4AA990B12B804D4889CB0F665317D9FB"><enum>(cc)</enum><text display-inline="yes-display-inline">domestic processing capacity needs, and </text></item> <item commented="no" display-inline="no-display-inline" id="H0CB1C252D73240DE8EC100BBFE20A14D"><enum>(dd)</enum><text display-inline="yes-display-inline">national security concerns.</text></item></subclause></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H41CE08B32CD84363AED6D067878CABAC"><enum>(D)</enum><header>Material assistance cost ratio</header>
<clause commented="no" display-inline="no-display-inline" id="H62520ECC11DB4EBD81F2213C27A48FAB"><enum>(i)</enum><header display-inline="yes-display-inline">Qualified facilities and energy storage technology</header><text display-inline="yes-display-inline">For purposes of subparagraph (A)(i), the term <term>material assistance cost ratio</term> means the amount (expressed as a percentage) equal to the quotient of—</text> <subclause commented="no" display-inline="no-display-inline" id="HAC178741903B4034994BB4D83197D107"><enum>(I)</enum><text display-inline="yes-display-inline">an amount equal to—</text>
<item commented="no" display-inline="no-display-inline" id="HF4236A0C738D4B1AA64E134D15917A1D"><enum>(aa)</enum><text display-inline="yes-display-inline">the total direct costs to the taxpayer attributable to all manufactured products (including components) which are incorporated into the qualified facility or energy storage technology upon completion of construction, minus </text></item> <item commented="no" display-inline="no-display-inline" id="HB6D4294941044FC08CD2653C530BFFC9"><enum>(bb)</enum><text display-inline="yes-display-inline">the total direct costs to the taxpayer attributable to all manufactured products (including components) which are—</text>
<subitem commented="no" display-inline="no-display-inline" id="H49C97C3BBBF145E589F1B707B22A3597"><enum>(AA)</enum><text display-inline="yes-display-inline">incorporated into the qualified facility or energy storage technology upon completion of construction, and</text></subitem> <subitem commented="no" display-inline="no-display-inline" id="H5FC67ADB94AE43C89CF8D260427C7200"><enum>(BB)</enum><text display-inline="yes-display-inline">mined, produced, or manufactured by a prohibited foreign entity, divided by</text></subitem></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H75B357B12B8343E6AE3FA9ACB8526643"><enum>(II)</enum><text>the amount described in subclause (I)(aa).</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="HFB8E2B5AF7DC4DFC9C4005EAAC9BAFCD"><enum>(ii)</enum><header>Eligible components</header><text>For purposes of subparagraph (A)(ii), the term <term>material assistance cost ratio</term> means the amount (expressed as a percentage) equal to the quotient of—</text>
<subclause commented="no" display-inline="no-display-inline" id="HA68FFAB6B7D345B3949CC8E10C7C8448"><enum>(I)</enum><text display-inline="yes-display-inline">an amount equal to—</text> <item commented="no" display-inline="no-display-inline" id="H487F9614254A43CFBB01A0E51AC8E241"><enum>(aa)</enum><text display-inline="yes-display-inline">with respect to an eligible component, the total direct material costs that are paid or incurred (within the meaning of section 461 and any regulations issued under section 263A) by the taxpayer for production of such eligible component, minus </text></item>
<item commented="no" display-inline="no-display-inline" id="H83CDCDA25335435F8579DE0EE74DE859"><enum>(bb)</enum><text display-inline="yes-display-inline">with respect to an eligible component, the total direct material costs that are paid or incurred (within the meaning of section 461 and any regulations issued under section 263A) by the taxpayer for production of such eligible component that are mined, produced, or manufactured by a prohibited foreign entity, divided by</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="H1BF80A8F1E6743499B15B46360BD689C"><enum>(II)</enum><text>the amount described in subclause (I)(aa).</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H8CC3E1729D274E24BFCCEBABADBD6B4F"><enum>(iii)</enum><header>Safe harbor tables</header>
<subclause commented="no" display-inline="no-display-inline" id="HC2C21FA078734612843AA1A4FD405AFA"><enum>(I)</enum><header display-inline="yes-display-inline">In general</header><text>Not later than December 31, 2026, the Secretary shall issue safe harbor tables (and such other guidance as deemed necessary) to—</text> <item commented="no" display-inline="no-display-inline" id="H6E1CBB9D62C1453CB56E8E5F23ECCE66"><enum>(aa)</enum><text display-inline="yes-display-inline">identify the percentage of total direct costs of any manufactured product which is attributable to a prohibited foreign entity, </text></item>
<item commented="no" display-inline="no-display-inline" id="H23FCA6CC79034DD79F0267F7BC7C5D89"><enum>(bb)</enum><text>identify the percentage of total direct material costs of any eligible component which is attributable to a prohibited foreign entity, and</text></item> <item commented="no" display-inline="no-display-inline" id="H45CBAD606A474A58AD59678AB4B2FE58"><enum>(cc)</enum><text>provide all rules necessary to determine the amount of a taxpayer’s material assistance from a prohibited foreign entity within the meaning of this paragraph.</text></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H776C910395914FB1B970F69916F94DB1"><enum>(II)</enum><header>Safe harbors prior to issuance</header><text>For purposes of this paragraph, prior to the date on which the Secretary issues the safe harbor tables described in subclause (I), and for construction of a qualified facility or energy storage technology which begins on or before the date which is 60 days after the date of issuance of such tables, a taxpayer may—</text> <item commented="no" display-inline="no-display-inline" id="HF1F79B22D49840AD9C44816000533A91"><enum>(aa)</enum><text display-inline="yes-display-inline">use the tables included in Internal Revenue Service Notice 2025–08 to establish the percentage of the total direct costs of any listed eligible component and any manufactured product, and</text></item>
<item commented="no" display-inline="no-display-inline" id="HD3B951DC6DAB464BBB7A96ABFEEF5DD4"><enum>(bb)</enum><text>rely on a certification by the supplier of the manufactured product, eligible component, or constituent element, material, or subcomponent of an eligible component—</text> <subitem commented="no" display-inline="no-display-inline" id="H9B928DFE4ED54A14BEF113080520D817"><enum>(AA)</enum><text display-inline="yes-display-inline">of the total direct costs or the total direct material costs, as applicable, of such product or component that was not produced or manufactured by a prohibited foreign entity, or</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="H117DE6A7EBB243AAA9DF461781541233"><enum>(BB)</enum><text>that such product or component was not produced or manufactured by a prohibited foreign entity.</text></subitem></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="HDA88B54305854C5AB2DB1C6A1AE66FC8"><enum>(III)</enum><header>Exception</header><text>Notwithstanding subclauses (I) and (II)—</text>
<item commented="no" display-inline="no-display-inline" id="H5755D74BD8D945939472B4382A39342C"><enum>(aa)</enum><text display-inline="yes-display-inline">if the taxpayer knows (or has reason to know) that a manufactured product or eligible component was produced or manufactured by a prohibited foreign entity, the taxpayer shall treat all direct costs with respect to such manufactured product, or all direct material costs with respect to such eligible component, as attributable to a prohibited foreign entity, and</text></item> <item commented="no" display-inline="no-display-inline" id="HE79E6D05B8AF48A1A53B54B5AC7EB6D8"><enum>(bb)</enum><text>if the taxpayer knows (or has reason to know) that the certification referred to in subclause (II)(bb) pertaining to a manufactured product or eligible component is inaccurate, the taxpayer may not rely on such certification.</text></item></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H6B23E0DF78664DB6A99E4D25650688CF"><enum>(IV)</enum><header>Certification requirement</header><text>In a manner consistent with Treasury Regulation section 1.45X–4(c)(4)(i) (as in effect on the date of enactment of this paragraph), the certification referred to in subclause (II)(bb) shall—</text> <item commented="no" display-inline="no-display-inline" id="HF758A92DE715429F9A869D2892E4602C"><enum>(aa)</enum><text display-inline="yes-display-inline">include—</text>
<subitem commented="no" display-inline="no-display-inline" id="H9388B8CD0C264F76A7B2B7E444BA7233"><enum>(AA)</enum><text display-inline="yes-display-inline">the supplier’s employer identification number, or </text></subitem> <subitem commented="no" display-inline="no-display-inline" id="H707252CA85A549A6985BD4BD0B71BD3F"><enum>(BB)</enum><text display-inline="yes-display-inline">any such similar identification number issued by a foreign government, </text></subitem></item>
<item commented="no" display-inline="no-display-inline" id="HFCAE85574ADB4012ADE48824AC656013"><enum>(bb)</enum><text display-inline="yes-display-inline">be signed under penalties of perjury,</text></item> <item commented="no" display-inline="no-display-inline" id="H7B720FD1F7694848AEF9E8860F2DC955"><enum>(cc)</enum><text display-inline="yes-display-inline">be retained by the supplier and the taxpayer for a period of not less than 6 years and shall be provided to the Secretary upon request, and</text></item>
<item commented="no" display-inline="no-display-inline" id="HEF9AF7C58098481891826381EF5668D4"><enum>(dd)</enum><text display-inline="yes-display-inline">be from the supplier from which the taxpayer purchased any manufactured product, eligible component, or constituent elements, materials, or subcomponents of an eligible component, stating—</text> <subitem commented="no" display-inline="no-display-inline" id="HD89971DA6D3649B99469C79C83B389A9"><enum>(AA)</enum><text display-inline="yes-display-inline">that such property was not produced or manufactured by a prohibited foreign entity and that the supplier does not know (or have reason to know) that any prior supplier in the chain of production of that property is a prohibited foreign entity,</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="H9BE7C9284BE8407CAC7035359599C933"><enum>(BB)</enum><text display-inline="yes-display-inline">for purposes of section 45X, the total direct material costs for each component, constituent element, material, or subcomponent that were not produced or manufactured by a prohibited foreign entity, or</text></subitem> <subitem commented="no" display-inline="no-display-inline" id="H875DC1871EE5435ABEC7D7335E3D89C4"><enum>(CC)</enum><text>for purposes of section 45Y or section 48E, the total direct costs attributable to all manufactured products that were not produced or manufactured by a prohibited foreign entity.</text></subitem></item></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="HB1902AC1F2B040EBB7969A612E079A66"><enum>(iv)</enum><header display-inline="yes-display-inline">Existing contract</header><text>Upon the election of the taxpayer (in such form and manner as the Secretary shall designate), in the case of any manufactured product, eligible component, or constituent element, material, or subcomponent of an eligible component which is—</text> <subclause commented="no" display-inline="no-display-inline" id="H71F99A1A9E494775A014E559FBB24262"><enum>(I)</enum><text display-inline="yes-display-inline">acquired by the taxpayer, or manufactured or assembled by or for the taxpayer, pursuant to a binding written contract which was entered into prior to June 16, 2025, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H0D82649CC325492A87290BF2F43446AF"><enum>(II)</enum>
<item commented="no" display-inline="yes-display-inline" id="HA2E916500B604C3AB97E6D0316AF1B06"><enum>(aa)</enum><text>placed into service before January 1, 2030 (or, in the case of an applicable facility, as defined in section 45Y(d)(4)(B), before January 1, 2028) in a facility the construction of which began before August 1, 2025, or</text></item> <item commented="no" display-inline="no-display-inline" id="HB2AF4C004D604EB68919C2A6959D9603" indent="up1"><enum>(bb)</enum><text display-inline="yes-display-inline">in the case of a constituent element, material, or subcomponent, used in a product sold before January 1, 2030,</text></item></subclause><continuation-text continuation-text-level="clause">the cost to the taxpayer with respect to such product, component, element, material, or subcomponent shall not be included for purposes of determining the material assistance cost ratio under this subparagraph.</continuation-text></clause>
<clause id="H7798817F2E714556A822B6EBDAFF8C8D"><enum>(v)</enum><header>Anti-circumvention rules</header><text>The Secretary shall prescribe such regulations and guidance as may be necessary or appropriate to prevent circumvention of the rules under this subparagraph, including prevention of—</text> <subclause commented="no" display-inline="no-display-inline" id="H770C3AB3F2094105A8BF7AB215C7BE47"><enum>(I)</enum><text display-inline="yes-display-inline">any abuse of the exception provided under clause (iv) through the stockpiling of any manufactured product, eligible component, or constituent element, material, or subcomponent of an eligible component during any period prior to the application of the requirements under this paragraph, or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H310335883BD1487B90B9F012E34B03E4"><enum>(II)</enum><text>any evasion with respect to the requirements of this subparagraph where the facts and circumstances demonstrate that the beginning of construction of a qualified facility or energy storage technology has not in fact occurred.</text></subclause></clause></subparagraph> <subparagraph id="HA3DE5DC25C0C46749E9EBF69B76289B4"><enum>(E)</enum><header>Other definitions</header><text>For purposes of this paragraph—</text>
<clause commented="no" display-inline="no-display-inline" id="H25D8296A28B5433A85398CB845F6D496"><enum>(i)</enum><header>Eligible component</header><text>The term <term>eligible component</term> means—</text> <subclause commented="no" display-inline="no-display-inline" id="H0286C32A78C0491E8FC114E455E3A21A"><enum>(I)</enum><text display-inline="yes-display-inline">any property described in section 45X(c)(1), or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H9B8648A3294440D3B10D4CD93496100A"><enum>(II)</enum><text>any component which is identified by the Secretary pursuant to regulations or guidance issued under subparagraph (G). </text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="HCC8A4C16A7264020B4BBD1A8F36BF24F"><enum>(ii)</enum><header>Energy storage technology</header><text>The term <term>energy storage technology</term> has the same meaning given such term under section 48E(c)(2).</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H34DF5000BEAF4E82BAAB735860BD4090"><enum>(iii)</enum><header display-inline="yes-display-inline">Manufactured product</header><text>The term <term>manufactured product</term> means—</text> <subclause commented="no" display-inline="no-display-inline" id="HF4A02C87FFE7481C97FE7EA25DE5DB71"><enum>(I)</enum><text display-inline="yes-display-inline">a manufactured product which is a component of a qualified facility, as described in section 45Y(g)(11)(B) and any guidance issued thereunder, or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H7895032E6DDA4E9CACD880FED55DC9F5"><enum>(II)</enum><text>any product which is identified by the Secretary pursuant to regulations or guidance issued under subparagraph (G).</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="H1E1EA57064F14C3CA533AD8E19E0F2E0"><enum>(iv)</enum><header display-inline="yes-display-inline">Qualified facility</header><text>The term <term>qualified facility</term> means—</text>
<subclause commented="no" display-inline="no-display-inline" id="HC84940AF5277497A8C7242FC1B025F13"><enum>(I)</enum><text display-inline="yes-display-inline">a qualified facility, as defined in section 45Y(b)(1),</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H63DE94013E99475585FCE8C480748751"><enum>(II)</enum><text>a qualified facility, as defined in section 48E(b)(3), and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H1E9F2375328848F69433BF78AEEB0175"><enum>(III)</enum><text display-inline="yes-display-inline">any qualified interconnection property (as defined in section 48E(b)(4)) which is part of the qualified investment with respect to a qualified facility (as described in section 48E(b)(1)).</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H1D8EA3DD7EF7491CA67644F0017A2797"><enum>(F)</enum><header>Determination of ownership; beginning of construction</header><text>Rules similar to the rules under subparagraphs (H) and (J) of paragraph (51) shall apply for purposes of this paragraph.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H2412C5DAC6B043C4838C74810C108097"><enum>(G)</enum><header display-inline="yes-display-inline">Regulations and guidance</header><text display-inline="yes-display-inline">The Secretary may prescribe such regulations and guidance as may be necessary or appropriate to carry out the provisions of this paragraph, including—</text> <clause commented="no" display-inline="no-display-inline" id="H204AC63C97F64294A6E2E06F8BC86993"><enum>(i)</enum><text display-inline="yes-display-inline">identification of components or products for purposes of clauses (i) and (iii) of subparagraph (E), and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H9189BB9062BC46C7B861A4C28E0BB929"><enum>(ii)</enum><text display-inline="yes-display-inline">for purposes of subparagraph (A)(ii), rules to address facilities which produce more than one eligible component.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H61E4F9664B0C4293A8667EE8A3FCB7C7"><enum>(d)</enum><header>Denial of credit for certain wind and solar leasing arrangements</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Y">Section 45Y</external-xref> is amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H27CD8C9457514B57A1923730EF2815B2">
<subsection id="HDFE6FCA5804B4495AEFB0133CD1E9BD1"><enum>(h)</enum><header>Denial of credit for wind and solar leasing arrangements</header><text>No credit shall be determined under this section with respect to any production of electricity during the taxable year with respect to property described in paragraph (1) or (4) of section 25D(d) (as applied by substituting <quote>lessee</quote> for <quote>taxpayer</quote>) if the taxpayer rents or leases such property to a third party during such taxable year.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H3EE8890A0508434686EEBB440B2701F1"><enum>(e)</enum><header>Emissions rates tables</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Y">Section 45Y(b)(2)(C)</external-xref> is amended by adding at the end the following new clause: </text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HC0BDFA653E6D46AEA97003F4092D62DC">
<clause commented="no" display-inline="no-display-inline" id="HEE44955B1AD44CAA9001DB432676E9D4"><enum>(iii)</enum><header>Existing studies</header><text display-inline="yes-display-inline">For purposes of clause (i), in determining greenhouse gas emissions rates for types or categories of facilities for the purpose of determining whether a facility satisfies the requirements under paragraph (1), the Secretary shall consider studies published on or before the date of enactment of this clause which demonstrate a net lifecycle greenhouse gas emissions rate which is not greater than zero using widely accepted lifecycle assessment concepts, such as concepts described in standards developed by the International Organization for Standardization.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="H3DB84A2992FD45A88232C56B34598332"><enum>(f)</enum><header>Nuclear energy communities</header> <paragraph commented="no" display-inline="no-display-inline" id="H956BFE257AF44F4282B43FEB7AF4BE77"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45">Section 45(b)(11)</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H23216BAE2D03426786E9CB9AF3626AC0"><enum>(A)</enum><text>in subparagraph (B)—</text> <clause commented="no" display-inline="no-display-inline" id="H42A675A6E8334A2BA9B21F6713BEF9DA"><enum>(i)</enum><text>in clause (ii)(II), by striking <quote>or</quote> at the end,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H34F0A599173A472D969A8695372B1C58"><enum>(ii)</enum><text>in clause (iii)(II), by striking the period at the end and inserting <quote>, or</quote>, and</text></clause> <clause id="H8AA07B4D2F80489E97E15DDF09A890ED"><enum>(iii)</enum><text>by adding at the end the following new clause:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HA43FFDAEEFBE4D48BD0588D4C7088D18">
<clause commented="no" display-inline="no-display-inline" id="H9E5D1ABE2C8F4191993B01A5891D8DE6"><enum>(iv)</enum><text>for purposes of any qualified facility which is an advanced nuclear facility, a metropolitan statistical area which has (or, at any time during the period beginning after December 31, 2009, had) 0.17 percent or greater direct employment related to the advancement of nuclear power, including employment related to—</text> <subclause commented="no" display-inline="no-display-inline" id="H8D74BFC02CFD4D4793DB08016DA4EF8E"><enum>(I)</enum><text display-inline="yes-display-inline">an advanced nuclear facility, </text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H3A8CF9C1D8D944C9A099A6BB1696EC2B"><enum>(II)</enum><text display-inline="yes-display-inline">advanced nuclear power research and development,</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H8C461A9A425E4486AA5D2AB6ADB06FC9"><enum>(III)</enum><text display-inline="yes-display-inline">nuclear fuel cycle research, development, or production, including mining, enrichment, manufacture, storage, disposal, or recycling of nuclear fuel, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HF335025AD557460C889E7CD4557D85D4"><enum>(IV)</enum><text display-inline="yes-display-inline">the manufacturing or assembly of components used in an advanced nuclear facility.</text></subclause></clause><after-quoted-block>, and</after-quoted-block></quoted-block></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HBBA1BE2395A942F4A8BA1D57F6B2C382"><enum>(B)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HF519DA1D3FA54EE0A3C324884F8068CA">
<subparagraph commented="no" display-inline="no-display-inline" id="H618D484C1A784FA69F1B3285C0587E60"><enum>(C)</enum><header>Advanced nuclear facilities</header>
<clause commented="no" display-inline="no-display-inline" id="H8E0E8D10C1644B33BA457A6535F35C3F"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">Subject to clause (ii), for purposes of subparagraph (B)(iv), the term <term>advanced nuclear facility</term> means any nuclear facility the reactor design for which is approved in the manner described in section 45J(d)(2).</text></clause> <clause commented="no" display-inline="no-display-inline" id="HFE2A6C5313814EBB89B5224E8B04CE55"><enum>(ii)</enum><header>Special rule</header><text display-inline="yes-display-inline">For purposes of clause (i), a facility shall be deemed to have a reactor design which is approved in the manner described in section 45J(d)(2) if the Nuclear Regulatory Commission has authorized construction and issued a site-specific construction permit or combined license with respect to such facility (without regard to whether the reactor design was approved after December 31, 1993).</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H5CCC0A757B1040219BA8F43DC4655EDA"><enum>(2)</enum><header>Nonapplication for clean electricity investment credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48E">Section 48E(a)(3)(A)(i)</external-xref> is amended by inserting <quote>, as applied without regard to clause (iv) thereof</quote> after <quote>section 45(b)(11)(B)</quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HC7F76E918BA240C78C219A5E9B8EFB01"><enum>(g)</enum><header display-inline="yes-display-inline">Conforming amendments</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Y">Section 45Y(b)(1)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HE712BB220A54498EB8826083C08451B9"><enum>(1)</enum><text display-inline="yes-display-inline">by redesignating subparagraph (D) as subparagraph (E), and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H71CB0991D4F14D6DABBC503E6DEE3654"><enum>(2)</enum><text>by inserting after subparagraph (C) the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE002852473814DF18A4462B32D3087A5">
<subparagraph commented="no" display-inline="no-display-inline" id="HDBC7010CE9EA48309D9FA830E8D0D6B0"><enum>(D)</enum><header>Determination of capacity</header><text>For purposes of subparagraph (C), additions of capacity of a facility shall be determined in any reasonable manner, including based on—</text> <clause commented="no" display-inline="no-display-inline" id="HA68EF6034EFC460F88E3B98B716CCC71"><enum>(i)</enum><text display-inline="yes-display-inline">determinations by, or reports to, the Federal Energy Regulatory Commission (including interconnection agreements), the Nuclear Regulatory Commission, or any similar entity, reflecting additions of capacity,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H680FBB6E4EEE42368D306C1B5E9B7309"><enum>(ii)</enum><text display-inline="yes-display-inline">determinations or reports reflecting additions of capacity made by an independent professional engineer,</text></clause> <clause commented="no" display-inline="no-display-inline" id="H3C1BC6E2BC364BCA9272D2493E7E9410"><enum>(iii)</enum><text display-inline="yes-display-inline">reports to, or issued by, regional transmission organizations or independent system operators reflecting additions of capacity, or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H78F24869C6DB4C698B157A7044FC2B78"><enum>(iv)</enum><text display-inline="yes-display-inline">any other method or manner provided by the Secretary.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H1873DA7D93CF44CCA904EBD9281CEDF1"><enum>(h)</enum><header display-inline="yes-display-inline">Prohibition on transfer of credits to specified foreign entities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6418">Section 6418(g)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H34E270A1E95D469194DD0603C7122EAD">
<paragraph commented="no" display-inline="no-display-inline" id="HCF80665307AB4932B1A6946F459FA29C"><enum>(5)</enum><header>Prohibition on transfer of credits to specified foreign entities</header><text>With respect to any eligible credit described in clause (iii), (iv), (vi), (vii), (viii), or (xi) of subsection (f)(1)(A), an eligible taxpayer may not elect to transfer any portion of such credit to a taxpayer that is a specified foreign entity (as defined in section 7701(a)(51)(B)).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="HAF2A245CC0254012AC2D64304288440D"><enum>(i)</enum><header display-inline="yes-display-inline">Extension of period of limitations for errors relating to determining of material assistance from a prohibited foreign entity</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6501">Section 6501</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H43A9FCFD422C4EC8A04DDD8D503AA9DD"><enum>(1)</enum><text display-inline="yes-display-inline">by redesignating subsection (o) as subsection (p), and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H13F0BB87EB224BB8A0C684B9F3272309"><enum>(2)</enum><text>by inserting after subsection (n) the following new subsection:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H758AE0685E334E74A37CC072557FA7A4">
<subsection commented="no" display-inline="no-display-inline" id="HB411CB9F82564832A1AAA87F89375E62"><enum>(o)</enum><header>Material assistance from a prohibited foreign entity</header><text display-inline="yes-display-inline">In the case of a deficiency attributable to an error with respect to the determination under section 7701(a)(52) for any taxable year, such deficiency may be assessed at any time within 6 years after the return for such year was filed. </text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA2547D91BDE345C484D4C03A6549478B"><enum>(j)</enum><header>Imposition of accuracy-related penalties</header> <paragraph commented="no" display-inline="no-display-inline" id="H04B262EAFE994E90B021C2249CA2243A"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/6662">Section 6662</external-xref> is amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HD176AE685AAD494A84D815A5CE902397">
<subsection commented="no" display-inline="no-display-inline" id="HD38041C4B5FE44DFA9A5272A73892955"><enum>(m)</enum><header>Substantial understatement of income tax due to disallowance of applicable energy credits</header>
<paragraph commented="no" display-inline="no-display-inline" id="H8795E5FBF31F4E30A645D7627EECFB47"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>In the case of a taxpayer for which there is a disallowance of an applicable energy credit for any taxable year, for purposes of determining whether there is a substantial understatement of income tax for such taxable year, subsection (d)(1) shall be applied—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HDF563EA2AAC449ECACC1AF9B3A54F134"><enum>(A)</enum><text display-inline="yes-display-inline">in subparagraphs (A) and (B), by substituting <quote>1 percent</quote> for <quote>10 percent</quote> each place it appears, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H93F9C55516C743FA8FAC6D1EF9C50F6C"><enum>(B)</enum><text>without regard to subparagraph (C).</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HB5E6314CD2794AADAE6C8D30963578CF"><enum>(2)</enum><header display-inline="yes-display-inline">Disallowance of an applicable energy credit</header><text>For purposes of this subsection, the term <term>disallowance of an applicable energy credit</term> means the disallowance of a credit under section 45X, 45Y, or 48E by reason of overstating the material assistance cost ratio (as determined under section 7701(a)(52)) with respect to any qualified facility, energy storage technology, or facility which produces eligible components.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H1BC771A89F6F44E1BB6217968B032A5A"><enum>(2)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6417">Section 6417(d)(6)</external-xref> is amended by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H2039F292E57943109866850D5B5940F8"> <subparagraph commented="no" display-inline="no-display-inline" id="H3F1E557818D249D29312ADB21F2FF3EE"><enum>(D)</enum><header>Disallowance of an applicable energy credit</header><text>In the case of an applicable entity which made an election under subsection (a) with respect to an applicable credit for which there is a disallowance described in section 6662(m)(2), subparagraph (A) shall apply with respect to any excessive payment resulting from such disallowance.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H502DC9D6A14B4C248BB63ED84EFBF857"><enum>(k)</enum><header>Penalty for substantial misstatements on certification provided by supplier</header>
<paragraph id="H6D05E4E0CD99479E89903F849C73889C"><enum>(1)</enum><header>In general</header><text>Part I of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/68">chapter 68</external-xref> is amended by inserting after section 6695A the following new section:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H4CBF617CF564496997E5FBC400CC5A3C"> <section id="HE279CA8F3EE741BFB513D384895233CA"><enum>6695B.</enum><header>Penalty for substantial misstatements on certification provided by supplier</header> <subsection id="H737DFF0E50FE4FCB86257F74D0857BC5"><enum>(a)</enum><header>Imposition of penalty</header><text>If—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HC7349065F35D4B1891718A13B0EA4E25"><enum>(1)</enum><text display-inline="yes-display-inline">a person—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HA09FC88014FE402CB4849BE32C59D94D"><enum>(A)</enum><text display-inline="yes-display-inline">provides a certification described in clause (iii)(II)(bb) of section 7701(a)(52)(D) with respect to any manufactured product, eligible component, or constituent element, material, or subcomponent of an eligible component, and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H976B15D959CD4E88B268DD02BD2E0D92"><enum>(B)</enum><text display-inline="yes-display-inline">knows, or reasonably should have known, that the certification would be used in connection with a determination under such section,</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H49AB89C7E17E43398C95887AF8A19374"><enum>(2)</enum><text display-inline="yes-display-inline">such person knows, or reasonably should have known, that such certification is inaccurate or false with respect to—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H47857448976141C69BCB872D10031F1F"><enum>(A)</enum><text display-inline="yes-display-inline">whether such property was produced or manufactured by a prohibited foreign entity, or</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB7B7D1C57B7F421E883703F6859A14B3"><enum>(B)</enum><text>the total direct costs or total direct material costs of such property that was not produced or manufactured by a prohibited foreign entity that were provided on such certification, and</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H538C221CD8514A3D974A54C968322893"><enum>(3)</enum><text display-inline="yes-display-inline">the inaccuracy or falsity described in paragraph (2) resulted in the disallowance of an applicable energy credit (as defined in section 6662(m)(2)) and an understatement of income tax (within the meaning of section 6662(d)(2)) for the taxable year in an amount which exceeds the lesser of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H845C516181B346399E7C54E5A215747A"><enum>(A)</enum><text display-inline="yes-display-inline">5 percent of the tax required to be shown on the return for the taxable year, or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H67833A5015BA4FAAA8E8B3E6A8871AE2"><enum>(B)</enum><text>$100,000,</text></subparagraph><continuation-text continuation-text-level="paragraph">then such person shall pay a penalty in the amount determined under subsection (b).</continuation-text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H2F4CB09B98CC46EF8AE714FE9C071720"><enum>(b)</enum><header>Amount of penalty</header><text>The amount of the penalty imposed under subsection (a) on any person with respect to a certification shall be equal to the greater of—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H4A5BF40B228F4B6287DFF8FD95C5D167"><enum>(1)</enum><text display-inline="yes-display-inline">10 percent of the amount of the underpayment (as defined in section 6664(a)) solely attributable to the inaccuracy or falsity described in subsection (a)(2), or</text></paragraph> <paragraph id="H87506A3B5FB34502AF8DF483048CEFF5"><enum>(2)</enum><text>$5,000.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HA5066E9FB2C64FFE891887F8CA22F200"><enum>(c)</enum><header display-inline="yes-display-inline">Exception</header><text>No penalty shall be imposed under subsection (a) if the person establishes to the satisfaction of the Secretary that any inaccuracy or falsity described in subsection (a)(2) is due to a reasonable cause and not willful neglect.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H06FE6502D37F4471A60609C55E65C3BC"><enum>(d)</enum><header>Definitions</header><text display-inline="yes-display-inline">Any term used in this section which is also used in section 7701(a)(52) shall have the meaning given such term in such section.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H3C55137EDFF449BAAE87E33B6A7C97E2"><enum>(2)</enum><header>Clerical amendments</header>
<subparagraph id="H7AB8AAA0BDFE44DCA0DFAEAE305105B6"><enum>(A)</enum><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/6696">Section 6696</external-xref> is amended—</text> <clause commented="no" display-inline="no-display-inline" id="HB67FE9CE42C24A33AD099E6445A011CD"><enum>(i)</enum><text display-inline="yes-display-inline">in the heading, by striking <quote><header-in-text style="tax" level="section">and 6695A</header-in-text></quote> and inserting <quote><header-in-text style="tax" level="section">6695A, and 6695B</header-in-text></quote>,</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H4F85BEF101BA4DDA992BA90D30CAC15F"><enum>(ii)</enum><text>in subsections (a), (b), and (e), by striking <quote>and 6695A</quote> each place it appears and inserting <quote>6695A, and 6695B</quote>,</text></clause> <clause commented="no" display-inline="no-display-inline" id="H48D95B2DEE8D489D8669E98718265D43"><enum>(iii)</enum><text display-inline="yes-display-inline">in subsection (c), by striking <quote>or 6695A</quote> and inserting <quote>6695A, or 6695B</quote>, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HED37FDADAD2E4187B1B1C333C3283103"><enum>(iv)</enum><text>in subsection (d)—</text> <subclause commented="no" display-inline="no-display-inline" id="HD12948DDCFB0482990CE3FCFE1123FD4"><enum>(I)</enum><text display-inline="yes-display-inline">in paragraph (1), by inserting <quote>(or, in the case of any penalty under section 6695B, 6 years)</quote> after <quote>assessed within 3 years</quote>, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H81500F63BC9344A882365673501B99AF"><enum>(II)</enum><text>in paragraph (2), by inserting <quote>(or, in the case of any claim for refund of an overpayment of any penalty assessed under section 6695B, 6 years)</quote> after <quote>filed within 3 years</quote>.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF4C2BA545AF54BE686DD4F033B9C5985"><enum>(B)</enum><text display-inline="yes-display-inline">The table of sections for part I of subchapter B of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/68">chapter 68</external-xref> is amended by inserting after item relating to section 6695A the following new item:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE9D5F71BE2B648278DDFBECD4CA79E9F">
<toc container-level="quoted-block-container" lowest-bolded-level="division-lowest-bolded" lowest-level="section" quoted-block="no-quoted-block" regeneration="yes-regeneration">
<toc-entry idref="HE279CA8F3EE741BFB513D384895233CA" level="section">Sec. 6695B. Penalty for substantial misstatements on certification provided by supplier.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H5EAF4DB047164616834B6A2000DBCABF"><enum>(l)</enum><header display-inline="yes-display-inline">Effective dates</header>
<paragraph commented="no" display-inline="no-display-inline" id="H5F66E09FC6544780B4E19CD2420D5F74"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Except as provided in paragraphs (2), (3), and (4), the amendments made by this section shall apply to taxable years beginning after the date of enactment of this Act.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H89D40870DBFE45A085A134FFBDC9B61C"><enum>(2)</enum><header>Material assistance from prohibited foreign entities</header><text>The amendments made by subsection (b)(1) shall apply to facilities for which construction begins after December 31, 2025.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H146CD77B27E349859B66CC4A4EC87D36"><enum>(3)</enum><header>Penalty for substantial misstatements on certification provided by supplier</header><text>The amendments made by subsection (k) shall apply to certifications provided after December 31, 2025.</text></paragraph> <paragraph id="HF640CDA6854A432797ED01F631759F6A" commented="no"><enum>(4)</enum><header>Termination for wind and solar facilities</header><text>The amendments made by subsection (a) shall apply to facilities the construction of which begins after the date which is 12 months after the date of enactment of this Act.</text></paragraph></subsection></section>
<section id="H60250DEDD6B24F62ADA57282F5CDC2B0"><enum>70513.</enum><header>Termination and restrictions on clean electricity investment credit</header>
<subsection commented="no" display-inline="no-display-inline" id="H4F7E082918834CA89CAA3984DA5D16E9"><enum>(a)</enum><header display-inline="yes-display-inline">Termination for wind and solar facilities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48E">Section 48E(e)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H225AAD06F94A418AB0C64287878A2C8B"><enum>(1)</enum><text display-inline="yes-display-inline">in paragraph (1), by striking <quote>The amount of</quote> and inserting <quote>Subject to paragraph (4), the amount of</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H2132A95B0A2546E495CB8075A608B5A8"><enum>(2)</enum><text>by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H042B0AA169FE4AD0B5C3DA7C29E472D0"> <paragraph commented="no" display-inline="no-display-inline" id="HB391F67BF9EC45BF98D8335A8404D0E4"><enum>(4)</enum><header>Termination for wind and solar facilities</header> <subparagraph commented="no" display-inline="no-display-inline" id="H80C949DDE9934AD18B7F81AF8B26CE21"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">This section shall not apply to any qualified property placed in service by the taxpayer after December 31, 2027, which is part of an applicable facility.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H150BB568C372451CB44FE95A6A601B83"><enum>(B)</enum><header>Applicable facility</header><text display-inline="yes-display-inline">For purposes of this paragraph, the term <term>applicable facility</term> means a qualified facility which—</text> <clause commented="no" display-inline="no-display-inline" id="HC9D1DEEC1C7244439D861F10A5825E25"><enum>(i)</enum><text display-inline="yes-display-inline">uses wind to produce electricity (within the meaning of such term as used in section 45(d)(1), as determined without regard to any requirement under such section with respect to the date on which construction of property begins), or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H2B7E75B28BED4278B8E6075F0EDC2AD4"><enum>(ii)</enum><text display-inline="yes-display-inline">uses solar energy to produce electricity (within the meaning of such term as used in section 45(d)(4), as determined without regard to any requirement under such section with respect to the date on which construction of property begins).</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H30C964FE9827489CBA10D13F003980F6"><enum>(C)</enum><header>Exception</header><text display-inline="yes-display-inline">This paragraph shall not apply with respect to any energy storage technology which is placed in service at any applicable facility.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H3AEEDAC2047B47DD96036E0381636172" commented="no"><enum>(b)</enum><header>Restrictions relating to prohibited foreign entities</header>
<paragraph id="HF37644E92F9B4EBEA9616DB8B84F0B2F" commented="no"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48E">Section 48E</external-xref> is amended—</text> <subparagraph id="H7E24E6FCF703453FAED0B6D1A8D57A84" commented="no"><enum>(A)</enum><text>in subsection (b)—</text>
<clause commented="no" display-inline="no-display-inline" id="HA3A9C480469F4574ACB2BB40DA5F1458"><enum>(i)</enum><text display-inline="yes-display-inline">by redesignating paragraph (6) as paragraph (7), and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H81534EBDC3CF44C5A859F1759DBFFB29"><enum>(ii)</enum><text display-inline="yes-display-inline">by inserting after paragraph (5) the following new paragraph:</text>
<quoted-block id="H3D009F71339C4A908BE0F2563F42DD12" display-inline="no-display-inline" style="OLC">
<paragraph id="H854499B27A124B5E82DCB1E2F692B5B1" commented="no"><enum>(6)</enum><header>Material assistance from prohibited foreign entities</header><text display-inline="yes-display-inline">The terms <term>qualified facility</term> and <term>qualified interconnection property</term> shall not include any facility or property the construction, reconstruction, or erection of which begins after December 31, 2025, if the construction, reconstruction, or erection of such facility or property includes any material assistance from a prohibited foreign entity (as defined in section 7701(a)(52)).</text></paragraph><after-quoted-block>, and</after-quoted-block></quoted-block></clause></subparagraph> <subparagraph id="H9AB24B6C7F4C4C34BF17CAAF694CAD37" commented="no"><enum>(B)</enum><text>in subsection (c), by adding at the end the following new paragraph:</text>
<quoted-block id="HFF469168B9D149C1A806B0B86D8CDB28" display-inline="no-display-inline" style="OLC">
<paragraph id="H9687A02B53314A81A7F592DD9FC1425E" commented="no"><enum>(3)</enum><header>Material assistance from prohibited foreign entities</header><text>The term <term>energy storage technology</term> shall not include any property the construction of which begins after December 31, 2025, if the construction of such property includes any material assistance from a prohibited foreign entity (as defined in section 7701(a)(52)).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H2CD7F62FF5E2450E83E393271ECD0EE0"><enum>(2)</enum><header>Additional restrictions</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48E">Section 48E(d)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HD4699985B0F74E01A1ECBBD89E1495E5">
<paragraph id="HF8ADE08C8A4A4FD593C56C653ED7C503" commented="no"><enum>(6)</enum><header>Restrictions relating to prohibited foreign entities</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H0D3BF341E689490BBE8D711E5B0BFB4C"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">No credit shall be determined under subsection (a) for any taxable year if the taxpayer is—</text> <clause commented="no" display-inline="no-display-inline" id="HDBEFC57D89DC493E884E49BF4BAB998A"><enum>(i)</enum><text display-inline="yes-display-inline">a specified foreign entity (as defined in section 7701(a)(51)(B)), or</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H14704D6E9AB24E4D848441226383C3B0"><enum>(ii)</enum><text display-inline="yes-display-inline">a foreign-influenced entity (as defined in section 7701(a)(51)(D), without regard to clause (i)(II) thereof).</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HEF90C88F2DEB4FB58F53D828E7892BD0"><enum>(B)</enum><header>Effective control</header><text display-inline="yes-display-inline">In the case of a taxpayer for which section 7701(a)(51)(D)(i)(II) is determined to apply for any taxable year, no credit shall be determined under subsection (a) for such taxable year if such determination relates to a qualified facility described in subsection (b)(3) or energy storage technology described in subsection (c)(2).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H8B1A69F4E265401DA631FCFFEDAFA4A1" commented="no"><enum>(3)</enum><header>Recapture</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HADE331FAA6F145F19D918A7257AC727F"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/50">Section 50(a)</external-xref> is amended—</text> <clause id="H7384B63F55F943B99DE62AD11772D3A1" commented="no"><enum>(i)</enum><text>by redesignating paragraphs (4) through (6) as paragraphs (5) through (7), respectively,</text></clause>
<clause id="H7CCFC267DE24410CA87CAF73579A41A2" commented="no"><enum>(ii)</enum><text>by inserting after paragraph (3) the following new paragraph:</text> <quoted-block id="HEC132028FBDB4CDCAE259B0EB0841404" display-inline="no-display-inline" style="OLC"> <paragraph id="H8B9902F045A3481E8C4B9E791A0FE6FA" commented="no"><enum>(4)</enum><header>Payments to prohibited foreign entities</header> <subparagraph id="HB55F4AC059654965A6D324CEDD77F72F" commented="no"><enum>(A)</enum><header>In general</header><text>If there is an applicable payment made by a specified taxpayer before the close of the 10-year period beginning on the date such taxpayer placed in service investment credit property which is eligible for the clean electricity investment credit under section 48E(a), then the tax under this chapter for the taxable year in which such applicable payment occurs shall be increased by 100 percent of the aggregate decrease in the credits allowed under section 38 for all prior taxable years which would have resulted solely from reducing to zero any credit determined under section 46 which is attributable to the clean electricity investment credit under section 48E(a) with respect to such property.</text></subparagraph>
<subparagraph id="H099DBCE7446E4686BFCF2052DA55152D" commented="no"><enum>(B)</enum><header>Applicable payment</header><text>For purposes of this paragraph, the term <term>applicable payment</term> means, with respect to any taxable year, a payment or payments described in section 7701(a)(51)(D)(i)(II).</text></subparagraph> <subparagraph id="H69B14EAC2DF84A48923F85679041BE13" commented="no"><enum>(C)</enum><header>Specified taxpayer</header><text>For purposes of this paragraph, the term <term>specified taxpayer</term> means any taxpayer who has been allowed a credit under section 48E(a) for any taxable year beginning after the date which is 2 years after the date of enactment of this paragraph.</text></subparagraph></paragraph><after-quoted-block>,</after-quoted-block></quoted-block></clause>
<clause id="H3F61FBC3F80642D9A53735F09A2BF33C" commented="no"><enum>(iii)</enum><text>in paragraph (5), as redesignated by clause (i), by striking <quote>or any applicable transaction to which paragraph (3)(A) applies,</quote> and inserting <quote>any applicable transaction to which paragraph (3)(A) applies, or any applicable payment to which paragraph (4)(A) applies,</quote>, and</text></clause> <clause id="HE4701020B047408CBC28862F3CD1889A" commented="no"><enum>(iv)</enum><text>in paragraph (7), as redesignated by clause (i), by striking <quote>or (3)</quote> and inserting <quote>(3), or (4)</quote>.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H1116B5C0983B405792D805E080DF9C76"><enum>(B)</enum><header>Conforming amendments</header>
<clause commented="no" display-inline="no-display-inline" id="H801CB8DC857F41E0A12FD3989619C92F"><enum>(i)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/1371">Section 1371(d)(1)</external-xref> is amended by striking <quote>section 50(a)(5)</quote> and inserting <quote>section 50(a)(6)</quote>.</text></clause> <clause commented="no" display-inline="no-display-inline" id="HE2B8EF0BCB074BBF8A40438572C4D743"><enum>(ii)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/6418">Section 6418(g)(3)</external-xref> is amended by striking <quote>subsection (a)(5)</quote> each place it appears and inserting <quote>subsection (a)(7)</quote>.</text></clause></subparagraph></paragraph></subsection>
<subsection id="HFEAC510536E44D0F8BDDC545D139E0CC"><enum>(c)</enum><header>Denial of credit for expenditures for certain wind and solar leasing arrangements</header>
<paragraph commented="no" display-inline="no-display-inline" id="HCA94A557161F4C019F2E5A2151C4C385"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/48E">Section 48E</external-xref> is amended—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H8841536F0CEE47158D150E12A620AC14"><enum>(A)</enum><text display-inline="yes-display-inline">by redesignating subsection (i) as subsection (j), and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF2CECEACF3E34AA0A278EC60039FFCA4"><enum>(B)</enum><text display-inline="yes-display-inline">by inserting after subsection (h) the following new subsection:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HDCF9ED39EDAB41C39C9F192B6474EC2A"> <subsection id="HED7E3EEFDBC94A269BD046B81A8DCD37"><enum>(i)</enum><header>Denial of credit for expenditures for wind and solar leasing arrangements</header><text>No credit shall be determined under this section for any qualified investment during the taxable year with respect to property described in paragraph (1) or (4) of section 25D(d) (as applied by substituting <quote>lessee</quote> for <quote>taxpayer</quote>) if the taxpayer rents or leases such property to a third party during such taxable year.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H368BECD87CAC427AA0BD710704264303"><enum>(2)</enum><header>Conforming rules</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/50">Section 50</external-xref> is amended by adding at the end the following new subsection:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H13CF05D3095E4C948669F0D28FE57AEB"> <subsection commented="no" display-inline="no-display-inline" id="H2BE23366FC4642D69DFA73ACBB679B60"><enum>(e)</enum><header>Rules for geothermal heat pumps</header><text>For purposes of this section and section 168, the ownership of energy property described in section 48(a)(3)(A)(vii) shall be determined without regard to whether such property is readily usable by a person other than the lessee or service recipient.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H842AC8F0D36A4A93A35CB33C4F06DF60"><enum>(d)</enum><header>Domestic content rules</header><text>Subparagraph (B) of <external-xref legal-doc="usc" parsable-cite="usc/26/48E">section 48E(a)(3)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H4A46E740973F4A2A9A7B40A87EC1AFDD"> <subparagraph commented="no" display-inline="no-display-inline" id="H0B5B376F745E4177989B8F97BD775612"><enum>(B)</enum><header>Domestic content</header><text>Rules similar to the rules of section 48(a)(12) shall apply, except that, for purposes of subparagraph (B) of such section and the application of rules similar to the rules of section 45(b)(9)(B), the adjusted percentage (as determined under section 45(b)(9)(C)) shall be determined as follows:</text>
<clause commented="no" display-inline="no-display-inline" id="H1D7FE0700CD2476CACE0683C43B2C95E"><enum>(i)</enum><text>In the case of any qualified investment with respect to any qualified facility or energy storage technology the construction of which begins before June 16, 2025, 40 percent (or, in the case of a qualified facility which is an offshore wind facility, 20 percent).</text></clause> <clause commented="no" display-inline="no-display-inline" id="HDCA8B075A0734FE5966B4B76EA223B6D"><enum>(ii)</enum><text display-inline="yes-display-inline">In the case of any qualified investment with respect to any qualified facility or energy storage technology the construction of which begins on or after June 16, 2025, and before January 1, 2026, 45 percent (or, in the case of a qualified facility which is an offshore wind facility, 27.5 percent).</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H0BE6E4A3A8B34CF7A309926749536FF4"><enum>(iii)</enum><text display-inline="yes-display-inline">In the case of any qualified investment with respect to any qualified facility or energy storage technology the construction of which begins during calendar year 2026, 50 percent (or, in the case of a qualified facility which is an offshore wind facility, 35 percent).</text></clause> <clause commented="no" display-inline="no-display-inline" id="H2FB2AEFEE8E445D3A6FB515A87E31D0E"><enum>(iv)</enum><text display-inline="yes-display-inline">In the case of any qualified investment with respect to any qualified facility or energy storage technology the construction of which begins after December 31, 2026, 55 percent.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H5C2C255127D3447391E9E58B72658EBA"><enum>(e)</enum><header>Elimination of energy credit for certain energy property</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48">Section 48(a)(2)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HDDF9A9DA6785434DAD62CEA2F37A1082"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (A)(ii), by striking <quote>2 percent</quote> and inserting <quote>0 percent</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9085901D740940BD8D1A9046232D9325"><enum>(2)</enum><text>by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H8C9033C443B74C92AC77BC0698A185DF"> <subparagraph commented="no" display-inline="no-display-inline" id="H7B78D177BB4E49A895ED90C404126FDF"><enum>(C)</enum><header>Nonapplication of increases to energy percentage</header><text>For purposes of energy property described in subparagraph (A)(ii), the energy percentage applicable to such property pursuant to such subparagraph shall not be increased or otherwise adjusted by any provision of this section.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H16EBA8E3220740BB813D7D4262FF4771"><enum>(f)</enum><header>Application of clean electricity investment credit to qualified fuel cell property</header><text display-inline="yes-display-inline">Section 48E, as amended by subsection (c), is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HC392C0D3DCC74CA3AE43397D352A8C1E"><enum>(1)</enum><text display-inline="yes-display-inline">by redesignating subsection (j) as subsection (k), and </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H2FE9A9E2A92C4D39B42A1C05F9C3D974"><enum>(2)</enum><text display-inline="yes-display-inline">by inserting after subsection (i) the following new subsection:</text> <quoted-block style="OLC" id="H396547B26F224D288ADD90885716EF4E" display-inline="no-display-inline"> <subsection id="HE7F67E1A595441CB983A236C9EDE26F2"><enum>(j)</enum><header>Application to qualified fuel cell property</header><text display-inline="yes-display-inline">For purposes of this section, in the case of any qualified fuel cell property (as defined in section 48(c)(1), as applied without regard to subparagraph (E) thereof)—</text>
<paragraph id="HF4A0E31B11AF45688B3A6339F88D5DAE"><enum>(1)</enum><text>subsection (b)(3)(A) shall be applied without regard to clause (iii) thereof,</text></paragraph> <paragraph id="H2532FA766A48444685E8F642ECC2FA80"><enum>(2)</enum><text>for purposes of subsection (a)(1), the applicable percentage shall be 30 percent and such percentage shall not be increased or otherwise adjusted by any other provision of this section, and</text></paragraph>
<paragraph id="HC3CE7A4D79D94C9FA087141614F303FB"><enum>(3)</enum><text>subsection (g) shall not apply.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H7196160C63B240FBBD86553D5B2A8FE9"><enum>(g)</enum><header display-inline="yes-display-inline">Effective dates</header> <paragraph id="H1ED43C1F73EA40178EC8B8BEC7D0C311"><enum>(1)</enum><header>In general</header><text>Except as provided in paragraphs (2), (3), (4), and (5), the amendments made by this section shall apply to taxable years beginning after the date of enactment of this Act.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H8FEF3C08B3B44F6DB0B2B3564B16277B"><enum>(2)</enum><header display-inline="yes-display-inline">Domestic content rules</header><text>The amendment made by subsection (d) shall apply on or after June 16, 2025.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H798645FCC60B40389E8532BCD06C061F"><enum>(3)</enum><header>Elimination of energy credit for certain energy property</header><text>The amendments made by subsection (e) shall apply to property the construction of which begins on or after June 16, 2025.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HAA6F494E6DA24C94A414A03151717C33"><enum>(4)</enum><header display-inline="yes-display-inline">Application of clean electricity investment credit to qualified fuel cell property</header><text>The amendments made by subsection (f) shall apply to property the construction of which begins after December 31, 2025.</text></paragraph> <paragraph id="HBC1FDB4B19D9416D986B9BFBF59821DF" commented="no"><enum>(5)</enum><header>Termination for wind and solar facilities</header><text>The amendments made by subsection (a) shall apply to facilities the construction of which begins after the date which is 12 months after the date of enactment of this Act.</text></paragraph></subsection></section>
<section id="H827ABA44BCE141F38FBD5C9ABF03112D"><enum>70514.</enum><header>Phase-out and restrictions on advanced manufacturing production credit</header>
<subsection id="H23912909694E4DF7B957D5A02588827C"><enum>(a)</enum><header>Modification of provision relating to sale of integrated components</header><text>Paragraph (4) of <external-xref legal-doc="usc" parsable-cite="usc/26/45X">section 45X(d)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HC4A74CAD2DF64EC3B4E96169915ACF30"> <paragraph commented="no" display-inline="no-display-inline" id="H3653E04C4CCE4CF2A13B706E4BA4D915"><enum>(4)</enum><header>Sale of integrated components</header> <subparagraph commented="no" display-inline="no-display-inline" id="HCECB4CD1B467471394D7DC5EE9BEAD8E"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">For purposes of this section, a person shall be treated as having sold an eligible component to an unrelated person if—</text>
<clause commented="no" display-inline="no-display-inline" id="H0520A563C7CA4F93877BC20CFE06B969"><enum>(i)</enum><text display-inline="yes-display-inline">such component (referred to in this paragraph as the <term>primary component</term>) is integrated, incorporated, or assembled into another eligible component (referred to in this paragraph as the <term>secondary component</term>) produced within the same manufacturing facility as the primary component, and </text></clause> <clause commented="no" display-inline="no-display-inline" id="H856945C5E3A64F5DAA4FF7846E56D261"><enum>(ii)</enum><text display-inline="yes-display-inline">the secondary component is sold to an unrelated person.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H50BF5074A26B48DABDCD085B46594CB7"><enum>(B)</enum><header>Additional requirements</header><text display-inline="yes-display-inline">Subparagraph (A) shall only apply with respect to a secondary component for which not less than 65 percent of the total direct material costs which are paid or incurred (within the meaning of section 461 and any regulations issued under section 263A) by the taxpayer to produce such secondary component are attributable to primary components which are mined, produced, or manufactured in the United States.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="HF7ADE4997351450B839CA9163EA20037"><enum>(b)</enum><header display-inline="yes-display-inline">Phase out and termination</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45X">Section 45X(b)(3)</external-xref> is amended—</text>
<paragraph id="H301145647A7249F8BC64751A8BE747D2"><enum>(1)</enum><text>in the heading, by inserting <quote><header-in-text style="tax" level="paragraph">and termination</header-in-text></quote> after <quote><header-in-text style="tax" level="paragraph">Phase out</header-in-text></quote>,</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HE431F47DE2E347249EBFEF9804912C5A"><enum>(2)</enum><text display-inline="yes-display-inline">in subparagraph (A), in the matter preceding clause (i), by striking <quote>subparagraph (C)</quote> and inserting <quote>subparagraphs (C) and (D)</quote>, and</text></paragraph>
<paragraph id="H64A13B39F84844F39124975A2658B02B"><enum>(3)</enum><text>by striking subparagraph (C) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H9EA7A85616134A19B77F28321BCE3251"> <subparagraph id="HCEE3CB476D54486D9E04B17ED58BA877"><enum>(C)</enum><header>Phase out for applicable critical minerals other than metallurgical coal</header> <clause commented="no" display-inline="no-display-inline" id="H5F2BBE0CB16548B991A1306E6C465A62"><enum>(i)</enum><header display-inline="yes-display-inline">In general</header><text>In the case of any applicable critical mineral (other than metallurgical coal) produced after December 31, 2030, the amount determined under this subsection with respect to such mineral shall be equal to the product of—</text>
<subclause commented="no" display-inline="no-display-inline" id="H49D7D8B40D4840589F51795E93C638FD"><enum>(I)</enum><text display-inline="yes-display-inline">the amount determined under paragraph (1) with respect to such mineral, as determined without regard to this subparagraph, multiplied by</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H8C7E2F33AD40491E8974FB17DBD37C20"><enum>(II)</enum><text>the phase out percentage under clause (ii).</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H5A5672955AB341A5A39D70BA39B51DE8"><enum>(ii)</enum><header>Phase out percentage for applicable critical minerals other than metallurgical coal</header><text display-inline="yes-display-inline">The phase out percentage under this clause is equal to—</text> <subclause commented="no" display-inline="no-display-inline" id="H01538CED0E5C49D79292EF6625D37496"><enum>(I)</enum><text display-inline="yes-display-inline">in the case of any applicable critical mineral produced during calendar year 2031, 75 percent,</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H415C46D206E146709053F3E31686F757"><enum>(II)</enum><text>in the case of any applicable critical mineral produced during calendar year 2032, 50 percent,</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H93F03FB8DCEB4C8181A820BCEF9EE7D8"><enum>(III)</enum><text display-inline="yes-display-inline">in the case of any applicable critical mineral produced during calendar year 2033, 25 percent, and</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HAD0E5EEF0B2E4568A10BE07DF2CE10F3"><enum>(IV)</enum><text>in the case of any applicable critical mineral produced after December 31, 2033, 0 percent.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HA08539F8BA2C4E60A969F632DD305081"><enum>(D)</enum><header display-inline="yes-display-inline">Termination for wind energy components</header><text>This section shall not apply to any wind energy component produced and sold after December 31, 2027.</text></subparagraph>
<subparagraph id="H351AA802CD7047C28115FCFBC3612DB4"><enum>(E)</enum><header>Termination for metallurgical coal</header><text>This section shall not apply to any metallurgical coal produced after December 31, 2029.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H24DC574CCBBB42E9ACA6836CD892B8EB" commented="no"><enum>(c)</enum><header>Restrictions relating to prohibited foreign entities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45X">Section 45X</external-xref> is amended—</text>
<paragraph id="HA060B2E5488B40D69EB7AA055881C00E" commented="no"><enum>(1)</enum><text>in subsection (c)(1), by adding at the end the following new subparagraph:</text> <quoted-block id="HF0BF1D5579C2406A87399A8F0168B728" display-inline="no-display-inline" style="OLC"> <subparagraph id="H1FA417CCDD0D4AD79128676D50A3241F" commented="no"><enum>(C)</enum><header>Material assistance from prohibited foreign entities</header><text>In the case of taxable years beginning after the date of enactment of this subparagraph, the term <term>eligible component</term> shall not include any property which includes any material assistance from a prohibited foreign entity (as defined in section 7701(a)(52), as applied by substituting <quote>used in a product sold before January 1, 2027</quote> for <quote>used in a product sold before January 1, 2030</quote> in subparagraph (D)(iv)(II)(bb) thereof).</text></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph>
<paragraph id="HC9690E8687B84505AD08EA3D7F4653D4" commented="no"><enum>(2)</enum><text>in subsection (d), as amended by subsection (a) of this section, by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB5BBCE94FD1B4B0FB0267B2DC58015F5"> <paragraph id="HA6105FAD8C134A5B952C2D78D2880FE6" commented="no"><enum>(4)</enum><header>Restrictions relating to prohibited foreign entities</header> <subparagraph commented="no" display-inline="no-display-inline" id="HB033B64CDBD4457E8C5B2D71348CE0CF"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">No credit shall be determined under subsection (a) for any taxable year if the taxpayer is—</text>
<clause commented="no" display-inline="no-display-inline" id="HF985D0A1604B4DADB4B01D737881BED4"><enum>(i)</enum><text display-inline="yes-display-inline">a specified foreign entity (as defined in section 7701(a)(51)(B)), or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H927775B32A4F4A34992F1F1B66D14441"><enum>(ii)</enum><text display-inline="yes-display-inline">a foreign-influenced entity (as defined in section 7701(a)(51)(D), without regard to clause (i)(II) thereof).</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H4E404F89189242208E7C3DFA14A5604B"><enum>(B)</enum><header>Effective control</header><text display-inline="yes-display-inline">In the case of a taxpayer for which section 7701(a)(51)(D)(i)(II) is determined to apply for any taxable year, no credit shall be determined under subsection (a) for such taxable year if such determination relates to an eligible component described in subsection (c)(1).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H7AC4436AE27344EF963F94C9C4EEF78C"><enum>(d)</enum><header>Modification of definition of battery module</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45X">Section 45X(c)(5)(B)(iii)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H578F33BF7AF94706A98E851D7D545F33"><enum>(1)</enum><text display-inline="yes-display-inline">in subclause (I)(bb), by striking <quote>and</quote> at the end,</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H08B96D95B17846798EC7997038731BBA"><enum>(2)</enum><text>in subclause (II), by striking the period at the end and inserting <quote>, and</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H448FBEB8372D44CFB6DEBC42D226B5CD"><enum>(3)</enum><text>by adding at the end the following new subclause:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H21115F6CE117422F89A7D447D7A8D11C"> <subclause commented="no" display-inline="no-display-inline" id="H167DEA893C3543609FEFBD616557FDAB"><enum>(III)</enum><text>which is comprised of all other essential equipment needed for battery functionality, such as current collector assemblies and voltage sense harnesses, or any other essential energy collection equipment.</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H1A5611DAD0DB43BD9503F1D4305A37BD"><enum>(e)</enum><header>Inclusion of metallurgical coal as an applicable critical mineral for purposes of the advanced manufacturing production credit</header>
<paragraph commented="no" display-inline="no-display-inline" id="HE5D94DA19E374199A8EBA0CF761C2ED7"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/45X">Section 45X(c)(6)</external-xref> is amended—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H19CD5F21FD634B4BB127B5D6E3DBFC59"><enum>(A)</enum><text>by redesignating subparagraphs (R) through (Z) as subparagraphs (S) through (AA), respectively, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H188E154CF24C46C7AF52ABDB7110045B"><enum>(B)</enum><text>by inserting after subparagraph (Q) the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HDDACF364678C4E849F8638B7CE5BE59F"> <subparagraph commented="no" display-inline="no-display-inline" id="H1369F39F1A1242FB92507974CE2C820E"><enum>(R)</enum><header>Metallurgical coal</header><text>Metallurgical coal which is suitable for use in the production of steel (within the meaning of the notice published by the Department of Energy entitled ‘Critical Material List; Addition of Metallurgical Coal Used for Steelmaking’ (90 Fed. Reg. 22711 (May 29, 2025))), regardless of whether such production occurs inside or outside of the United States.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HA8BF23C109DC42FBBB07424B2014319B"><enum>(2)</enum><header>Credit amount</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45X">Section 45X(b)(1)(M)</external-xref> is amended by inserting <quote>(2.5 percent in the case of metallurgical coal)</quote> after <quote>10 percent</quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA4E7F33E2B8D4885B12CD7E33ED558F6"><enum>(f)</enum><header display-inline="yes-display-inline">Effective dates</header> <paragraph commented="no" display-inline="no-display-inline" id="H9C50A6CBD3DF4B1B81CB3A8E7AD04C28"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Except as provided in paragraph (2), the amendments made by this section shall apply to taxable years beginning after the date of enactment of this Act. </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H24A973B4B1F844AFB00D6193F412D800"><enum>(2)</enum><header>Modification of provision relating to sale of integrated components</header><text>The amendment made by subsection (a) shall apply to components sold during taxable years beginning after December 31, 2026.</text></paragraph></subsection></section> <section commented="no" display-inline="no-display-inline" section-type="subsequent-section" id="HEF90412961CE4B118B9CFC6372F64A5B"><enum>70515.</enum><header display-inline="yes-display-inline">Restriction on the extension of advanced energy project credit program</header> <subsection commented="no" display-inline="no-display-inline" id="H43424F3BA20841669D137F5BDE7C2267"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/48C">Section 48C(e)(3)(C)</external-xref> is amended by striking <quote>shall be increased</quote> and inserting <quote>shall not be increased</quote>.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H5404F32039874A9BB49D40B890697180"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall take effect on the date of enactment of this Act.</text></subsection></section></subchapter> <subchapter id="H885E63E6C4694079BBAABB7E8E448B00" style="OLC"><enum>B</enum><header>Enhancement of America-first energy policy</header> <section id="H9F06A560226E4FC095B9F8E450294630"><enum>70521.</enum><header>Extension and modification of clean fuel production credit</header> <subsection id="H8CAB6F71962D4B34933E3843E399F9D9"><enum>(a)</enum><header>Prohibition on foreign feedstocks</header> <paragraph id="H56B9C2133D3F4EB7ADF8EAAEC05DFD59"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(f)(1)(A)</external-xref> is amended—</text>
<subparagraph id="H5C9A399C1F6040E6A72A605BD8EA6E29"><enum>(A)</enum><text>in clause (i)(II)(bb), by striking <quote>and</quote> at the end,</text></subparagraph> <subparagraph id="H870C0EAE979840D9B3D82602E6463D8E"><enum>(B)</enum><text>in clause (ii), by striking the period at the end and inserting <quote>, and</quote>, and</text></subparagraph>
<subparagraph id="H1C38D3AFA631452AAF6DCE663A491DEA"><enum>(C)</enum><text>by adding at the end the following new clause:</text> <quoted-block id="HD521B58AB5FB47008A7E8A5D4473057D" display-inline="no-display-inline" style="OLC"> <clause id="H894B446673E345618FEE1206FA1298D5"><enum>(iii)</enum><text>such fuel is exclusively derived from a feedstock which was produced or grown in the United States, Mexico, or Canada.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="H6F6FF3FF6FBD4223A40F11F2C8B13529"><enum>(2)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to transportation fuel produced after December 31, 2025.</text></paragraph></subsection> <subsection id="H6AC648C5BB25424F98142536A4D93573"><enum>(b)</enum><header>Prohibition on negative emission rates</header> <paragraph commented="no" display-inline="no-display-inline" id="H7919BEC4C161498693013471A5416627"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(b)(1)</external-xref> is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HCDBB3AD42B8140CAA1013064FDEA7DF8"><enum>(A)</enum><text display-inline="yes-display-inline">by striking subparagraph (C) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H2C71EDA592F64F30BC7BBFEFC0C198E5"> <subparagraph commented="no" display-inline="no-display-inline" id="H3DC16290BDBC44A9A699AA16615A0370"><enum>(C)</enum><header>Rounding of emissions rate</header><text>The Secretary may round the emissions rates under subparagraph (B) to the nearest multiple of 5 kilograms of CO2e per mmBTU.</text></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE7EAD097D8754E04B68D06C4FF10894B"><enum>(B)</enum><text>by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H6F3FEF61C3114C9B818C0F0C5F5DBC5A"> <subparagraph commented="no" display-inline="no-display-inline" id="H23DF1DC6607A4CBB9B90EDDF5D2B5063"><enum>(E)</enum><header>Prohibition on negative emission rates</header><text>For purposes of this section, the emissions rate for a transportation fuel may not be less than zero.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="H534B4D9DA2BB4E0A866D7A3F683A9314"><enum>(2)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to emissions rates published for transportation fuel produced after December 31, 2025.</text></paragraph></subsection> <subsection id="H745F4E89E3C543B2AD3B9CFB3A9526D5"><enum>(c)</enum><header>Determination of emissions rate</header> <paragraph id="HF3FEDB930C3B4281AA72135DBB98D0AC"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(b)(1)(B)</external-xref> is amended by adding at the end the following new clauses:</text>
<quoted-block id="HE81C22B71AD740688C3970C2EB8FBDB2" display-inline="no-display-inline" style="OLC">
<clause id="HE835F83454384ED1ADAA3DDE7275FE51"><enum>(iv)</enum><header>Exclusion of indirect land use changes</header><text>Notwithstanding clauses (i), (ii), and (iii), the emissions rate shall be adjusted as necessary to exclude any emissions attributed to indirect land use change. Any such adjustment shall be based on regulations or methodologies determined by the Secretary.</text></clause> <clause id="H057FCA7E8BF74BCB9E3AD9FD502B568D"><enum>(v)</enum><header>Animal manures</header><text>With respect to any transportation fuel which is derived from animal manure, the Secretary—</text>
<subclause commented="no" display-inline="no-display-inline" id="HCAB23D3A127D4452A37907B0096AA60F"><enum>(I)</enum><text display-inline="yes-display-inline">shall provide a distinct emissions rate with respect to such fuel based on the specific animal manure feedstock, which may include dairy manure, swine manure, poultry manure, or any other sources as are determined appropriate by the Secretary, and</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HCFBFDCF07715491A9A80559BCCA74226"><enum>(II)</enum><text display-inline="yes-display-inline">notwithstanding subparagraph (E), may provide an emissions rate that is less than zero.</text></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H32114D385D434CD98A5A97E9377416AA"><enum>(2)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(b)(1)(B)(i)</external-xref> is amended by striking <quote>clauses (ii) and (iii)</quote> and inserting <quote>clauses (ii), (iii), (iv), and (v)</quote>.</text></paragraph> <paragraph id="H9268CF29ED4D47D6B900BCF98F2D43DB"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply to emissions rates published for transportation fuel produced after December 31, 2025.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HC29770AFA0FB4220BEDA91F36F265042"><enum>(d)</enum><header display-inline="yes-display-inline">Extension of clean fuel production credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(g)</external-xref> is amended by striking <quote>December 31, 2027</quote> and inserting <quote>December 31, 2029</quote>.</text></subsection> <subsection id="H6EC616CA8D654EDC857850A282FBB746"><enum>(e)</enum><header>Preventing double credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(d)(5)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H11C191920B404F3BB1770B82548539BE"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (A)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H260B64BF4498484B950E81D735759F48"><enum>(A)</enum><text display-inline="yes-display-inline">in clause (ii), by striking <quote>and</quote> at the end,</text></subparagraph>
<subparagraph id="H2BEBA2E261FC4633B57144D98F2847F1"><enum>(B)</enum><text>in clause (iii), by striking the period at the end and inserting <quote>, and</quote>, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HCF26927090894941B7D8090EBE88BDAC"><enum>(C)</enum><text>by adding at the end the following new clause:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H42ABAF8F64F2487ABFCE05AA385ECD0B">
<clause commented="no" display-inline="no-display-inline" id="H8F2CF82A58C7419D89CE8BC59CB91ADF"><enum>(iv)</enum><text>is not produced from a fuel for which a credit under this section is allowable.</text></clause><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H566903B59EDF4685B5F88FA037B020DC"><enum>(2)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H06BA21E8118A48D196CBE360909DCC4D">
<subparagraph commented="no" display-inline="no-display-inline" id="HF39701B52DD4444090B7792FFC85E729"><enum>(C)</enum><header>Regulations and guidance</header><text>The Secretary shall issue such regulations or other guidance as the Secretary determines necessary to carry out the purposes of subparagraph (A)(iv).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HB952FF35862240DB9462B933F6A7124D"><enum>(f)</enum><header display-inline="yes-display-inline">Sales to unrelated persons</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(f)(3)</external-xref> is amended by adding at the end the following: <quote>The Secretary may prescribe additional related person rules similar to the rule described in the preceding sentence for entities which are not described in such sentence, including rules for related persons with respect to which the taxpayer has reason to believe will sell fuel to an unrelated person in a manner described in subsection (a)(4).</quote>.</text></subsection>
<subsection id="H95AE9192ED844C9E989C81AB1D64939F"><enum>(g)</enum><header>Treatment of sustainable aviation fuel</header>
<paragraph id="HC565E33028A048859C862F3209C476FF"><enum>(1)</enum><header>Coordination of credits</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H4F51944C380945BC99EC06050555532F"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/6426">Section 6426(k)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HBD715B2E5E2745B8AE04A997E3F17E23"> <paragraph commented="no" display-inline="no-display-inline" id="H0BF21B1497474864A198C620179CACC2"><enum>(4)</enum><header>Coordination of credits</header><text>With respect to any gallon of sustainable aviation fuel in a qualified mixture, this subsection shall not apply to any such gallon for which a credit under section 45Z is allowable (as determined without regard to subsection (a)(1)(A) of such section).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H72D2A21CE7424F6BB66A6D1DF31825EF"><enum>(B)</enum><header>Effective date</header><text>The amendment made by this paragraph shall apply to—</text> <clause id="H507038CDFACC4E309B6ACFF0BBC45D6F"><enum>(i)</enum><text>fuel sold or used on or after the date of the enactment of this Act, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H5DF22F8FC356450BA060EB28933AC9A8"><enum>(ii)</enum><text>fuel sold or used before the date of enactment of this Act, but only to the extent that claims for the credit under <external-xref legal-doc="usc" parsable-cite="usc/26/6426">section 6426(k)</external-xref> of the Internal Revenue Code of 1986 with respect to such sale or use have not been paid or allowed as of such date.</text></clause></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H9AD7DF47F92D4CD3AE6C31CCF42EAC78"><enum>(2)</enum><header>Elimination of special rate</header> <subparagraph commented="no" display-inline="no-display-inline" id="HC5C61A822DBA4C11AF0CF8787B64430C"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>Paragraph (3) of <external-xref legal-doc="usc" parsable-cite="usc/26/45Z">section 45Z(a)</external-xref> is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HDB7F763D355946BAB41FC125BD0C7996">
<paragraph commented="no" display-inline="no-display-inline" id="HB620E8564A5E4DFE9E28DEC37B779D41"><enum>(3)</enum><header>Definition of sustainable aviation fuel</header><text>For purposes of this section, the term <term>sustainable aviation fuel</term> means liquid fuel, the portion of which is not kerosene, which is sold for use in an aircraft and which—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H790EE30C164140A7A048C965FF8D39D1"><enum>(A)</enum><text display-inline="yes-display-inline">meets the requirements of—</text>
<clause commented="no" display-inline="no-display-inline" id="H63E45DE0A5404AC08FE06C6E496052EF"><enum>(i)</enum><text display-inline="yes-display-inline">ASTM International Standard D7566, or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H948B043F198244B38639265381B639F2"><enum>(ii)</enum><text display-inline="yes-display-inline">the Fischer Tropsch provisions of ASTM International Standard D1655, Annex A1, and</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HD5F87ACBF8C94CF7A6BCD2595372CB73"><enum>(B)</enum><text display-inline="yes-display-inline">is not derived from palm fatty acid distillates or petroleum.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H18948125E125429FB665504A65FE2094"><enum>(B)</enum><header display-inline="yes-display-inline">Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(c)(1)</external-xref> is amended by striking <quote>, the $1.00 amount in subsection (a)(2)(B), the 35 cent amount in subsection (a)(3)(A)(i), and the $1.75 amount in subsection (a)(3)(A)(ii)</quote> and inserting <quote>and the $1.00 amount in subsection (a)(2)(B)</quote>.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H7CDDE79C0F3A41598A4B51CCA1D1EF61"><enum>(C)</enum><header display-inline="yes-display-inline">Effective date</header><text>The amendments made by this paragraph shall apply to fuel produced after December 31, 2025.</text></subparagraph></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H75B8B29CDB404D41A47E7F3265A7411D"><enum>(h)</enum><header display-inline="yes-display-inline">Sustainable aviation fuel credit</header><text>Section 6426(k), as amended by the preceding provisions of this Act, is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H4BB3F718704F4760BC900694EFEA958F">
<paragraph commented="no" display-inline="no-display-inline" id="H388993EEF9D34662A8820532C97D4C84"><enum>(5)</enum><header>Termination</header><text>This subsection shall not apply to any sale or use for any period after September 30, 2025.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="H083E51B7F02D4DDCA981FBC2944E1788"><enum>(i)</enum><header>Registration of producers of fuel eligible for clean fuel production credit</header> <paragraph commented="no" display-inline="no-display-inline" id="HAE6D9D1ABE134439852A2BC7E70F65B2"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text>Section 13704(b)(5) of <external-xref legal-doc="public-law" parsable-cite="pl/117/169">Public Law 117–169</external-xref> is amended by striking <quote>after <quote>section 6426(k)(3)),</quote></quote> and inserting <quote>after <quote>section 40B),</quote></quote>.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9E1BF6EFCF8F45BD885D7F99DA506647"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to transportation fuel produced after December 31, 2024.</text></paragraph></subsection> <subsection id="H73749ECF2C064D73B425391C896D7C26"><enum>(j)</enum><header>Extension and modification of small agri-biodiesel producer credit</header> <paragraph commented="no" display-inline="no-display-inline" id="H304DD696CC68453085903A5759686D2A"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/40A">Section 40A</external-xref> is amended—</text>
<subparagraph id="H3DB3E52C461744ACA140724AFB8BE92D"><enum>(A)</enum><text>in subsection (b)(4)—</text> <clause commented="no" display-inline="no-display-inline" id="H65FCD17BADA34C0AA3F2FBD204315585"><enum>(i)</enum><text>in subparagraph (A), by striking <quote>10 cents</quote> and inserting <quote>20 cents</quote>,</text></clause>
<clause id="H40A4064E626F4424A91138B717C6330A"><enum>(ii)</enum><text>in subparagraph (B), by inserting <quote>in a manner which complies with the requirements under section 45Z(f)(1)(A)(iii)</quote> after <quote>produced by an eligible small agri-biodiesel producer</quote>, and</text></clause> <clause id="HF1D38B5FF77847A3A7649636A8A1EC85"><enum>(iii)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H4726B95CAC704B05AEEE0F2C87F9085A">
<subparagraph commented="no" display-inline="no-display-inline" id="HA1E681E0C2DC4CF2A7594C9BB5A32593"><enum>(D)</enum><header>Coordination with clean fuel production credit</header><text>The credit determined under this paragraph with respect to any gallon of fuel shall be in addition to any credit determined under section 45Z with respect to such gallon of fuel.</text></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H149A5131A86B46058546FD1491FA6518"><enum>(B)</enum><text>in subsection (g), by inserting <quote>(or, in the case of the small agri-biodiesel producer credit, any sale or use after December 31, 2026)</quote> after <quote>December 31, 2024</quote>.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HECAAE41C65D04F13BF4725ED4FB737BC"><enum>(2)</enum><header>Transfer of credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6418">Section 6418(f)(1)(A)</external-xref> is amended by adding at the end the following new clause: </text> <quoted-block style="OLC" display-inline="no-display-inline" id="H573CD2CCAC0849F5A17AB0EEE7928990"> <clause commented="no" display-inline="no-display-inline" id="H0310190E8B14472487F05F21AFCC391C"><enum>(xii)</enum><text display-inline="yes-display-inline">So much of the biodiesel fuels credit determined under section 40A which consists of the small agri-biodiesel producer credit determined under subsection (b)(4) of such section.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HEC8F2A94CDDA48D684087E3D459B0F6B"><enum>(3)</enum><header display-inline="yes-display-inline">Effective date</header><text>The amendments made by this subsection shall apply to fuel sold or used after June 30, 2025.</text></paragraph></subsection> <subsection id="HC210D4B0BF664120A34228DD9415C490" commented="no"><enum>(k)</enum><header>Restrictions relating to prohibited foreign entities</header> <paragraph id="H83F5D4DAB0D745328FC7E08FE3D2203C" commented="no"><enum>(1)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Z">Section 45Z(f)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block id="HDE4C25FDEBE740188F8BD0898225AAD4" display-inline="no-display-inline" style="OLC">
<paragraph id="HD349A2046A5141FE89C326F257161E1D" commented="no"><enum>(8)</enum><header>Restrictions relating to prohibited foreign entities</header>
<subparagraph id="HA70533073EF2426F9C2C5F4C8CC52736" commented="no"><enum>(A)</enum><header>In general</header><text>No credit shall be determined under subsection (a) for any taxable year beginning after the date of enactment of this paragraph if the taxpayer is a specified foreign entity (as defined in section 7701(a)(51)(B)).</text></subparagraph> <subparagraph id="H9D557BCDF0444AAD9BE8A5A5960DA5BE" commented="no"><enum>(B)</enum><header>Other prohibited foreign entities</header><text>No credit shall be determined under subsection (a) for any taxable year beginning after the date which is 2 years after the date of enactment of this paragraph if the taxpayer is a foreign-influenced entity (as defined in section 7701(a)(51)(D), without regard to clause (i)(II) thereof).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H7FFA6579435A47C7B5C6131FF9386172" commented="no"><enum>(2)</enum><header>Effective date</header><text>The amendment made by this subsection shall apply to taxable years beginning after the date of enactment of this Act.</text></paragraph></subsection></section> <section commented="no" display-inline="no-display-inline" id="H34AD160D1FC244DCAA088F69D8528045"><enum>70522.</enum><header>Restrictions on carbon oxide sequestration credit</header> <subsection id="H0AD1DCA49180433E92897B0B397CF70D" commented="no"><enum>(a)</enum><header>Restrictions relating to prohibited foreign entities</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Q">Section 45Q(f)</external-xref> is amended by adding at the end the following new paragraph:</text>
<quoted-block id="HF0BB7128F2254B3EA2E5F1CEA61F681D" display-inline="no-display-inline" style="OLC">
<paragraph id="H1451D3E9D0AE44FDAECF00DEFD51904F" commented="no"><enum>(10)</enum><header>Restrictions relating to prohibited foreign entities</header><text>No credit shall be determined under subsection (a) for any taxable year beginning after the date of enactment of this paragraph if the taxpayer is—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HB8CEAC603A184EBE992E7E49C5AF2237"><enum>(A)</enum><text display-inline="yes-display-inline">a specified foreign entity (as defined in section 7701(a)(51)(B)), or </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE745B6155C7A43DDA487B5C09B798380"><enum>(B)</enum><text display-inline="yes-display-inline">a foreign-influenced entity (as defined in section 7701(a)(51)(D), determined without regard to clause (i)(II) thereof).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA46F5C9958B14621A5841AB57FED8C73"><enum>(b)</enum><header display-inline="yes-display-inline">Parity for different uses and utilizations of qualified carbon oxide</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/45Q">Section 45Q</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H6FB55E68811D48F484B5FB1AA7BC2EF1"><enum>(1)</enum><text>in subsection (a)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H0E148AF97D474EAC8806629CD1191387"><enum>(A)</enum><text>in paragraph (2)(B)(ii), by adding <quote>and</quote> at the end,</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H72701E4706074F30937A12F334603C2C"><enum>(B)</enum><text>in paragraph (3), by striking subparagraph (B) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HC8903F210EBD4BBF8D48E953F909B5B1"> <subparagraph commented="no" display-inline="no-display-inline" id="HBB58349DABFF42B8AE16A10CF8CF976A"><enum>(B)</enum> <clause commented="no" display-inline="yes-display-inline" id="H44C022A71C7F47389197B6B2742D0A60"><enum>(i)</enum><text>disposed of by the taxpayer in secure geological storage and not used by the taxpayer as described in clause (ii) or (iii),</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H7622862E125A41E6B9B98B11FC1E741E" indent="up1"><enum>(ii)</enum><text display-inline="yes-display-inline">used by the taxpayer as a tertiary injectant in a qualified enhanced oil or natural gas recovery project and disposed of by the taxpayer in secure geological storage, or</text></clause> <clause commented="no" display-inline="no-display-inline" indent="up1" id="HC24FA40994D6435DAAAF89EC580E1860"><enum>(iii)</enum><text display-inline="yes-display-inline">utilized by the taxpayer in a manner described in subsection (f)(5).</text></clause></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0CA4C22AB9EE4B65AC4C3ED8982A4699"><enum>(C)</enum><text>by striking paragraph (4), </text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HBF5773EC634547B980133A903A67A487"><enum>(2)</enum><text>in subsection (b)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H13D42B7CD5AC4367BB01B15A14A13FD6"><enum>(A)</enum><text>in paragraph (1)—</text> <clause commented="no" display-inline="no-display-inline" id="H858FAF4A11D0471F81653F66949F7859"><enum>(i)</enum><text>by striking subparagraph (A) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H87EC0B8788594A138118817C287E9CC4">
<subparagraph commented="no" display-inline="no-display-inline" id="H8442E61F47194287A7CDEC7E719EA00D"><enum>(A)</enum><header>In general</header><text>Except as provided in subparagraph (B) or (C), the applicable dollar amount shall be an amount equal to—</text> <clause commented="no" display-inline="no-display-inline" id="H21CF53FCCBDB4269B89BEC712B54A25E"><enum>(i)</enum><text display-inline="yes-display-inline">for any taxable year beginning in a calendar year after 2024 and before 2027, $17, and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H1D45820B11674F6D95EC4C8432DFF994"><enum>(ii)</enum><text display-inline="yes-display-inline">for any taxable year beginning in a calendar year after 2026, an amount equal to the product of $17 and the inflation adjustment factor for such calendar year determined under section 43(b)(3)(B) for such calendar year, determined by substituting <quote>2025</quote> for <quote>1990</quote>.</text></clause></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></clause> <clause id="H99C1419799304B238F567B56A21AB743" commented="no"><enum>(ii)</enum><text>in subparagraph (B), by striking <quote>shall be applied</quote> and all that follows through the period and inserting <quote>shall be applied by substituting <quote>$36</quote> for <quote>$17</quote> each place it appears.</quote>, </text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H14CB6268A3A04829A005ADD8624FABB5"><enum>(B)</enum><text>in paragraph (2)(B), by striking <quote>paragraphs (3)(A) and (4)(A)</quote> and inserting <quote>paragraph (3)(A)</quote>, and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H075C143146BF4B0F895DCF6635C2126C"><enum>(C)</enum><text>in paragraph (3), by striking <quote>the dollar amounts applicable under paragraph (3) or (4)</quote> and inserting <quote>the dollar amount applicable under paragraph (3)</quote>,</text></subparagraph></paragraph>
<paragraph id="H88EA044D30E2459D8A99BB298EE6D739" commented="no"><enum>(3)</enum><text>in subsection (f)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H529826D922574A1BAA81F8748304EAAA"><enum>(A)</enum><text display-inline="yes-display-inline">in paragraph (5)(B)(i), by striking <quote>(4)(B)(ii)</quote> and inserting <quote>(3)(B)(iii)</quote>, and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H414B8D1B9FDE4041863F4C4BD13C3D45"><enum>(B)</enum><text>in paragraph (9), by striking <quote>paragraphs (3) and (4) of subsection (a)</quote> and inserting <quote>subsection (a)(3)</quote>, and</text></subparagraph></paragraph> <paragraph id="H09D6B0B2086E434D89A6FF2EBDDAC50C" commented="no"><enum>(4)</enum><text>in subsection (h)(3)(A)(ii), by striking <quote>paragraph (3)(A) or (4)(A) of subsection (a)</quote> and inserting <quote>subsection (a)(3)(A)</quote>.</text></paragraph></subsection>
<subsection id="HA6E677A3F47E4FD58EFA0FB840D73DBE" commented="no"><enum>(c)</enum><header>Conforming amendment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6417">Section 6417(d)(3)(C)(i)(II)(bb)</external-xref> is amended by striking <quote>paragraph (3)(A) or (4)(A) of section 45Q(a)</quote> and inserting <quote>section 45Q(a)(3)(A)</quote>.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="HC529DD8C2F6C4DE282C868A469001814"><enum>(d)</enum><header>Effective dates</header> <paragraph commented="no" display-inline="no-display-inline" id="H86076B8AC25F480588958D139D0D2DD6"><enum>(1)</enum><header>Restrictions relating to prohibited foreign entities</header><text display-inline="yes-display-inline">The amendment made by subsection (a) shall apply to taxable years beginning after the date of enactment of this Act.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H78A801BB4A8D4441A607F6ACA8DEC486"><enum>(2)</enum><header>Parity for different uses and utilizations of qualified carbon oxide</header><text display-inline="yes-display-inline">The amendments made subsections (b) and (c) shall apply to facilities or equipment placed in service after the date of enactment of this Act.</text></paragraph></subsection></section> <section id="H16A0E94B27074CEDB978D66867F11868"><enum>70523.</enum><header>Intangible drilling and development costs taken into account for purposes of computing adjusted financial statement income</header> <subsection id="HA49DC515795043C2A5781CF36D588A38"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/56A">Section 56A(c)(13)</external-xref> is amended—</text>
<paragraph id="H3E4B6021BBC34ECE96A20F3202B77436"><enum>(1)</enum><text>by striking subparagraph (A) and inserting the following: </text> <quoted-block style="OLC" display-inline="no-display-inline" id="H6EE595ED0433476B8522D6FFD7A1306E"> <subparagraph id="H21FF3FEE584B473581BB07CEAD97BC2F"><enum>(A)</enum><text display-inline="yes-display-inline">reduced by—</text>
<clause id="HF37E6A9843394AEFAD627431C3D79F01"><enum>(i)</enum><text display-inline="yes-display-inline">depreciation deductions allowed under section 167 with respect to property to which section 168 applies to the extent of the amount allowed as deductions in computing taxable income for the year, and</text></clause> <clause id="H887F143555B64E2A9F8BF90CE2516344"><enum>(ii)</enum><text display-inline="yes-display-inline">any deduction allowed for expenses under section 263(c) (including any deduction for such expenses under section 59(e) or 291(b)(2)) with respect to property described therein to the extent of the amount allowed as deductions in computing taxable income for the year, and</text></clause></subparagraph><after-quoted-block>, and </after-quoted-block></quoted-block></paragraph>
<paragraph id="H044739DBC79948A8AEA1F085CA0B4CBA"><enum>(2)</enum><text>by striking subparagraph (B)(i) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H94662A22677840AA973EDE2B13E883F3"> <clause id="H495683F103D34291BC5A35A5601CAF4D"><enum>(i)</enum><text display-inline="yes-display-inline">to disregard any amount of—</text>
<subclause id="HCFE3D83BB46E4BA0AF7B928510AD6648"><enum>(I)</enum><text display-inline="yes-display-inline">depreciation expense that is taken into account on the taxpayer's applicable financial statement with respect to such property, and</text></subclause> <subclause id="H83FE11B2B2A44FC9A9EE6192491828EE"><enum>(II)</enum><text>depletion expense that is taken into account on the taxpayer’s applicable financial statement with respect to the intangible drilling and development costs of such property, and</text></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H5718A5DE6F234C578666A451516D0B9F"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025. </text></subsection></section> <section id="H9986F4D603CC476EB8599D2BC4670181"><enum>70524.</enum><header>Income from hydrogen storage, carbon capture, advanced nuclear, hydropower, and geothermal energy added to qualifying income of certain publicly traded partnerships</header> <subsection id="H8994D655267B4A7A9CC8B56D16CE3B93"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/7704">Section 7704(d)(1)(E)</external-xref> is amended—</text>
<paragraph id="HC6D50DF352964F7EBC19B2651BFE7822"><enum>(1)</enum><text>by striking <quote>income and gains derived from the exploration</quote> and inserting the following: </text> <quoted-block style="OLC" display-inline="yes-display-inline" id="H6F4979B788484D8AB0C8EFE2F2823E17"><text>income and gains derived from—</text>
<clause id="H9DDBD6087A744DF792594491E80648DD"><enum>(i)</enum><text>the exploration</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H2A76BBC745434E3EBC203E5758A5E091"><enum>(2)</enum><text>by inserting <quote>or</quote> before <quote>industrial source</quote>, and</text></paragraph>
<paragraph id="H59EFA5FC9A7B4B80B5EB3173D0946812"><enum>(3)</enum><text>by striking <quote>or the transportation or storage</quote> and all that follows and inserting the following:</text> <quoted-block id="HE98E885EC15D498C865D734B101DF4DC" display-inline="no-display-inline" style="OLC"> <clause id="H71CAC60D3D0E4599A94E589B3534AF7D"><enum>(ii)</enum><text>the transportation or storage of—</text>
<subclause id="H0C97D71875B24A59BD9995345D0693B3"><enum>(I)</enum><text>any fuel described in subsection (b), (c), (d), (e), or (k) of section 6426, or any alcohol fuel defined in section 6426(b)(4)(A) or any biodiesel fuel as defined in section 40A(d)(1) or sustainable aviation fuel as defined in section 40B(d)(1), or</text></subclause> <subclause id="H2D21854E9A3549E4A401E5967CF31405"><enum>(II)</enum><text>liquified hydrogen or compressed hydrogen,</text></subclause></clause>
<clause id="HBE104A51637F4FC587CBEAF4F9DCD9F4"><enum>(iii)</enum><text>in the case of a qualified facility (as defined in section 45Q(d), without regard to any date by which construction of the facility or equipment is required to begin) not less than 50 percent of the total carbon oxide production of which is qualified carbon oxide (as defined in section 45Q(c))—</text> <subclause id="HF6178DF591A5426DB81E9CAB5AB7DC26"><enum>(I)</enum><text>the generation, availability for such generation, or storage of electric power at such facility, or</text></subclause>
<subclause id="H0E4A1818B14A484389E0A8DDD5AD6D22"><enum>(II)</enum><text>the capture of carbon dioxide by such facility,</text></subclause></clause> <clause commented="no" display-inline="no-display-inline" id="HB53A84F4F79D4AB7BFF9C2C50E0F62E9"><enum>(iv)</enum><text display-inline="yes-display-inline">the production of electricity from any advanced nuclear facility (as defined in section 45J(d)(2)),</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H2029E0C46BE3403BB86098452A743472"><enum>(v)</enum><text display-inline="yes-display-inline">the production of electricity or thermal energy exclusively using a qualified energy resource described in subparagraph (D) or (H) of section 45(c)(1), or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H089F24592A1A438CAA26C4DE7D223965"><enum>(vi)</enum><text display-inline="yes-display-inline">the operation of energy property described in clause (iii) or (vii) of section 48(a)(3)(A) (determined without regard to any requirement under such section with respect to the date on which construction of property begins).</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H223028C91EEF499B866163277F827AD0"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section section-type="subsequent-section" id="HC1F97789CDD0448A8E444D51279B6906"><enum>70525.</enum><header>Allow for payments to certain individuals who dye fuel</header> <subsection id="HE773B8E33A3143ADBF941763501A7F98"><enum>(a)</enum><header>In general</header><text>Subchapter B of chapter 65, as amended by the preceding provisions of this Act, is amended by adding at the end the following new section:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB01AFBC94A6C43A5AF19EF2EE946D700">
<section id="HC10103E74F3A4641819B1D4E6AC13084"><enum>6435.</enum><header>Dyed fuel</header>
<subsection id="H2CE28C417C3740EB87A580491E9DC352"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">If a person establishes to the satisfaction of the Secretary that such person meets the requirements of subsection (b) with respect to diesel fuel or kerosene, then the Secretary shall pay to such person an amount (without interest) equal to the tax described in subsection (b)(2)(A) with respect to such diesel fuel or kerosene.</text></subsection> <subsection id="H57FD1B22B9984530A96E4008953027F1"><enum>(b)</enum><header>Requirements</header> <paragraph id="H364C26D2FFE94552BB0A35D3DFD38E43"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">A person meets the requirements of this subsection with respect to diesel fuel or kerosene if such person removes from a terminal eligible indelibly dyed diesel fuel or kerosene.</text></paragraph>
<paragraph id="H9508481A822A4C6F9905235C83C690D4"><enum>(2)</enum><header>Eligible indelibly dyed diesel fuel or kerosene defined</header><text display-inline="yes-display-inline">The term <term>eligible indelibly dyed diesel fuel or kerosene</term> means diesel fuel or kerosene—</text> <subparagraph id="H83D585AE554D4FAE85BB984B40BDD2DB"><enum>(A)</enum><text>with respect to which a tax under section 4081 was previously paid (and not credited or refunded), and </text></subparagraph>
<subparagraph id="H487A82B39F934C79837DC5F2CCB1CBBC"><enum>(B)</enum><text>which is exempt from taxation under section 4082(a).</text></subparagraph></paragraph></subsection> <subsection id="H2BF670D5530446C1A171B34B2EA70BAB"><enum>(c)</enum><header>Cross reference</header><text display-inline="yes-display-inline">For civil penalty for excessive claims under this section, see section 6675.</text></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HA8596A0992F8498984419A8C02E973AE"><enum>(b)</enum><header>Conforming amendments</header>
<paragraph id="HCC4F576565624BC3AF39D78A9A7804E3"><enum>(1)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/6206">Section 6206</external-xref> is amended—</text> <subparagraph id="HE002FF41FB4443059F3668824CF0C8C6"><enum>(A)</enum><text>by striking <quote>or 6427</quote> each place it appears and inserting <quote>6427, or 6435</quote>, and</text></subparagraph>
<subparagraph id="HCA307F6234C84538920DCA71F76C7666"><enum>(B)</enum><text>by striking <quote>6420 and 6421</quote> and inserting <quote>6420, 6421, and 6435</quote>.</text></subparagraph></paragraph> <paragraph id="HCC63CBEF28A7492195809A7D95B045BE"><enum>(2)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/6430">Section 6430</external-xref> is amended—</text>
<subparagraph id="H4B366A97BF4841639F3DCCB7D9207B79"><enum>(A)</enum><text>by striking <quote>or</quote> at the end of paragraph (2), by striking the period at the end of paragraph (3) and inserting <quote>, or</quote>, and by adding at the end the following new paragraph: </text> <quoted-block style="OLC" display-inline="no-display-inline" id="H0FFF4946D08B4DFEB8E2EAB66C1EC3C1"> <paragraph id="H37B7896644FC4BCCA8AF313553BF0811"><enum>(4)</enum><text display-inline="yes-display-inline">which are removed as eligible indelibly dyed diesel fuel or kerosene under section 6435.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="H531DF387E6C24F07AB668F315676DEA2"><enum>(3)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/6675">Section 6675</external-xref> is amended—</text> <subparagraph id="H2646BE0785A64223BC63133B3E9EDDB6"><enum>(A)</enum><text display-inline="yes-display-inline">in subsection (a), by striking <quote>or 6427 (relating to fuels not used for taxable purposes)</quote> and inserting <quote>6427 (relating to fuels not used for taxable purposes), or 6435 (relating to eligible indelibly dyed fuel)</quote>, and</text></subparagraph>
<subparagraph id="H7408B14FC0F54BA0A11944F42A07D128"><enum>(B)</enum><text display-inline="yes-display-inline">in subsection (b)(1), by striking <quote>6421, or 6427,</quote> and inserting <quote>6421, 6427, or 6435,</quote>.</text></subparagraph></paragraph> <paragraph id="H1869C77FCBD54DB5B5E3A208B8D7F124"><enum>(4)</enum><text display-inline="yes-display-inline">The table of sections for subchapter B of chapter 65, as amended by the preceding provisions of this Act, is amended by adding at the end the following new item: </text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H5269F033265E402C8F2D0BC9B2D9632A">
<toc regeneration="no-regeneration">
<toc-entry level="section">Sec. 6435. Dyed fuel.</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="HB8CFCD50A95F4732AAA2B6A0933D8770" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to eligible indelibly dyed diesel fuel or kerosene removed on or after the date that is 180 days after the date of the enactment of this section.</text></subsection></section></subchapter> <subchapter id="H6BCC948F9E374F9D8306D108F5D54DAF" style="OLC"><enum>C</enum><header>Other reforms</header> <section id="HE668B518BC504862B8F66BDCFC45F32B"><enum>70531.</enum><header>Modifications to de minimis entry privilege for commercial shipments</header> <subsection id="H96E4849DA3EC49D7AC5CB054D314032B"><enum>(a)</enum><header>Civil penalty</header> <paragraph id="H2D70AEA664F042E09B42DF7BF03CC26D"><enum>(1)</enum><header>Additional penalty imposed</header><text>Section 321 of the Tariff Act of 1930 (<external-xref legal-doc="usc" parsable-cite="usc/19/1321">19 U.S.C. 1321</external-xref>) is amended by adding at the end the following new subsection:</text>
<quoted-block id="HA81187410EBA476E9B702E9210BBD78E">
<subsection id="H95C83E2250EB43CD81777FEA08EB87C9" commented="no" display-inline="no-display-inline"><enum>(c)</enum><text display-inline="yes-display-inline">Any person who enters, introduces, facilitates, or attempts to introduce an article into the United States using the privilege of this section, the importation of which violates any other provision of United States customs law, shall be assessed, in addition to any other penalty permitted by law, a civil penalty of up to $5,000 for the first violation and up to $10,000 for each subsequent violation.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph> <paragraph id="H9CB360FCB1534C07A0D6ECA65BAD575C"><enum>(2)</enum><header>Effective date</header><text>The amendment made by paragraph (1) shall take effect 30 days after the date of the enactment of this Act.</text></paragraph></subsection>
<subsection id="H98F24492B324496AAB0FB055835799BA"><enum>(b)</enum><header>Repeal of commercial shipment exception</header>
<paragraph id="HF0C7DFEAE63A40B4AF4296492BBBB550"><enum>(1)</enum><header>Repeal</header><text>Section 321(a)(2) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/19/1321">19 U.S.C. 1321(a)(2)</external-xref>) is amended by striking <quote>of this Act, or</quote> and all that follows through <quote>subdivision (2); and</quote> and inserting <quote>of this Act; and</quote>.</text></paragraph> <paragraph id="HC39CE42BDBA84C9EB5957215CF1BDC2D"><enum>(2)</enum><header>Conforming repeal</header><text>Subsection (c) of such <external-xref legal-doc="usc" parsable-cite="usc/26/321">section 321</external-xref>, as added by subsection (a) of this section, is repealed.</text></paragraph>
<paragraph id="H4A23267D8558445CA3D6FA9ECCBB64C8" commented="no" display-inline="no-display-inline"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall take effect on July 1, 2027.</text></paragraph></subsection></section></subchapter></chapter> <chapter id="H4D125D5D1F5F4D24BB6D3DA77FF8009D" style="OLC"><enum>6</enum><header>Enhancing deduction and income tax credit guardrails, and other reforms</header> <section id="HA1E94CBC08074FE19917DDE0C55E8122"><enum>70601.</enum><header>Modification and extension of limitation on excess business losses of noncorporate taxpayers</header> <subsection id="H202735E1323545D29C02B177973B097E"><enum>(a)</enum><header>Rule made permanent</header><text display-inline="yes-display-inline"><external-xref legal-doc="usc" parsable-cite="usc/26/461">Section 461(l)(1)</external-xref> is amended by striking <quote>and before January 1, 2029,</quote> each place it appears.</text></subsection>
<subsection id="HC1F880B1BF1E4E96B792DC67B809897C" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Adjustment of amounts for calculation of excess business loss</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/461">Section 461(l)(3)(C)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HF0A101F6762949B4983787A607145541"><enum>(1)</enum><text display-inline="yes-display-inline">in the matter preceding clause (i), by striking <quote>December 31, 2018</quote> and inserting <quote>December 31, 2025</quote>, and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H68A4ED9C636F4D34AC3F6475579DAA5D"><enum>(2)</enum><text>in clause (ii), by striking <quote>2017</quote> and inserting <quote>2024</quote>.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H5A157C2BCE2F446698BE60FC994142A2"><enum>(c)</enum><header display-inline="yes-display-inline">Effective dates</header> <paragraph commented="no" display-inline="no-display-inline" id="H91CE42ED48874504B2783156178C1479"><enum>(1)</enum><header>Rule made permanent</header><text display-inline="yes-display-inline">The amendments made by subsection (a) shall apply to taxable years beginning after December 31, 2026.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H1B46939C6F99427282539957E78223F5"><enum>(2)</enum><header>Adjustment of amounts for calculation of excess business loss</header><text>The amendments made by subsection (b) shall apply to taxable years beginning after December 31, 2025.</text></paragraph></subsection></section> <section id="HF07766DB7A04421F8B3E14A14DBAEF8C"><enum>70602.</enum><header>Treatment of payments from partnerships to partners for property or services</header> <subsection id="H3FA0081FC9854B28B27571672B024AAC"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/707">Section 707(a)(2)</external-xref> is amended by striking <quote>Under regulations prescribed</quote> and inserting <quote>Except as provided</quote>.</text></subsection>
<subsection id="H93D4753C590240AA9DA2EB5B6A57D64F"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to services performed, and property transferred, after the date of the enactment of this Act.</text></subsection> <subsection id="HC52548BB5B154B73BF5984D84003EA57"><enum>(c)</enum><header>Rule of construction</header><text>Nothing in this section, or the amendments made by this section, shall be construed to create any inference with respect to the proper treatment under <external-xref legal-doc="usc" parsable-cite="usc/26/707">section 707(a)</external-xref> of the Internal Revenue Code of 1986 with respect to payments from a partnership to a partner for services performed, or property transferred, on or before the date of the enactment of this Act.</text></subsection></section>
<section id="H536EEE8ACC2647D895E60830C3E23FA8"><enum>70603.</enum><header>Excessive employee remuneration from controlled group members and allocation of deduction</header>
<subsection id="H4F955A38A8D045298D3EF8EF21F60DA5"><enum>(a)</enum><header>Application of aggregation rules</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/162">Section 162(m)</external-xref> is amended by adding at the end the following new paragraph:</text> <quoted-block id="HB41300E2D8FA48548F55ADD47864A0E2" display-inline="no-display-inline" style="OLC"> <paragraph id="HFB4CAEFA1E9948138EC3006EAC1606D0"><enum>(7)</enum><header>Remuneration from controlled group members</header> <subparagraph id="HA7D8E804C7F24CB8A32EB4AF91261A73"><enum>(A)</enum><header>In general</header><text>In the case of any publicly held corporation which is a member of a controlled group—</text>
<clause id="H6693452688194D75A109E7FCAC882529"><enum>(i)</enum><text>paragraph (1) shall be applied by substituting <quote>specified covered employee</quote> for <quote>covered employee</quote>, and</text></clause> <clause id="H0A1E66214AF34D968769CA2481FEAA2A"><enum>(ii)</enum><text>if any person which is a member of such controlled group (other than such publicly held corporation) provides applicable employee remuneration to an individual who is a specified covered employee of such controlled group and the aggregate amount described in subparagraph (B)(ii) with respect to such specified covered employee exceeds $1,000,000—</text>
<subclause id="H5CB690FB7E4842A0BDDC4CB44E9177A7"><enum>(I)</enum><text>paragraph (1) shall apply to such person with respect to such remuneration, and</text></subclause> <subclause id="H6EF7D36F1BDA4454B24FFE6B11DFC85C"><enum>(II)</enum><text>paragraph (1) shall apply to such publicly held corporation and to each such related person by substituting <quote>the allocable limitation amount</quote> for <quote>$1,000,000</quote>.</text></subclause></clause></subparagraph>
<subparagraph id="HC74DD6C2A9C94288B98A90834FED863A"><enum>(B)</enum><header>Allocable limitation amount</header><text>For purposes of this paragraph, the term <term>allocable limitation amount</term> means, with respect to any member of the controlled group referred to in subparagraph (A) with respect to any specified covered employee of such controlled group, the amount which bears the same ratio to $1,000,000 as—</text> <clause id="HDE092B8E5CC84F60BA686C44EB0609CF"><enum>(i)</enum><text>the amount of applicable employee remuneration provided by such member with respect to such specified covered employee, bears to</text></clause>
<clause id="H0C440951FA6840309203B79A92DDD14E"><enum>(ii)</enum><text>the aggregate amount of applicable employee remuneration provided by all such members with respect to such specified covered employee.</text></clause></subparagraph> <subparagraph id="H1408DC63451E4E7987B37D7B7135FCB0"><enum>(C)</enum><header>Specified covered employee</header><text>For purposes of this paragraph, the term <term>specified covered employee</term> means, with respect to any controlled group—</text>
<clause id="HE86371AF725049249BECD772A46C65BB"><enum>(i)</enum><text>any employee described in subparagraph (A), (B), or (D) of paragraph (3), with respect to the publicly held corporation which is a member of such controlled group, and</text></clause> <clause id="H7C1EDE32859A40FAB1CCEB6F209A0B0B"><enum>(ii)</enum><text>any employee who would be described in subparagraph (C) of paragraph (3) if such subparagraph were applied by taking into account the employees of all members of the controlled group.</text></clause></subparagraph>
<subparagraph id="H3457CAFEB4B640E0B12A59E6712EF127"><enum>(D)</enum><header>Controlled group</header><text>For purposes of this paragraph, the term <term>controlled group</term> means any group treated as a single employer under subsection (b), (c), (m), or (o) of section 414.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HA5E873312C0748E29F3E76B175129F00"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section>
<section id="HDA29F425664B4EC992FBA6EC18E2A804"><enum>70604.</enum><header>Excise tax on certain remittance transfers</header>
<subsection id="H08F75A74EBA24045AB8199C4B8BE4401"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/36">Chapter 36</external-xref> is amended by inserting after subchapter B the following new subchapter:</text> <quoted-block id="H7DE183B94CFE4BB8999713DA9AB137DF" display-inline="no-display-inline" style="OLC"> <subchapter id="H2553A0B88CE047319442DDA0EDF400DA"><enum>C</enum><header>Remittance transfers</header> <toc regeneration="no-regeneration"> <toc-entry level="section">Sec. 4475. Imposition of tax. </toc-entry></toc> <section id="HC76D9965019F4DBBAAFA6ED8A1A84ED8"><enum>4475.</enum><header>Imposition of tax</header> <subsection id="H5C219BED802A4E6E8FAAF6D55791DD28"><enum>(a)</enum><header>In general</header><text>There is hereby imposed on any remittance transfer a tax equal to 1 percent of the amount of such transfer.</text></subsection>
<subsection id="HEE1F2F77871E4B42B00E1B2FEBC2D5C8"><enum>(b)</enum><header>Payment of tax</header>
<paragraph id="HD9DC1DDFE602432692023DCB552C547F"><enum>(1)</enum><header>In general</header><text>The tax imposed by this section with respect to any remittance transfer shall be paid by the sender with respect to such transfer.</text></paragraph> <paragraph id="HF8095416FD63456A88BC97418E42F8BE"><enum>(2)</enum><header>Collection of tax</header><text>The remittance transfer provider with respect to any remittance transfer shall collect the amount of the tax imposed under subsection (a) with respect to such transfer from the sender and remit such tax quarterly to the Secretary at such time and in such manner as provided by the Secretary,</text></paragraph>
<paragraph id="HE274F4EB3E654ED8A7513894FD859B3E"><enum>(3)</enum><header>Secondary liability</header><text>Where any tax imposed by subsection (a) is not paid at the time the transfer is made, then to the extent that such tax is not collected, such tax shall be paid by the remittance transfer provider.</text></paragraph></subsection> <subsection id="H0C3214378CC341C4B348FA6BD743828B"><enum>(c)</enum><header>Tax limited to cash and similar instruments</header><text>The tax imposed under subsection (a) shall apply only to any remittance transfer for which the sender provides cash, a money order, a cashier's check, or any other similar physical instrument (as determined by the Secretary) to the remittance transfer provider.</text></subsection>
<subsection id="HF4CE546A80EA40A7A3D2123C9C2CBA17"><enum>(d)</enum><header>Nonapplication to certain noncash remittance transfers</header><text>Subsection (a) shall not apply to any remittance transfer for which the funds being transferred are—</text> <paragraph commented="no" display-inline="no-display-inline" id="HAC84EB86D3874FCCA743E1A355729BEB"><enum>(1)</enum><text display-inline="yes-display-inline">withdrawn from an account held in or by a financial institution—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H3C8FF7E8FC3840CEA8B0FB9802F06348"><enum>(A)</enum><text display-inline="yes-display-inline">which is described in subparagraphs (A) through (H) of section 5312(a)(2) of title 31, United States Code, and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H6781415EE0E1429B8C1426020A7C6502"><enum>(B)</enum><text display-inline="yes-display-inline">that is subject to the requirements under subchapter II of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/53">chapter 53</external-xref> of such title, or</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HAEA8C47FBDAC49E1A7ABD5EE5D797F97"><enum>(2)</enum><text display-inline="yes-display-inline">funded with a debit card or a credit card which is issued in the United States.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H89B9F41785B44F5D97EBCCF5F84D050A"><enum>(e)</enum><header display-inline="yes-display-inline">Definitions</header><text>For purposes of this section—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H60A2DB7B09DB4426B167105531EF01E5"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">The terms <term>remittance transfer</term>, <term>remittance transfer provider</term>, and <term>sender</term> shall each have the respective meanings given such terms by section 919(g) of the <act-name parsable-cite="EFTA">Electronic Fund Transfer Act</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/15/1693o-1">15 U.S.C. 1693o–1(g)</external-xref>).</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H96D9A7427CCE4F31B11735ACF9007AB4"><enum>(2)</enum><header>Credit card</header><text>The term <term>credit card</term> has the same meaning given such term under section 920(c)(3) of the Electronic Fund Transfer Act (<external-xref legal-doc="usc" parsable-cite="usc/15/1693o-2">15 U.S.C. 1693o–2(c)(3)</external-xref>).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H8640CA6268BF4DF7BBD9828240B67A9B"><enum>(3)</enum><header display-inline="yes-display-inline">Debit card</header><text>The term <term>debit card</term> has the same meaning given such term under section 920(c)(2) of the Electronic Fund Transfer Act (<external-xref legal-doc="usc" parsable-cite="usc/15/1693o-2">15 U.S.C. 1693o–2(c)(2)</external-xref>), without regard to subparagraph (B) of such section.</text></paragraph></subsection> <subsection id="HE6E75F4C2CD04AB7AF433163D207939A"><enum>(f)</enum><header>Application of anti-conduit rules</header><text>For purposes of section 7701(l), with respect to any multiple-party arrangements involving the sender, a remittance transfer shall be treated as a financing transaction.</text></subsection></section></subchapter><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H02CA2F193F664E988697F44BB59B6BBF"><enum>(b)</enum><header>Conforming amendment</header><text>The table of subchapters for <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/26/36">chapter 36</external-xref> is amended by inserting after the item relating to subchapter B the following new item:</text> <quoted-block id="HED513F0525F14F709CF11686AE824CC6" display-inline="no-display-inline" style="OLC"> <toc regeneration="no-regeneration"> <toc-entry level="subchapter">Subchapter C—Remittance transfers</toc-entry></toc><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H81D805D0A82C46F3896BCE74B1625621" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header display-inline="yes-display-inline">Effective date</header><text>The amendments made by this section shall apply to transfers made after December 31, 2025.</text></subsection></section>
<section id="H58B241BFAFD64CC3A07341BFB15F8196"><enum>70605.</enum><header>Enforcement provisions with respect to COVID-related employee retention credits</header>
<subsection id="HFEFAF74CA4E6448EAE13BDE47A57CFE9"><enum>(a)</enum><header>Assessable penalty for failure to comply with due diligence requirements</header>
<paragraph id="H3121C7505D014F2A933E96A283A813D7"><enum>(1)</enum><header>In general</header><text>Any COVID–ERTC promoter which provides aid, assistance, or advice with respect to any COVID–ERTC document and which fails to comply with due diligence requirements imposed by the Secretary with respect to determining eligibility for, or the amount of, any credit or advance payment of a credit under <external-xref legal-doc="usc" parsable-cite="usc/26/3134">section 3134</external-xref> of the Internal Revenue Code of 1986, shall pay a penalty of $1,000 for each such failure.</text></paragraph> <paragraph id="HBCC6F9CE492A4FDAAB5FE248376CE2FB"><enum>(2)</enum><header>Due diligence requirements</header><text>The due diligence requirements referred to in paragraph (1) shall be similar to the due diligence requirements imposed under <external-xref legal-doc="usc" parsable-cite="usc/26/6695">section 6695(g)</external-xref> of the Internal Revenue Code of 1986.</text></paragraph>
<paragraph id="H10BE78EE0AD043B28222B5086054A950"><enum>(3)</enum><header>Restriction to documents used in connection with returns or claims for refund</header><text>Paragraph (1) shall not apply with respect to any COVID–ERTC document unless such document constitutes, or relates to, a return or claim for refund.</text></paragraph> <paragraph id="HF5828232E05D45F49E9B336D384AF0C1"><enum>(4)</enum><header>Treatment as assessable penalty, etc</header><text>For purposes of the Internal Revenue Code of 1986, the penalty imposed under paragraph (1) shall be treated as a penalty which is imposed under section 6695(g) of such Code and assessed under section 6201 of such Code.</text></paragraph>
<paragraph id="H9827E7245F1A4DC98C93935F53A80C89"><enum>(5)</enum><header>Secretary</header><text>For purposes of this subsection, the term <term>Secretary</term> means the Secretary of the Treasury or the Secretary's delegate.</text></paragraph></subsection> <subsection id="H5A320E1FAE714975BC14D021A77F2FE0"><enum>(b)</enum><header>COVID–ERTC promoter</header><text>For purposes of this section—</text>
<paragraph id="HBBABECB8D2E941E18009E99905FB6260"><enum>(1)</enum><header>In general</header><text>The term <term>COVID–ERTC promoter</term> means, with respect to any COVID–ERTC document, any person which provides aid, assistance, or advice with respect to such document if—</text> <subparagraph id="HC997A62AC9214D1592D7206D36ABA988"><enum>(A)</enum><text>such person charges or receives a fee for such aid, assistance, or advice which is based on the amount of the refund or credit with respect to such document and, with respect to such person's taxable year in which such person provided such assistance or the preceding taxable year, the aggregate of the gross receipts of such person for aid, assistance, and advice with respect to all COVID-ERTC documents exceeds 20 percent of the gross receipts of such person for such taxable year, or</text></subparagraph>
<subparagraph id="H6CE96FD63EAB4E23AFABC3ACCC59723A"><enum>(B)</enum><text>with respect to such person's taxable year in which such person provided such assistance or the preceding taxable year—</text> <clause id="H13E98559682C43EF9A93D6A4C95F1AD1"><enum>(i)</enum><text>the aggregate of the gross receipts of such person for aid, assistance, and advice with respect to all COVID–ERTC documents exceeds 50 percent of the gross receipts of such person for such taxable year, or</text></clause>
<clause id="H232C568BAEE549F280199FA5A78754D6"><enum>(ii)</enum><text>both—</text> <subclause id="HF44F0082291C44DB94E0F5ACB2441638"><enum>(I)</enum><text>such aggregate gross receipts exceed 20 percent of the gross receipts of such person for such taxable year, and</text></subclause>
<subclause id="H31916910A99F4F72AC04F558C0C9A4FA"><enum>(II)</enum><text>the aggregate of the gross receipts of such person for aid, assistance, and advice with respect to all COVID–ERTC documents (determined after application of paragraph (3)) exceeds $500,000.</text></subclause></clause></subparagraph></paragraph> <paragraph id="HF0916F3E1CA2439A961AB783C4721118"><enum>(2)</enum><header>Exception for certified professional employer organizations</header><text>The term <term>COVID–ERTC promoter</term> shall not include a certified professional employer organization (as defined in <external-xref legal-doc="usc" parsable-cite="usc/26/7705">section 7705</external-xref> of the Internal Revenue Code of 1986).</text></paragraph>
<paragraph id="H6B295B2FCEEA41919B5E24D647FAA151"><enum>(3)</enum><header>Aggregation rule</header><text>For purposes of paragraph (1), all persons treated as a single employer under subsection (a) or (b) of <external-xref legal-doc="usc" parsable-cite="usc/26/52">section 52</external-xref> of the Internal Revenue Code of 1986, or subsection (m) or (o) of section 414 of such Code, shall be treated as 1 person.</text></paragraph> <paragraph id="H595DC1113444463FA5EA724284169D3B"><enum>(4)</enum><header>Short taxable years</header><text>In the case of any taxable year of less than 12 months, a person shall be treated as a COVID-ERTC promoter if such person is described in paragraph (1) either with respect to such taxable year or by treating any reference to such taxable year as a reference to the calendar year in which such taxable year begins.</text></paragraph></subsection>
<subsection id="H881608DFE3234FCD974416D2BBCDD32E"><enum>(c)</enum><header>COVID–ERTC document</header><text>For purposes of this section, the term <term>COVID–ERTC document</term> means any return, affidavit, claim, or other document related to any credit or advance payment of a credit under <external-xref legal-doc="usc" parsable-cite="usc/26/3134">section 3134</external-xref> of the Internal Revenue Code of 1986, including any document related to eligibility for, or the calculation or determination of any amount directly related to, any such credit or advance payment.</text></subsection> <subsection id="H01E4FE0C3854414A95C7C0A3E482C8E2"><enum>(d)</enum><header>Limitation on credits and refunds</header><text>Notwithstanding <external-xref legal-doc="usc" parsable-cite="usc/26/6511">section 6511</external-xref> of the Internal Revenue Code of 1986, no credit under <external-xref legal-doc="usc" parsable-cite="usc/26/3134">section 3134</external-xref> of the Internal Revenue Code of 1986 shall be allowed, and no refund with respect to any such credit shall be made, after the date of the enactment of this Act, unless a claim for such credit or refund was filed by the taxpayer on or before January 31, 2024.</text></subsection>
<subsection id="HB140C243DDFA4B28A34AAEFA7C9EB310"><enum>(e)</enum><header>Extension of limitation on assessment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/3134">Section 3134(l)</external-xref> is amended to read as follows:</text> <quoted-block id="H6394DE48EC75433F91EC939AAC2B389E" display-inline="no-display-inline" style="OLC"> <subsection id="H925005999A314A23A6F0911D38341753"><enum>(l)</enum><header>Extension of limitation on assessment</header> <paragraph id="H94A5BAEDB8BF47E98216C761C314BF0C"><enum>(1)</enum><header>In general</header><text>Notwithstanding section 6501, the limitation on the time period for the assessment of any amount attributable to a credit claimed under this section shall not expire before the date that is 6 years after the latest of—</text>
<subparagraph id="H3BB975F3DD1C402C8C223A609930056B"><enum>(A)</enum><text>the date on which the original return which includes the calendar quarter with respect to which such credit is determined is filed,</text></subparagraph> <subparagraph id="H75209F09E43141D7BC6433437CDEB194"><enum>(B)</enum><text>the date on which such return is treated as filed under section 6501(b)(2), or</text></subparagraph>
<subparagraph id="H1D40F1889357404A93ADC6702085F736"><enum>(C)</enum><text>the date on which the claim for credit or refund with respect to such credit is made.</text></subparagraph></paragraph> <paragraph id="H4A58957D09994360BD33AA6989C67776"><enum>(2)</enum><header>Deduction for wages taken into account in determining improperly claimed credit</header> <subparagraph id="HA0CD641CD39E40E985DD5E6480A6A313"><enum>(A)</enum><header>In general</header><text>Notwithstanding section 6511, in the case of an assessment attributable to a credit claimed under this section, the limitation on the time period for credit or refund of any amount attributable to a deduction for improperly claimed ERTC wages shall not expire before the time period for such assessment expires under paragraph (1).</text></subparagraph>
<subparagraph id="H33CF746DE3A944FC9FB1883E31C2AF90"><enum>(B)</enum><header>Improperly claimed ERTC wages</header><text>For purposes of this paragraph, the term <term>improperly claimed ERTC wages</term> means, with respect to an assessment attributable to a credit claimed under this section, the wages with respect to which a deduction would not have been allowed if the portion of the credit to which such assessment relates had been properly claimed.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="HE17050AAC9F642A587A3F0FCAD17F59A"><enum>(f)</enum><header>Amendment to penalty for erroneous claim for refund or credit</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6676">Section 6676(a)</external-xref> is amended by striking <quote>income tax</quote> and inserting <quote>income or employment tax</quote>.</text></subsection>
<subsection id="HBA691E5B0FD54714915FA1ADD1733304"><enum>(g)</enum><header>Effective dates</header>
<paragraph id="HD6B7DA34E98440ECAD4E6E0EC55A9C84"><enum>(1)</enum><header>In general</header><text>The provisions of this section shall apply to aid, assistance, and advice provided after the date of the enactment of this Act.</text></paragraph> <paragraph id="H42007410F8804BAB96163EB6274C6557"><enum>(2)</enum><header>Limitation on credits and refunds</header><text>Subsection (d) shall apply to credits and refunds allowed or made after the date of the enactment of this Act.</text></paragraph>
<paragraph id="H01D25ADE7E764A4A89D5034AD842C5F6"><enum>(3)</enum><header>Extension of limitation on assessment</header><text>The amendment made by subsection (e) shall apply to assessments made after the date of the enactment of this Act.</text></paragraph> <paragraph id="HB39C480705E749EDA17EC14E6023F31E"><enum>(4)</enum><header>Amendment to penalty for erroneous claim for refund or credit</header><text>The amendment made by subsection (f) shall apply to claims for credit or refund after the date of the enactment of this Act.</text></paragraph></subsection>
<subsection id="H43E2A22A27A5459D98E76AD3D277C238"><enum>(h)</enum><header>Regulations</header><text>The Secretary (as defined in subsection (a)(5)) shall issue such regulations or other guidance as may be necessary or appropriate to carry out the purposes of this section (and the amendments made by this section).</text></subsection></section> <section id="H916A4A9C594B48EAB48EDBF632D981AE"><enum>70606.</enum><header>Social security number requirement for American Opportunity and Lifetime Learning credits</header> <subsection id="H1080832700144B9DBBF44A5E50B9E392"><enum>(a)</enum><header>Social security number of taxpayer required</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/25A">Section 25A(g)(1)</external-xref> is amended to read as follows:</text>
<quoted-block id="HC917396D78974A69ADC5FC2E2D9E5C97" display-inline="no-display-inline" style="OLC">
<paragraph id="H708625E326304D69A9DEA1003E727E6C"><enum>(1)</enum><header>Identification requirement</header>
<subparagraph id="HE607A2E004974EB8A5C99B07F3F76762"><enum>(A)</enum><header>Social security number requirement</header><text>No credit shall be allowed under subsection (a) to an individual unless the individual includes on the return of tax for the taxable year—</text> <clause id="HB1B1497C8E4944399E4E488FBCD2394A"><enum>(i)</enum><text>such individual's social security number, and</text></clause>
<clause id="H7CDD8C21E6EF44E498363AA1538267CC"><enum>(ii)</enum><text>in the case of a credit with respect to the qualified tuition and related expenses of an individual other than the taxpayer or the taxpayer's spouse, the name and social security number of such individual.</text></clause></subparagraph> <subparagraph id="HA88DA02B0EC541EF8F3DB99533A1DE7E"><enum>(B)</enum><header>Institution</header><text>No American Opportunity Tax Credit shall be allowed under this section unless the taxpayer includes the employer identification number of any institution to which the taxpayer paid qualified tuition and related expenses taken into account under this section on the return of tax for the taxable year.</text></subparagraph>
<subparagraph id="HDA66A7DDC4DF4C2095F0AC39AFEEC2F2"><enum>(C)</enum><header>Social security number defined</header><text>For purposes of this paragraph, the term <term>social security number</term> shall have the meaning given such term in section 24(h)(7).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H648822DB87B0454D99BF046A9E9F152B"><enum>(b)</enum><header>Omission treated as mathematical or clerical error</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/6213">Section 6213(g)(2)(J)</external-xref> is amended by striking <quote>TIN</quote> and inserting <quote>social security number or employer identification number</quote>.</text></subsection>
<subsection id="HF11C67449E214650AA93CAD6C431A702"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section> <section commented="no" display-inline="no-display-inline" id="HAD3BC6E95D0C4ACCBDCD5F4DBBF0924C"><enum>70607.</enum><header>Task force on the replacement of Direct File</header><text display-inline="no-display-inline">Out of any money in the Treasury not otherwise appropriated, there is hereby appropriated for the fiscal year ending September 30, 2026, $15,000,000, to remain available until September 30, 2026, for necessary expenses of the Department of the Treasury to deliver to Congress, within 90 days following the date of the enactment of this Act, a report on—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H699010CA8E8544598C63ED1D594D375D"><enum>(1)</enum><text display-inline="yes-display-inline">the cost of enhancing and establishing public-private partnerships which provide for free tax filing for up to 70 percent of all taxpayers calculated by adjusted gross income, and to replace any direct e-file programs run by the Internal Revenue Service; </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H9C734CEAC2C74AEDB5C5C7E634FEEAA6"><enum>(2)</enum><text display-inline="yes-display-inline">taxpayer opinions and preferences regarding a taxpayer-funded, government-run service or a free service provided by the private sector;</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H8451AFEF1E48467CBF245339A19DCAA8"><enum>(3)</enum><text display-inline="yes-display-inline">assessment of the feasibility of a new approach, how to make the options consistent and simple for taxpayers across all participating providers, and how to provide features to address taxpayer needs; and</text></paragraph> <paragraph id="H365AA58ABB0F4B10871DA297F95604AF" commented="no" display-inline="no-display-inline"><enum>(4)</enum><text display-inline="yes-display-inline">the cost (including options for differential coverage based on taxpayer adjusted gross income and return complexity) of developing and running a free direct e-file tax return system, including costs to build and administer each release.</text></paragraph></section></chapter></subtitle>
<subtitle id="H00A124B5E74D481E9C40B11626C9DADE" style="OLC"><enum>B</enum><header>Health</header>
<chapter style="OLC" commented="no" level-type="subsequent" id="H1F2AC7DAAC144B50AAB0E9E039D9BE3C"><enum>1</enum><header>Medicaid</header>
<subchapter style="OLC" commented="no" level-type="subsequent" id="H92BA8B5040914BF4B6F9A50225F8E976"><enum>A</enum><header>Reducing fraud and improving enrollment processes</header>
<section id="H8DEEC3F1F40E4CD390DAC8E9F3F90B6C"><enum>71101.</enum><header>Moratorium on implementation of rule relating to eligibility and enrollment in Medicare Savings Programs</header>
<subsection commented="no" display-inline="no-display-inline" id="HDCE6E7E5FDA94A8285704957AF3AC72B"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">The Secretary of Health and Human Services shall not, during the period beginning on the date of the enactment of this section and ending September 30, 2034, implement, administer, or enforce the amendments made by the provisions of the final rule published by the Centers for Medicare &amp; Medicaid Services on September 21, 2023, and titled <quote>Streamlining Medicaid; Medicare Savings Program Eligibility Determination and Enrollment</quote> (88 Fed. Reg. 65230) to the following sections of title 42, Code of Federal Regulations:</text> <paragraph id="HB1281369669C4648A3250EE470A075F2"><enum>(1)</enum><text>Section 406.21(c).</text></paragraph>
<paragraph id="HCE8D6997B5854B01ADD71E9E21FDC2BA"><enum>(2)</enum><text>Section 435.4.</text></paragraph> <paragraph id="H15487E3B744248DCAFBFE927D8DA0D58"><enum>(3)</enum><text>Section 435.601.</text></paragraph>
<paragraph id="HE50E09359ADF43E3801583A7F93536AF"><enum>(4)</enum><text>Section 435.911.</text></paragraph> <paragraph id="H0118D4FC9FB141779DBAFFFC5D16CE70"><enum>(5)</enum><text>Section 435.952.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H598825FE57D945BF99919E631E2EB252"><enum>(b)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of this section and section 71102, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $1,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section> <section id="H6CCF8B8A04E04A36847FD683A259E8DC" section-type="subsequent-section"><enum>71102.</enum><header>Moratorium on implementation of rule relating to eligibility and enrollment for Medicaid, CHIP, and the Basic Health Program</header><text display-inline="no-display-inline">The Secretary of Health and Human Services shall not, during the period beginning on the date of the enactment of this section and ending September 30, 2034, implement, administer, or enforce the amendments made by the provisions of the final rule published by the Centers for Medicare &amp; Medicaid Services on April 2, 2024, and titled <quote>Medicaid Program; Streamlining the Medicaid, Children's Health Insurance Program, and Basic Health Program Application, Eligibility Determination, Enrollment, and Renewal Processes</quote> (89 Fed. Reg. 22780) to the following sections of title 42, Code of Federal Regulations:</text>
<paragraph commented="no" display-inline="no-display-inline" id="H7D21A4884F4A482E92B6D806BB64376D"><enum>(1)</enum><header>Part 431</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H077E344340DA4CC1B6AE74AE55D63DA8"><enum>(A)</enum><text>Section 431.213(d).</text></subparagraph></paragraph> <paragraph id="H42237E815BFE4C90A3BA673ED5A0ED07"><enum>(2)</enum><header>Part 435</header> <subparagraph id="H71F74C30E9514D2087EC3E585BF8CE25"><enum>(A)</enum><text>Section 435.222.</text></subparagraph>
<subparagraph id="H832B46669A6A4A16B4FB89126EFD832D"><enum>(B)</enum><text>Section 435.407.</text></subparagraph> <subparagraph id="H97F1770CA51C4362A7342F5BC96622F4"><enum>(C)</enum><text>Section 435.907.</text></subparagraph>
<subparagraph id="HDBE4C453DE744C719C74B723C40666E9"><enum>(D)</enum><text>Section 435.911(c).</text></subparagraph> <subparagraph id="H36BD5BABE098435794D3D3767A35C301"><enum>(E)</enum><text>Section 435.912.</text></subparagraph>
<subparagraph id="H227480A09C3449659DC628114682795B"><enum>(F)</enum><text>Section 435.916.</text></subparagraph> <subparagraph id="H7C655D554F6B411287E964B71B34A247"><enum>(G)</enum><text>Section 435.919.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H4B4A827E4C334187A9A1A89EF051394C"><enum>(H)</enum><text>Section 435.1200(b)(3)(i)-(v).</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HECA656E702634947B790993D7C5800B3"><enum>(I)</enum><text>Section 435.1200(e )(1)(ii).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H79250E195F0843D2B9137692544CA717"><enum>(J)</enum><text>Section 435.1200(h)(1).</text></subparagraph></paragraph> <paragraph id="H7352215019274DF88BBA1292F84BB0AC"><enum>(3)</enum><header>Part 447</header><text>Section 447.56(a)(1)(v).</text></paragraph>
<paragraph id="H79BA1C0B1BC34A219585A104FE35B757"><enum>(4)</enum><header>Part 457</header>
<subparagraph id="H218ABEFEACEC48048D19B9725B66DC3F"><enum>(A)</enum><text>Section 457.344.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HFFCC5AF3EAD546DB82645A047A623B28"><enum>(B)</enum><text>Section 457.960.</text></subparagraph>
<subparagraph id="H1E0BF50F724843B2BE354F98D8490127"><enum>(C)</enum><text>Section 457.1140(d)(4).</text></subparagraph> <subparagraph id="H82BF3A5429C2459D8CE8DE8BA7FDC46F"><enum>(D)</enum><text>Section 457.1170.</text></subparagraph>
<subparagraph id="H59115532E4B94D6AB62D59E8A8D259B3"><enum>(E)</enum><text>Section 457.1180.</text></subparagraph></paragraph></section> <section id="HA52179FF1EA542DA88936E2159BEFC99" section-type="subsequent-section"><enum>71103.</enum><header>Reducing duplicate enrollment under the Medicaid and CHIP programs</header> <subsection id="H1F7ABBF243574F56885FF65CE98A5BB4"><enum>(a)</enum><header>Medicaid</header> <paragraph id="H4FE266775AFB4A558143D02CDF85AD60"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1902 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a</external-xref>) is amended—</text>
<subparagraph id="H29D75E6989BC4EFDAA7301B36F3938E0"><enum>(A)</enum><text>in subsection (a)—</text> <clause id="H92C72A7C36744FFD90024D4910C8DCEA"><enum>(i)</enum><text>in paragraph (86), by striking <quote>and</quote> at the end;</text></clause>
<clause id="H7FC53B2F724B4ED8819238A68648C063"><enum>(ii)</enum><text>in paragraph (87), by striking the period and inserting <quote>; and</quote>; and</text></clause> <clause id="H4A73910A19DC46759686010826F13E41"><enum>(iii)</enum><text>by inserting after paragraph (87) the following new paragraph:</text>
<quoted-block style="OLC" id="H0871DB4209824794A232127AC08E333D" display-inline="no-display-inline">
<paragraph id="HE0BAE9757ADE4768A18598F8286BB37F"><enum>(88)</enum><text display-inline="yes-display-inline">provide—</text> <subparagraph id="HECEF746EAAE942D1A09114F35257EEF1"><enum>(A)</enum><text display-inline="yes-display-inline">beginning not later than January 1, 2027, in the case of 1 of the 50 States and the District of Columbia, for a process to regularly obtain address information for individuals enrolled under such plan (or a waiver of such plan) in accordance with subsection (vv); and</text></subparagraph>
<subparagraph id="H110A23CCBB284B608C7D5A1C1ED7483A"><enum>(B)</enum><text>beginning not later than October 1, 2029—</text> <clause id="H8D634CB2B6D94DB8B17778E70B38490B"><enum>(i)</enum><text>for the State to submit to the system established by the Secretary under subsection (uu), with respect to an individual enrolled or seeking to enroll under such plan, not less frequently than once each month and during each determination or redetermination of the eligibility of such individual for medical assistance under such plan (or waiver of such plan)—</text>
<subclause id="H990F35F42DB24DB5988C86B9B4C43507"><enum>(I)</enum><text>the social security number of such individual, if such individual has a social security number and is required to provide such number to enroll under such plan (or waiver); and</text></subclause> <subclause id="H0C7AE05534094C259FCAA34CC99F1C7B"><enum>(II)</enum><text>such other information with respect to such individual as determined necessary by the Secretary for purposes of preventing individuals from simultaneously being enrolled under State plans (or waivers of such plans) of multiple States;</text></subclause></clause>
<clause id="H40F2D01C78E84EA7AE9F0070DBDF6812"><enum>(ii)</enum><text>for the use of such system to prevent such simultaneous enrollment; and</text></clause> <clause id="HC5D6130D28B84780BC0FB8D63AEA5A61"><enum>(iii)</enum><text display-inline="yes-display-inline">in the case that such system indicates that an individual enrolled or seeking to enroll under such plan (or waiver of such plan) is enrolled under a State plan (or waiver of such a plan) of another State, for the taking of appropriate action (as determined by the Secretary) to identify whether such an individual resides in the State and disenroll an individual from the State plan of such State if such individual does not reside in such State (unless such individual meets such an exception as the Secretary may specify).</text></clause></subparagraph></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></clause></subparagraph>
<subparagraph id="H7D06E840F81642728077A429B81D4C50"><enum>(B)</enum><text>by adding at the end the following new subsections:</text> <quoted-block style="OLC" id="HC548B6FF6B3E446AACBC093605BD3CA6" display-inline="no-display-inline"> <subsection id="H4F3055E7B7F54F369F040A997F87A278"><enum>(uu)</enum><header>Prevention of enrollment under multiple State plans</header> <paragraph id="H36E78966EB40404B91B8E0341205CFF2"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Not later than October 1, 2029, the Secretary shall establish a system to be utilized by the Secretary and States to prevent an individual from being simultaneously enrolled under the State plans (or waivers of such plans) of multiple States. Such system shall—</text>
<subparagraph id="H215880F962994AB2B4A5E2D941A40957"><enum>(A)</enum><text>provide for the receipt of information submitted by a State under subsection (a)(88)(B)(i); and</text></subparagraph> <subparagraph id="H240A63FCCA3D4A2FBAC1ED935D96708E"><enum>(B)</enum><text>not less than once each month, transmit information to a State (or allow the Secretary to transmit information to a State) regarding whether an individual enrolled or seeking to enroll under the State plan of such State (or waiver of such plan) is enrolled under the State plan (or waiver of such plan) of another State.</text></subparagraph></paragraph>
<paragraph id="H7FF47C0405A14E4EBA8BA37D30D14502"><enum>(2)</enum><header>Standards</header><text>The Secretary shall establish such standards as determined necessary by the Secretary to limit and protect information submitted under such system and ensure the privacy of such information, consistent with subsection (a)(7).</text></paragraph> <paragraph id="H76BFE964C8B343E88A803CB342319C58" commented="no"><enum>(3)</enum><header>Implementation funding</header><text>There are appropriated to the Administrator of the Centers for Medicare &amp; Medicaid Services, out of amounts in the Treasury not otherwise appropriated, in addition to amounts otherwise available—</text>
<subparagraph id="H4860126CACBA40D78E198D55A6F6DB19" commented="no"><enum>(A)</enum><text display-inline="yes-display-inline">for fiscal year 2026, $10,000,000 for purposes of establishing the system and standards required under this subsection, to remain available until expended; and</text></subparagraph> <subparagraph id="HE46C6A76F8E045E3A817FBDFFA067F65" commented="no"><enum>(B)</enum><text display-inline="yes-display-inline">for fiscal year 2029, $20,000,000 for purposes of maintaining such system, to remain available until expended.</text></subparagraph></paragraph></subsection>
<subsection id="H9CF84C72551B43B8B0D1A446C36447CC"><enum>(vv)</enum><header>Process to obtain enrollee address information</header>
<paragraph id="H6B08E24A8558487DB44CFF6780A11E8A"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">For purposes of subsection (a)(88)(A), a process to regularly obtain address information for individuals enrolled under a State plan (or a waiver of such plan) shall obtain address information from reliable data sources described in <internal-xref idref="HB306F21862C44B0CA7EF4830FE6F617C" legis-path="(vv)(2)">paragraph (2)</internal-xref> and take such actions as the Secretary shall specify with respect to any changes to such address based on such information.</text></paragraph> <paragraph id="HB306F21862C44B0CA7EF4830FE6F617C"><enum>(2)</enum><header>Reliable data sources described</header><text>For purposes of <internal-xref idref="H6B08E24A8558487DB44CFF6780A11E8A" legis-path="(vv)(1)">paragraph (1)</internal-xref>, the reliable data sources described in this paragraph are the following:</text>
<subparagraph id="H11BF6C87222F4EBBAEE325155B8A597D"><enum>(A)</enum><text display-inline="yes-display-inline">Mail returned to the State by the United States Postal Service with a forwarding address.</text></subparagraph> <subparagraph id="H11DA7B886BF546B6923A90930D97A2E9"><enum>(B)</enum><text display-inline="yes-display-inline">The National Change of Address Database maintained by the United States Postal Service.</text></subparagraph>
<subparagraph id="HFC1A5F2745554FB3B56DC1CE6815A65A"><enum>(C)</enum><text display-inline="yes-display-inline">A managed care entity (as defined in section 1932(a)(1)(B)) or prepaid inpatient health plan or prepaid ambulatory health plan (as such terms are defined in section 1903(m)(9)(D)) that has a contract under the State plan if the address information is provided to such entity or plan directly from, or verified by such entity or plan directly with, such individual.</text></subparagraph> <subparagraph id="H83A1948F3D354BCFA30602589B2CB58B"><enum>(D)</enum><text>Other data sources as identified by the State and approved by the Secretary.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HF4A376B90ABF4D5F8E0A240F9F2F11F4"><enum>(2)</enum><header>Conforming amendments</header>
<subparagraph id="HB74BBF87B95342CD9D5397956A44F7A8"><enum>(A)</enum><header>PARIS</header><text display-inline="yes-display-inline">Section 1903(r)(3) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396b">42 U.S.C. 1396b(r)(3)</external-xref>) is amended—</text> <clause id="HAED89D0C277C406DB490421E38C54FF9"><enum>(i)</enum><text>by striking <quote>In order</quote> and inserting </text>
<quoted-block style="OLC" id="H89173C014EB34B2EA5A162CF7F238D08" display-inline="yes-display-inline">
<subparagraph id="HAAEAC589BF8A461784A7ADC6C7EAF86E" display-inline="yes-display-inline"><enum>(A)</enum><text display-inline="yes-display-inline">In order</text></subparagraph><after-quoted-block>;</after-quoted-block></quoted-block></clause> <clause id="HD80B61629C4348B98D2E52F0EC48BE1E"><enum>(ii)</enum><text>by striking <quote>through the Public</quote> and inserting </text>
<quoted-block style="OLC" id="H77A23F9F81F2470780486CA800466BCC" display-inline="yes-display-inline"><text>through—</text> <clause id="H588E9E03B31C4B6DB3180012729864A1" indent="up1"><enum>(i)</enum><text display-inline="yes-display-inline">the Public</text></clause><after-quoted-block>;</after-quoted-block></quoted-block></clause>
<clause id="HD2B282B4E612493F800D88CD7B7C3FEE"><enum>(iii)</enum><text>by striking the period at the end and inserting </text> <quoted-block style="OLC" id="HBDD7D3005A1F4FEAB51E6D15517013DA" display-inline="yes-display-inline"><text>; and</text>
<clause id="H1E443FA2F30F47C9A0F52C682AA33025" indent="up1"><enum>(ii)</enum><text display-inline="yes-display-inline">beginning October 1, 2029, the system established by the Secretary under section 1902(uu).</text></clause><after-quoted-block>; and</after-quoted-block></quoted-block></clause> <clause id="H500874F55953484ABF8A11D6A03581A7"><enum>(iv)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" id="H1C914AA978084FB6A164CBC5F0CFD405" display-inline="no-display-inline">
<subparagraph id="HE17D24771B7140D9B1654596AF62C547" indent="up1"><enum>(B)</enum><text display-inline="yes-display-inline">Beginning October 1, 2029, the Secretary may determine that a State is not required to have in operation an eligibility determination system which provides for data matching (for purposes of address verification under section 1902(vv)) through the system described in subparagraph (A)(i) to meet the requirements of this paragraph.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></clause></subparagraph> <subparagraph id="H29669828A6FE4AA8807F272ECC1881B0"><enum>(B)</enum><header>Managed care</header><text display-inline="yes-display-inline">Section 1932 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396u-2">42 U.S.C. 1396u–2</external-xref>) is amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" id="H49737FA2FBCD47F7B64A71A594B0EA7D" display-inline="no-display-inline">
<subsection id="H485D9261171A42E39982056C679E22E9"><enum>(j)</enum><header>Transmission of address information</header><text display-inline="yes-display-inline">Beginning January 1, 2027, each contract under a State plan with a managed care entity (as defined in section 1932(a)(1)(B)) or with a prepaid inpatient health plan or prepaid ambulatory health plan (as such terms are defined in section 1903(m)(9)(D)), shall provide that such entity or plan shall promptly transmit to the State any address information for an individual enrolled with such entity or plan that is provided to such entity or plan directly from, or verified by such entity or plan directly with, such individual.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H9065F8FB95A143EDAFE49C6B9A488D23"><enum>(b)</enum><header>CHIP</header> <paragraph id="H5459CCDF4E1540A7A72D53384E8236A5"><enum>(1)</enum><header>In general</header><text>Section 2107(e)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1397gg">42 U.S.C. 1397gg(e)(1)</external-xref>) is amended—</text>
<subparagraph id="H01E621F5CF5549EC9B37D6336CB88616"><enum>(A)</enum><text display-inline="yes-display-inline">by redesignating subparagraphs (H) through (U) as subparagraphs (I) through (V), respectively; and</text></subparagraph> <subparagraph id="H7601260C757B4E5CAFECB144B27B5582"><enum>(B)</enum><text display-inline="yes-display-inline">by inserting after subparagraph (G) the following new subparagraph:</text>
<quoted-block style="OLC" id="H0BD188A766BC44DE91B89995B3ADE294" display-inline="no-display-inline">
<subparagraph id="H484C499F3943455387EFDE07A6E1AFBE"><enum>(H)</enum><text display-inline="yes-display-inline">Section 1902(a)(88) (relating to address information for enrollees and prevention of simultaneous enrollments).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="HC4AD55EEC3074DA5B1BFA04CB250B1DE" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header>Managed care</header><text>Section 2103(f)(3) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1397cc">42 U.S.C. 1397cc(f)(3)</external-xref>) is amended by striking <quote>and (e)</quote> and inserting <quote>(e), and (j)</quote>. </text></paragraph></subsection></section>
<section commented="no" display-inline="no-display-inline" id="H968D7B63B96D4B7F849C3F7D820864FE"><enum>71104.</enum><header>Ensuring deceased individuals do not remain enrolled</header><text display-inline="no-display-inline">Section 1902 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a</external-xref>), as amended by section 71103, is further amended—</text> <paragraph id="H3CEA26DD1A90412181B5EB0CAD6C7A1D"><enum>(1)</enum><text>in subsection (a)—</text>
<subparagraph id="H93674B5332954A50A00A82CD77AEB615"><enum>(A)</enum><text>in paragraph (87), by striking <quote>; and</quote> and inserting a semicolon;</text></subparagraph> <subparagraph id="H75BEA9ADD42D45948A889F540489655A"><enum>(B)</enum><text>in paragraph (88), by striking the period at the end and inserting <quote>; and</quote>; and</text></subparagraph>
<subparagraph id="H28034D8913A949C491BD8972010E4D20"><enum>(C)</enum><text display-inline="yes-display-inline">by inserting after paragraph (88) the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H2508285BF4594CBEBC980AFCEEE6754C"> <paragraph id="HFEC8260E2A8941AA8BED96F1CD37E6E0"><enum>(89)</enum><text display-inline="yes-display-inline">provide that the State shall comply with the eligibility verification requirements under subsection (ww), except that this paragraph shall apply only in the case of the 50 States and the District of Columbia.</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="H0114D7B732AD4747A8D68538D3674EF8"><enum>(2)</enum><text>by adding at the end the following new subsection:</text> <quoted-block id="H283BADA46D91464AA938C51462AA166E" display-inline="no-display-inline" style="OLC"> <subsection id="HE532F0E04DBB40249C17F3F4A0E4E5E8"><enum>(ww)</enum><header>Verification of certain eligibility criteria</header> <paragraph id="HCD5D4B3BB14947E4A0E13D32B9CA7AE1"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">For purposes of subsection (a)(89), the eligibility verification requirements, beginning January 1, 2027, are as follows:</text>
<subparagraph id="H5C2B87985FC448F9926F2AE296802A3F"><enum>(A)</enum><header>Quarterly screening to verify enrollee status</header><text display-inline="yes-display-inline">The State shall, not less frequently than quarterly, review the Death Master File (as such term is defined in section 203(d) of the Bipartisan Budget Act of 2013) or a successor system that provides such information needed to determine whether any individuals enrolled for medical assistance under the State plan (or waiver of such plan) are deceased.</text></subparagraph> <subparagraph id="HB209D730BDD9449A8241021814B58A99"><enum>(B)</enum><header>Disenrollment under State plan</header><text display-inline="yes-display-inline">If the State determines, based on information obtained from the Death Master File, that an individual enrolled for medical assistance under the State plan (or waiver of such plan) is deceased, the State shall—</text>
<clause id="H401463914CD047AC844756679456EB9B"><enum>(i)</enum><text>treat such information as factual information confirming the death of a beneficiary;</text></clause> <clause id="H7D2BD2003F654F549613B646348B21E9"><enum>(ii)</enum><text>disenroll such individual from the State plan (or waiver of such plan) in accordance with subsection (a)(3); and</text></clause>
<clause id="H8E359A35940449659C2BD39E718D1EB7"><enum>(iii)</enum><text>discontinue any payments for medical assistance under this title made on behalf of such individual (other than payments for any items or services furnished to such individual prior to the death of such individual).</text></clause></subparagraph> <subparagraph id="H91FB921D901A42C5B89BE16269CF42A5"><enum>(C)</enum><header>Reinstatement of coverage in the event of error</header><text display-inline="yes-display-inline">If a State determines that an individual was misidentified as deceased based on information obtained from the Death Master File and was erroneously disenrolled from medical assistance under the State plan (or waiver of such plan) based on such misidentification, the State shall immediately re-enroll such individual under the State plan (or waiver of such plan), retroactive to the date of such disenrollment.</text></subparagraph></paragraph>
<paragraph id="H713FB5BB431841E7A14C7FBB59FD30E8" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header>Rule of construction</header><text display-inline="yes-display-inline">Nothing under this subsection shall be construed to preclude the ability of a State to use other electronic data sources to timely identify potentially deceased beneficiaries, so long as the State is also in compliance with the requirements of this subsection (and all other requirements under this title relating to Medicaid eligibility determination and redetermination).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section> <section id="HCA190EE79A494B7B807E4370E04565D6" section-type="subsequent-section"><enum>71105.</enum><header>Ensuring deceased providers do not remain enrolled</header><text display-inline="no-display-inline">Section 1902(kk)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a(kk)(1)</external-xref>) is amended—</text>
<paragraph id="H44B9AB1660C54E77A865E21461DA9417"><enum>(1)</enum><text>by striking <quote>The State</quote> and inserting: </text> <quoted-block style="OLC" id="HB1706ACC13E14407BBCECAE26A8D3C98" display-inline="no-display-inline"> <subparagraph id="H48181FB255E34F0CBFCA4DF07AC56942"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">The State</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph id="H146F9AE098B841E0819A164C5BD087F7" commented="no" display-inline="no-display-inline"><enum>(2)</enum><text>by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" id="HDBC2E1F4C4B548D38178581D7B7CA74E" display-inline="no-display-inline"> <subparagraph id="HEA870FE36510417E9035410B46DF758A"><enum>(B)</enum><header>Provider screening against Death Master File</header><text display-inline="yes-display-inline">Beginning January 1, 2028, as part of the enrollment (or reenrollment or revalidation of enrollment) of a provider or supplier under this title, and not less frequently than quarterly during the period that such provider or supplier is so enrolled, the State conducts a check of the Death Master File (as such term is defined in section 203(d) of the Bipartisan Budget Act of 2013) to determine whether such provider or supplier is deceased.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section>
<section id="HE4C5D821764A4ED89B23CB28D9795390" section-type="subsequent-section"><enum>71106.</enum><header>Payment reduction related to certain erroneous excess payments under Medicaid</header>
<subsection id="HC670A843FC9F4238A6146494C352067E"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1903(u)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396b">42 U.S.C. 1396b(u)(1)</external-xref>) is amended—</text> <paragraph id="H937661ADD6DD4AEF85F4B0D80F0F6BE5"><enum>(1)</enum><text>in subparagraph (A)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H320636DB2653442A8D4CB2402575EC9B"><enum>(A)</enum><text display-inline="yes-display-inline">by inserting <quote>for audits conducted by the Secretary, or, at the option of the Secretary, audits conducted by the State</quote> after <quote>exceeds 0.03</quote>; and</text></subparagraph> <subparagraph id="H1327C1E313D64E5E9483CAF10A9AEA2D"><enum>(B)</enum><text>by inserting <quote>, to the extent practicable</quote> before the period at the end;</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9F4052C1574343A9B5EBBB963994AB01"><enum>(2)</enum><text display-inline="yes-display-inline">in subparagraph (B)—</text> <subparagraph id="H62624980F5B14CEBB6CBC24C04F18AFB"><enum>(A)</enum><text>by striking <quote>The Secretary</quote> and inserting </text>
<quoted-block style="OLC" id="H6DE1251112284459850A9E416357B625" display-inline="yes-display-inline">
<clause id="H1EEF7073D128493D95B7DD59A52715B4" display-inline="yes-display-inline"><enum>(i)</enum><text display-inline="yes-display-inline">Subject to clause (ii), the Secretary</text></clause><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="H578C033173624FFD9BD6E547177B4571"><enum>(B)</enum><text>by adding at the end the following new clause:</text>
<quoted-block style="OLC" id="H968B4234F48B4429A88368604E6B71EB" display-inline="no-display-inline">
<clause id="HDEE2DAC6C3174262A3D30C3A5339A462" indent="up2"><enum>(ii)</enum><text display-inline="yes-display-inline">The amount waived under clause (i) for a fiscal year may not exceed an amount equal to the erroneous excess payments for medical assistance described in subparagraph (D)(i)(II) made for such fiscal year that exceed the allowable error rate of 0.03.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H4CB87149B0144BD8A00E1A8F686C830E"><enum>(3)</enum><text>in subparagraph (C), by striking <quote>he</quote> in each place it appears and inserting <quote>the Secretary</quote> in each such place; and</text></paragraph>
<paragraph id="HB5D63D3AFA4D4FB197D36B748A75AB6C"><enum>(4)</enum><text>in subparagraph (D)(i)—</text> <subparagraph id="H800494C02307471D9555A99DCB201917"><enum>(A)</enum><text>in subclause (I), by striking <quote>and</quote> at the end;</text></subparagraph>
<subparagraph id="HDE92A8E3B7A44D3B8A813585DD3727ED"><enum>(B)</enum><text>in subclause (II), by striking the period at the end and inserting <quote>, or payments where insufficient information is available to confirm eligibility, and</quote>; and</text></subparagraph> <subparagraph id="H737E592431FF4C5B9BB4A352F478DDAC"><enum>(C)</enum><text>by adding at the end the following new subclause:</text>
<quoted-block style="OLC" id="H46E2E79608F441D9807A71DC49CAAA8E" display-inline="no-display-inline">
<subclause id="H95A5F06B71B44967A102B4D9BC1B7D00" indent="up3" commented="no"><enum>(III)</enum><text display-inline="yes-display-inline">payments (other than payments described in subclause (I)) for items and services furnished to an individual who is not eligible for medical assistance under the State plan (or a waiver of such plan) with respect to such items and services, or payments where insufficient information is available to confirm eligibility.</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="H28D27A71AA1745A1A09AB0CF48607EDA" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Effective date</header><text>The amendments made by subsection (a) shall apply beginning with respect to fiscal year 2030.</text></subsection></section>
<section id="H606041EC9E7F4E47BF27FA785F990CD4" section-type="subsequent-section" display-inline="no-display-inline"><enum>71107.</enum><header>Eligibility redeterminations</header>
<subsection display-inline="no-display-inline" commented="no" id="H17BE0BEBA4774BD2AC044EDEDBDC0FDC"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Section 1902(e)(14) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a(e)(14)</external-xref>) is amended by adding at the end the following new subparagraph:</text> <quoted-block id="H990B6730A2D742C7BC95B69662D1D86C" display-inline="no-display-inline" style="OLC"> <subparagraph id="H2EB8DD9335D24D5A8B16BADFE2D61E52"><enum>(L)</enum><header>Frequency of eligibility redeterminations for certain individuals</header> <clause commented="no" display-inline="no-display-inline" id="HFD6637C0F5224E02BEA2FA7F5DD88570"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">Subject to clause (ii), with respect to redeterminations of eligibility for medical assistance under a State plan (or waiver of such plan) scheduled on or after the first day of the first quarter that begins after December 31, 2026, a State shall make such a redetermination once every 6 months for the following individuals:</text>
<subclause id="H674E7D3A9DCE478593D331F9FE24910F"><enum>(I)</enum><text>Individuals enrolled under subsection (a)(10)(A)(i)(VIII).</text></subclause> <subclause id="H44422F1978A4463FA00A5337D5FDFC64" commented="no" display-inline="no-display-inline"><enum>(II)</enum><text display-inline="yes-display-inline">Individuals described in such subsection who are otherwise enrolled under a waiver of such plan that provides coverage that is equivalent to minimum essential coverage (as described in <external-xref legal-doc="usc" parsable-cite="usc/26/5000A">section 5000A(f)(1)(A)</external-xref> of the Internal Revenue Code of 1986 and determined in accordance with standards prescribed by the Secretary in regulations) to all individuals described in subsection (a)(10)(A)(i)(VIII).</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="HCAE581DC60574A9390E4B2970B78EFE2"><enum>(ii)</enum><header>Exemption</header><text display-inline="yes-display-inline">The requirements described in clause (i) shall not apply to any individual described in subsection (xx)(9)(A)(ii)(II).</text></clause> <clause commented="no" display-inline="no-display-inline" id="H5B3F9FB19302417AB1FC202CFE641FDE"><enum>(iii)</enum><header>State defined</header><text display-inline="yes-display-inline">For purposes of this subparagraph, the term <term>State</term> means 1 of the 50 States or the District of Columbia.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H2FF54D1ABEFF4EE59EEA17996BA035C8"><enum>(b)</enum><header>Guidance</header><text>Not later than 180 days after the date of enactment of this section, the Secretary of Health and Human Services, acting through the Administrator of the Centers for Medicare &amp; Medicaid Services, shall issue guidance relating to the implementation of the amendments made by this section.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="H0B26574C8AED4B1D88572CE1657E0315"><enum>(c)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $75,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section>
<section id="HAC580CB2660842A98524C26BC39A0B5D" section-type="subsequent-section"><enum>71108.</enum><header>Revising home equity limit for determining eligibility for long-term care services under the Medicaid program</header>
<subsection id="HAFFB5AB97A84416A8CA2844C876D3889"><enum>(a)</enum><header>Revising home equity limit</header><text>Section 1917(f)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396p">42 U.S.C. 1396p(f)(1)</external-xref>) is amended—</text> <paragraph id="H1D7250775A944D8293EE8C07BD26B67F"><enum>(1)</enum><text>in subparagraph (B)—</text>
<subparagraph id="H10606F5F8B2A4A0380B43FF39F2FEBFC"><enum>(A)</enum><text>by striking <quote>A State</quote> and inserting <quote>(i) A State</quote>; </text></subparagraph> <subparagraph id="H2D59538C96B344D798CB483F10AA8B90"><enum>(B)</enum><text>in clause (i), as inserted by subparagraph (A)—</text>
<clause id="H1FC72A4476F24CAE94008B86F751AA96"><enum>(i)</enum><text>by striking <quote><quote>$500,000</quote></quote> and inserting <quote>the amount specified in subparagraph (A)</quote>; and </text></clause> <clause id="H736A7B4BB6084DF99AE37BE1EEF5EABD"><enum>(ii)</enum><text>by inserting <quote>, in the case of an individual’s home that is located on a lot that is zoned for agricultural use,</quote> after <quote>apply subparagraph (A)</quote>; and</text></clause></subparagraph>
<subparagraph id="H84EB889031B9425B8BF2A1A546D345B9"><enum>(C)</enum><text>by adding at the end the following new clause:</text> <quoted-block style="OLC" id="HBF1F1E2CBC8246138B94EEBA60DD197E" display-inline="no-display-inline"> <clause id="HB6BBF12010B443E984E90B1AB752D144" indent="up2"><enum>(ii)</enum><text display-inline="yes-display-inline">A State may elect, without regard to the requirements of section 1902(a)(1) (relating to statewideness) and section 1902(a)(10)(B) (relating to comparability), to apply subparagraph (A), in the case of an individual’s home that is not described in clause (i), by substituting for the amount specified in such subparagraph, an amount that exceeds such amount, but does not exceed $1,000,000. </text></clause><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HB1364FFE24A24CC699667E9B4508C967"><enum>(2)</enum><text>in subparagraph (C)—</text> <subparagraph id="HB9A2F5F5F71644AA84BC594D38552C1B"><enum>(A)</enum><text>by inserting <quote>(other than the amount specified in subparagraph (B)(ii) (relating to certain non-agricultural homes))</quote> after <quote>specified in this paragraph</quote>; and</text></subparagraph>
<subparagraph id="HE94B0F476E964210B1C6430F17B358FF"><enum>(B)</enum><text>by adding at the end the following new sentence: <quote>In the case that application of the preceding sentence would result in a dollar amount (other than the amount specified in subparagraph (B)(i) (relating to certain agricultural homes)) exceeding $1,000,000, such amount shall be deemed to be equal to $1,000,000.</quote>. </text></subparagraph></paragraph></subsection> <subsection id="HE9B43645948347829A70DCF2C7126573"><enum>(b)</enum><header>Clarification</header><text>Section 1902 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a</external-xref>) is amended—</text>
<paragraph id="H80D48AF8E729464185445F88D15F6E82"><enum>(1)</enum><text>in subsection (r)(2), by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" id="H1EC99B4B66A74C82B769C96610386C33" display-inline="no-display-inline"> <subparagraph id="H855DFEE9E5FF483C8E67D0292122ECEB" indent="up2"><enum>(C)</enum><text display-inline="yes-display-inline">This paragraph shall not be construed as permitting a State to determine the eligibility of an individual for medical assistance with respect to nursing facility services or other long-term care services without application of the limit under section 1917(f)(1).</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph id="H0A4A6572B23B4E77A87C1B87FDD3E562"><enum>(2)</enum><text>in subsection (e)(14)(D)(iv)—</text> <subparagraph id="HBA4C203D7AA34B76AE24E32E6592A288"><enum>(A)</enum><text>by striking <quote>Subparagraphs</quote> and inserting </text>
<quoted-block style="OLC" id="H80AEF7EFD41940CC8BBAB060F4955A1F" display-inline="no-display-inline">
<subclause id="HA551CE75AEEC49DD93BC4AE73BD8541A"><enum>(I)</enum><header>In general</header><text display-inline="yes-display-inline">Subparagraphs</text></subclause><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph> <subparagraph id="HF12A37CF3E194A06A0627BAC9E51CDFB"><enum>(B)</enum><text>by adding at the end the following new subclause:</text>
<quoted-block style="OLC" id="H80A6E8A249914BEEB7DCC6042F73BA11" display-inline="no-display-inline">
<subclause id="H3DDDE3E0FEFE477BBF6CE1F27012D7E5"><enum>(II)</enum><header>Application of home equity interest limit</header><text display-inline="yes-display-inline">Section 1917(f) shall apply for purposes of determining the eligibility of an individual for medical assistance with respect to nursing facility services or other long-term care services.</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection> <subsection id="HF16E39B9F98E4C67A1EBF92977E7BFE3" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Effective date</header><text>The amendments made by subsection (a) shall apply beginning on January 1, 2028.</text></subsection></section>
<section id="H81AF8E812F034407AFF9A4E9B8533848"><enum>71109.</enum><header>Alien Medicaid eligibility</header>
<subsection commented="no" display-inline="no-display-inline" id="HCEC62AA2268345DEB0305C1D76EE56A5"><enum>(a)</enum><header display-inline="yes-display-inline">Medicaid</header><text display-inline="yes-display-inline">Section 1903(v) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396b">42 U.S.C. 1396b(v)</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HD4FE61EC0B304D7F858FCB05CBCA0AF1"><enum>(1)</enum><text display-inline="yes-display-inline">in paragraph (1), by striking <quote>and (4)</quote>and inserting <quote>, (4), and (5)</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H81367C78DE704553ACB9308C562F84D6"><enum>(2)</enum><text>by adding at the end the following new paragraph:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF8CBD4E8D27E48199AB8B9FCD57A5535"> <paragraph id="HD6D86B4AE5DF48A096908297692DE61A" indent="up1"><enum>(5)</enum><text>Notwithstanding the preceding paragraphs of this subsection, beginning on October 1, 2026, except as provided in paragraphs (2) and (4), in no event shall payment be made to a State under this section for medical assistance furnished to an individual unless such individual is—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HD8E5CEEE69824BD1ABF6C935870F92A6"><enum>(A)</enum><text>a resident of 1 of the 50 States, the District of Columbia, or a territory of the United States; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H4A93BA9E34214DD2A7D28DB2FB531FFB"><enum>(B)</enum><text>either—</text>
<clause commented="no" display-inline="no-display-inline" id="HB65EC1BFA89A4F8D814CC40E101188B9"><enum>(i)</enum><text>a citizen or national of the United States;</text></clause> <clause commented="no" display-inline="no-display-inline" id="H481189C32FBA49369E4D4C6C88471497"><enum>(ii)</enum><text>an alien lawfully admitted for permanent residence as an immigrant as defined by sections 101(a)(15) and 101(a)(20) of the <act-name parsable-cite="INA">Immigration and Nationality Act</act-name>, excluding, among others, alien visitors, tourists, diplomats, and students who enter the United States temporarily with no intention of abandoning their residence in a foreign country;</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HFD723DC1E31B4F2CB929BED23707A23C"><enum>(iii)</enum><text>an alien who has been granted the status of Cuban and Haitian entrant, as defined in section 501(e) of the Refugee Education Assistance Act of 1980 (<external-xref legal-doc="public-law" parsable-cite="pl/96/422">Public Law 96–422</external-xref>); or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H93A65B7F5B164649BA9518C81EFD7879"><enum>(iv)</enum><text>an individual who lawfully resides in the United States in accordance with a Compact of Free Association referred to in section 402(b)(2)(G) of the Personal Responsibility and Work Opportunity Reconciliation Act of 1996.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HC1F149850909487AA2B1B770D794CB52"><enum>(b)</enum><header>CHIP</header><text>Section 2107(e)(1) of the Social Security Act, as amended by section 71103(b), is further amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H6DCEE0AE60DB461E997B867DBC45FABB"><enum>(1)</enum><text display-inline="yes-display-inline">by redesignating subparagraphs (R) through (V) as paragraphs (S) through (W), respectively; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9B0C5982AB4444BA94DB2233C8A92B57"><enum>(2)</enum><text>by inserting after paragraph (Q) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HD4F7A3237A9240D98DF7D7ADCC16F035"> <subparagraph commented="no" display-inline="no-display-inline" id="H7B00BC264C8F486EB8AF653C885F5AB9"><enum>(R)</enum><text>Section 1903(v)(5) (relating to payments for medical assistance furnished to aliens), except in relation to payments for services provided under section 2105(a)(1)(D)(ii).</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H8F0DFF8D8CA946A4B01365159AE6AAAD"><enum>(c)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $15,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section> <section id="H01B260BD1A734C8384AF364D82D3132E"><enum>71110.</enum><header>Expansion FMAP for emergency Medicaid</header> <subsection commented="no" display-inline="no-display-inline" id="H050F12666B2B40318BF49AFC9987802E"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Section 1905 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396d">42 U.S.C. 1396d</external-xref>) is amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HA552F6A7EDD24AFCAFC9DEA062903DFF">
<subsection commented="no" display-inline="no-display-inline" id="H9FB7AB9C8BC74E728D697815C49908A6"><enum>(kk)</enum><header>FMAP for treatment of an emergency Medical condition</header><text>Notwithstanding subsection (y) and (z), beginning on October 1, 2026, the Federal medical assistance percentage for payments for care and services described in paragraph (2) of subsection 1903(v) furnished to an alien described in paragraph (1) of such subsection shall not exceed the Federal medical assistance percentage determined under subsection (b) for such State.</text></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection commented="no" display-inline="no-display-inline" id="H1501404A856D4183A4C1D6501ADE191C"><enum>(b)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $1,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section></subchapter>
<subchapter id="H7D8B025C07364BD8B6BD2B6E5C3D1861" style="OLC"><enum>B</enum><header>Preventing wasteful spending</header>
<section id="H72D966A2232743E5A94F076C68AE84D0"><enum>71111.</enum><header>Moratorium on implementation of rule relating to staffing standards for long-term care facilities under the Medicare and Medicaid programs</header><text display-inline="no-display-inline">The Secretary of Health and Human Services shall not, during the period beginning on the date of the enactment of this section and ending September 30, 2034, implement, administer, or enforce the amendments made by the provisions of the final rule published by the Centers for Medicare &amp; Medicaid Services on May 10, 2024, and titled <quote>Medicare and Medicaid Programs; Minimum Staffing Standards for Long-Term Care Facilities and Medicaid Institutional Payment Transparency Reporting</quote> (89 Fed. Reg. 40876) to the following sections of part 483 of title 42, Code of Federal Regulations:</text> <paragraph id="H7F27631AC8864ABFA997B72C9BC9AAAE"><enum>(1)</enum><text>Section 483.5.</text></paragraph>
<paragraph id="H0BE34688028F490A991FA0D537331D4C"><enum>(2)</enum><text>Section 483.35.</text></paragraph></section> <section id="H917F6C03CA464B319B70F26A163C0EE0" section-type="subsequent-section"><enum>71112.</enum><header>Reducing State Medicaid costs</header> <subsection id="HD7F49CCDD9744A4C9F10E968B0298EB9"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1902(a)(34) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a(a)(34)</external-xref>) is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H2553FCFBBD8D48818C1228DFE516F805">
<paragraph commented="no" display-inline="no-display-inline" id="HE18F24CA7F044890943FAC0DA62F8375"><enum>(34)</enum><text display-inline="yes-display-inline">provide that in the case of any individual who has been determined to be eligible for medical assistance under the plan and—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HABF0243D137C4AA8B98F4D8875E2E04A"><enum>(A)</enum><text display-inline="yes-display-inline">is enrolled under paragraph (10)(A)(i)(VIII), such assistance will be made available to the individual for care and services included under the plan and furnished in or after the month before the month in which the individual made application (or application was made on the individual's behalf in the case of a deceased individual) for such assistance if such individual was (or upon application would have been) eligible for such assistance at the time such care and services were furnished; or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H55BFC9A247D3475FB96FE86F1273D8C6"><enum>(B)</enum><text>is not described in subparagraph (A), such assistance will be made available to the individual for care and services included under the plan and furnished in or after the second month before the month in which the individual made application (or application was made on the individual's behalf in the case of a deceased individual) for such assistance if such individual was (or upon application would have been) eligible for such assistance at the time such care and services were furnished;</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HC7870E6A3EC949A3AB2EA6683E9D3219"><enum>(b)</enum><header>Definition of medical assistance</header><text display-inline="yes-display-inline">Section 1905(a) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396d">42 U.S.C. 1396d(a)</external-xref>) is amended by striking <quote>in or after the third month before the month in which the recipient makes application for assistance</quote> and inserting <quote>, with respect to an individual described in section 1902(a)(34)(A), in or after the month before the month in which the recipient makes application for assistance, and with respect to an individual described in section 1902(a)(34)(B), in or after the second month before the month in which the recipient makes application for assistance</quote>.</text></subsection>
<subsection id="H961706CDB4CE450EAD37A45CDA1206E3"><enum>(c)</enum><header>CHIP</header><text>Section 2102(b)(1)(B) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1397bb">42 U.S.C. 1397bb(b)(1)(B)</external-xref>) is amended—</text> <paragraph id="H2AA0CC0458554F91931A26C651EAEB34"><enum>(1)</enum><text>in clause (iv), by striking <quote>and</quote> at the end;</text></paragraph>
<paragraph id="HD94E93B3A7144BFC848CAF55069DA188"><enum>(2)</enum><text>in clause (v), by striking the period and inserting <quote>; and</quote>; and</text></paragraph> <paragraph id="HF55E911FC4D649C4984C7062780E3B55"><enum>(3)</enum><text>by adding at the end the following new clause:</text>
<quoted-block style="OLC" id="HD8D9F2928F4941E290F0AF99E44C66A5" display-inline="no-display-inline">
<clause id="HB10DC290DEAF42A0B0A7F283E1C87241"><enum>(vi)</enum><text display-inline="yes-display-inline">shall, in the case that the State elects to provide child health or pregnancy-related assistance to an individual for any period prior to the month in which the individual made application for such assistance (or application was made on behalf of the individual), provide that such assistance is not made available to such individual for items and services included under the State child health plan (or waiver of such plan) that are furnished before the second month preceding the month in which such individual made application (or application was made on behalf of such individual) for assistance.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="H307C9CEE4E6045A181249FCFFAF74981"><enum>(d)</enum><header>Effective date</header><text display-inline="yes-display-inline">The amendments made by this section shall apply to medical assistance, child health assistance, and pregnancy-related assistance with respect to individuals whose eligibility for such medical assistance, child health assistance, or pregnancy-related assistance is based on an application made on or after the first day of the first quarter that begins after December 31, 2026.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HD5E6ED4B41D14BFB82D78510111D31D3"><enum>(e)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $10,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section> <section id="H4C4222AD5DC6485391D3BF42FAE4785C" display-inline="no-display-inline" section-type="subsequent-section"><enum>71113.</enum><header>Federal payments to prohibited entities</header> <subsection commented="no" display-inline="no-display-inline" id="HDEFFE6B6222A4E929E0ACD10E910758E"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">No Federal funds that are considered direct spending and provided to carry out a State plan under title XIX of the Social Security Act or a waiver of such a plan shall be used to make payments to a prohibited entity for items and services furnished during the 1-year period beginning on the date of the enactment of this Act, including any payments made directly to the prohibited entity or under a contract or other arrangement between a State and a covered organization. </text></subsection>
<subsection id="H6D095D897A064A338A641A769AF24BC1"><enum>(b)</enum><header>Definitions</header><text>In this section:</text> <paragraph id="HE6B22E1952D94608A410E6ACAF5CEE71"><enum>(1)</enum><header>Prohibited entity</header><text>The term <term>prohibited entity</term> means an entity, including its affiliates, subsidiaries, successors, and clinics—</text>
<subparagraph id="H6FC510BDCECA4FCABC88EC2E428DE185"><enum>(A)</enum><text>that, as of the first day of the first quarter beginning after the date of enactment of this Act—</text> <clause id="H608232A6175D4CD4BC1E3FB45CABE32C"><enum>(i)</enum><text>is an organization described in <external-xref legal-doc="usc" parsable-cite="usc/26/501">section 501(c)(3)</external-xref> of the Internal Revenue Code of 1986 and exempt from tax under section 501(a) of such Code;</text></clause>
<clause id="H589B5CE0C627419280D75FB2BB5AC0FB"><enum>(ii)</enum><text>is an essential community provider described in section 156.235 of title 45, Code of Federal Regulations (as in effect on the date of enactment of this Act), that is primarily engaged in family planning services, reproductive health, and related medical care; and</text></clause> <clause id="H7F2D87B146174050A9A298AB579A3CD5"><enum>(iii)</enum><text>provides for abortions, other than an abortion—</text>
<subclause id="H1BFF52D791314DCD94FA987EF6767212"><enum>(I)</enum><text>if the pregnancy is the result of an act of rape or incest; or</text></subclause> <subclause id="H3276284F5C9C4A14A04361BCB7172771"><enum>(II)</enum><text>in the case where a woman suffers from a physical disorder, physical injury, or physical illness, including a life-endangering physical condition caused by or arising from the pregnancy itself, that would, as certified by a physician, place the woman in danger of death unless an abortion is performed; and</text></subclause></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H9ED4D1C14CC84620A3DF5FA932CE0754"><enum>(B)</enum><text display-inline="yes-display-inline">for which the total amount of Federal and State expenditures under the Medicaid program under title XIX of the Social Security Act for medical assistance furnished in fiscal year 2023 made directly, or by a covered organization, to the entity or to any affiliates, subsidiaries, successors, or clinics of the entity, or made to the entity or to any affiliates, subsidiaries, successors, or clinics of the entity as part of a nationwide health care provider network, exceeded $800,000.</text></subparagraph></paragraph> <paragraph id="HD88761F8ED344F4983817A5D46050378" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header>Direct spending</header><text>The term <term>direct spending</term> has the meaning given that term under section 250(c) of the Balanced Budget and Emergency Deficit Control Act of 1985 (<external-xref legal-doc="usc" parsable-cite="usc/2/900">2 U.S.C. 900(c)</external-xref>).</text></paragraph>
<paragraph id="HD46C0855B83542C4B5E1F07AC65444C4"><enum>(3)</enum><header>Covered organization</header><text display-inline="yes-display-inline">The term <quote>covered organization</quote> means a managed care entity (as defined in section 1932(a)(1)(B) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396u-2">42 U.S.C. 1396u–2(a)(1)(B)</external-xref>)) or a prepaid inpatient health plan or prepaid ambulatory health plan (as such terms are defined in section 1903(m)(9)(D) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396b">42 U.S.C. 1396b(m)(9)(D)</external-xref>)).</text></paragraph> <paragraph id="HB3D54CA27A1A43199BB46535DA7D0DD6" commented="no" display-inline="no-display-inline"><enum>(4)</enum><header>State</header><text display-inline="yes-display-inline">The term <quote>State</quote> has the meaning given such term in section 1101 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1301">42 U.S.C. 1301</external-xref>).</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H7E92C3D050394B7CA51BBA5B51CA775E"><enum>(c)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $1,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section></subchapter> <subchapter id="H33AAEB14AE494C8981C870486D3E3901" style="OLC"><enum>C</enum><header>Stopping abusive financing practices</header> <section id="H027BCCE030064EC1801736510E3BFF79" section-type="subsequent-section"><enum>71114.</enum><header>Sunsetting increased FMAP incentive</header><text display-inline="no-display-inline">Section 1905(ii)(3) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396d">42 U.S.C. 1396d(ii)(3)</external-xref>) is amended—</text>
<paragraph id="HD2439E0C48C04FDE8FE8FCE60D804E7A"><enum>(1)</enum><text>by striking <quote>which has not</quote> and inserting the following: </text> <quoted-block style="OLC" id="H94C50C9D1C3846ECB96FD171D89E22C3" display-inline="yes-display-inline"><text>which—</text>
<subparagraph id="HD95C82A823C2440EA841288A92B1A3D2"><enum>(A)</enum><text display-inline="yes-display-inline">has not</text></subparagraph><after-quoted-block>; </after-quoted-block></quoted-block></paragraph> <paragraph id="H07790A8094C94E159B2B4E0A0C33CCEA"><enum>(2)</enum><text>in subparagraph (A), as so inserted, by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph>
<paragraph id="H52643300F54D4B7F8442FDB4B4B6A9F3"><enum>(3)</enum><text>by adding at the end the following new subparagraph:</text> <quoted-block style="OLC" id="H157B169A52C6440CAD4764E7E77C6C55" display-inline="no-display-inline"> <subparagraph id="H36AE516BC3E34154A83C394837C26012"><enum>(B)</enum><text display-inline="yes-display-inline">begins to expend amounts for all such individuals prior to January 1, 2026.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section>
<section id="HC5CF4567712D420786321990FC6F05A3" section-type="subsequent-section"><enum>71115.</enum><header>Provider taxes</header>
<subsection id="HD1668A87651A42AEBD33453570189B7A"><enum>(a)</enum><header>Change in threshold for hold harmless provision of broad-based health care related taxes</header><text>Section 1903(w)(4) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396b">42 U.S.C. 1396b(w)(4)</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H613FD416BE0242AA9BA15137AB8AB252"><enum>(1)</enum><text display-inline="yes-display-inline">in subparagraph (C)(ii), by inserting <quote>, and for fiscal years beginning on or after October 1, 2026, the applicable percent determined under subparagraph (D) shall be substituted for <quote>6 percent</quote> each place it appears</quote> after <quote>each place it appears</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HBAD00B00430C4973AE151228A6710CCE"><enum>(2)</enum><text>by inserting after subparagraph (C)(ii), the following new subparagraph:</text> <quoted-block id="H2A14A1CF246F49CDA5040C1C2A0EED82" display-inline="no-display-inline" style="OLC" act-name=""> <subparagraph id="H20D36E644A5540F5BB7E376E7A0ED2C1" indent="up1"><enum>(D)</enum> <clause commented="no" display-inline="yes-display-inline" id="H7B64F6DB41074587B2D2EFF4CB2DB9C1"><enum>(i)</enum><text>For purposes of subparagraph (C)(ii), the applicable percent determined under this subparagraph is—</text>
<subclause indent="up1" commented="no" display-inline="no-display-inline" id="HDF81F1D064A847118AB152C689CB7CD8"><enum>(I)</enum><text>in the case of a non-expansion State or unit of local government in such State and a class of health care items or services described in section 433.56(a) of title 42, Code of Federal Regulations (as in effect on May 1, 2025)—</text> <item commented="no" display-inline="no-display-inline" id="HF7E6031DCDD345F09E8D67BB87A018EB"><enum>(aa)</enum><text display-inline="yes-display-inline">if, on the date of enactment of this subparagraph, the non-expansion State or unit of local government in such State has enacted a tax and imposes such tax on such class and the Secretary determines that the tax is within the hold harmless threshold as of that date, the applicable percent of net patient revenue attributable to such class that has been so determined; and</text></item>
<item id="H3B56C17EC18642CAB67D1CED226B2213"><enum>(bb)</enum><text>if, on the date of enactment of this subparagraph, the non-expansion State or unit of local government in such State has not enacted or does not impose a tax with respect to such class, 0 percent; and</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="H33CC9AADE0694967B28F38ADA6724BDA" indent="up1"><enum>(II)</enum><text display-inline="yes-display-inline">in the case of an expansion State or unit of local government in such State and a class of health care items or services described in section 433.56(a) of title 42, Code of Federal Regulations (as in effect on May 1, 2025), subject to clause (iv)—</text>
<item id="H475F82BE8791418DA85C5A6050B87FAA"><enum>(aa)</enum><text>if, on the date of enactment of this subparagraph, the expansion State or unit of local government in such State has enacted a tax and imposes such tax on such class and the Secretary determines that the tax is within the hold harmless threshold as of that date, the lower of—</text> <subitem commented="no" display-inline="no-display-inline" id="H1F72407D1868453E9DF4C7DE6B653D7B"><enum>(AA)</enum><text>the applicable percent of net patient revenue attributable to such class that has been so determined; and</text></subitem>
<subitem commented="no" display-inline="no-display-inline" id="H6121B8E1BB294DBD9871B6F08A8A0F03"><enum>(BB)</enum><text display-inline="yes-display-inline">the applicable percent specified in clause (ii) for the fiscal year; and</text></subitem></item> <item id="H31D4183C227D4FF3AC96CD3170361C8D"><enum>(bb)</enum><text>if, on the date of enactment of this subparagraph, the expansion State or unit of local government in such State has not enacted or does not impose a tax with respect to such class, 0 percent.</text></item></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H9682CC4CB5524664AD922E612D0E6668"><enum>(ii)</enum><text>For purposes of clause (i)(II)(aa)(BB), the applicable percent is—</text> <subclause commented="no" display-inline="no-display-inline" id="H1795ED55DE39419180474C5D289F2512"><enum>(I)</enum><text>for fiscal year 2028, 5.5 percent;</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HE5B85442C03542B4A0A59778599CDA7E"><enum>(II)</enum><text>for fiscal year 2029, 5 percent;</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H27D124A726864BD99F79E6AFB9B165F5"><enum>(III)</enum><text>for fiscal year 2030, 4.5 percent;</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H6EF9FF5ECCD04B9EAC5AA5141100D135"><enum>(IV)</enum><text>for fiscal year 2031, 4 percent; and</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HB4A97C987A814518AE30249E41A45DD3"><enum>(V)</enum><text>for fiscal year 2032 and each subsequent fiscal year, 3.5 percent.</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H0BE4245A202F4BDFA3B58473D164FD77"><enum>(iii)</enum><text>For purposes of clause (i):</text> <subclause commented="no" display-inline="no-display-inline" id="H6C67C761B200451BBE6763A113A8C37C"><enum>(I)</enum><header>Expansion State</header><text>The term <term>expansion State</term> means a State that, beginning on January 1, 2014, or on any date thereafter, elects to provide medical assistance to all individuals described in section 1902(a)(10)(A)(i)(VIII) under the State plan under this title or under a waiver of such plan.</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H5569636C1AFD4C2D82534554D7EF807B"><enum>(II)</enum><header display-inline="yes-display-inline">Non-expansion State</header><text display-inline="yes-display-inline">The term <term>non-expansion State</term> means a State that is not an expansion State.</text></subclause></clause> <clause id="HC3E6BE91A4DD4081B90C2CB16E1B27A9" commented="no" display-inline="no-display-inline"><enum>(iv)</enum><text display-inline="yes-display-inline">In the case of a tax of an expansion State or unit of local government in such State in effect on the date of enactment of this clause, that applies to a class of health care items or services that is described in paragraph (3) or (4) of section 433.56(a) of title 42, Code of Federal Regulations (as in effect on May 1, 2025), and for which, on such date of enactment, is within the hold harmless threshold (as determined by the Secretary), the applicable percent of net patient revenue attributable to such class that has been so determined shall apply for a fiscal year instead of the applicable percent specified in clause (ii) for the fiscal year.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H27E5FA086CCB4CF89AB296D727EF7A89"><enum>(b)</enum><header display-inline="yes-display-inline">Non-application to territories</header><text display-inline="yes-display-inline">The amendments made by this section shall only apply with respect to a State that is 1 of the 50 States or the District of Columbia.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="HC2BCE723D741464FB0CB0B140B9097B1"><enum>(c)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $20,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section>
<section id="H5095A31A390141E1AF3A2DAD32DD6532" section-type="subsequent-section"><enum>71116.</enum><header>State directed payments</header>
<subsection id="H6081C5C3FF704314AFF57BA411E26DDE"><enum>(a)</enum><header>In general</header><text>Subject to subsection (b), the Secretary of Health and Human Services (in this section referred to as the Secretary) shall revise section 438.6(c)(2)(iii) of title 42, Code of Federal Regulations (or a successor regulation) such that, with respect to a payment described in such section made for a service furnished during a rating period beginning on or after the date of the enactment of this Act, the total payment rate for such service is limited to—</text> <paragraph id="HC7FA119FA48845338BE885CBFF7EB408"><enum>(1)</enum><text>in the case of a State that provides coverage to all individuals described in section 1902(a)(10)(A)(i)(VIII) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a(a)(10)(A)(i)(VIII)</external-xref>) that is equivalent to minimum essential coverage (as described in <external-xref legal-doc="usc" parsable-cite="usc/26/5000A">section 5000A(f)(1)(A)</external-xref> of the Internal Revenue Code of 1986 and determined in accordance with standards prescribed by the Secretary in regulations) under the State plan (or waiver of such plan) of such State under title XIX of such Act, 100 percent of the specified total published Medicare payment rate (or, in the absence of a specified total published Medicare payment rate, the payment rate under a Medicaid State plan (or under a waiver of such plan)); or</text></paragraph>
<paragraph id="H68132C34E5FD46DEA1334425F00FCD72"><enum>(2)</enum><text display-inline="yes-display-inline">in the case of a State other than a State described in paragraph (1), 110 percent of the specified total published Medicare payment rate (or, in the absence of a specified total published Medicare payment rate, the payment rate under a Medicaid State plan (or under a waiver of such plan)).</text></paragraph></subsection> <subsection id="HDF8733C85AF248F388EEB66529058959"><enum>(b)</enum><header>Grandfathering certain payments</header><text>In the case of a payment described in section 438.6(c)(2)(iii) of title 42, Code of Federal Regulations (or a successor regulation) for which written prior approval (or a good faith effort to receive such approval, as determined by the Secretary) was made before May 1, 2025, or a payment described in such section for a rural hospital (as defined in subsection (d)(2)) for which written prior approval (or a good faith effort to receive such approval, as determined by the Secretary) was made by the date of enactment of this Act, for the rating period occurring within 180 days of the date of the enactment of this Act, or a payment so described for such rating period for which a completed preprint was submitted to the Secretary prior to the date of enactment of this Act, beginning with the rating period on or after January 1, 2028, the total amount of such payment shall be reduced by 10 percentage points each year until the total payment rate for such service is equal to the rate for such service specified in subsection (a).</text></subsection>
<subsection id="HE5D55700A09E4588B22AD16BF89FE95D" commented="no"><enum>(c)</enum><header>Treatment of expansion states</header><text>The revisions described in subsection (a) shall provide that, with respect to a State that begins providing the coverage described in paragraph (1) of such subsection on or after the date of the enactment of this Act, the limitation described in such paragraph shall apply to such State with respect to a payment described in section 438.6(c)(2)(iii) of title 42, Code of Federal Regulations (or a successor regulation) for a service furnished during a rating period beginning on or after the date of enactment of this Act.</text></subsection> <subsection id="HBEA8D8254C8D4E6FA9A9BB30161AF637"><enum>(d)</enum><header>Definitions</header><text display-inline="yes-display-inline">In this section:</text>
<paragraph id="H0FA8895A2CF44F0F8F20C1B2127F7710"><enum>(1)</enum><header>Rating period</header><text display-inline="yes-display-inline">The term <quote>rating period</quote> has the meaning given such term in section 438.2 of title 42, Code of Federal Regulations (or a successor regulation).</text></paragraph> <paragraph id="H853967811D0341A9BBAD7278E4F65755"><enum>(2)</enum><header>Rural hospital</header><text>The term <quote>rural hospital</quote> means the following:</text>
<subparagraph id="HB4B48C2C98234AA180146381EB0C9DE7"><enum>(A)</enum><text>A subsection (d) hospital (as defined in paragraph (1)(B) of section 1886(d) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(d)</external-xref>)) that—</text> <clause commented="no" display-inline="no-display-inline" id="H28455D3F532248ED87C4D9CDD20A39DE"><enum>(i)</enum><text display-inline="yes-display-inline">is located in a rural area (as defined in paragraph (2)(D) of such section); </text></clause>
<clause commented="no" display-inline="no-display-inline" id="HB42272FC99CE4B3F88E4380D89F8B993"><enum>(ii)</enum><text display-inline="yes-display-inline">is treated as being located in a rural area pursuant to paragraph (8)(E) of such section; or </text></clause> <clause commented="no" display-inline="no-display-inline" id="H5FBFCFB21723476C85468AFB25F4CB75"><enum>(iii)</enum><text display-inline="yes-display-inline">is located in a rural census tract of a metropolitan statistical area (as determined under the most recent modification of the Goldsmith Modification, originally published in the Federal Register on February 27, 1992 (57 Fed. Reg. 6725)).</text></clause></subparagraph>
<subparagraph id="HCE59402B78ED4216834F2661B7AE124E"><enum>(B)</enum><text>A critical access hospital (as defined in section 1861(mm)(1) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395x">42 U.S.C. 1395x(mm)(1)</external-xref>)).</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H469A0CCA86A648A08AC5D213366E217D"><enum>(C)</enum><text>A sole community hospital (as defined in section 1886(d)(5)(D)(iii) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(d)(5)(D)(iii)</external-xref>)).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HCB61C01C4F9041ED89418D3EB562E5C3"><enum>(D)</enum><text>A Medicare-dependent, small rural hospital (as defined in section 1886(d)(5)(G)(iv) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(d)(5)(G)(iv)</external-xref>)). </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H141EDCA002E14CDE8BFBC3738961EB39"><enum>(E)</enum><text>A low-volume hospital (as defined in section 1886(d)(12)(C) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395ww">42 U.S.C. 1395ww(d)(12)(C)</external-xref>)).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H99E320165DC64DC7B4E8DAEBFC4F42F1"><enum>(F)</enum><text display-inline="yes-display-inline">A rural emergency hospital (as defined in section 1861(kkk)(2) of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395x">42 U.S.C. 1395x(kkk)(2)</external-xref>)).</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H6851A087D44D4B6089749F3C3036FA8D"><enum>(3)</enum><header>State</header><text>The term <term>State</term> means 1 of the 50 States or the District of Columbia.</text></paragraph>
<paragraph id="HBAF440488AE74136B66521A9418E5747"><enum>(4)</enum><header>Total published medicare payment rate</header><text>The term <term>total published Medicare payment rate</term> has the meaning given to such term in section 438.6(a) of title 42, Code of Federal Regulations (or a successor regulation).</text></paragraph> <paragraph id="H9334788623AB48D59AA5F48A7931A73A"><enum>(5)</enum><header>Written prior approval</header><text display-inline="yes-display-inline">The term <quote>written prior approval</quote> has the meaning given to such term in section 438.6(c)(2)(i) of title 42, Code of Federal Regulations (or a successor regulation).</text></paragraph></subsection>
<subsection id="HC6803D86FB4C4A04AD9B3927CFBED342"><enum>(e)</enum><header>Funding</header><text>There are appropriated out of any monies in the Treasury not otherwise appropriated $7,000,000 for each of fiscal years 2026 through 2033 for purposes of carrying out this section, to remain available until expended.</text></subsection></section> <section id="HFC9712978086448A884AD4DA6242CFF0"><enum>71117.</enum><header>Requirements regarding waiver of uniform tax requirement for Medicaid provider tax</header> <subsection commented="no" display-inline="no-display-inline" id="H946D195148204135A731BDE8117729B1"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Section 1903(w) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396b">42 U.S.C. 1396b(w)</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H896B2C9E4844473CA7E37EFF871EF795"><enum>(1)</enum><text>in paragraph (3)(E), by inserting after clause (ii)(II) the following new clause:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF44C169E2F3346A6B4BCFA5C4292C5BE"> <clause commented="no" display-inline="no-display-inline" id="HDB84925810DC49BAB9F573C4A3D00F45" indent="up3"><enum>(iii)</enum><text>For purposes of clause (ii)(I), a tax is not considered to be generally redistributive if any of the following conditions apply:</text>
<subclause commented="no" display-inline="no-display-inline" id="H03B8A44D85AA40949002B8C098AAAEE8"><enum>(I)</enum><text>Within a permissible class, the tax rate imposed on any taxpayer or tax rate group (as defined in paragraph (7)(J)) explicitly defined by its relatively lower volume or percentage of Medicaid taxable units (as defined in paragraph (7)(H)) is lower than the tax rate imposed on any other taxpayer or tax rate group explicitly defined by its relatively higher volume or percentage of Medicaid taxable units.</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HEE667679F8A44D00AE18E0B4FCDDBDED"><enum>(II)</enum><text>Within a permissible class, the tax rate imposed on any taxpayer or tax rate group (as so defined) based upon its Medicaid taxable units (as so defined) is higher than the tax rate imposed on any taxpayer or tax rate group based upon its non-Medicaid taxable unit (as defined in paragraph (7)(I)).</text></subclause>
<subclause id="HD38362D5B66F48608C0D9DB6B705B431"><enum>(III)</enum><text>The tax excludes or imposes a lower tax rate on a taxpayer or tax rate group (as so defined) based on or defined by any description that results in the same effect as described in subclause (I) or (II) for a taxpayer or tax rate group. Characteristics that may indicate such type of exclusion include the use of terminology to establish a tax rate group—</text> <item id="H84E204309ADE408E861ADFBDD103BA7A"><enum>(aa)</enum><text>based on payments or expenditures made under the program under this title without mentioning the term <term>Medicaid</term> (or any similar term) to accomplish the same effect as described in subclause (I) or (II); or</text></item>
<item commented="no" display-inline="no-display-inline" id="HA149EE9707124B03975508A0CCD79871"><enum>(bb)</enum><text>that closely approximates a taxpayer or tax rate group under the program under this title, to the same effect as described in subclause (I) or (II).</text></item></subclause></clause><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H1F7BB46D64CF494995F477494610E500"><enum>(2)</enum><text>in paragraph (7), by adding at the end the following new subparagraphs:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HF511A0D9260D488AB07F9FA02F58FFCE">
<subparagraph commented="no" display-inline="no-display-inline" id="H38D5FD1A89AB49B1B8A826F3DEAB9E69" indent="up1"><enum>(H)</enum><text display-inline="yes-display-inline">The term <term>Medicaid taxable unit</term> means a unit that is being taxed within a health care related tax that is applicable to the program under this title. Such term includes a unit that is used as the basis for—</text> <clause commented="no" display-inline="no-display-inline" id="H507BE300DFF644A09B1F6742CBE72281"><enum>(i)</enum><text display-inline="yes-display-inline">payment under the program under this title (such as Medicaid bed days);</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HBD128F1E08234D78B5923FBEB928ED7E"><enum>(ii)</enum><text display-inline="yes-display-inline">Medicaid revenue;</text></clause> <clause commented="no" display-inline="no-display-inline" id="HF4400ED94B994D478D523B5FB326E862"><enum>(iii)</enum><text display-inline="yes-display-inline">costs associated with the program under this title (such as Medicaid charges, claims, or expenditures); and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H94059654E46E4F91AC99750788F30347"><enum>(iv)</enum><text display-inline="yes-display-inline">other units associated with the program under this title, as determined by the Secretary.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HCADD595F07A54FA6A8054198E164327D" indent="up1"><enum>(I)</enum><text>The term <term>non-Medicaid taxable unit</term> means a unit that is being taxed within a health care related tax that is not applicable to the program under this title. Such term includes a unit that is used as the basis for—</text>
<clause commented="no" display-inline="no-display-inline" id="H08032CDAE03C4AA6BF1C0A38D7B91F7B"><enum>(i)</enum><text display-inline="yes-display-inline">payment by non-Medicaid payers (such as non-Medicaid bed days);</text></clause> <clause commented="no" display-inline="no-display-inline" id="HA5ACC9EB52A84CCAAA09100779C9AE53"><enum>(ii)</enum><text display-inline="yes-display-inline">non-Medicaid revenue;</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H6261AA0436BA404A843D055D44E7D050"><enum>(iii)</enum><text display-inline="yes-display-inline">costs that are not associated with the program under this title (such as non-Medicaid charges, non-Medicaid claims, or non-Medicaid expenditures); and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HE1C21B132F2647419AA92CACAAEC8637"><enum>(iv)</enum><text display-inline="yes-display-inline">other units not associated with the program under this title, as determined by the Secretary.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" indent="up1" id="H5137386EA3604F4C9DD11528F9F5930D"><enum>(J)</enum><text display-inline="yes-display-inline">The term <term>tax rate group</term> means a group of entities contained within a permissible class of a health care related tax that are taxed at the same rate.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA10AED42DB914622A660F6BA65C2AA3B"><enum>(b)</enum><header>Non-application to territories</header><text>The amendments made by this section shall only apply with respect to a State that is 1 of the 50 States or the District of Columbia.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HFBCA54ACCF6E4D2DAE7F79F7BE4C6ED4"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall take effect upon the date of enactment of this Act, subject to any applicable transition period determined appropriate by the Secretary of Health and Human Services, not to exceed 3 fiscal years.</text></subsection></section> <section id="H3DFC92C358834F5B82DE8AB81465692A" section-type="subsequent-section"><enum>71118.</enum><header>Requiring budget neutrality for Medicaid demonstration projects under section 1115</header> <subsection commented="no" display-inline="no-display-inline" id="H05A306D8A48742AE85C93943E85D9BFD"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Section 1115 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1315">42 U.S.C. 1315</external-xref>) is amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" id="H0401EC4899334F25BD70069B1B164305" display-inline="no-display-inline">
<subsection id="H6F0FA9A5E62A4810A41334871123A247"><enum>(g)</enum><header>Requirement of budget neutrality for Medicaid demonstration projects</header>
<paragraph id="HCE35A72C9ABE4327B977E3055671EDF7"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Beginning January 1 2027, the Secretary may not approve an application for (or renewal or amendment of) an experimental, pilot, or demonstration project undertaken under subsection (a) to promote the objectives of title XIX in a State (in this subsection referred to as a <quote>Medicaid demonstration project</quote>) unless the Chief Actuary for the Centers for Medicare &amp; Medicaid Services certifies that such project, or, in the case of a renewal, the duration of the preceding waiver, is not expected to result in an increase in the amount of Federal expenditures compared to the amount that such expenditures would otherwise be in the absence of such project. For purposes of this subsection, expenditures for the coverage of populations and services that the State could have otherwise provided through its Medicaid State plan or other authority under title XIX, including expenditures that could be made under such authority but for the provision of such services at a different site of service than authorized under such State plan or other authority, shall be considered expenditures in the absence of such a project.</text></paragraph> <paragraph id="H6273450F6A7C4E0AA6AF422F6CD1E5ED"><enum>(2)</enum><header>Treatment of savings</header><text>In the event that expenditures with respect to a State under a Medicaid demonstration project are, during an approval period for such project, less than the amount of such expenditures that would have otherwise been made in the absence of such project, the Secretary shall specify the methodology to be used with respect to the subsequent approval period for such project for purposes of taking the difference between such expenditures into account.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HC651C1F15D254E90AFA22CC14D3D8207"><enum>(b)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $5,000,000 for each of fiscal years 2026 and 2027, to remain available until expended.</text></subsection></section></subchapter> <subchapter id="H41B4BE6053784F329BB924FD89F29721" style="OLC"><enum>D</enum><header>Increasing personal accountability</header> <section id="HE10C293F1AD14FEE88FED90835BFBB2D"><enum>71119.</enum><header>Requirement for States to establish Medicaid community engagement requirements for certain individuals</header> <subsection id="H2B46E3225A4B47F5815B7CBC456D620D"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1902 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a</external-xref>), as amended by sections 71103 and 71104, is further amended by adding at the end the following new subsection:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H970CF0B663694285999B57159B7E93B1">
<subsection commented="no" display-inline="no-display-inline" id="H8E766BAEAC77476D94E39EC929595539"><enum>(xx)</enum><header>Community engagement requirement for applicable individuals</header>
<paragraph id="HEE8799D1FF664550B27FE20B048550DA" commented="no"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">Except as provided in paragraph (11), beginning not later than the first day of the first quarter that begins after December 31, 2026, or, at the option of the State under a waiver or demonstration project under section 1115 or the State plan, such earlier date as the State may specify, subject to the succeeding provisions of this subsection, a State shall provide, as a condition of eligibility for medical assistance for an applicable individual, that such individual is required to demonstrate community engagement under <internal-xref idref="H658FE037F1624A438230B2B24A421EB5" legis-path="(uu)(2)">paragraph (2)</internal-xref>—</text> <subparagraph id="H86230D4AD5224BBC8938A0B2A7BFE363"><enum>(A)</enum><text display-inline="yes-display-inline">in the case of an applicable individual who has filed an application for medical assistance under a State plan (or a waiver of such plan) under this title, for 1 or more but not more than 3 (as specified by the State) consecutive months immediately preceding the month during which such individual applies for such medical assistance; and</text></subparagraph>
<subparagraph id="HE9BC391A19C748B3982E32641FBC486A"><enum>(B)</enum><text>in the case of an applicable individual enrolled and receiving medical assistance under a State plan (or under a waiver of such plan) under this title, for 1 or more (as specified by the State) months, whether or not consecutive—</text> <clause id="HD4866F89A25A41159BCE4A7C539CDAA8"><enum>(i)</enum><text display-inline="yes-display-inline">during the period between such individual’s most recent determination (or redetermination, as applicable) of eligibility and such individual’s next regularly scheduled redetermination of eligibility (as verified by the State as part of such regularly scheduled redetermination of eligibility); or</text></clause>
<clause id="H9DA8448859E34759A615F7AE5337DE25"><enum>(ii)</enum><text>in the case of a State that has elected under <internal-xref idref="H85A521B791134FE7B6BBF57C6400EA1A" legis-path="(uu)(4)">paragraph (4)</internal-xref> to conduct more frequent verifications of compliance with the requirement to demonstrate community engagement, during the period between the most recent and next such verification with respect to such individual.</text></clause></subparagraph></paragraph> <paragraph id="H658FE037F1624A438230B2B24A421EB5"><enum>(2)</enum><header>Community engagement compliance described</header><text display-inline="yes-display-inline">Subject to <internal-xref idref="HB95A875567A74FBC9933837B304F0F9C" legis-path="(uu)(3)">paragraph (3)</internal-xref>, an applicable individual demonstrates community engagement under this paragraph for a month if such individual meets 1 or more of the following conditions with respect to such month, as determined in accordance with criteria established by the Secretary through regulation:</text>
<subparagraph id="H14BE1DA11CCF44FE8DF3B3A438C60469" commented="no"><enum>(A)</enum><text display-inline="yes-display-inline">The individual works not less than 80 hours.</text></subparagraph> <subparagraph id="HF6E1C6D1856D4823A4D6A148F0E787E1" commented="no"><enum>(B)</enum><text>The individual completes not less than 80 hours of community service.</text></subparagraph>
<subparagraph id="HAD9C7F14080C46A99E46569A41E929C4"><enum>(C)</enum><text>The individual participates in a work program for not less than 80 hours.</text></subparagraph> <subparagraph id="H7A30ED862098412780F8DEB1FF9758D7"><enum>(D)</enum><text>The individual is enrolled in an educational program at least half-time.</text></subparagraph>
<subparagraph id="H0A3394E9E1E149038F4E11F0EC1CC27B"><enum>(E)</enum><text display-inline="yes-display-inline">The individual engages in any combination of the activities described in subparagraphs (A) through (D), for a total of not less than 80 hours.</text></subparagraph> <subparagraph id="HEB337B55673C487CB259398A8FAA82AB"><enum>(F)</enum><text display-inline="yes-display-inline">The individual has a monthly income that is not less than the applicable minimum wage requirement under section 6 of the Fair Labor Standards Act of 1938, multiplied by 80 hours.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H0DF1E2271CF94FE786EF1A1CEF2901C8"><enum>(G)</enum><text>The individual had an average monthly income over the preceding 6 months that is not less than the applicable minimum wage requirement under section 6 of the Fair Labor Standards Act of 1938 multiplied by 80 hours, and is a seasonal worker, as described in <external-xref legal-doc="usc" parsable-cite="usc/26/45R">section 45R(d)(5)(B)</external-xref> of the Internal Revenue Code of 1986 .</text></subparagraph></paragraph> <paragraph id="HB95A875567A74FBC9933837B304F0F9C" commented="no"><enum>(3)</enum><header>Exceptions</header> <subparagraph id="H74FC529C00B0461E8AF24E0D3AE2D632"><enum>(A)</enum><header>Mandatory exception for certain individuals</header><text display-inline="yes-display-inline">The State shall deem an applicable individual to have demonstrated community engagement under <internal-xref idref="H658FE037F1624A438230B2B24A421EB5" legis-path="(uu)(2)">paragraph (2)</internal-xref> for a month, and may elect to not require an individual to verify information resulting in such deeming, if—</text>
<clause id="HFF350094FC114651A3F8A19D47EF5998"><enum>(i)</enum><text>for part or all of such month, the individual—</text> <subclause id="HFC8EC001D5B642949B32A18F731F8A55"><enum>(I)</enum><text>was a specified excluded individual (as defined in <internal-xref idref="H5FDC36B12F4B4549AF8155AF1BCC1523" legis-path="(uu)(9)(A)(ii)">paragraph (9)(A)(ii)</internal-xref>); or</text></subclause>
<subclause id="HEECC45B927264D51BD1673FA4055EDF0" commented="no"><enum>(II)</enum><text display-inline="yes-display-inline">was—</text> <item id="H81A4AE6BE3A34740960B6CD91C12E9FF" commented="no"><enum>(aa)</enum><text>under the age of 19;</text></item>
<item id="H9F63B8D7BC614D7C94016FBBC4A23074" commented="no"><enum>(bb)</enum><text display-inline="yes-display-inline">entitled to, or enrolled for, benefits under part A of title XVIII, or enrolled for benefits under part B of title XVIII; or</text></item> <item id="H9DB8A94E9A9B441094FE3D482BDED330" commented="no"><enum>(cc)</enum><text>described in any of subclauses (I) through (VII) of subsection (a)(10)(A)(i); or</text></item></subclause></clause>
<clause id="HBA346B4F756B4836BA83F5DCA47691B5"><enum>(ii)</enum><text display-inline="yes-display-inline">at any point during the 3-month period ending on the first day of such month, the individual was an inmate of a public institution. </text></clause></subparagraph> <subparagraph id="HB485058E6C304AD0A102EBFDF98F4D45" commented="no"><enum>(B)</enum><header>Optional exception for short-term hardship events</header> <clause id="H8FBA36F92FF7431FBD96DF1E99D007EB" commented="no"><enum>(i)</enum><header>In general</header><text>The State plan (or waiver of such plan) may provide, in the case of an applicable individual who experiences a short-term hardship event during a month, that the State shall, under procedures established by the State (in accordance with standards specified by the Secretary), in the case of a short-term hardship event described in clause (ii)(II) and, upon the request of such individual, a short-term hardship event described in subclause (I) or (III) of clause (ii), deem such individual to have demonstrated community engagement under paragraph (2) for such month.</text></clause>
<clause id="HC240AFF4607C4401B914115D4BE18FA6" commented="no"><enum>(ii)</enum><header>Short-term hardship event defined</header><text>For purposes of this subparagraph, an applicable individual experiences a short-term hardship event during a month if, for part or all of such month—</text> <subclause id="H434F1D262BBB485D8AAAC8710E2780A5" commented="no" display-inline="no-display-inline"><enum>(I)</enum><text display-inline="yes-display-inline">such individual receives inpatient hospital services, nursing facility services, services in an intermediate care facility for individuals with intellectual disabilities, inpatient psychiatric hospital services, or such other services of similar acuity (including outpatient care relating to other services specified in this subclause) as the Secretary determines appropriate;</text></subclause>
<subclause id="H48D42CEF8D9C46BEBC8F3679F52DFE32" commented="no"><enum>(II)</enum><text display-inline="yes-display-inline">such individual resides in a county (or equivalent unit of local government)—</text> <item id="HB275C5553A67417B8A928F849F8DAD02"><enum>(aa)</enum><text>in which there exists an emergency or disaster declared by the President pursuant to the National Emergencies Act or the Robert T. Stafford Disaster Relief and Emergency Assistance Act; or</text></item>
<item id="H90BEC31EFB6B45DF9816D21B96D3C9D6" commented="no"><enum>(bb)</enum><text display-inline="yes-display-inline">that, subject to a request from the State to the Secretary, made in such form, at such time, and containing such information as the Secretary may require, has an unemployment rate that is at or above the lesser of—</text> <subitem id="HEFEFB5DEFE5E4DF2B80DF1536011E31B" commented="no"><enum>(AA)</enum><text display-inline="yes-display-inline">8 percent; or</text></subitem>
<subitem id="H1F352714004F4ABC905BCE4E8D0B1A4F" commented="no"><enum>(BB)</enum><text>1.5 times the national unemployment rate; or</text></subitem></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="HB84F54A357A148BBBD6808A620A3FB86"><enum>(III)</enum><text>such individual or their dependent must travel outside of their community for an extended period of time to receive medical services necessary to treat a serious or complex medical condition (as described in paragraph (9)(A)(ii)(V)(ee)) that are not available within their community of residence.</text></subclause></clause></subparagraph></paragraph>
<paragraph id="H85A521B791134FE7B6BBF57C6400EA1A" commented="no"><enum>(4)</enum><header>Option to conduct more frequent compliance verifications</header><text display-inline="yes-display-inline">With respect to an applicable individual enrolled and receiving medical assistance under a State plan (or a waiver of such plan) under this title, the State shall verify (in accordance with procedures specified by the Secretary) that each such individual has met the requirement to demonstrate community engagement under paragraph (1) during each such individual’s regularly scheduled redetermination of eligibility, except that a State may provide for such verifications more frequently.</text></paragraph> <paragraph id="H07D5BD178E89401198C51491252D7CC5"><enum>(5)</enum><header>Ex parte verifications</header><text display-inline="yes-display-inline">For purposes of verifying that an applicable individual has met the requirement to demonstrate community engagement under paragraph (1), or determining such individual to be deemed to have demonstrated community engagement under paragraph (3), or that an individual is a specified excluded individual under paragraph (9)(A)(ii), the State shall, in accordance with standards established by the Secretary, establish processes and use reliable information available to the State (such as payroll data or payments or encounter data under this title for individuals and data on payments to such individuals for the provision of services covered under this title) without requiring, where possible, the applicable individual to submit additional information.</text></paragraph>
<paragraph id="H773DA85E707A4855AD114EEA058F31EA" commented="no"><enum>(6)</enum><header>Procedure in the case of noncompliance</header>
<subparagraph id="H54312ABD87BB4772BBADFD040D4C1B01" commented="no"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">If a State is unable to verify that an applicable individual has met the requirement to demonstrate community engagement under <internal-xref idref="HEE8799D1FF664550B27FE20B048550DA" legis-path="(uu)(1)">paragraph (1) </internal-xref>(including, if applicable, by verifying that such individual was deemed to have demonstrated community engagement under <internal-xref idref="HB95A875567A74FBC9933837B304F0F9C" legis-path="(uu)(3)">paragraph (3)</internal-xref>) the State shall (in accordance with standards specified by the Secretary)—</text> <clause id="HA59F43A261DE4EBFB288059E6372F234" commented="no"><enum>(i)</enum><text>provide such individual with the notice of noncompliance described in <internal-xref idref="HD924CF591B874D348655933DB44B3612" legis-path="(uu)(6)(B)">subparagraph (B)</internal-xref>;</text></clause>
<clause id="HE7E8C93292324AE5ADD456D5F3E76DCC" commented="no"><enum>(ii)</enum>
<subclause commented="no" display-inline="yes-display-inline" id="H1D9AB81CEB714200A21FB56CE45E4E8E"><enum>(I)</enum><text>provide such individual with a period of 30 calendar days, beginning on the date on which such notice of noncompliance is received by the individual, to—</text> <item id="H84CC79B705F04C8F9130893688B17226" indent="up1"><enum>(aa)</enum><text>make a satisfactory showing to the State of compliance with such requirement (including, if applicable, by showing that such individual was or should be deemed to have demonstrated community engagement under <internal-xref idref="HB95A875567A74FBC9933837B304F0F9C" legis-path="(uu)(3)">paragraph (3)</internal-xref>); or</text></item>
<item id="H5521F2954AA048ADA2EDC3458DA0D273" indent="up1"><enum>(bb)</enum><text>make a satisfactory showing to the State that such requirement does not apply to such individual on the basis that such individual does not meet the definition of applicable individual under <internal-xref idref="HC4EBE7D0D4884A48A3E91528D51709B3" legis-path="(uu)(9)(A)">paragraph (9)(A)</internal-xref>; and</text></item></subclause> <subclause id="H93A78CB6EA0242F29E9CF2D51770FCD5" indent="up1"><enum>(II)</enum><text>if such individual is enrolled under the State plan (or a waiver of such plan) under this title, continue to provide such individual with medical assistance during such 30-calendar-day period; and</text></subclause></clause>
<clause id="H6B3056BEBD4F41F3AC48EB381C681E9A" commented="no"><enum>(iii)</enum><text display-inline="yes-display-inline">if no such satisfactory showing is made and the individual is not a specified excluded individual described in <internal-xref idref="H5FDC36B12F4B4549AF8155AF1BCC1523" legis-path="(uu)(9)(A)(ii)">paragraph (9)(A)(ii)</internal-xref>, deny such individual’s application for medical assistance under the State plan (or waiver of such plan) or, as applicable, disenroll such individual from the plan (or waiver of such plan) not later than the end of the month following the month in which such 30-calendar-day period ends, provided that—</text> <subclause id="HBF050C3630DB4C7A8E3FE1D497F780EE"><enum>(I)</enum><text display-inline="yes-display-inline">the State first determines whether, with respect to the individual, there is any other basis for eligibility for medical assistance under the State plan (or waiver of such plan) or for another insurance affordability program; and</text></subclause>
<subclause id="HF7C2A7DBD06945DEB9F8A0A5C8B8ECAD"><enum>(II)</enum><text>the individual is provided written notice and granted an opportunity for a fair hearing in accordance with subsection (a)(3).</text></subclause></clause></subparagraph> <subparagraph id="HD924CF591B874D348655933DB44B3612" commented="no"><enum>(B)</enum><header>Notice</header><text display-inline="yes-display-inline">The notice of noncompliance provided to an applicable individual under <internal-xref idref="HA59F43A261DE4EBFB288059E6372F234" legis-path="(uu)(6)(A)(i)">subparagraph (A)(i)</internal-xref> shall include information (in accordance with standards specified by the Secretary) on—</text>
<clause id="HB39346FEF8BB49CD82A0B70E9C0AEA96" commented="no"><enum>(i)</enum><text display-inline="yes-display-inline">how such individual may make a satisfactory showing of compliance with such requirement (as described in <internal-xref idref="HE7E8C93292324AE5ADD456D5F3E76DCC" legis-path="(uu)(6)(A)(ii)">subparagraph (A)(ii)</internal-xref>) or make a satisfactory showing that such requirement does not apply to such individual on the basis that such individual does not meet the definition of applicable individual under <internal-xref idref="HC4EBE7D0D4884A48A3E91528D51709B3" legis-path="(uu)(9)(A)">paragraph (9)(A)</internal-xref>; and</text></clause> <clause id="H5C35E54E0822407E80BEE897E38ECFE8" commented="no"><enum>(ii)</enum><text display-inline="yes-display-inline">how such individual may reapply for medical assistance under the State plan (or a waiver of such plan) under this title in the case that such individuals’ application is denied or, as applicable, in the case that such individual is disenrolled from the plan (or waiver).</text></clause></subparagraph></paragraph>
<paragraph id="HD487FAC7EC844574803C13039AB685C8" commented="no"><enum>(7)</enum><header>Treatment of noncompliant individuals in relation to certain other provisions</header>
<subparagraph id="H2D21542A91EC4FB89F95D02F8E28B6E2"><enum>(A)</enum><header>Certain FMAP increases</header><text display-inline="yes-display-inline">A State shall not be treated as not providing medical assistance to all individuals described in section 1902(a)(10)(A)(i)(VIII), or as not expending amounts for all such individuals under the State plan (or waiver of such plan), solely because such an individual is determined ineligible for medical assistance under the State plan (or waiver) on the basis of a failure to meet the requirement to demonstrate community engagement under <internal-xref idref="HEE8799D1FF664550B27FE20B048550DA" legis-path="(uu)(1)">paragraph (1)</internal-xref>.</text></subparagraph> <subparagraph id="H75313C7D56A34AA6B2E121F20CE90BC0"><enum>(B)</enum><header>Other provisions</header><text display-inline="yes-display-inline">For purposes of <external-xref legal-doc="usc" parsable-cite="usc/26/36B">section 36B(c)(2)(B)</external-xref> of the Internal Revenue Code of 1986, an individual shall be deemed to be eligible for minimum essential coverage described in section 5000A(f)(1)(A)(ii) of such Code for a month if such individual would have been eligible for medical assistance under a State plan (or a waiver of such plan) under this title but for a failure to meet the requirement to demonstrate community engagement under <internal-xref idref="HEE8799D1FF664550B27FE20B048550DA" legis-path="(uu)(1)">paragraph (1)</internal-xref>.</text></subparagraph></paragraph>
<paragraph id="H8D7E247379FC4D4B99055E839DFAFEF6"><enum>(8)</enum><header>Outreach</header>
<subparagraph id="H21911A424EB74727A14FA0353739EF34"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">In accordance with standards specified by the Secretary, beginning not later than the date that precedes December 31, 2026 (or, if the State elects under paragraph (1) to specify an earlier date, such earlier date) by the number of months specified by the State under paragraph (1)(A) plus 3 months, and periodically thereafter, the State shall notify applicable individuals enrolled under a State plan (or waiver) under this title of the requirement to demonstrate community engagement under this subsection. Such notice shall include information on—</text> <clause id="HE765C23614434CB3A13C5F2126755076"><enum>(i)</enum><text display-inline="yes-display-inline">how to comply with such requirement, including an explanation of the exceptions to such requirement under <internal-xref idref="HB95A875567A74FBC9933837B304F0F9C" legis-path="(uu)(3)">paragraph (3)</internal-xref> and the definition of the term <quote>applicable individual</quote> under <internal-xref idref="HC4EBE7D0D4884A48A3E91528D51709B3" legis-path="(uu)(9)(A)">paragraph (9)(A);</internal-xref></text></clause>
<clause id="H17C3B5181B664B028910B1EF30643984"><enum>(ii)</enum><text>the consequences of noncompliance with such requirement; and</text></clause> <clause id="HA7B33CB68D154138A78499E6F2E01B5F"><enum>(iii)</enum><text>how to report to the State any change in the individual’s status that could result in—</text>
<subclause id="HB09BE6CAEBBF4AE59E4A9D5E8F63FB2B"><enum>(I)</enum><text>the applicability of an exception under <internal-xref idref="HB95A875567A74FBC9933837B304F0F9C" legis-path="(uu)(3)">paragraph (3)</internal-xref> (or the end of the applicability of such an exception); or</text></subclause> <subclause id="H2CBF9FA09AF44940A17C61A3152016EB"><enum>(II)</enum><text display-inline="yes-display-inline">the individual qualifying as a specified excluded individual under <internal-xref idref="H5FDC36B12F4B4549AF8155AF1BCC1523" legis-path="(uu)(9)(A)(ii)">paragraph (9)(A)(ii)</internal-xref>.</text></subclause></clause></subparagraph>
<subparagraph id="HBBF098061F324BEE85F651A337DAFC73"><enum>(B)</enum><header>Form of outreach notice</header><text>A notice required under <internal-xref idref="HC4EBE7D0D4884A48A3E91528D51709B3" legis-path="(uu)(9)(A)">subparagraph (A)</internal-xref> shall be delivered—</text> <clause id="HD8AC44B174144CE794CD234A9942FBBC"><enum>(i)</enum><text>by regular mail (or, if elected by the individual, in an electronic format); and</text></clause>
<clause id="H1ED3E4BC60304D998EBCEA50FB400DF2"><enum>(ii)</enum><text>in 1 or more additional forms, which may include telephone, text message, an internet website, other commonly available electronic means, and such other forms as the Secretary determines appropriate.</text></clause></subparagraph></paragraph> <paragraph id="HD1FC5FB1B8864C1D93AF9A13166EF074"><enum>(9)</enum><header>Definitions</header><text>In this subsection:</text>
<subparagraph id="HC4EBE7D0D4884A48A3E91528D51709B3"><enum>(A)</enum><header>Applicable individual</header>
<clause id="H172DAD532FFE4D74A65BA01D98AD9468"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">The term <quote>applicable individual</quote> means an individual (other than a specified excluded individual (as defined in <internal-xref idref="H5FDC36B12F4B4549AF8155AF1BCC1523" legis-path="(uu)(9)(A)(ii)">clause (ii)</internal-xref>))—</text> <subclause id="HFA0D8C62FA4A4FBCAC1C636B8FA0F5E9"><enum>(I)</enum><text>who is eligible to enroll (or is enrolled) under the State plan under subsection (a)(10)(A)(i)(VIII); or</text></subclause>
<subclause id="H394852FECE82441C858299F422512C5D"><enum>(II)</enum><text>who—</text> <item id="H6DA32B725062462FB83E1B64F8AA3B6A"><enum>(aa)</enum><text display-inline="yes-display-inline">is otherwise eligible to enroll (or is enrolled) under a waiver of such plan that provides coverage that is equivalent to minimum essential coverage (as described in <external-xref legal-doc="usc" parsable-cite="usc/26/5000A">section 5000A(f)(1)(A)</external-xref> of the Internal Revenue Code of 1986 and as determined in accordance with standards prescribed by the Secretary in regulations); and</text></item>
<item id="H0AB05EB87B934F82830CD629F93DAAD6"><enum>(bb)</enum><text display-inline="yes-display-inline">has attained the age of 19 and is under 65 years of age, is not pregnant, is not entitled to, or enrolled for, benefits under part A of title XVIII, or enrolled for benefits under part B of title XVIII, and is not otherwise eligible to enroll under such plan.</text></item></subclause></clause> <clause id="H5FDC36B12F4B4549AF8155AF1BCC1523"><enum>(ii)</enum><header>Specified excluded individual</header><text display-inline="yes-display-inline">For purposes of <internal-xref idref="H172DAD532FFE4D74A65BA01D98AD9468" legis-path="(uu)(9)(A)(i)">clause (i)</internal-xref>, the term <quote>specified excluded individual</quote> means an individual, as determined by the State (in accordance with standards specified by the Secretary)—</text>
<subclause id="HF21723377CA24D9CBEE6B8A961CA6CAF"><enum>(I)</enum><text display-inline="yes-display-inline">who is described in subsection (a)(10)(A)(i)(IX);</text></subclause> <subclause id="HB116A11CEFBD432987C9AF7AB70F4868" commented="no"><enum>(II)</enum><text display-inline="yes-display-inline">who—</text>
<item id="H6DAB1873D3544D1E9A76CC18B93B64E1"><enum>(aa)</enum><text>is an Indian or an Urban Indian (as such terms are defined in paragraphs (13) and (28) of section 4 of the Indian Health Care Improvement Act);</text></item> <item id="H6F74AF8ECABE4C43B2FFC8B8363C1865"><enum>(bb)</enum><text>is a California Indian described in section 809(a) of such Act; or</text></item>
<item id="HE48D11B2247144BC94DDF7F8A3AC0B9D"><enum>(cc)</enum><text>has otherwise been determined eligible as an Indian for the Indian Health Service under regulations promulgated by the Secretary;</text></item></subclause> <subclause id="H2F843E2A62A84FF88FDAB08323DCA7D9"><enum>(III)</enum><text>who is the parent, guardian, caretaker relative, or family caregiver (as defined in section 2 of the RAISE Family Caregivers Act) of a dependent child 13 years of age and under or a disabled individual;</text></subclause>
<subclause id="H90CFA312EEC74DD48C4F33218C91F09E" commented="no"><enum>(IV)</enum><text display-inline="yes-display-inline">who is a veteran with a disability rated as total under section 1155 of title 38, United States Code;</text></subclause> <subclause id="H149243134FB94F15A7B4C6B21FCD9BF9"><enum>(V)</enum><text>who is medically frail or otherwise has special medical needs (as defined by the Secretary), including an individual—</text>
<item id="H290165ED719D4C6D9B5B62427A832526" commented="no"><enum>(aa)</enum><text>who is blind or disabled (as defined in section 1614);</text></item> <item id="H58557C14E7CE40A09B47146E028330EF"><enum>(bb)</enum><text>with a substance use disorder;</text></item>
<item id="H37732312F6EC4B79B73442DB73F0C990"><enum>(cc)</enum><text>with a disabling mental disorder;</text></item> <item id="H2E86BEFFA06B438DB0E102341EF0C25B"><enum>(dd)</enum><text display-inline="yes-display-inline">with a physical, intellectual or developmental disability that significantly impairs their ability to perform 1 or more activities of daily living; or</text></item>
<item id="H6E04A802E039438E97833BAA01AB26EF"><enum>(ee)</enum><text display-inline="yes-display-inline">with a serious or complex medical condition; </text></item></subclause> <subclause id="HD53DC90E299F440C9831D34388EFC952" commented="no"><enum>(VI)</enum><text display-inline="yes-display-inline">who—</text>
<item id="H22357B7220944A71AF87D8ECF5B3CF21" commented="no"><enum>(aa)</enum><text display-inline="yes-display-inline">is in compliance with any requirements imposed by the State pursuant to section 407; or</text></item> <item id="H499CFB91ED82427F9F787D17F56E491E" commented="no"><enum>(bb)</enum><text display-inline="yes-display-inline">is a member of a household that receives supplemental nutrition assistance program benefits under the Food and Nutrition Act of 2008 and is not exempt from a work requirement under such Act;</text></item></subclause>
<subclause id="H2A46942930D44C13BA8900884CE1F281" commented="no"><enum>(VII)</enum><text display-inline="yes-display-inline">who is participating in a drug addiction or alcoholic treatment and rehabilitation program (as defined in section 3(h) of the Food and Nutrition Act of 2008);</text></subclause> <subclause id="H3B7727DEE5824A83BF0FA392899C8A9A" commented="no"><enum>(VIII)</enum><text display-inline="yes-display-inline">who is an inmate of a public institution; or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H7B6001B7B46D403D86FA46BD599141C4"><enum>(IX)</enum><text>who is pregnant or entitled to postpartum medical assistance under paragraph (5) or (16) of subsection (e).</text></subclause></clause></subparagraph> <subparagraph id="H38FE2E8F7DD94D7BA06EEE91F35B459C"><enum>(B)</enum><header>Educational program</header><text display-inline="yes-display-inline">The term <term>educational program</term> includes—</text>
<clause id="HE9F3C648147D4ED896E90E7C8D45CB90"><enum>(i)</enum><text display-inline="yes-display-inline">an institution of higher education (as defined in section 101 of the Higher Education Act of 1965); and</text></clause> <clause id="HE15A562551BF4132A6847DC10E5DDED0"><enum>(ii)</enum><text display-inline="yes-display-inline">a program of career and technical education (as defined in section 3 of the Carl D. Perkins Career and Technical Education Act of 2006).</text></clause></subparagraph>
<subparagraph id="H67B1B60D41524DF1BCA4C9753F3DF577"><enum>(C)</enum><header>State</header><text>The term <quote>State</quote> means 1 of the 50 States or the District of Columbia.</text></subparagraph> <subparagraph id="HF7FD55813CAF4E7B9D256817CF36DA8A"><enum>(D)</enum><header>Work program</header><text display-inline="yes-display-inline">The term <quote>work program</quote> has the meaning given such term in section 6(o)(1) of the Food and Nutrition Act of 2008.</text></subparagraph></paragraph>
<paragraph id="H9AEBFD708428401D9C1F3A029C1DF2CF"><enum>(10)</enum><header>Prohibiting waiver of community engagement requirements</header><text display-inline="yes-display-inline">Notwithstanding section 1115(a), the provisions of this subsection may not be waived.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H7D902FD6E393441BBBC8B4F14F38CD88"><enum>(11)</enum><header>Special implementation rule</header> <subparagraph commented="no" display-inline="no-display-inline" id="H8C8D7FE3DDC042E59574DE5A1453F729"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Subject to subparagraph (C), the Secretary may exempt a State from compliance with the requirements of this subsection if—</text>
<clause commented="no" display-inline="no-display-inline" id="H1DE1C6F5B18F4570BEAE61641F0AF126"><enum>(i)</enum><text display-inline="yes-display-inline">the State submits to the Secretary a request for such exemption, made in such form and at such time as the Secretary may require, and including the information specified in subparagraph (B); and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HA37428FBEAD9495AB73F8A980C020302"><enum>(ii)</enum><text display-inline="yes-display-inline">the Secretary determines that based on such request, the State is demonstrating a good faith effort to comply with the requirements of this subsection.</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H5480A10955824BC38F396181C0340DF2"><enum>(B)</enum><header>Good faith effort determination</header><text display-inline="yes-display-inline">In determining whether a State is demonstrating a good faith effort for purposes of subparagraph (A)(ii), the Secretary shall consider—</text> <clause commented="no" display-inline="no-display-inline" id="HC25EE266BD394AF7BE68A1DC0BADEB81"><enum>(i)</enum><text display-inline="yes-display-inline">any actions taken by the State toward compliance with the requirements of this subsection;</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HAF62965192CC4A1496328D6A96A337E4"><enum>(ii)</enum><text display-inline="yes-display-inline">any significant barriers to or challenges in meeting such requirements, including related to funding, design, development, procurement, or installation of necessary systems or resources;</text></clause> <clause commented="no" display-inline="no-display-inline" id="H1ECFD9BC2B8F47D6AD3D3E67DA288B8D"><enum>(iii)</enum><text display-inline="yes-display-inline">the State's detailed plan and timeline for achieving full compliance with such requirements, including any milestones of such plan (as defined by the Secretary); and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HCC7C1C2A1B604C199A46FAC505EFD590"><enum>(iv)</enum><text display-inline="yes-display-inline">any other criteria determined appropriate by the Secretary.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF32E0CFA656E4B8482602EE5F7D8D3A4"><enum>(C)</enum><header>Duration of exemption</header> <clause commented="no" display-inline="no-display-inline" id="H5BCC9CBCEA864132B98ABB94729D06DD"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">An exemption granted under subparagraph (A) shall expire not later than December 31, 2028, and may not be renewed beyond such date.</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HFCA7D6E1ACB6469F9B6B5E5C284DA8D4"><enum>(ii)</enum><header>Early termination</header><text display-inline="yes-display-inline">The Secretary may terminate an exemption granted under subparagraph (A) prior to the expiration date of such exemption if the Secretary determined that the State has—</text> <subclause commented="no" display-inline="no-display-inline" id="HC0854E3308404F96BFDE6F243607B603"><enum>(I)</enum><text display-inline="yes-display-inline">failed to comply with the reporting requirements described in subparagraph (D); or</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HCD68E2C7730D4C4684475CFCFAF7691C"><enum>(II)</enum><text display-inline="yes-display-inline">based on the information provided pursuant to subparagraph (D), failed to make continued good faith efforts toward compliance with the requirements of this subsection.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H4F6AEABD209A4911AA7CC895F82F9EA9"><enum>(D)</enum><header>Reporting requirements</header><text display-inline="yes-display-inline">A State granted an exemption under subparagraph (A) shall submit to the Secretary—</text>
<clause commented="no" display-inline="no-display-inline" id="H5D032198DB4A4D3794FEB215043C767D"><enum>(i)</enum><text display-inline="yes-display-inline">quarterly progress reports on the State's status in achieving the milestones toward full compliance described in subparagraph (B)(iii); and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HFB4D117F849D48859AA65232664BBCAD"><enum>(ii)</enum><text display-inline="yes-display-inline">information on specific risks or newly identified barriers or challenges to full compliance, including the State's plan to mitigate such risks, barriers, or challenges.</text></clause></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HD73A0A07C3EF48EE94CB56DC583A01D2"><enum>(b)</enum><header>Conforming amendment</header><text display-inline="yes-display-inline">Section 1902(a)(10)(A)(i)(VIII) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a(a)(10)(A)(i)(VIII)</external-xref>) is amended by striking <quote>subject to subsection (k)</quote> and inserting <quote>subject to subsections (k) and (xx)</quote>.</text></subsection> <subsection id="H214E8D10AFF84B56BA50969CE3326973"><enum>(c)</enum><header>Prohibiting conflicts of interest</header><text>A State shall not use a Medicaid managed care entity or other specified entity (as such terms are defined in section 1903(m)(9)(D)), or other contractor to determine beneficiary compliance under such section unless the contractor has no direct or indirect financial relationship with any Medicaid managed care entity or other specified entity that is responsible for providing or arranging for coverage of medical assistance for individuals enrolled with the entity pursuant to a contract with such State.</text></subsection>
<subsection id="HDBD1E781D46C447684F40DF1329A0718"><enum>(d)</enum><header>Interim final rulemaking</header><text>Not later than June 1, 2026, the Secretary of Health and Human Services shall promulgate an interim final rule for purposes of implementing the provisions of, and the amendments made by, this section. Any action taken to implement the provisions of, and the amendments made by, this section shall not be subject to the provisions of section 553 of title 5, United States Code.</text></subsection> <subsection id="H85F477A2145F48D69A1C27294699ACE9"><enum>(e)</enum><header>Development of government efficiency grants to States</header> <paragraph id="HCD4D39ECB4B74882B4AB4EEFE97773C6"><enum>(1)</enum><header>In general</header><text>In order for States to establish systems necessary to carry out the provisions of, and amendments made by, this section or other sections of this chapter that pertain to conducting eligibility determinations or redeterminations, the Secretary of Health and Human Services shall—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H1B5F4DDDD23E44A1BE4A2DBBFC791B1B"><enum>(A)</enum><text display-inline="yes-display-inline">out of amounts appropriated under paragraph (3)(A), award to each State a grant equal to the amount specified in paragraph (2) for such State; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF51FEA7992154986B4591BC838B517AD"><enum>(B)</enum><text display-inline="yes-display-inline">out of amounts appropriated under paragraph (3)(B), distribute an equal amount among such States.</text></subparagraph></paragraph>
<paragraph id="H5A642250EBC6404480900C98CC529A90"><enum>(2)</enum><header>Amount specified</header><text>For purposes of paragraph (1)(A), the amount specified in this paragraph is an amount that bears the same ratio to the amount appropriated under paragraph (3)(A) as the number of applicable individuals (as defined in section 1902(xx) of the Social Security Act, as added by subsection (a)) residing in such State bears to the total number of such individuals residing in all States, as of March 31, 2025.</text></paragraph> <paragraph id="H585005018A214F2DBD75AA8E5D24BB2F"><enum>(3)</enum><header>Funding</header><text display-inline="yes-display-inline">There are appropriated, out of any monies in the Treasury not otherwise appropriated—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H018E6247C1CE4722B632C1665113B312"><enum>(A)</enum><text display-inline="yes-display-inline">$100,000,000 for fiscal year 2026 for purposes of awarding grants under paragraph (1)(A), to remain available until expended; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF7EFF78604E84FD6AE3D052E668BFFA8"><enum>(B)</enum><text display-inline="yes-display-inline">$100,000,000 for fiscal year 2026 for purposes of award grants under paragraph (1)(B), to remain available until expended.</text></subparagraph></paragraph>
<paragraph id="HBD381FB3BCD4467BAA8BCA4B9B122999"><enum>(4)</enum><header>Definition</header><text display-inline="yes-display-inline">In this subsection, the term <quote>State</quote> means 1 of the 50 States and the District of Columbia. </text></paragraph></subsection> <subsection id="H9EE2B570A2054FDF9EB5FD358672F37E"><enum>(f)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $200,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section>
<section id="H4ADCA385302C45CCBDC2C4550A5A6759" section-type="subsequent-section"><enum>71120.</enum><header>Modifying cost sharing requirements for certain expansion individuals under the Medicaid program</header>
<subsection id="HD8C2EFE59E624828BEE359C477862C45"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1916 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396o">42 U.S.C. 1396o</external-xref>) is amended—</text> <paragraph id="HD014FD8F280B45ED9B0BD903AD086525"><enum>(1)</enum><text>in subsection (a), in the matter preceding paragraph (1), by inserting <quote>(other than, beginning October 1, 2028, specified individuals (as defined in subsection (k)(3)))</quote> after <quote>individuals</quote>; and</text></paragraph>
<paragraph id="HA206E2E795374C2D9179A8C9AE42F25F"><enum>(2)</enum><text>by adding at the end the following new subsection:</text> <quoted-block style="OLC" id="HBD42D3675CFE46E8A4831FE519E612BB" display-inline="no-display-inline"> <subsection id="H42BBFD5AD4B54589BC40ACA1CADC715F"><enum>(k)</enum><header>Special rules for certain expansion individuals</header> <paragraph id="HACC5674CC55745438EDE634E71B170AC"><enum>(1)</enum><header>Premiums</header><text display-inline="yes-display-inline">Beginning October 1, 2028, the State plan shall provide that in the case of a specified individual (as defined in paragraph (3)) who is eligible under the plan, no enrollment fee, premium, or similar charge will be imposed under the plan.</text></paragraph>
<paragraph id="H2032156D6D764FE689D0CC815F9753F5" display-inline="no-display-inline"><enum>(2)</enum><header>Required imposition of cost sharing</header>
<subparagraph id="HAA58CE7AE17A4E0CA5E123B5CAF77DA5"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Subject to subparagraph (B) and subsection (j), in the case of a specified individual, the State plan shall, beginning October 1, 2028, provide for the imposition of such deductions, cost sharing, or similar charges determined appropriate by the State (in an amount greater than $0) with respect to certain care, items, or services furnished to such an individual, as determined by the State.</text></subparagraph> <subparagraph id="H1760FE922B784A9CB61C2AF4D6E40679"><enum>(B)</enum><header>Limitations</header> <clause id="HF15E355164554DE599911EB91E57B310"><enum>(i)</enum><header>Exclusion of certain services</header><text display-inline="yes-display-inline">In no case may a deduction, cost sharing, or similar charge be imposed under the State plan with respect to care, items, or services described in any of subparagraphs (B) through (J) of subsection (a)(2), or any primary care services, mental health care services, substance use disorder services, or services provided by a Federally qualified health center (as defined in 1905(l)(2)), certified community behavioral health clinic (as defined in section 1905(jj)(2)), or rural health clinic (as defined in 1905(l)(1)), furnished to a specified individual.</text></clause>
<clause id="H951689DACC0C4034929314ADF4DF981F"><enum>(ii)</enum><header>Item and service limitation</header>
<subclause id="H80370273AE4C4E099B54DCC7D2CA8721"><enum>(I)</enum><header>In general</header><text>Except as provided in subclause (II), in no case may a deduction, cost sharing, or similar charge imposed under the State plan with respect to care or an item or service furnished to a specified individual exceed $35.</text></subclause> <subclause id="HE7C0B22D73BA46E9888F80D4CC75C03D"><enum>(II)</enum><header>Special rules for prescription drugs</header><text display-inline="yes-display-inline">In no case may a deduction, cost sharing, or similar charge imposed under the State plan with respect to a prescription drug furnished to a specified individual exceed the limit that would be applicable under paragraph (2)(A)(i) or (2)(B) of section 1916A(c) with respect to such drug and individual if such drug so furnished were subject to cost sharing under such section.</text></subclause></clause>
<clause id="H651CF257248543EBA0CB694FC147A56D"><enum>(iii)</enum><header>Maximum limit on cost sharing</header><text display-inline="yes-display-inline">The total aggregate amount of deductions, cost sharing, or similar charges imposed under the State plan for all individuals in the family may not exceed 5 percent of the family income of the family involved, as applied on a quarterly or monthly basis (as specified by the State).</text></clause></subparagraph> <subparagraph id="H17CE0A4832B24FFEA553A9F4BE9A9AAE"><enum>(C)</enum><header>Cases of nonpayment</header><text display-inline="yes-display-inline">Notwithstanding subsection (e), a State may permit a provider participating under the State plan to require, as a condition for the provision of care, items, or services to a specified individual entitled to medical assistance under this title for such care, items, or services, the payment of any deductions, cost sharing, or similar charges authorized to be imposed with respect to such care, items, or services. Nothing in this subparagraph shall be construed as preventing a provider from reducing or waiving the application of such deductions, cost sharing, or similar charges on a case-by-case basis.</text></subparagraph></paragraph>
<paragraph id="HD6027B639CDB4F59B2E8071DBD8AA9D6"><enum>(3)</enum><header>Specified individual defined</header><text display-inline="yes-display-inline">For purposes of this subsection, the term <quote>specified individual</quote> means an individual who has a family income (as determined in accordance with section 1902(e)(14)) that exceeds the poverty line (as defined in section 2110(c)(5)) applicable to a family of the size involved and—</text> <subparagraph id="HA11A7B44D14E4554B38BFEAAF6CD5194"><enum>(A)</enum><text>is enrolled under section 1902(a)(10)(A)(i)(VIII); or</text></subparagraph>
<subparagraph id="HB5FBE619E4DD42D7B7EE7E5F949F42EF"><enum>(B)</enum><text display-inline="yes-display-inline">is described in such subsection and otherwise enrolled under a waiver of the State plan that provides coverage that is equivalent to minimum essential coverage (as described in <external-xref legal-doc="usc" parsable-cite="usc/26/5000A">section 5000A(f)(1)(A)</external-xref> of the Internal Revenue Code of 1986 and determined in accordance with standards prescribed by the Secretary in regulations) to all individuals described in section 1902(a)(10)(A)(i)(VIII).</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA50450ED039C4BD8A627283D1FCBBEEC"><enum>(4)</enum><header>State defined</header><text display-inline="yes-display-inline">For purposes of this subsection, the term <term>State</term> means 1 of the 50 States or the District of Columbia.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H831A10105D3A4B6A917790ECD97197FF"><enum>(b)</enum><header>Conforming amendments</header>
<paragraph id="H09151CE0186646DC87BE91BBFE5EE99F"><enum>(1)</enum><header>Required application</header><text display-inline="yes-display-inline">Section 1902(a)(14) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396a">42 U.S.C. 1396a(a)(14)</external-xref>) is amended by inserting <quote>and provide for imposition of such deductions, cost sharing, or similar charges for care, items, or services furnished to specified individuals (as defined in paragraph (3) of section 1916(k)) in accordance with paragraph (2) of such section</quote> after <quote>section 1916</quote>.</text></paragraph> <paragraph id="H13A29E0011FC45E9819A7CF3D0D061EF" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header>Nonapplicability of alternative cost sharing</header><text>Section 1916A(a)(1) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396o-1">42 U.S.C. 1396o–1(a)(1)</external-xref>) is amended, in the second sentence, by striking <quote>or (j)</quote> and inserting <quote>(j), or (k)</quote>.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H955C2E1C379E470A8E2C7F3DF31D1EB0"><enum>(c)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $15,000,000 for fiscal year 2026, to remain available until expended.</text></subsection></section></subchapter> <subchapter id="H2388F94754554D3C9E54A32152DEE520" style="OLC"><enum>E</enum><header>Expanding Access to Care</header> <section id="H09652BCC85234E4FAAAC9D9A805494AF"><enum>71121.</enum><header>Making certain adjustments to coverage of home or community-based services under Medicaid</header> <subsection id="H8F4E00E92C574C8D98E1F0E93E875667"><enum>(a)</enum><header>Expanding HCBS coverage under section 1915(c) waivers</header><text>Section 1915(c) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396n">42 U.S.C. 1396n(c)</external-xref>) is amended—</text>
<paragraph id="H46B8515A24A24C50B92600B7B6C49E37"><enum>(1)</enum><text>in paragraph (3), by inserting <quote>paragraph (11) or</quote> before <quote>subsection (h)(2)</quote>; and</text></paragraph> <paragraph id="HBED303E2D313405B8959D63E1A4BB49D"><enum>(2)</enum><text>by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H28F7C494159F4A33A074D769A2EBDF55">
<paragraph id="H90CD96A9792646019CB5122BA4FE76E1" indent="up1"><enum>(11)</enum><header>Expanding coverage for home or community-based services</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H2227FAB9D9F64250A45B7F89F3617F73"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>Beginning July 1, 2028, notwithstanding paragraph (1), the Secretary may approve a waiver that is standalone from any other waiver approved under this subsection to include as medical assistance under the State plan of such State payment for part or all of the cost of home or community-based services (other than room and board (as described in paragraph (1))) approved by the Secretary which are provided pursuant to a written plan of care to individuals described in subparagraph (B)(iii). A waiver approved under this paragraph shall be for an initial term of 3 years and, upon the request of the State, shall be extended for additional 5-year periods unless the Secretary determines that for the previous waiver period the requirements specified under this subsection (excluding those excepted under subparagraph (B)) have not been met.</text></subparagraph> <subparagraph id="HF0FC508997F844618B2EE75E0964EF57"><enum>(B)</enum><header>State requirements</header><text display-inline="yes-display-inline">In addition to the requirements specified under this subsection (except for the requirements described in subparagraphs (C) and (D) of paragraph (2) and any other requirement specified under this subsection that the Secretary determines to be inapplicable in the context of a waiver that does not require individuals to have a determination described in paragraph (1)), a State shall meet the following requirements as a condition of waiver approval:</text>
<clause id="HEF0912F032314BD4AC4FD58367CEA229"><enum>(i)</enum><text>As of the date that such State requests a waiver under this subsection to provide home or community-based services to individuals described in clause (iii), all other waivers (if any) granted under this subsection to such State meet the requirements of this subsection.</text></clause> <clause id="H5F7963A6D3AF40F28F286AFCFAE8626B"><enum>(ii)</enum><text>The State demonstrates to the Secretary that approval of a waiver under this subsection with respect to individuals described in clause (iii) will not result in a material increase of the average amount of time that individuals with respect to whom a determination described in paragraph (1) has been made will need to wait to receive home or community-based services under any other waiver granted under this subsection, as determined by the Secretary.</text></clause>
<clause id="H2FB92DA73A60468EB105D160634EBAFB"><enum>(iii)</enum><text>The State establishes needs-based criteria, subject to the approval of the Secretary, regarding who will be eligible for home or community-based services under a waiver approved under this paragraph without requiring such individuals to have a determination described in paragraph (1), and specifies the home or community-based services such individuals so eligible will receive.</text></clause> <clause id="H2616B1B99DE6496284CB50C713B99DB1" commented="no" display-inline="no-display-inline"><enum>(iv)</enum><text>The State establishes needs-based criteria for determining whether an individual described in clause (iii) requires the level of care provided in a hospital, nursing facility, or an intermediate care facility for individuals with developmental disabilities under the State plan or under any waiver of such plan that are more stringent than the needs-based criteria established under clause (iii) for determining eligibility for home or community-based services.</text></clause>
<clause id="H4205859E3C184896AAA33B5EEC24BB65" commented="no" display-inline="no-display-inline"><enum>(v)</enum><text>The State attests that the State’s average per capita expenditure for medical assistance under the State plan (or waiver of such plan) provided with respect to such individuals enrolled in a waiver under this paragraph will not exceed the State’s average per capita expenditure for medical assistance for individuals receiving institutional care under the State plan (or waiver of such plan) for the duration that the waiver under this paragraph is in effect.</text></clause> <clause id="H11C1AEC6C60E46B59482318AD8313EB4"><enum>(vi)</enum><text>The State provides to the Secretary data (in such form and manner as the Secretary may specify) regarding the number of individuals described in clause (iii) with respect to a State seeking approval of a waiver under this subsection, to whom the State will make such services available under such waiver.</text></clause>
<clause id="H357D33BA21984FE1AB843799A3A6324B"><enum>(vii)</enum><text>The State agrees to provide to the Secretary, not less frequently than annually, data for purposes of paragraph (2)(E) (in such form and manner as the Secretary may specify) regarding, with respect to each preceding year in which a waiver under this subsection to provide home or community-based services to individuals described in clause (iii) was in effect—</text> <subclause id="H051739D6865D4786A795872BD2062BA0"><enum>(I)</enum><text>the cost (as such term is defined by the Secretary) of such services furnished to individuals described in clause (iii), broken down by type of service;</text></subclause>
<subclause id="HD86C4524B5A24D8CA3A3A29E55142494"><enum>(II)</enum><text>with respect to each type of home or community-based service provided under the waiver, the length of time that such individuals have received such service;</text></subclause> <subclause id="H0F9F13CC9EB54022B3E7C30CDC8398C8"><enum>(III)</enum><text>a comparison between the data described in subclause (I) and any comparable data available with respect to individuals with respect to whom a determination described in paragraph (1) has been made and with respect to individuals receiving institutional care under this title; and</text></subclause>
<subclause id="H3A05A36F3D304D5C839298A5974E0441" commented="no" display-inline="no-display-inline"><enum>(IV)</enum><text>the number of individuals who have received home or community-based services under the waiver during the preceding year.</text></subclause></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB2D6E9C2A73647078D00CFBAB80B0738"><enum>(C)</enum><header>Limitation on payments</header><text display-inline="yes-display-inline">No payments made to carry out this paragraph shall be used by a State to make payments to a third party on behalf of an individual practitioner for benefits such as health insurance, skills training, and other benefits customary for employees, in the case of a class of practitioners for which the program established under this title is the primary source of revenue.</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H767CFA36946B47ACBB4C9703EB97EE6D"><enum>(b)</enum><header>Implementation funding</header>
<paragraph commented="no" display-inline="no-display-inline" id="HC0B1F20E7ABB4EAA9AE772030EE4B9BA"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">There are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HD5B41E2356F2469489B0B7CD8CB79958"><enum>(A)</enum><text display-inline="yes-display-inline">for fiscal year 2026, $50,000,000 for purposes of carrying out the provisions of, and the amendments made by, this section, to remain available until expended; and</text></subparagraph>
<subparagraph id="H00AE6B0E31E3445183E405CA6E007DB5"><enum>(B)</enum><text>for fiscal year 2027, $100,000,000 for purposes of making payments to States, subject to paragraph (2), to support State systems to deliver home or community-based services under section 1915(c) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396n">42 U.S.C. 1396n(c)</external-xref>) (as amended by this section) or under section 1115 of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1315">42 U.S.C. 1315</external-xref>), to remain available until expended.</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H049F6580A824403F9ACCBED4B8F41ED5"><enum>(2)</enum><header>Payments based on State HCBS eligible population</header><text display-inline="yes-display-inline">Payments to States from amounts made available by paragraph (1)(B) shall be made, with respect to a State, on the basis of the proportion of the population of the State that is receiving home or community-based services under section1915(c) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1396n">42 U.S.C. 1396n(c)</external-xref>) (as amended by this section) or under section 1115 of such Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1315">42 U.S.C. 1315</external-xref>), as compared to all States. </text></paragraph></subsection></section></subchapter></chapter>
<chapter id="H0F6BE84D0E484ECC820551A723645343" style="OLC"><enum>2</enum><header>Medicare</header>
<subchapter id="H40A3361DE5DE41DEA746973A9F8270A2" style="OLC"><enum>A</enum><header>Strengthening eligibility requirements</header>
<section id="HBADD51A327A4442F8B7A9E6672CB26B1"><enum>71201.</enum><header>Limiting Medicare coverage of certain individuals</header><text display-inline="no-display-inline">Title XVIII of the <act-name parsable-cite="SSA">Social Security Act</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/42/1395">42 U.S.C. 1395 et seq.</external-xref>) is amended by adding at the end the following new section:</text> <quoted-block id="HE9785F6394E949E2B5FDA90D4BCABDAA" display-inline="no-display-inline" style="OLC"> <section id="HDF28228F747F4AA9BA69C598C12204E9"><enum>1899C.</enum><header>Limiting Medicare coverage of certain individuals</header> <subsection id="HB53B142335A84465B932FA89CC01F98D"><enum>(a)</enum><header>In general</header><text>Subject to subsection (b), an individual may be entitled to, or enrolled for, benefits under this title only if the individual is—</text>
<paragraph id="H3A30A30E3404477487130994F236F045"><enum>(1)</enum><text>a citizen or national of the United States;</text></paragraph> <paragraph id="HAD029E8C61E245F1A724DF0C70E380C3"><enum>(2)</enum><text>an alien who is lawfully admitted for permanent residence under the <act-name parsable-cite="INA">Immigration and Nationality Act</act-name>;</text></paragraph>
<paragraph id="H8CC454296E964328B85B928B33FD26CA"><enum>(3)</enum><text>an alien who has been granted the status of Cuban and Haitian entrant, as defined in section 501(e) of the Refugee Education Assistance Act of 1980 (<external-xref legal-doc="public-law" parsable-cite="pl/96/422">Public Law 96–422</external-xref>); or</text></paragraph> <paragraph id="HC431FE07073D4C5A8B510C345C8F260B"><enum>(4)</enum><text>an individual who lawfully resides in the United States in accordance with a Compact of Free Association referred to in section 402(b)(2)(G) of the Personal Responsibility and Work Opportunity Reconciliation Act of 1996.</text></paragraph></subsection>
<subsection id="H192EE1C62F4844DD900EF4F5983B305A"><enum>(b)</enum><header>Application to individuals currently entitled to or enrolled for benefits</header>
<paragraph id="H69AD6D081576434182C24E9D7454A12B"><enum>(1)</enum><header>In general</header><text>In the case of an individual who is entitled to, or enrolled for, benefits under this title as of the date of the enactment of this section, subsection (a) shall apply beginning on the date that is 18 months after such date of enactment.</text></paragraph> <paragraph id="H8040E4C1E97548A6A01656D20FD78E93"><enum>(2)</enum><header>Review by commissioner of social security</header> <subparagraph id="HDA1573DD4DD64B47B7A33B07E918B140"><enum>(A)</enum><header>In general</header><text>Not later than 1 year after the date of the enactment of this section, the Commissioner of Social Security shall complete a review of individuals entitled to, or enrolled for, benefits under this title as of such date of enactment for purposes of identifying individuals not described in any of paragraphs (1) through (4) of subsection (a).</text></subparagraph>
<subparagraph id="HE0E76FB84C2A4EE58F7A7A242829A534"><enum>(B)</enum><header>Notice</header><text>The Commissioner of Social Security shall notify each individual identified under the review conducted under subparagraph (A) that such individual's entitlement to, or enrollment for, benefits under this title will be terminated as of the date that is 18 months after the date of the enactment of this section. Such notification shall be made as soon as practicable after such identification and in a manner designed to ensure such individual's comprehension of such notification.</text></subparagraph></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block></section></subchapter> <subchapter id="HC61E3909B28640129FDBACDF67E74C0F" style="OLC"><enum>B</enum><header>Improving services for seniors</header> <section id="H939C1EA9EBBB47908144469089750643"><enum>71202.</enum><header>Temporary payment increase under the medicare physician fee schedule to account for exceptional circumstances</header> <subsection id="HF7F540187BC64CC6AA744A2FC573FEAC"><enum>(a)</enum><header>In general</header><text>Section 1848(t) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395w-4">42 U.S.C. 1395w–4(t)</external-xref>) is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HA7BEA9A183AB40C2B99E6CA77B24188B"><enum>(1)</enum><text>in the subsection heading, by striking <quote><header-in-text style="OLC" level="subsection">during 2021 through 2024</header-in-text></quote>;</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H0DE1ABA9E1AA42F09ADC69CF481AB6FB"><enum>(2)</enum><text display-inline="yes-display-inline">in paragraph (1)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HD7B8E8D82431478CBF2132807E122D0D"><enum>(A)</enum><text>in the matter preceding subparagraph (A), by striking <quote>and 2024</quote> and inserting <quote>2024, and 2026</quote>;</text></subparagraph> <subparagraph id="H33E4319CEED6480CB0DC4DBDD28C6F56"><enum>(B)</enum><text>in subparagraph (D), by striking <quote>and</quote> at the end;</text></subparagraph>
<subparagraph id="H9A8699F5593A4D2998829353EE225A35"><enum>(C)</enum><text>in subparagraph (E), by striking the period at the end and inserting <quote>; and</quote>; and</text></subparagraph> <subparagraph id="HEEFAE918569B4A1F82F7F8B4FD305A35"><enum>(D)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H9B5CF35C994A45D984AFA500E2E7E743">
<subparagraph id="HDF84C1C1DC734FA29FC37A91ACF3BBD1"><enum>(F)</enum><text>such services furnished on or after January 1, 2026, and before January 1, 2027, by 2.5 percent.</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA690A4D48CF24539B70FD61F20AF292A"><enum>(3)</enum><text>in paragraph (2)(C)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H2E7998E03A7C498E9AED7AC8B9D9821A"><enum>(A)</enum><text display-inline="yes-display-inline">in the subparagraph heading, by inserting <quote><header-in-text style="OLC" level="subparagraph">and 2026</header-in-text></quote> after <quote><header-in-text style="OLC" level="subparagraph">2024</header-in-text></quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H23D62AD085984CCC9C14621CE4DB727A"><enum>(B)</enum><text display-inline="yes-display-inline">by striking <quote>or 2024</quote> each place it appears and inserting <quote>2024, or 2026</quote>. </text></subparagraph></paragraph></subsection>
<subsection id="H26F3DA46871A4B37AFDCD2203A70B900"><enum>(b)</enum><header>Conforming amendment</header><text>Section 1848(c)(2)(B)(iv)(V) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1395w-4">42 U.S.C. 1395w–4(c)(2)(B)(iv)(V)</external-xref>) is amended by striking <quote>or 2024</quote> and inserting <quote>2024, or 2026</quote>.</text></subsection></section> <section id="H3A5A92FFF47442A88014667D746B4153"><enum>71203.</enum><header>Expanding and clarifying the exclusion for orphan drugs under the Drug Price Negotiation Program</header> <subsection id="H7DD9428E7CAA4A3EB07465E620A9E3F5"><enum>(a)</enum><header>In general</header><text display-inline="yes-display-inline">Section 1192(e) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1320f-1">42 U.S.C. 1320f–1(e)</external-xref>) is amended—</text>
<paragraph id="H8FA9F883B99345A6979D444BDF7C3610"><enum>(1)</enum><text>in paragraph (1), in the matter preceding subparagraph (A), by striking <quote>and (3)</quote> and inserting <quote>through (4)</quote>; </text></paragraph> <paragraph id="H14338C01663F48A599F16DFAFC63D200"><enum>(2)</enum><text>in paragraph (3)(A)—</text>
<subparagraph id="HCF80C7B8662242EBBF72A1F08CD5F0BE"><enum>(A)</enum><text>by striking <quote>only one rare disease or condition</quote> and inserting <quote>one or more rare diseases or conditions</quote>; and </text></subparagraph> <subparagraph id="HC0EC1B07F46D41FA9637F708518193A4"><enum>(B)</enum><text>by striking <quote>such disease or condition</quote> and inserting <quote>one or more such rare diseases or conditions (as such term is defined in section 526(a)(2) of the Federal Food, Drug, and Cosmetic Act)</quote>; and </text></subparagraph></paragraph>
<paragraph id="HB8325845C438413AACD4CDA9F787E1EC"><enum>(3)</enum><text>by adding at the end the following new paragraph:</text> <quoted-block style="OLC" id="H879D3D65D8814021B9FE6E3234FBF2C1" display-inline="no-display-inline"> <paragraph id="HFA6859B961874A2B9D9D321ABEC8D92D"><enum>(4)</enum><header>Treatment of former orphan drugs</header><text>In the case of a drug or biological product that, as of the date of the approval or licensure of such drug or biological product, is a drug or biological product described in paragraph (3)(A), paragraph (1)(A)(ii) or (1)(B)(ii) (as applicable) shall apply as if the reference to <quote>the date of such approval</quote> or <quote>the date of such licensure</quote>, respectively, were instead a reference to <quote>the first day after the date of such approval for which such drug is not a drug described in paragraph (3)(A)</quote> or <quote>the first day after the date of such licensure for which such biological product is not a biological product described in paragraph (3)(A)</quote>, respectively. </text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H712BC925D8084ADABBD4F4D0C61BF9A5" commented="no" display-inline="no-display-inline"><enum>(b)</enum><header>Application</header><text display-inline="yes-display-inline">The amendments made by subsection (a) shall apply with respect to initial price applicability years (as defined in section 1191(b) of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1320f">42 U.S.C. 1320f(b)</external-xref>)) beginning on or after January 1, 2028.</text></subsection></section></subchapter></chapter> <chapter id="HF7D5851D6EC541FA8563B265F55022FF" style="OLC"><enum>3</enum><header>Health Tax</header> <subchapter style="OLC" commented="no" level-type="subsequent" id="HBD59F3368CF442968B3E309DEBE39F12"><enum>A</enum><header>Improving eligibility criteria</header> <section id="HF9BF90F31BF149ECA2DF04FD665537E6"><enum>71301.</enum><header>Permitting premium tax credit only for certain individuals</header> <subsection id="HB0A39716C79A4427872869AA11F67573"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(e)(1)</external-xref> is amended by inserting <quote>or, in the case of aliens who are lawfully present, are not eligible aliens</quote> after <quote>individuals who are not lawfully present</quote>.</text></subsection>
<subsection id="H3188A292506148CAA8D5BF822E2BEDBA"><enum>(b)</enum><header>Eligible aliens</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(e)(2)</external-xref> is amended—</text> <paragraph id="H5C2618BC35CB4FEFAB4A1B6FB42BC9AB"><enum>(1)</enum><text>by striking <quote>For purposes of this section, an individual</quote> and inserting “For purposes of this section—</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H7F27DA4BA54748F0B47CCF354513535B">
<subparagraph commented="no" display-inline="no-display-inline" id="HD8F66260EB3341BC86798CC10E38745C"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">An individual</text></subparagraph><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph> <paragraph id="H5B53ED6D54AB44DB9056D7F95AA02A62"><enum>(2)</enum><text>by adding at the end the following new subparagraph:</text>
<quoted-block id="HBA0C647EFA484E0DAD69850C8750AF74" display-inline="no-display-inline" style="OLC">
<subparagraph id="HADA05DB4B02941A0BB576CF2BFF0A024"><enum>(B)</enum><header>Eligible aliens</header><text>An individual who is an alien and lawfully present shall be treated as an eligible alien if such individual is, and is reasonably expected to be for the entire period of enrollment for which the credit under this section is being claimed—</text> <clause id="HDBEE3307A7FF4653A70073403257F1F9"><enum>(i)</enum><text>an alien who is lawfully admitted for permanent residence under the <act-name parsable-cite="INA">Immigration and Nationality Act</act-name> (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101 et seq.</external-xref>),</text></clause>
<clause id="H191FD2E408834C23A4597BE0C64D1788"><enum>(ii)</enum><text>an alien who has been granted the status of Cuban and Haitian entrant, as defined in section 501(e) of the Refugee Education Assistance Act of 1980 (<external-xref legal-doc="public-law" parsable-cite="pl/96/422">Public Law 96–422</external-xref>); or</text></clause> <clause id="H0BFCCB8E8A424552ABE81DCF8A8BCA46"><enum>(iii)</enum><text>an individual who lawfully resides in the United States in accordance with a Compact of Free Association referred to in section 402(b)(2)(G) of the Personal Responsibility and Work Opportunity Reconciliation Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/8/1612">8 U.S.C. 1612(b)(2)(G)</external-xref>).</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H7F05F15A1BDA45BB9F44D12ADABF0852"><enum>(c)</enum><header>Conforming amendments</header>
<paragraph id="HFB609CC591C44ECFA063D183166FD738"><enum>(1)</enum><header>Verification of information</header><text>Section 1411 of the Patient Protection and Affordable Care Act (<external-xref legal-doc="usc" parsable-cite="usc/42/18081">42 U.S.C. 18081</external-xref>) is amended—</text> <subparagraph id="H9F6BAC6251064AB097C11FB2BFEED17E"><enum>(A)</enum><text>in subsection (a)—</text>
<clause id="H086B7E0252134DF78536D90A699B9C1E"><enum>(i)</enum><text>in paragraph (1), by striking <quote>and <external-xref legal-doc="usc" parsable-cite="usc/26/36B">section 36B(e)</external-xref> of the Internal Revenue Code of 1986</quote>; and</text></clause> <clause id="H4EBE18E969A244D7BECD6A1AD8CBCA29"><enum>(ii)</enum><text>in paragraph (2)—</text>
<subclause id="HC2DFC2A9D68441AC8F02C7BED512045F"><enum>(I)</enum><text>in subparagraph (A), by striking <quote>and</quote> at the end;</text></subclause> <subclause id="H3429A74F55BD49B6933AEA696F6EE612"><enum>(II)</enum><text>in subparagraph (B), by adding <quote>and</quote> at the end; and</text></subclause>
<subclause id="H20311E5509C94DD8B1E9A25574BEE98C"><enum>(III)</enum><text>by adding at the end the following new subparagraph:</text> <quoted-block id="HD0FC3D32DF81434C936F082E56ACA4C0" display-inline="no-display-inline" style="OLC"> <subparagraph id="HE84452F8CF4147F6A8B109E759E8F495"><enum>(C)</enum><text>in the case such individual is an alien lawfully present in the United States, whether such individual is an eligible alien (within the meaning of section 36B(e)(2) of such Code);</text></subparagraph><after-quoted-block>;</after-quoted-block></quoted-block></subclause></clause></subparagraph>
<subparagraph id="H373A44EC86F140DAB189B2CA3AF1A245"><enum>(B)</enum><text>in subsection (b)(3), by adding at the end the following new subparagraph:</text> <quoted-block id="H586C82337A6143E585E4FCC66F22F95D" display-inline="no-display-inline" style="OLC"> <subparagraph id="H1325B8C5163B4B069B7389C7D8FF856B"><enum>(D)</enum><header>Immigration status</header><text>In the case the individual's eligibility is based on an attestation of the enrollee's immigration status, an attestation that such individual is an eligible alien (within the meaning of 36B(e)(2) of the Internal Revenue Code of 1986).</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="HA1E2BCA53DE4430299903107396A3857"><enum>(C)</enum><text>in subsection (c)(2)(B)(ii), by adding at the end the following new subclause:</text> <quoted-block id="HEAB245F4DE9846A088BFD9D5B13C0224" display-inline="no-display-inline" style="OLC"> <subclause id="H2ED8CDA8D7444F23AC601DAEFF786CE7"><enum>(III)</enum><text>In the case of an individual described in clause (i)(I) with respect to whom a premium tax credit under <external-xref legal-doc="usc" parsable-cite="usc/26/36B">section 36B</external-xref> of the Internal Revenue Code of 1986 is being claimed, the attestation that the individual is an eligible alien (within the meaning of section 36B(e)(2) of such Code).</text></subclause><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HA4BEE2ED02BA442C8978D1A3A2A7FEBC"><enum>(2)</enum><header>Advance determinations</header><text>Section 1412(d) of the Patient Protection and Affordable Care Act (<external-xref legal-doc="usc" parsable-cite="usc/42/18082">42 U.S.C. 18082(d)</external-xref>) is amended by inserting before the period at the end the following: <quote>, or credits under <external-xref legal-doc="usc" parsable-cite="usc/26/36B">section 36B</external-xref> of the Internal Revenue Code of 1986 for aliens who are not eligible aliens (within the meaning of section 36B(e)(2) of such Code)</quote>.</text></paragraph> <paragraph id="HC321ECB93F1A4A2BB51315575A162549"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall apply with respect to plan years beginning on or after January 1, 2027.</text></paragraph></subsection>
<subsection id="H8818C494B541436E8B54CDDAD42E0BD8"><enum>(d)</enum><header>Requirement to maintain minimum essential coverage</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/5000A">Section 5000A(d)(3)</external-xref> is amended by striking <quote>an alien lawfully present in the United States</quote> and inserting <quote>an eligible alien (within the meaning of section 36B(e)(2))</quote>.</text></subsection> <subsection id="HFE5E7C113C79465DA3D13B06BC4ADBEE"><enum>(e)</enum><header>Effective date</header><text>The amendments made by this section (other than the amendments made by subsection (c)) shall apply to taxable years beginning after December 31, 2026.</text></subsection></section>
<section id="HF39E434A453D45FF8070051C09D58588"><enum>71302.</enum><header>Disallowing premium tax credit during periods of medicaid ineligibility due to alien status</header>
<subsection id="H9BA9A1C12E534CEDA8D7712B6B3CFA76"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(c)(1)</external-xref> is amended by striking subparagraph (B).</text></subsection> <subsection id="HD207CC10DD534530A0D08BCDE16F7BDD"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></subchapter>
<subchapter id="H536B8D00570A4224BF3C986B48355F13" style="OLC"><enum>B</enum><header>Preventing waste, fraud, and abuse</header>
<section id="HD02E5EFE487E4B7C9A69A483910C12BF"><enum>71303.</enum><header>Requiring verification of eligibility for premium tax credit</header>
<subsection id="H62E31D9D36B74636895BAAF0B0D45814"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(c)</external-xref> is amended by adding at the end the following new paragraphs:</text> <quoted-block id="H83C60E4DA6184A71AC8321A33AB05AAD" display-inline="no-display-inline" style="OLC"> <paragraph id="H1E6E99302A704E718A2576E848F726B0"><enum>(5)</enum><header>Exchange enrollment verification requirement</header> <subparagraph id="H3B062382906A4408BDB77A260DC4E362"><enum>(A)</enum><header>In general</header><text>The term <term>coverage month</term> shall not include, with respect to any individual covered by a qualified health plan enrolled in through an Exchange, any month beginning before the Exchange verifies, using applicable enrollment information that shall be provided or verified by the applicant, such individual's eligibility—</text>
<clause id="H5389B02C52EC46F9BC8FD34E507D4638"><enum>(i)</enum><text>to enroll in the plan through the Exchange, and</text></clause> <clause id="HE90183E5D53C4BC2A65B79D0D268D5EE"><enum>(ii)</enum><text>for any advance payment under section 1412 of the Patient Protection and Affordable Care Act of the credit allowed under this section.</text></clause></subparagraph>
<subparagraph id="HC7A610B05BB045C090EB5ADF6E075E2F"><enum>(B)</enum><header>Applicable enrollment information</header><text>For purposes of subparagraph (A), applicable enrollment information shall include affirmation of at least the following information (to the extent relevant in determining eligibility described in subparagraph (A)):</text> <clause id="H6D0DE3A66D494890A51C3B780588EAD8"><enum>(i)</enum><text>Household income and family size.</text></clause>
<clause id="H963BDF3F08E340D4B68B20F0C2721C05"><enum>(ii)</enum><text>Whether the individual is an eligible alien.</text></clause> <clause id="H49BEBE41C74B485B90E24080F1824D93"><enum>(iii)</enum><text>Any health coverage status or eligibility for coverage.</text></clause>
<clause id="H61300F781A99478C80AE83E9D841847E"><enum>(iv)</enum><text>Place of residence.</text></clause> <clause id="HE9BFFF39EB274B459292C43A2236FBAC"><enum>(v)</enum><text>Such other information as may be determined by the Secretary (in consultation with the Secretary of Health and Human Services) as necessary to the verification prescribed under subparagraph (A).</text></clause></subparagraph>
<subparagraph id="H54D1AF875B32425C9799D8DACA4B4F7E"><enum>(C)</enum><header>Verification of past months</header><text>In the case of a month that begins before verification prescribed by subparagraph (A), such month shall be treated as a coverage month if the Exchange verifies for such month (using applicable enrollment information that shall be provided or verified by the applicant) such individual's eligibility to have so enrolled and for any such advance payment.</text></subparagraph> <subparagraph id="HFE9EC61065024B97890924DEBD89191E"><enum>(D)</enum><header>Exchange participation; coordination with other procedures for determining eligibility</header><text>An individual shall not, solely by reason of failing to meet the requirements of this paragraph with respect to a month, be treated for such month as ineligible to enroll in a qualified health plan through an Exchange.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H6332D039EB6242E59D0FB09EE7FBDA42"><enum>(E)</enum><header>Waiver for certain special enrollment periods</header><text>The Secretary may waive the application of subparagraph (A) in the case of an individual who enrolls in a qualified health plan through an Exchange for 1 or more months of the taxable year during a special enrollment period provided by the Exchange on the basis of a change in the family size of the individual.</text></subparagraph> <subparagraph id="H823E3183D7714016B77DA8B8AB0AE848"><enum>(F)</enum><header>Information and reliance on third-party sources</header><text>An Exchange shall be permitted to use any data available to the Exchange and any reliable third-party sources in collecting information for verification by the applicant.</text></subparagraph></paragraph>
<paragraph id="H93BC9F79135E45D8AE42FE1E467EEA87"><enum>(6)</enum><header>Exchange compliance with filing requirements</header><text>The term <term>coverage month</term> shall not include, with respect to any individual covered by a qualified health plan enrolled in through an Exchange, any month for which the Exchange does not meet the requirements of section 155.305(f)(4)(iii) of title 45, Code of Federal Regulations (as published in the Federal Register on June 25, 2025 (90 Fed. Reg. 27074), applied as though it applied to all plan years after 2025), with respect to the individual.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H8C8EC546DD334008833EEF97B1D22CF9"><enum>(b)</enum><header>Pre-enrollment verification process required</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(c)(3)(A)</external-xref> is amended—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H75743BF03666438C9BF6B468592F8F71"><enum>(1)</enum><text>by striking <quote><header-in-text style="OLC" level="subparagraph">health plan</header-in-text>.—The term</quote> and inserting “<header-in-text level="subparagraph" style="OLC">health plan</header-in-text>.—</text> <quoted-block id="H122023B55A63436B99879AC4A779780D" display-inline="yes-display-inline" style="OLC"> <clause id="HEC5FB6E640734F889F110CD4DD1EFF04"><enum>(i)</enum><header>In general</header><text>The term</text></clause><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph>
<paragraph id="H2B15556543B2439AB75DAF939E5B7FD0"><enum>(2)</enum><text>by adding at the end the following new clause:</text> <quoted-block id="HA52D4E4803B347CC8B1D3758118E8764" display-inline="no-display-inline" style="OLC"> <clause id="H7BA5998BCE09459E8ED4783230FEE58E"><enum>(ii)</enum><header>Pre-enrollment verification process required</header><text>Such term shall not include any plan enrolled in through an Exchange, unless such Exchange provides a process for pre-enrollment verification through which any applicant may, beginning not later than August 1, verify with the Exchange the applicant's household income and eligibility for enrollment in such plan for plan years beginning in the subsequent year.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H3C40001DC10844548D1E1FAB65DF1F2D"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2027.</text></subsection></section> <section id="HD06E51E88E5145D093AE1069D09A464D"><enum>71304.</enum><header>Disallowing premium tax credit in case of certain coverage enrolled in during special enrollment period</header> <subsection id="H2A9B88306A7047DBBB0D2A5626FA0F06"><enum>(a)</enum><header>In general</header><text>Section 36B(c)(3)(A), as amended by the preceding provisions of this Act, is amended by adding at the end the following new clause:</text>
<quoted-block id="H2C2070E661A74F81B7AB84F76E38EB1C" display-inline="no-display-inline" style="OLC">
<clause id="H7442E44EFC164AE29AB4FFAB061D7D8E"><enum>(iii)</enum><header>Exception in case of certain special enrollment periods</header><text>Such term shall not include any plan enrolled in during a special enrollment period provided for by an Exchange—</text> <subclause id="H937D77964B8B446080852B8712171990"><enum>(I)</enum><text>on the basis of the relationship of the individual's expected household income to such a percentage of the poverty line (or such other amount) as is prescribed by the Secretary of Health and Human Services for purposes of such period, and</text></subclause>
<subclause id="H3E5B26709417476390DB4D5B6C7943AB"><enum>(II)</enum><text>not in connection with the occurrence of an event or change in circumstances specified by the Secretary of Health and Human Services for such purposes.</text></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HF3D4C2A30E0649BFBCF523F80F378A57"><enum>(b)</enum><header>Effective date</header><text>The amendments made by this section shall apply with respect to plan years beginning after December 31, 2025.</text></subsection></section>
<section id="HEFCBD63BC16C44AEBBF79F94FDE12819"><enum>71305.</enum><header>Eliminating limitation on recapture of advance payment of premium tax credit</header>
<subsection id="H4A7301C10E574317ABBFB31B1B706984"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(f)(2)</external-xref> is amended by striking subparagraph (B).</text></subsection> <subsection id="HC71AE037A3CB4689B41977F21ECA024C"><enum>(b)</enum><header>Conforming amendments</header> <paragraph id="HC61FA91E945E415BB15F29A1A094922B"><enum>(1)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/36B">Section 36B(f)(2)</external-xref> is amended by striking <quote><header-in-text level="section" style="traditional">advance payments</header-in-text>.—</quote> and all that follows through <quote>If the advance payments</quote> and inserting the following: <quote><header-in-text level="section" style="traditional">advance payments</header-in-text>.—If the advance payments</quote>.</text></paragraph>
<paragraph id="HD561AE48D2C04E809675B62809852C21"><enum>(2)</enum><text><external-xref legal-doc="usc" parsable-cite="usc/26/35">Section 35(g)(12)(B)(ii)</external-xref> is amended by striking <quote>then section 36B(f)(2)(B) shall be applied by substituting the amount determined under clause (i) for the amount determined under section 36B(f)(2)(A)</quote> and inserting <quote>then the amount determined under clause (i) shall be substituted for the amount determined under section 36B(f)(2)</quote>.</text></paragraph></subsection> <subsection id="HE0773FCE385C4E02A89F0958E69CCD3A"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to taxable years beginning after December 31, 2025.</text></subsection></section></subchapter>
<subchapter id="HB9E9DEFEE2304ACBB815E833E661F4AA" style="OLC"><enum>C</enum><header>Enhancing choice for patients</header>
<section id="HA79550199F794ED69EACEDD1E6B65603"><enum>71306.</enum><header>Permanent extension of safe harbor for absence of deductible for telehealth services</header>
<subsection commented="no" display-inline="no-display-inline" id="H8A3B039345F04D3BA53EF8E4BD8FE9D0"><enum>(a)</enum><header>In general</header><text>Subparagraph (E) of <external-xref legal-doc="usc" parsable-cite="usc/26/223">section 223(c)(2)</external-xref> is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H730729AE04454E519A9C89CCED274C73"> <subparagraph id="H916E72C12F824E50B7FA62B60643A249"><enum>(E)</enum><header>Safe harbor for absence of deductible for telehealth</header><text>A plan shall not fail to be treated as a high deductible health plan by reason of failing to have a deductible for telehealth and other remote care services.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H063505C2B4094FE084168F75A63DE3D8"><enum>(b)</enum><header>Certain coverage disregarded</header><text>Clause (ii) of <external-xref legal-doc="usc" parsable-cite="usc/26/223">section 223(c)(1)(B)</external-xref> is amended by striking <quote>(in the case of months or plan years to which paragraph (2)(E) applies)</quote>.</text></subsection> <subsection id="HB296526DDFB14B7580CF3AE713A25A7C"><enum>(c)</enum><header>Effective date</header><text>The amendments made by this section shall apply to plan years beginning after December 31, 2024.</text></subsection></section>
<section id="HBA505986FC0E4EB995CC956B70E31E5C"><enum>71307.</enum><header>Allowance of bronze and catastrophic plans in connection with health savings accounts</header>
<subsection id="H5AA6755176C744939C1C6FCA50624E1E"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/223">Section 223(c)(2)</external-xref> is amended by adding at the end the following new subparagraph:</text> <quoted-block id="H5CE0A84277004715B8C1ADF8CCFA70BB" display-inline="no-display-inline" style="OLC"> <subparagraph id="H7BD48E84F2FE4AEC8312E1B84025C96D"><enum>(H)</enum><header>Bronze and catastrophic plans treated as high deductible health plans</header><text>The term <term>high deductible health plan</term> shall include any plan which is—</text>
<clause id="HFD30FF8271F5489CA6985211863BB403"><enum>(i)</enum><text>available as individual coverage through an Exchange established under section 1311 or 1321 of the Patient Protection and Affordable Care Act, and</text></clause> <clause id="H575BB530BBD747B19FD1FAE2F19420B5"><enum>(ii)</enum><text>described in subsection (d)(1)(A) or (e) of section 1302 of such Act.</text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H65E3DF349CFC456394416938B1F76F96"><enum>(b)</enum><header>Effective date</header><text>The amendment made by this section shall apply to months beginning after December 31, 2025.</text></subsection></section> <section id="H43D429C4F05F438381D41C5A5CE0769E"><enum>71308.</enum><header>Treatment of direct primary care service arrangements</header> <subsection id="H5B6BDCA8F0B440189B9FC09A056A0B12"><enum>(a)</enum><header>In general</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/223">Section 223(c)(1)</external-xref> is amended by adding at the end the following new subparagraph:</text>
<quoted-block id="H63257ACC04CF4CCA96C0C730954AD6F9" display-inline="no-display-inline" style="OLC">
<subparagraph id="H47E98CA1EB21423C820EA85C7DA84D28"><enum>(E)</enum><header>Treatment of direct primary care service arrangements</header>
<clause id="HD3AF63C8FFED47AEB8F253DC6C6F97E4"><enum>(i)</enum><header>In general</header><text>A direct primary care service arrangement shall not be treated as a health plan for purposes of subparagraph (A)(ii).</text></clause> <clause id="H2F77338813B241359ED316D18027DF2D"><enum>(ii)</enum><header>Direct primary care service arrangement</header><text>For purposes of this subparagraph—</text>
<subclause id="H7BA72A2538CB418CB7FDD228DA7C8656"><enum>(I)</enum><header>In general</header><text>The term <term>direct primary care service arrangement</term> means, with respect to any individual, an arrangement under which such individual is provided medical care (as defined in section 213(d)) consisting solely of primary care services provided by primary care practitioners (as defined in section 1833(x)(2)(A) of the <act-name parsable-cite="SSA">Social Security Act</act-name>, determined without regard to clause (ii) thereof), if the sole compensation for such care is a fixed periodic fee.</text></subclause> <subclause id="H094642D6535547C3A3538E465C69BE7A"><enum>(II)</enum><header>Limitation</header><text>With respect to any individual for any month, such term shall not include any arrangement if the aggregate fees for all direct primary care service arrangements (determined without regard to this subclause) with respect to such individual for such month exceed $150 (twice such dollar amount in the case of an individual with any direct primary care service arrangement (as so determined) that covers more than one individual).</text></subclause></clause>
<clause id="H9DF9A174E421425A92CE02D248BE561B"><enum>(iii)</enum><header>Certain services specifically excluded from treatment as primary care services</header><text>For purposes of this subparagraph, the term <term>primary care services</term> shall not include—</text> <subclause id="H8783281CEDED4A94B71B922BCD4D6373"><enum>(I)</enum><text>procedures that require the use of general anesthesia,</text></subclause>
<subclause id="H8C4C90E02132480D9CA31EF370746D8F"><enum>(II)</enum><text>prescription drugs (other than vaccines), and</text></subclause> <subclause id="H82940856712E4532AC2FBD971033822B"><enum>(III)</enum><text>laboratory services not typically administered in an ambulatory primary care setting.</text></subclause><continuation-text continuation-text-level="clause">The Secretary, after consultation with the Secretary of Health and Human Services, shall issue regulations or other guidance regarding the application of this clause.</continuation-text></clause></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H21CC534DD6724DDE9843066551D08FAE"><enum>(b)</enum><header>Direct primary care service arrangement fees treated as medical expenses</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/223">Section 223(d)(2)(C)</external-xref> is amended by striking <quote>or</quote> at the end of clause (iii), by striking the period at the end of clause (iv) and inserting <quote>, or</quote>, and by adding at the end the following new clause:</text> <quoted-block id="H6C6461D2E8CD4A84A3DE054EEBE46877" display-inline="no-display-inline" style="OLC"> <clause id="HC90E287F42FF46238E233F14ABAB2C0D"><enum>(v)</enum><text>any direct primary care service arrangement.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HEAFDAA4C253A48D3A20D31FC3E53753B"><enum>(c)</enum><header>Inflation adjustment</header><text><external-xref legal-doc="usc" parsable-cite="usc/26/223">Section 223(g)(1)</external-xref> is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H5BB6A5237E1246DDAAEE04145F6E4248"><enum>(1)</enum><text>by striking <quote>in subsections (b)(2) and (c)(2)(A)</quote> and inserting <quote>in subsections (b)(2), (c)(2)(A), and in the case of taxable years beginning after 2026, (c)(1)(E)(ii)(II)</quote>,</text></paragraph>
<paragraph id="HDFF5DCF024454293ADF96A09F1C27EC2"><enum>(2)</enum><text>in subparagraph (B), by striking <quote>clause (ii)</quote> in clause (i) and inserting <quote>clauses (ii) and (iii)</quote>, by striking <quote>and</quote> at the end of clause (i), by striking the period at the end of clause (ii) and inserting <quote>, and</quote>, and by inserting after clause (ii) the following new clause:</text> <quoted-block id="H44EC7C7BD6544878B0685B8A57E4C3B3" display-inline="no-display-inline" style="OLC"> <clause id="HCB57A9F4897B40258F9F00B84CBF999B"><enum>(iii)</enum><text>in the case of the dollar amount in subsection (c)(1)(E)(ii)(II), <quote>calendar year 2025</quote>.</text></clause><after-quoted-block>, and</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HAD73EED4CF2442049F6765D8E0E647CF"><enum>(3)</enum><text>by inserting <quote>, (c)(1)(E)(ii)(II),</quote> after <quote>(b)(2)</quote> in the last sentence.</text></paragraph></subsection> <subsection id="H08EAB1E8E7E94C49A549C4CC2AAB4A33"><enum>(d)</enum><header>Effective date</header><text>The amendments made by this section shall apply to months beginning after December 31, 2025.</text></subsection></section></subchapter></chapter>
<chapter id="H505671F5D7A34FEE8419A8C2EAB8421A" style="OLC" commented="no"><enum>4</enum><header>Protecting Rural Hospitals and Providers</header>
<section id="HCA291F196BF24A6CBBE70E3E328B0D01" commented="no"><enum>71401.</enum><header>Rural Health Transformation Program</header>
<subsection commented="no" display-inline="no-display-inline" id="H90A702618F1247949F5AABE4E3625856"><enum>(a)</enum><header>In general</header><text>Section 2105 of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1397ee">42 U.S.C. 1397ee</external-xref>) is amended by adding at the end the following new subsection:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H684A5964948C4701BD2287B23C588B7A"> <subsection commented="no" display-inline="no-display-inline" id="HCABE332DA92345A38F33330225BEA353"><enum>(h)</enum><header>Rural health transformation program</header> <paragraph id="H80A44DD47AEF4D2EA66DE847981FBF5C"><enum>(1)</enum><header>Appropriation</header> <subparagraph commented="no" display-inline="no-display-inline" id="H361773196FF34CE59F29C86F0523FDFA"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">There are appropriated, out of any money in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services (in this subsection referred to as the <quote>Administrator</quote>), to provide allotments to States for purposes of carrying out the activities described in paragraph (6)—</text>
<clause commented="no" display-inline="no-display-inline" id="H90B7AFB5B20747FF9DF4709DBE364581"><enum>(i)</enum><text display-inline="yes-display-inline">$10,000,000,000 for fiscal year 2026;</text></clause> <clause commented="no" display-inline="no-display-inline" id="HD6DD7242BA0B44EB82C124205F6588C4"><enum>(ii)</enum><text>$10,000,000,000 for fiscal year 2027;</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H203FAAA4305C430AB35ADED3B6AA8236"><enum>(iii)</enum><text>$10,000,000,000 for fiscal year 2028;</text></clause> <clause commented="no" display-inline="no-display-inline" id="HA518C8365250442DB2A2A105D5C90375"><enum>(iv)</enum><text>$10,000,000,000 for fiscal year 2029; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HF670C9665655479CB435569578F594A7"><enum>(v)</enum><text>$10,000,000,000 for fiscal year 2030.</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HA7B76313F3004AC19DA091C196CB6D04"><enum>(B)</enum><header>Unexpended or unobligated funds</header> <clause commented="no" display-inline="no-display-inline" id="H47149FE521114FB2A620B6ED084734EA"><enum>(i)</enum><header>In general</header><text display-inline="yes-display-inline">Any amounts appropriated under subparagraph (A) that are unexpended or unobligated as of October 1, 2032, shall be returned to the Treasury of the United States.</text></clause>
<clause id="H4BA5FD98E578476DBAD47D79A04410A8"><enum>(ii)</enum><header>Redistribution of unexpended or unobligated funds</header><text>In carrying out subparagraph (A), the Administrator shall, not later than March 31, 2028, and annually thereafter through March 31, 2032, determine the amount of funds, if any, that are available under such subparagraph for a previous fiscal year, are unexpended or unobligated with respect to such fiscal year, and will not be available to a State in the current fiscal year, pursuant to clause (iii).</text></clause> <clause id="H65A3A9C59D254E149DBF6001CEB148D7"><enum>(iii)</enum><header>Availability of funds</header> <subclause id="HDF5AC40420CE4136BC659CF104BDE3D7"><enum>(I)</enum><header>In general</header><text>Amounts allotted to a State under this subsection for a year shall be available for expenditure by the State through the end of the fiscal year following the fiscal year in which such amounts are allotted.</text></subclause>
<subclause id="H83F4F0A7898345C6BE24D866CC0C2621"><enum>(II)</enum><header>Availability of amounts redistributed</header><text>Amounts redistributed to a State under clause (ii) with respect to a fiscal year shall be available for expenditure by the State through the end of the fiscal year following the fiscal year in which such amounts are redistributed (except in the case of amounts redistributed in fiscal year 2032 which shall only be available for expenditure through September 30, 2032).</text></subclause></clause> <clause id="H5E0C79C3EEC64BC88CB4ABF426FDE5FC"><enum>(iv)</enum><header>Misuse of funds</header><text>If the Administrator determines that a State is not using amounts allotted or redistributed to the State under this subsection in a manner consistent with the description provided by the State in its application approved under paragraph (2), the Administrator may withhold payments to, or reduce payments to, or recover previous payments from, the State under this subsection as the Administrator deems appropriate, and any amounts so withheld, or that remain after any such reduction, or so recovered, shall be returned to the Treasury of the United States.</text></clause></subparagraph></paragraph>
<paragraph id="HBF0DAF4AF11B427584F51A47F657E2A5"><enum>(2)</enum><header>Application</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H5CFA5D09AEE0443F93E66A2B319191F2"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">To be eligible for an allotment under this subsection, a State shall submit to the Administrator during an application submission period to be specified by the Administrator (but that ends not later than December 31, 2025) an application in such form and manner as the Administrator may specify, that includes—</text> <clause id="HCA2E283A06B1437A92347ADD72AF3A0F"><enum>(i)</enum><text>a detailed rural health transformation plan—</text>
<subclause id="HB04C8214169D4D38A77D288FB7889776"><enum>(I)</enum><text>to improve access to hospitals, other health care providers, and health care items and services furnished to rural residents of the State;</text></subclause> <subclause id="H358966F5E50F43EB92984ECEEFD79FDB"><enum>(II)</enum><text>to improve health care outcomes of rural residents of the State;</text></subclause>
<subclause id="H42F509D53521405A870C4BD2A49335DC"><enum>(III)</enum><text>to prioritize the use of new and emerging technologies that emphasize prevention and chronic disease management;</text></subclause> <subclause id="H157E39375CDC45219EC974ECD29573A6"><enum>(IV)</enum><text>to initiate, foster, and strengthen local and regional strategic partnerships between rural hospitals and other health care providers in order to promote measurable quality improvement, increase financial stability, maximize economies of scale, and share best practices in care delivery;</text></subclause>
<subclause id="H330B9F769558432893652C1A4F7BD27A"><enum>(V)</enum><text>to enhance economic opportunity for, and the supply of, health care clinicians through enhanced recruitment and training; </text></subclause> <subclause id="H44BCC59EF9B44F66A2E821DF9F1F8E80"><enum>(VI)</enum><text>to prioritize data and technology driven solutions that help rural hospitals and other rural health care providers furnish high-quality health care services as close to a patient's home as is possible;</text></subclause>
<subclause id="H77033F09B5CF4200BA9640963E0E8308"><enum>(VII)</enum><text>that outlines strategies to manage long-term financial solvency and operating models of rural hospitals in the State; and</text></subclause> <subclause id="HD9600562A6D14AB3919C1A5295858B4E"><enum>(VIII)</enum><text>that identifies specific causes driving the accelerating rate of stand-alone rural hospitals becoming at risk of closure, conversion, or service reduction;</text></subclause></clause>
<clause id="HFA2A9C30037F47E9A9058EC6EEF116DF"><enum>(ii)</enum><text>a certification that none of the amounts provided under this subsection shall be used by the State for an expenditure that is attributable to an intergovernmental transfer, certified public expenditure, or any other expenditure to finance the non-Federal share of expenditures required under any provision of law, including under the State plan established under this title, the State plan established under title XIX, or under a waiver of such plans; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H9E455B9C348540ACA507EF902573BB6B"><enum>(iii)</enum><text display-inline="yes-display-inline">such other information as the Administrator may require.</text></clause></subparagraph>
<subparagraph id="H09DCB1D8881C4C198E5EE6C431F5DA5B" commented="no" display-inline="no-display-inline"><enum>(B)</enum><header display-inline="yes-display-inline">Deadline for approval</header><text display-inline="yes-display-inline">Not later than <italic></italic>December 31, 2025, the Administrator shall approve or deny all applications submitted for an allotment under this subsection. </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H361BDA9D9B41400D8526CD960CA2C6E8"><enum>(C)</enum><header>One-time application</header><text>If an application of a State for an allotment under this subsection is approved by the Administrator, the State shall be eligible for an allotment under this subsection for each of fiscal years 2026 through 2030, except as provided in paragraph (1)(B)(iv).</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HD0250E02406342F29D30829EC3FFB215"><enum>(D)</enum><header>Eligibility</header><text>Only the 50 States shall be eligible for an allotment under this subsection and all references in this subsection to a State shall be treated as only referring to the 50 States.</text></subparagraph></paragraph> <paragraph id="HFD7EA1D3A0C84E97AB90339C092E07AC"><enum>(3)</enum><header>Allotments</header> <subparagraph commented="no" display-inline="no-display-inline" id="H30FA7FDAA9844CB5AB7EC77C9AEFB83D"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">For each of fiscal years 2026 through 2030, the Administrator shall determine under subparagraph (B) the amount of the allotment for such fiscal year for each State with an approved application under this subsection.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HFD85B0EBD5544A689BB33A0F71F026DD"><enum>(B)</enum><header display-inline="yes-display-inline">Amount determined</header><text>Subject to subparagraph (C), from the amounts appropriated under paragraph (1)(A) for each of fiscal years 2026 through 2030, the Administrator shall allot—</text> <clause commented="no" display-inline="no-display-inline" id="HB3599274D949414FBE16D902AF5FCFEE"><enum>(i)</enum><text display-inline="yes-display-inline">50 percent of the amounts appropriated for each such fiscal year equally among all States with an approved application under this subsection; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H8C0B2190564F46C49BFD47C323D806BA"><enum>(ii)</enum><text display-inline="yes-display-inline">50 percent of the amounts appropriated for each such fiscal year among all such States in an amount to be determined by the Administrator in accordance with subparagraph (C).</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H06EDEA5C646040CB969A473D12B0BA20"><enum>(C)</enum><header>Requirements</header><text>In determining the amount to be allotted to a State under clause (ii) of subparagraph (B) for a fiscal year, the Administrator shall—</text>
<clause commented="no" display-inline="no-display-inline" id="H3050B7062E044BBEBA4B723C85515548"><enum>(i)</enum><text display-inline="yes-display-inline">ensure that not less than <fraction>1/4</fraction> of the States with an approved application under this subsection for a fiscal year are allotted funds from amounts that are to be allotted under clause (ii) of such subparagraph; and </text></clause> <clause commented="no" display-inline="no-display-inline" id="H06C0A0872B4E4D22AF8A9A54A2E906AE"><enum>(ii)</enum><text display-inline="yes-display-inline">consider—</text>
<subclause commented="no" display-inline="no-display-inline" id="H82090132820947B5AD1ABB17BE8DAAAE"><enum>(I)</enum><text>the percentage of the State population that is located in a rural census tract of a metropolitan statistical area (as determined under the most recent modification of the Goldsmith Modification, originally published in the Federal Register on February 27, 1992 (57 Fed. Reg. 6725));</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="H1BC5557BB411491ABAA9295FD501B55A"><enum>(II)</enum><text>the proportion of rural health facilities (as defined in subparagraph (D)) in the State relative to the number of rural health facilities nationwide;</text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="HD38C5F8C038444ACA5FFC937E6CBA598"><enum>(III)</enum><text>the situation of hospitals in the State, as described in section 1902(a)(13)(A)(iv); and</text></subclause> <subclause id="H0ACC9F1EC306449C8FE20886FEB1F013"><enum>(IV)</enum><text>any other factors that the Administrator determines appropriate.</text></subclause></clause></subparagraph>
<subparagraph id="HD565E8AE44224ED88DBFC9A750D299EB"><enum>(D)</enum><header>Rural health facility defined</header><text>For the purposes of subparagraph (C)(ii), the term <quote>rural health facility</quote> means the following:</text> <clause id="HFBA7E754D59844A9BD6BDC0342BEBAD5"><enum>(i)</enum><text>A subsection (d) hospital (as defined in paragraph (1)(B) of section 1886(d)) that—</text>
<subclause commented="no" display-inline="no-display-inline" id="HFEDB2FE63E2D43D984F191A83BC77280"><enum>(I)</enum><text display-inline="yes-display-inline">is located in a rural area (as defined in paragraph (2)(D) of such section); </text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HCE743597E9294F8EA5FED39FC59D4839"><enum>(II)</enum><text display-inline="yes-display-inline">is treated as being located in a rural area pursuant to paragraph (8)(E) of such section; or </text></subclause>
<subclause commented="no" display-inline="no-display-inline" id="H22DB47BCDD2540B5A26352B7C12599CE"><enum>(III)</enum><text display-inline="yes-display-inline">is located in a rural census tract of a metropolitan statistical area (as determined under the most recent modification of the Goldsmith Modification, originally published in the Federal Register on February 27, 1992 (57 Fed. Reg. 6725)).</text></subclause></clause> <clause id="H241AE8A23EEC453784CFC8D2F888BD99"><enum>(ii)</enum><text>A critical access hospital (as defined in section 1861(mm)(1)).</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HD03B266E2DC9451FB79BDE448623FF19"><enum>(iii)</enum><text>A sole community hospital (as defined in section 1886(d)(5)(D)(iii)).</text></clause> <clause commented="no" display-inline="no-display-inline" id="H988EDAE510B743A6AB075866A465E9F3"><enum>(iv)</enum><text>A Medicare-dependent, small rural hospital (as defined in section 1886(d)(5)(G)(iv)). </text></clause>
<clause commented="no" display-inline="no-display-inline" id="H9A01093E1D454CC0B620F62B3ADFC8EC"><enum>(v)</enum><text>A low-volume hospital (as defined in section 1886(d)(12)(C)).</text></clause> <clause commented="no" display-inline="no-display-inline" id="H1DFB3BA6B18E40F89018AA74DE80072D"><enum>(vi)</enum><text display-inline="yes-display-inline">A rural emergency hospital (as defined in section 1861(kkk)(2)).</text></clause>
<clause id="H7CB1C6325FDE421F8DE26790A2B8E143"><enum>(vii)</enum><text>A rural health clinic (as defined in section 1861(aa)(2)).</text></clause> <clause commented="no" display-inline="no-display-inline" id="HE8CD4C6DA820405AA4EC40302FD5628D"><enum>(viii)</enum><text>A Federally qualified health center (as defined in section 1861(aa)(4)).</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HE690B8F0FDA3464BA1BF07BFF3CDB1F9"><enum>(ix)</enum><text>A community mental health center (as defined in section 1861(ff)(3)(B)).</text></clause> <clause id="HB0026ABEC32347ABB0BC3E42DB91A3CD"><enum>(x)</enum><text>A health center that is receiving a grant under section 330 of the Public Health Service Act.</text></clause>
<clause id="HF6F7D29BBE0C4FDD84DE30F073F7EB47"><enum>(xi)</enum><text>An opioid treatment program (as defined in section 1861(jjj)(2)) that is located in a rural census tract of a metropolitan statistical area (as determined under the most recent modification of the Goldsmith Modification, originally published in the Federal Register on February 27, 1992 (57 Fed. Reg. 6725)).</text></clause> <clause id="H15628E33C58B435BAA27227DBCDCCF47"><enum>(xii)</enum><text>A certified community behavioral health clinic (as defined in section 1905(jj)(2)) that is located in a rural census tract of a metropolitan statistical area (as determined under the most recent modification of the Goldsmith Modification, originally published in the Federal Register on February 27, 1992 (57 Fed. Reg. 6725)).</text></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H4DC478A0B94143498483279C9509B4BB"><enum>(4)</enum><header display-inline="yes-display-inline">No matching payment</header><text>A State approved for an allotment under this subsection for a fiscal year shall not be required to provide any matching funds as a condition for receiving payments from the allotment.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HE38BC2BB0D3D45B88C790DCCAB4A4823"><enum>(5)</enum><header display-inline="yes-display-inline">Terms and conditions</header><text>The Administrator shall specify such terms and conditions for allotments to States provided under this subsection as the Administrator deems appropriate, including the following:</text>
<subparagraph id="H43636A10B93740B3B6270936C329E8A6"><enum>(A)</enum><text>Each State shall submit to the Administrator (at a time, and in a form and manner, specified by the Administrator)—</text> <clause id="HE3D5BDE8F92E4FD9B17DFC2964D2A9C2"><enum>(i)</enum><text>a plan for the State to use its allotment to carry out 3 or more of the activities described in paragraph (6); and</text></clause>
<clause id="H03EB2D5C3DCD402BA9A926A41C1071CB"><enum>(ii)</enum><text>annual reports on the use of allotments, including such additional information as the Administrator determines appropriate.</text></clause></subparagraph> <subparagraph id="HFED7105037624E7E8CF577746F73A96F"><enum>(B)</enum><text>Not more than 10 percent of the amount allotted to a State for a fiscal year may be used by the State for administrative expenses.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HFC1D172C201F4D09B10F32A119B3477C"><enum>(6)</enum><header display-inline="yes-display-inline">Use of funds</header><text>Amounts allotted to a State under this subsection shall be used for 3 or more of the following health-related activities:</text> <subparagraph id="H5A54692CB3BF40F89D08CFADB8540EE5"><enum>(A)</enum><text>Promoting evidence-based, measurable interventions to improve prevention and chronic disease management.</text></subparagraph>
<subparagraph id="HE243D93B59124A9DBA0AD8650D205B38"><enum>(B)</enum><text>Providing payments to health care providers for the provision of health care items or services, as specified by the Administrator.</text></subparagraph> <subparagraph id="H9F036CD94CEB410497D9D4F5381255EF"><enum>(C)</enum><text>Promoting consumer-facing, technology-driven solutions for the prevention and management of chronic diseases.</text></subparagraph>
<subparagraph id="H4294A3FFFD8D4883867B1BD515BDC804"><enum>(D)</enum><text>Providing training and technical assistance for the development and adoption of technology-enabled solutions that improve care delivery in rural hospitals, including remote monitoring, robotics, artificial intelligence, and other advanced technologies.</text></subparagraph> <subparagraph id="H92F49E4A92A5482A862AAFD349CA38A6"><enum>(E)</enum><text>Recruiting and retaining clinical workforce talent to rural areas, with commitments to serve rural communities for a minimum of 5 years.</text></subparagraph>
<subparagraph id="H1D74FFD378DF44BBACA08D907D5A1513"><enum>(F)</enum><text>Providing technical assistance, software, and hardware for significant information technology advances designed to improve efficiency, enhance cybersecurity capability development, and improve patient health outcomes.</text></subparagraph> <subparagraph id="H906E271866934F588CFA26AC6BC1932B"><enum>(G)</enum><text>Assisting rural communities to right size their health care delivery systems by identifying needed preventative, ambulatory, pre-hospital, emergency, acute inpatient care, outpatient care, and post-acute care service lines.</text></subparagraph>
<subparagraph id="HB60336B2B9C84E539D3D3F95BE7CF33D"><enum>(H)</enum><text>Supporting access to opioid use disorder treatment services (as defined in section 1861(jjj)(1)), other substance use disorder treatment services, and mental health services.</text></subparagraph> <subparagraph id="HE005DAF1BAC84000911FB85905F3DF9D"><enum>(I)</enum><text>Developing projects that support innovative models of care that include value-based care arrangements and alternative payment models, as appropriate.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H23FD77B0BC944D9BB30FB97E850D0914"><enum>(J)</enum><text>Additional uses designed to promote sustainable access to high quality rural health care services, as determined by the Administrator.</text></subparagraph></paragraph> <paragraph id="H83D3152BA51D464FB1AF7057DF8E110C"><enum>(7)</enum><header>Exemptions</header><text>Paragraphs (2), (3), (5), (6), (8), (10), (11), and (12) of subsection (c) do not apply to payments under this subsection.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H8962EDE941D54EFB90928349A6562918"><enum>(8)</enum><header>Review</header><text>There shall be no administrative or judicial review under section 1116 or otherwise of amounts allotted or redistributed to States under this subsection, payments to States withheld or reduced under this subsection, or previous payments recovered from States under this subsection.</text></paragraph> <paragraph id="H213E5C2EEEF040ADA96F4F2858ED49ED" commented="no" display-inline="no-display-inline"><enum>(9)</enum><header display-inline="yes-display-inline">Health care provider defined</header><text display-inline="yes-display-inline">For purposes of this subsection, the term <term>health care provider</term> means a provider of services or supplier who is enrolled under this title, title XVIII, or title XIX.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HA908D2B5D3214D70BC838081514BB39F"><enum>(b)</enum><header>Conforming amendments</header><text>Title XXI of the Social Security Act (<external-xref legal-doc="usc" parsable-cite="usc/42/1397aa">42 U.S.C. 1397aa</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H82BC67B33FA14556B7CD70E508FDFC6F"><enum>(1)</enum><text>in section 2101—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HC58ACA60EE59475DA731DE601E09448A"><enum>(A)</enum><text display-inline="yes-display-inline">in subsection (a), in the matter preceding paragraph (1), by striking <quote>The purpose</quote> and inserting <quote>Except with respect to the rural health transformation program established in section 2105(h), the purpose</quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HEFE9B9ECA9F94BF3BAB9D7AB5DE73A49"><enum>(B)</enum><text>in subsection (b), in the matter preceding paragraph (1), by inserting <quote>subsection (a) or (g) of</quote> before <quote>section 2105</quote>;</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H134BD4050E134BA2B22E103FD2689834"><enum>(2)</enum><text>in section 2105(c)(1), by striking <quote>and may not include</quote> and inserting <quote>or to carry out the rural health transformation program established in subsection (h) and, except in the case of amounts made available under subsection (h), may not include</quote>; and</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HACA978D8CF8D4D38AD1CF2BF234124E3"><enum>(3)</enum><text>in section 2106(a)(1), by inserting <quote>subsection (a) or (g) of</quote> before <quote>section 2105</quote>.</text></paragraph></subsection>
<subsection id="HC7F8359F7E394A5AB7530451E24B4BB5" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header>Implementation</header><text>The Administrator of the Centers for Medicare &amp; Medicaid Services shall implement this section, including the amendments made by this section, by program instruction or other forms of program guidance.</text></subsection> <subsection id="H35262C47AFBC4086B980E8FFE7191EF8" commented="no" display-inline="no-display-inline"><enum>(d)</enum><header>Implementation funding</header><text display-inline="yes-display-inline">For the purposes of carrying out the provisions of, and the amendments made by, this section, there are appropriated, out of any monies in the Treasury not otherwise appropriated, to the Administrator of the Centers for Medicare &amp; Medicaid Services, $200,000,000 for fiscal year 2025, to remain available until expended.</text></subsection></section></chapter></subtitle>
<subtitle id="HB6EA32170C0C48E2B4865BDE2408F841" style="OLC"><enum>C</enum><header>Increase in debt limit</header>
<section id="H90D0EF7EC4064497B13A2C345BC929D5"><enum>72001.</enum><header>Modification of limitation on the public debt</header><text display-inline="no-display-inline">The limitation under section 3101(b) of title 31, United States Code, as most recently increased by section 401(b) of <external-xref legal-doc="public-law" parsable-cite="pl/118/5">Public Law 118–5</external-xref> (<external-xref legal-doc="usc" parsable-cite="usc/31/3101">31 U.S.C. 3101</external-xref> note), is increased by $5,000,000,000,000.</text></section></subtitle> <subtitle id="H3E28ABE96E8E49CAAA77B7BA1BF2054D" style="OLC"><enum>D</enum><header>Unemployment</header> <section id="HD36FAEBCD604424399880BAB5C5F0879"><enum>73001.</enum><header>Ending unemployment payments to jobless millionaires</header> <subsection id="H8AC1F626514E4639B73CD31E28266A8F"><enum>(a)</enum><header>Prohibition on use of Federal funds</header> <paragraph commented="no" display-inline="no-display-inline" id="HABC62E872E6C43A79788012232E7787E"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">No Federal funds may be used—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HE56A59D6B8114672B6059ACD39A5DA57"><enum>(A)</enum><text display-inline="yes-display-inline">to make payments of unemployment compensation benefits under an unemployment compensation program of the United States in a year to an individual whose wages during the individual's base period are equal to or exceed $1,000,000; or</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H471422AD85BB41959F9E1427F83A826F"><enum>(B)</enum><text>for any administrative costs associated with making payments described in subparagraph (A).</text></subparagraph></paragraph>
<paragraph id="H59879B4B257A475D9A043CAC694B04AE"><enum>(2)</enum><header>Compliance</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H4DF31E375CE240EE93F842D75751DCA7"><enum>(A)</enum><header>Self-certification</header><text display-inline="yes-display-inline">Any application for unemployment compensation under an unemployment compensation program of the United States shall include a form or procedure for an individual applicant to certify that such individual's wages during the individual's base period do not equal or exceed $1,000,000.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF364E629D75E4A4481F9D2B9FD8868B9"><enum>(B)</enum><header>Verification</header><text>Each State agency that is responsible for administering any unemployment compensation program of the United States shall utilize available systems to verify wage eligibility by assessing claimant income to the degree possible.</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H21FF870A469A45D4876E1C9BFAECFC10"><enum>(3)</enum><header>Recovery of overpayments</header><text>Each State agency that is responsible for administering any unemployment compensation program of the United States shall require individuals who have received amounts of unemployment compensation under such a program to which they were not entitled to repay such amounts.</text></paragraph> <paragraph id="H48D77E242456453E98B228F692766EDB"><enum>(4)</enum><header>Effective date</header><text>The prohibition under paragraph (1) shall apply to weeks of unemployment beginning on or after the date of the enactment of this Act.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H254E36EF17B44DEAA5CEA37DA251E39D"><enum>(b)</enum><header>Unemployment compensation program of the United States defined</header><text>In this section, the term <quote>unemployment compensation program of the United States</quote> means—</text> <paragraph id="H064A438DC46949069693A672CDBE747F"><enum>(1)</enum><text>unemployment compensation for Federal civilian employees under subchapter I of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/5/85">chapter 85</external-xref> of title 5, United States Code;</text></paragraph>
<paragraph id="HD445921762BB4B019AEC4F5B601D53C6"><enum>(2)</enum><text>unemployment compensation for ex-servicemembers under subchapter II of <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/5/85">chapter 85</external-xref> of title 5, United States Code;</text></paragraph> <paragraph id="H08CBA287E0164C89A65D807C6ECE0CDD"><enum>(3)</enum><text>extended benefits under the Federal-State Extended Unemployment Compensation Act of 1970 (<external-xref legal-doc="usc" parsable-cite="usc/26/3304">26 U.S.C. 3304</external-xref> note);</text></paragraph>
<paragraph id="HCFE25BF88A0E4F6783BC004936FD0030"><enum>(4)</enum><text>any Federal temporary extension of unemployment compensation;</text></paragraph> <paragraph id="H7591541FE5F542C6B00955088044B54C"><enum>(5)</enum><text>any Federal program that increases the weekly amount of unemployment compensation payable to individuals; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H86FAA9D5418F457C8EF85D89DA8575E2"><enum>(6)</enum><text>any other Federal program providing for the payment of unemployment compensation, as determined by the Secretary of Labor.</text></paragraph></subsection></section></subtitle></title> <title id="H6CB3A03743B74CB3858DCE66A1185468" style="OLC"><enum>VIII</enum><header>Committee on Health, Education, Labor, and Pensions</header> <subtitle id="H5F81287CAA1C454C92C54F697F4E698F" style="OLC"><enum>A</enum><header>Exemption of certain assets</header> <section id="H9E5D5AD48D724F18B20F6A9DA0279369" commented="no"><enum>80001.</enum><header>Exemption of certain assets</header> <subsection id="HB29C80F9A7594F0FBBE42ECE7D6B585A"><enum>(a)</enum><header>Exemption of certain assets</header><text>Section 480(f)(2) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087vv">20 U.S.C. 1087vv(f)(2)</external-xref>) is amended—</text>
<paragraph id="HCF5B9E6895B0487EAC14A8837BE46A6C"><enum>(1)</enum><text>by striking <quote>net value of the</quote> and inserting the following: “net value of—</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H53829A2A68F442958B28C72F5F6F9198"> <subparagraph id="HF79B84BDC591411293877E9338F66A6E"><enum>(A)</enum><text>the</text></subparagraph><after-quoted-block>;</after-quoted-block></quoted-block></paragraph>
<paragraph id="HA3B116266BE34D4E83457FDC5857FE2C"><enum>(2)</enum><text>by striking the period at the end and inserting a semicolon; and</text></paragraph> <paragraph id="HE2DB68F499984AC2A0500E9EAAA499E7"><enum>(3)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB6FD6752138647AABC086EBA8E03B038">
<subparagraph id="H3011C80C31B14C72B78CDB64F6A11035"><enum>(B)</enum><text>a family farm on which the family resides; </text></subparagraph> <subparagraph id="HFDED98426C8A4702A6FD2C9FB2AC534F"><enum>(C)</enum><text>a small business with not more than 100 full-time or full-time equivalent employees (or any part of such a small business) that is owned and controlled by the family; or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H1AE9101717E049BB8ABD3352F4CF2B8A"><enum>(D)</enum><text display-inline="yes-display-inline">a commercial fishing business and related expenses, including fishing vessels and permits owned and controlled by the family.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HFFB6DF7FA6554355A9547E8F76CFBEBE"><enum>(b)</enum><header>Effective date and application</header><text>The amendments made by subsection (a) shall take effect on July 1, 2026, and shall apply with respect to award year 2026–2027 and each subsequent award year, as determined under the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1001">20 U.S.C. 1001 et seq.</external-xref>). </text></subsection></section></subtitle>
<subtitle id="H47A75A7D73BA44F18F058F9DBD5896D6" style="OLC"><enum>B</enum><header>Loan Limits</header>
<section commented="no" display-inline="no-display-inline" id="H3EB57E1DAE0E479EB4257C1DC912FAF9"><enum>81001.</enum><header>Establishment of loan limits for graduate and professional students and parent borrowers; termination of graduate and professional PLUS loans</header><text display-inline="no-display-inline">Section 455(a) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(a)</external-xref>) is amended—</text> <paragraph id="HFB6C782313BD498DB6F985091D86EAA8"><enum>(1)</enum><text>in paragraph (3)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H2444339C221840B1A8305B76A1896EB8"><enum>(A)</enum><text>in the paragraph heading, by inserting <quote><header-in-text style="OLC" level="paragraph">and Federal Direct PLUS loans</header-in-text></quote> after <quote><header-in-text style="OLC" level="paragraph">loans</header-in-text></quote>;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HB6D33214135F4C998A3B1A731016198A"><enum>(B)</enum><text display-inline="yes-display-inline">by striking subparagraph (A) and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H47A382BEE1344AFCAA062411E7ECA3F7">
<subparagraph commented="no" display-inline="no-display-inline" id="HD37D7BB04278415CA18BF955D96FC5DF"><enum>(A)</enum><header>Termination of authority to make interest subsidized loans to graduate and professional students</header><text>Subject to subparagraph (B), and notwithstanding any provision of this part or part B—</text> <clause id="H99A7770063164C6CBDCD6FF79CAD3B3E"><enum>(i)</enum><text>for any period of instruction beginning on or after July 1, 2012, a graduate or professional student shall not be eligible to receive a Federal Direct Stafford loan under this part; and</text></clause>
<clause id="H6F0E6BBC45E8487F93D8350D89D4594C"><enum>(ii)</enum><text>for any period of instruction beginning on July 1, 2012, and ending on June 30, 2026, the maximum annual amount of Federal Direct Unsubsidized Stafford loans such a student may borrow in any academic year (as defined in section 481(a)(2)) or its equivalent shall be the maximum annual amount for such student determined under section 428H, plus an amount equal to the amount of Federal Direct Stafford loans the student would have received in the absence of this subparagraph.</text></clause></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HAAD606C8EF494C64844AE15467685672"><enum>(C)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H7BF5F633A7BF4DE89951CA234E5142A6">
<subparagraph commented="no" display-inline="no-display-inline" id="H5FE195D2285444328CB7240B9C87A6DD"><enum>(C)</enum><header display-inline="yes-display-inline">Termination of authority to make Federal Direct PLUS loans to graduate and professional students</header><text>Subject to paragraph (8) and notwithstanding any provision of this part or part B, for any period of instruction beginning on or after July 1, 2026, a graduate or professional student shall not be eligible to receive a Federal Direct PLUS Loan under this part.</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HAD232C55303945DB994DD7B1E8FE6B2D"><enum>(2)</enum><text display-inline="yes-display-inline">by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H5413004C3D68468299E73D0676A6A69C">
<paragraph id="HF44BA4E4CA7F4C30BED8065A15BE97D2"><enum>(4)</enum><header>Graduate and professional annual and aggregate limits for Federal Direct Unsubsidized Stafford loans beginning July 1, 2026</header>
<subparagraph id="H2063D924A33043D0A5F695A8503F99B6"><enum>(A)</enum><header>Annual limits beginning July 1, 2026</header><text>Subject to paragraphs (7)(A) and (8), beginning on July 1, 2026, the maximum annual amount of Federal Direct Unsubsidized Stafford loans—</text> <clause id="HAF7FE3EE30A3445895DD0E73CCAA2ED3"><enum>(i)</enum><text>a graduate student, who is not a professional student, may borrow in any academic year or its equivalent shall be $20,500; and</text></clause>
<clause id="H095B40EE65CA4072B332A93E0EC73F44"><enum>(ii)</enum><text>a professional student may borrow in any academic year or its equivalent shall be $50,000.</text></clause></subparagraph> <subparagraph id="H77DE7B4D85384A71B7D5718CA26EAC26"><enum>(B)</enum><header>Aggregate limits</header><text display-inline="yes-display-inline">Subject to paragraphs (6), (7)(A), and (8), beginning on July 1, 2026, the maximum aggregate amount of Federal Direct Unsubsidized Stafford loans, in addition to the amount borrowed for undergraduate education, that—</text>
<clause id="H1FF3F5AA80994C4DBA7FAA11543AC9E4"><enum>(i)</enum><text>a graduate student—</text> <subclause id="HE609C793EB0E45518D89A4CC36BC52C1"><enum>(I)</enum><text>who is not<italic></italic> (and has not been) a professional student, may borrow for programs of study described in subparagraph (C)(i) shall be $100,000; or</text></subclause>
<subclause id="H883FD75F36254782AD5747F50FEB3B77"><enum>(II)</enum><text display-inline="yes-display-inline">who is (or has been) a professional student, may borrow for programs of study described in subparagraph (C)(i) shall be an amount equal to—</text> <item id="H89CCB955BA4C4948A3780198820E826F"><enum>(aa)</enum><text display-inline="yes-display-inline">$200,000; minus</text></item>
<item id="HD34B5F0D377D4E05864D9A46F62D223A"><enum>(bb)</enum><text display-inline="yes-display-inline">the amount such student borrowed for programs of study described in subparagraph (C)(ii); and</text></item></subclause></clause> <clause id="H99D7D92125554425B6D4B1935F52B5E8"><enum>(ii)</enum><text display-inline="yes-display-inline">a professional student—</text>
<subclause id="HCB9DEE011E624512BAA8D44883BC33C7"><enum>(I)</enum><text>who is not (and has not been) a graduate student, may borrow for programs of study described in subparagraph (C)(ii) shall be $200,000; or</text></subclause> <subclause id="H44BD8B289C48407B99945E56FF823055"><enum>(II)</enum><text display-inline="yes-display-inline">who is (or has been) a graduate student, may borrow for programs of study described in subparagraph (C)(ii) shall be an amount equal to—</text>
<item id="HB1DEF81FECA941D6B9091E18FA7948A7"><enum>(aa)</enum><text display-inline="yes-display-inline">$200,000; minus</text></item> <item id="H36EEB319F97041CEA79C28EF9BD79219"><enum>(bb)</enum><text display-inline="yes-display-inline">the amount such student borrowed for programs of study described in subparagraph (C)(i).</text></item></subclause></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H6BC794AB55274B648E5931DF235F0D67"><enum>(C)</enum><header>Definitions</header>
<clause commented="no" display-inline="no-display-inline" id="H0B6722C1A92B4EA4A84AB779F0BB14FA"><enum>(i)</enum><header display-inline="yes-display-inline">Graduate student</header><text>The term <term>graduate student</term> means a student enrolled in a program of study that awards a graduate credential (other than a professional degree) upon completion of the program.</text></clause> <clause commented="no" display-inline="no-display-inline" id="H3DF6626810884EA4B96375E1DBF772C2"><enum>(ii)</enum><header display-inline="yes-display-inline">Professional student</header><text>In this paragraph, the term <term>professional student</term> means a student enrolled in a program of study that awards a professional degree, as defined under section 668.2 of title 34, Code of Federal Regulations (as in effect on the date of enactment of this paragraph), upon completion of the program.</text></clause></subparagraph></paragraph>
<paragraph id="H87C50E1947D24BC48D4973838A7E59C7"><enum>(5)</enum><header>Parent borrower annual and aggregate limits for Federal direct PLUS loans beginning July 1, 2026</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H7F0EEB78FB014B94942006BF673DCA1C"><enum>(A)</enum><header>Annual limits</header><text>Subject to paragraph (8) and notwithstanding any provision of this part or part B, beginning on July 1, 2026, for each dependent student, the total maximum annual amount of Federal Direct PLUS loans that may be borrowed on behalf of that dependent student by all parents of that dependent student shall be $20,000.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HE58EF528202B4775B92324B862852B10"><enum>(B)</enum><header display-inline="yes-display-inline">Aggregate limits</header><text display-inline="yes-display-inline">Subject to paragraph (8) and notwithstanding any provision of this part or part B, beginning on July 1, 2026, for each dependent student, the total maximum aggregate amount of Federal Direct PLUS loans that may be borrowed on behalf of that dependent student by all parents of that dependent student shall be $65,000, without regard to any amounts repaid, forgiven, canceled, or otherwise discharged on any such loan. </text></subparagraph></paragraph>
<paragraph id="HC9491F4D59CB41BBA81FC1B3C5AB43EF" commented="no"><enum>(6)</enum><header>Lifetime maximum aggregate amount for all students</header><text display-inline="yes-display-inline">Subject to paragraph (8) and notwithstanding any provision of this part or part B, beginning on July 1, 2026, the maximum aggregate amount of loans made, insured, or guaranteed under this title that a student may borrow (other than a Federal Direct PLUS loan, or loan under section 428B, made to the student as a parent borrower on behalf of a dependent student) shall be $257,500, without regard to any amounts repaid, forgiven, canceled, or otherwise discharged on any such loan. <italic></italic></text></paragraph> <paragraph id="H7E15E7B870634E78966744E990691563" commented="no"><enum>(7)</enum><header>Additional rules regarding annual loan limits</header> <subparagraph id="H952688A96C6B4B3A93AE704A6693E6EA" commented="no"><enum>(A)</enum><header>Less than full-time enrollment</header><text display-inline="yes-display-inline">Notwithstanding any provision of this part or part B, in any case in which a student is enrolled in a program of study of an institution of higher education on less than a full-time basis during any academic year, the amount of a loan that student may borrow for an academic year or its equivalent shall be reduced in direct proportion to the degree to which that student is not so enrolled on a full-time basis, rounded to the nearest whole percentage point, as provided in a schedule of reductions published by the Secretary computed for purposes of this subparagraph.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF1E9D00FFC8F4393AE2D8D597324DBB6"><enum>(B)</enum><header display-inline="yes-display-inline">Institutionally determined limits</header><text display-inline="yes-display-inline">Notwithstanding the annual loan limits established under this section and, for undergraduate students, under this part and part B, beginning on July 1, 2026, an institution of higher education (at the discretion of a financial aid administrator at the institution) may limit the total amount of loans made under this part for a program of study for an academic year that a student may borrow, and that a parent may borrow on behalf of such student, as long as any such limit is applied consistently to all students enrolled in such program of study.</text></subparagraph></paragraph> <paragraph id="HE4C10C733C91463392EDA27A7A4742AB" commented="no"><enum>(8)</enum><header>Interim exception for certain students</header> <subparagraph id="HAB22DA164029430B98E33535CBF6CA47" commented="no"><enum>(A)</enum><header>Application of prior limits</header><text>Paragraphs (3)(C), (4), (5), and (6) shall not apply, and paragraph (3)(A)(ii) shall apply as such paragraph was in effect for periods of instruction ending before June 30, 2026, during the expected time to credential described in subparagraph (B), with respect to an individual who, as of June 30, 2026—</text>
<clause id="H8AB6565EC70A455CB31D46428A8A2675" commented="no"><enum>(i)</enum><text>is enrolled in a program of study at an institution of higher education; and</text></clause> <clause id="HE73AA319CFDA44189B5D3B3CBE725560" commented="no"><enum>(ii)</enum><text>has received a loan (or on whose behalf a loan was made) under this part for such program of study.</text></clause></subparagraph>
<subparagraph id="H311504D9E35A40CF84A89694C31439FE" commented="no"><enum>(B)</enum><header>Expected time to credential</header><text>For purposes of this paragraph, the expected time to credential of an individual shall be equal to the lesser of—</text> <clause id="HDD31848F442D431C8C35DE0200A59075" commented="no"><enum>(i)</enum><text display-inline="yes-display-inline">three academic years; or</text></clause>
<clause id="H169448F4455140338242F74747F2FC26" commented="no"><enum>(ii)</enum><text>the period determined by calculating the difference between—</text> <subclause id="HFF7EBA648CDF4535BAB67C08FAE3E934" commented="no"><enum>(I)</enum><text display-inline="yes-display-inline">the program length for the program of study in which the individual is enrolled; and</text></subclause>
<subclause id="H32BF1AFE72974D8EACAEAF7DEDE35AB2" commented="no"><enum>(II)</enum><text display-inline="yes-display-inline">the period of such program of study that such individual has completed as of the date of the determination under this subparagraph.</text></subclause></clause></subparagraph> <subparagraph id="H8A3D955F250A4F1B8FF0947E1957E7E8" commented="no" display-inline="no-display-inline"><enum>(C)</enum><header display-inline="yes-display-inline">Definition of program length</header><text display-inline="yes-display-inline">In this paragraph, the term <term>program length</term> means the minimum amount of time in weeks, months, or years that is specified in the catalog, marketing materials, or other official publications of an institution of higher education for a full-time student to complete the requirements for a specific program of study.</text></subparagraph></paragraph><after-quoted-block>. </after-quoted-block></quoted-block></paragraph></section></subtitle>
<subtitle id="H55CB9F5B02BD4002B19BC323F746B573" style="OLC"><enum>C</enum><header>Loan Repayment</header>
<section id="H4FA6F4CA465D407CB6A4D17CD61059FF" commented="no"><enum>82001.</enum><header>Loan repayment</header>
<subsection id="H6722A93E94B6464C8639C44D09E173CD"><enum>(a)</enum><header>Transition to income-based repayment plans</header>
<paragraph id="H318CB45C879A46709632F3A1D008E7B4"><enum>(1)</enum><header>Selection</header><text>The Secretary of Education shall take such steps as may be necessary to ensure that before July 1, 2028, each borrower who has one or more loans that are in a repayment status in accordance with, or an administrative forbearance associated with, an income contingent repayment plan authorized under section 455(e) of the Higher Education Act of 1965 (referred to in this subsection as <quote>covered income contingent loans</quote>) selects one of the following income-based repayment plans that is otherwise applicable, and for which that borrower is otherwise eligible, for the repayment of the covered income contingent loans of the borrower:</text> <subparagraph commented="no" display-inline="no-display-inline" id="H2F1D2550A57D40A394AD819E2EDD5065"><enum>(A)</enum><text display-inline="yes-display-inline">The Repayment Assistance Plan under section 455(q) of the Higher Education Act of 1965.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HAB61F7BCA5D64528AA2DF0F097573AAB"><enum>(B)</enum><text>The income-based repayment plan under section 493C of the Higher Education Act of 1965.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HC96F732DA1654DCA9DFCB88A83D5B7A2"><enum>(C)</enum><text>Any other repayment plan as authorized under section 455(d)(1) of the Higher Education Act of 1965.</text></subparagraph></paragraph>
<paragraph id="HA5A4144F8BE14FF596CE12D0F06C07F8"><enum>(2)</enum><header>Commencement of new repayment plan</header><text>Beginning on July 1, 2028, a borrower described in paragraph (1) shall begin repaying the covered income contingent loans of the borrower in accordance with the repayment plan selected under paragraph (1), unless the borrower chooses to begin repaying in accordance with the repayment plan selected under paragraph (1) before such date.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H12979AFFDC5F4F5D990ACBF73B7C4A7D"><enum>(3)</enum><header>Failure to select</header><text>In the case of a borrower described in paragraph (1) who fails to select a repayment plan in accordance with such paragraph, the Secretary of Education shall—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H62EA7C63A05141A3946015A380C62543"><enum>(A)</enum><text display-inline="yes-display-inline">enroll the covered income contingent loans of such borrower in—</text> <clause commented="no" display-inline="no-display-inline" id="HAF4B1CA716A143F49C4B6FC1C867FCB1"><enum>(i)</enum><text display-inline="yes-display-inline">the Repayment Assistance Plan under section 455(q) of the Higher Education Act of 1965 with respect to loans that are eligible for the Repayment Assistance Plan under such subsection; or </text></clause>
<clause commented="no" display-inline="no-display-inline" id="HB50D28D46A2F4F39BCAA8A46B5D44BFC"><enum>(ii)</enum><text display-inline="yes-display-inline">the income-based repayment plan under section 493C of such Act, with respect to loans that are not eligible for the Repayment Assistance Plan; and </text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H3F6132F1D30F48A692890679DC1A3106"><enum>(B)</enum><text display-inline="yes-display-inline">require the borrower to begin repaying covered income contingent loans according to the plans under subparagraph (A) on July 1, 2028.</text></subparagraph></paragraph></subsection>
<subsection id="HA7079745C24C493FB8F04C3CE23EB67B"><enum>(b)</enum><header>Repayment plans</header><text>Section 455(d) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(d)</external-xref>) is amended—</text> <paragraph id="HB36CBD252AD141FDB3A9EE7F0E04D162"><enum>(1)</enum><text>in paragraph (1)—</text>
<subparagraph id="H4BCAF5F4BB444AC5ABFFF6F8C186919D"><enum>(A)</enum><text>in the matter preceding subparagraph (A), by inserting <quote>before July 1, 2026, who has not received a loan made under this part on or after July 1, 2026,</quote> after <quote>made under this part</quote>;</text></subparagraph> <subparagraph id="H24CBBAC8CD0046D1B8754AADE2781076"><enum>(B)</enum><text>in subparagraph (D)—</text>
<clause commented="no" display-inline="no-display-inline" id="H8430613684554C448621801BA8AE497F"><enum>(i)</enum><text display-inline="yes-display-inline">by inserting <quote>before June 30, 2028,</quote> before <quote>an income contingent repayment plan</quote>; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="HD1E68F73CE844E748C060B8A16E2CFBE"><enum>(ii)</enum><text>by striking <quote>and</quote> after the semicolon; </text></clause></subparagraph>
<subparagraph id="HAB38BEFCDD48497A93CD230131FCEE5E"><enum>(C)</enum><text>in subparagraph (E)—</text> <clause id="H76384C96352B4359B4B3969949B6052F"><enum>(i)</enum><text>by striking <quote>that enables borrowers who have a partial financial hardship to make a lower monthly payment</quote>; </text></clause>
<clause id="HCEB73BF4E3CA4D7A8B5A84055F9493D2"><enum>(ii)</enum><text>by striking <quote>a Federal Direct Consolidation Loan, if the proceeds of such loan were used to discharge the liability on such Federal Direct PLUS Loan or a loan under section 428B made on behalf of a dependent student</quote> and inserting <quote>an excepted Consolidation Loan (as defined in section 493C(a)(2))</quote>; and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H8016B099F9B94AA8B69AE48A31C915E0"><enum>(iii)</enum><text>by striking the period at the end and inserting <quote>; and</quote>; and</text></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H6A73D91393674F348E05E7D7D80199B8"><enum>(D)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H41E77754900C44EAA2C776E6EDE2ABB6"> <subparagraph id="HDB9580E5545442D3BAE4B7E743EA72EE"><enum>(F)</enum><text>beginning on July 1, 2026, the income-based Repayment Assistance Plan under subsection (q), provided that—</text>
<clause commented="no" display-inline="no-display-inline" id="HB3A663D1E330425081E72B6624CCB09E"><enum>(i)</enum><text display-inline="yes-display-inline">such Plan shall not be available for the repayment of excepted loans (as defined in paragraph (7)(E)); and</text></clause> <clause commented="no" display-inline="no-display-inline" id="H67C0DDCDEBDD4AF48315A03C9F45BD41"><enum>(ii)</enum><text display-inline="yes-display-inline">the borrower is required to pay each outstanding loan of the borrower made under this part under such Repayment Assistance Plan, except that a borrower of an excepted loan (as defined in paragraph (7)(E)) may repay the excepted loan separately from other loans under this part obtained by the borrower.</text></clause></subparagraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HB31BBFAC30C145A6B12D3683C457D8A3"><enum>(2)</enum><text>in paragraph (5), by amending subparagraph (B) to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HFF3B098CAFA34205B1B42FFE6CACC46B"> <subparagraph id="H60EDA5DB53F14AABBA7576C5C006B85C"><enum>(B)</enum><text>repay the loan pursuant to an income-based repayment plan under subsection (q) or section 493C, as applicable.</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph id="H96E152C398BC4E5AA7E51DCEF8448E47"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HC80F62D414DB4050AB5F60DD2CE3B5B0"> <paragraph id="H23FC6FE5FCF6436DB8CFB8C35F2BD425"><enum>(6)</enum><header>Termination and limitation of repayment authority</header> <subparagraph id="H06A92410014F42409A41193A43A29485"><enum>(A)</enum><header>Sunset of repayment plans available before July 1, 2026</header><text>Paragraphs (1) through (4) of this subsection shall only apply to loans made under this part before July 1, 2026.</text></subparagraph>
<subparagraph id="H630A71BD2FF44467BF541B39CA58E992"><enum>(B)</enum><header>Prohibitions</header><text>The Secretary may not, for any loan made under this part on or after July 1, 2026—</text> <clause id="HB55A887FBCD345178C4F66F4166CFC42"><enum>(i)</enum><text>authorize a borrower of such a loan to repay such loan pursuant to a repayment plan that is not described in paragraph (7)(A); or</text></clause>
<clause id="HF0A125630A054ABDB36C7E2EF2C2B0E3"><enum>(ii)</enum><text>carry out or modify a repayment plan that is not described in such paragraph.</text></clause></subparagraph></paragraph> <paragraph id="HD71FE6F5AE44445DA877253574FC80A4"><enum>(7)</enum><header>Repayment plans for loans made on or after July 1, 2026</header> <subparagraph id="H0B1623522D91445EABC0956C61715613"><enum>(A)</enum><header>Design and selection</header><text>Beginning on July 1, 2026, the Secretary shall offer a borrower of a loan made under this part on or after such date (including such a borrower who also has a loan made under this part before such date) two plans for repayment of the borrower’s loans under this part, including principal and interest on such loans. The borrower shall be entitled to accelerate, without penalty, repayment on such loans. The borrower may choose—</text>
<clause id="HC86AF560ED0E4660AC38679BF9232DC7"><enum>(i)</enum><text>a standard repayment plan—</text> <subclause id="HC61015744FEF4038BC2A79E37F2C40A5"><enum>(I)</enum><text>with a fixed monthly repayment amount paid over a fixed period of time equal to the applicable period determined under subclause (II); and</text></subclause>
<subclause id="H38AFA394603A4DE490CC323D4E6B6CB6"><enum>(II)</enum><text>with the applicable period of time for repayment determined based on the total outstanding principal of all loans of the borrower made under this part before, on, or after July 1, 2026, at the time the borrower is entering repayment under such plan, as follows—</text> <item id="H94654D785DA64F6580FE1F675C32AE2F"><enum>(aa)</enum><text>for a borrower with total outstanding principal of less than $25,000, a period of 10 years;</text></item>
<item id="H3A54F79CDD0D4828856BF4DB2558EA84"><enum>(bb)</enum><text>for a borrower with total outstanding principal of not less than $25,000 and less than $50,000, a period of 15 years;</text></item> <item id="H4BD2342E5D0E4E4E922C8289112A7840"><enum>(cc)</enum><text>for a borrower with total outstanding principal of not less than $50,000 and less than $100,000, a period of 20 years; and</text></item>
<item id="H33E0AC7EC98D4582B4654ED1594C2EA3"><enum>(dd)</enum><text>for a borrower with total outstanding principal of $100,000 or more, a period of 25 years; or</text></item></subclause></clause> <clause id="H7EE461B53C52403A90EF571D2C939412"><enum>(ii)</enum><text>the income-based Repayment Assistance Plan under subsection (q).</text></clause></subparagraph>
<subparagraph id="H37A4CE5126CE4322B86472807B109B72"><enum>(B)</enum><header>Selection by secretary</header><text>If a borrower of a loan made under this part on or after July 1, 2026, does not select a repayment plan described in subparagraph (A), the Secretary shall provide the borrower with the standard repayment plan described in subparagraph (A)(i).</text></subparagraph> <subparagraph id="H708E4DD8C7C34B6189C544D4AB06E8EE"><enum>(C)</enum><header>Selection applies to all outstanding loans</header><text>A borrower is required to pay each outstanding loan of the borrower made under this part under the same selected repayment plan, except that a borrower who selects the Repayment Assistance Plan and also has an excepted loan that is not eligible for repayment under such Repayment Assistance Plan shall repay the excepted loan separately from other loans under this part obtained by the borrower.</text></subparagraph>
<subparagraph id="HB0D23D7A9DAF47418BA827CE5409C496" commented="no"><enum>(D)</enum><header>Changes of repayment plan</header><text>A borrower may change the borrower’s selection of—</text> <clause commented="no" display-inline="no-display-inline" id="HD4066162ECB04FC09700E21346C0B06E"><enum>(i)</enum><text display-inline="yes-display-inline">the standard repayment plan under subparagraph (A)(i), or the Secretary’s selection of such plan for the borrower under subparagraph (B), as the case may be, to the Repayment Assistance Plan under subparagraph (A)(ii) at any time; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H4EE2961409164DAE87986CC9E9529FB0"><enum>(ii)</enum><text>the Repayment Assistance Plan under subparagraph (A)(ii) to the standard repayment plan under subparagraph (A)(i) at any time. </text></clause></subparagraph> <subparagraph id="H316BF1C8C1AC4D64A02E9AFF23A7D13B"><enum>(E)</enum><header>Repayment for borrowers with excepted loans made on or after July 1, 2026</header> <clause id="H7398DE2CBC314880B91C3CFFCF0FCB90"><enum>(i)</enum><header>Standard repayment plan required</header><text>Notwithstanding subparagraphs (A) through (D), beginning on July 1, 2026, the Secretary shall require a borrower who has received an excepted loan made on or after such date (including such a borrower who also has an excepted loan made before such date) to repay each excepted loan, including principal and interest on those excepted loans, under the standard repayment plan under subparagraph (A)(i). The borrower shall be entitled to accelerate, without penalty, repayment on such loans.</text></clause>
<clause id="HAA63A13B9353479EBAF7A4829F4F4126"><enum>(ii)</enum><header>Excepted loan defined</header><text>For the purposes of this paragraph, the term <term>excepted loan</term> means a loan with an outstanding balance that is—</text> <subclause id="HB4A4DDABD6F5457E9465830F9672C033"><enum>(I)</enum><text>a Federal Direct PLUS Loan that is made on behalf of a dependent student; or</text></subclause>
<subclause id="H24B4F5F75CE941CCA85B62897257CD38"><enum>(II)</enum><text>a Federal Direct Consolidation Loan, if the proceeds of such loan were used to discharge the liability on—</text> <item id="HA58F8AFAE4514536A12888254C513A9D"><enum>(aa)</enum><text>an excepted PLUS loan, as defined in section 493C(a)(1); or</text></item>
<item id="H1F90E99170914716A5C61AAFF94E077B"><enum>(bb)</enum><text>an excepted consolidation loan (as such term is defined in section 493C(a)(2)(A), notwithstanding subparagraph (B) of such section).</text></item></subclause></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HF7B1462366B74DE183052E8A04669737"><enum>(c)</enum><header>Elimination of authority to provide income contingent repayment plans</header> <paragraph id="HEFF8D8C2533A46218BBFEBA702BF4E51"><enum>(1)</enum><header>Repeal</header><text>Subsection (e) of section 455 of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(e)</external-xref>) is repealed.</text></paragraph>
<paragraph id="HBAE39E6FDA5D4F9EBB05797260568AD1"><enum>(2)</enum><header>Further amendments to eliminate income contingent repayment</header>
<subparagraph id="H71001D60C3B14F428989054AA513D0E7"><enum>(A)</enum><text>Section 428 of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1078">20 U.S.C. 1078</external-xref>) is amended—</text> <clause id="H90D1B9D24015488180BA2C8747BA6B83"><enum>(i)</enum><text>in subsection (b)(1)(D), by striking <quote>be subject to income contingent repayment in accordance with subsection (m)</quote> and inserting <quote>be subject to income-based repayment in accordance with subsection (m)</quote>; and</text></clause>
<clause id="H3B53A2ED24BC4DD0A64FA44A6624B348"><enum>(ii)</enum><text>in subsection (m)—</text> <subclause id="HE84A7399A5644ED2A0D89A22F18C64AC"><enum>(I)</enum><text>in the subsection heading, by striking <quote><header-in-text style="OLC" level="subsection">Income Contingent and</header-in-text></quote>;</text></subclause>
<subclause id="H58DCE25EC5E844A5825C2B938678FD3D"><enum>(II)</enum><text>by amending paragraph (1) to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H19BDB3905F98484984EAA970977EF1DF"> <paragraph id="HDB544920E50B4DE396C915C36438355E"><enum>(1)</enum><header>Authority of secretary to require</header><text>The Secretary may require borrowers who have defaulted on loans made under this part that are assigned to the Secretary under subsection (c)(8) to repay those loans pursuant to an income-based repayment plan under section 493C.</text></paragraph><after-quoted-block>; and</after-quoted-block></quoted-block></subclause>
<subclause id="H4389E11813B04C5E81F692DEE1F27878"><enum>(III)</enum><text>in the heading of paragraph (2), by striking <quote><header-in-text style="OLC" level="paragraph">income contingent or</header-in-text></quote>.</text></subclause></clause></subparagraph> <subparagraph id="H2B74A216DAF44523AA2DC665B8539763"><enum>(B)</enum><text>Section 428C of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1078-3">20 U.S.C. 1078–3</external-xref>) is amended—</text>
<clause id="H0881914E1E3B4D17A0EBB6BA36B8CCBA"><enum>(i)</enum><text>in subsection (a)(3)(B)(i)(V)(aa), by striking <quote>for the purposes of obtaining income contingent repayment or income-based repayment</quote> and inserting <quote>for the purposes of qualifying for an income-based repayment plan under section 455(q) or section 493C, as applicable</quote>;</text></clause> <clause id="HFFF8F82551D94804A99FA24CEEC14F30"><enum>(ii)</enum><text>in subsection (b)(5), by striking <quote>be repaid either pursuant to income contingent repayment under part D of this title, pursuant to income-based repayment under section 493C, or pursuant to any other repayment provision under this section</quote> and inserting <quote>be repaid pursuant to an income-based repayment plan under section 493C or any other repayment provision under this section</quote>; and</text></clause>
<clause id="HAE383A45F1EC4F20B10CABD58A112E0F"><enum>(iii)</enum><text>in subsection (c)—</text> <subclause id="HF54B5AFF455E41DBB8966D0648BC3F31"><enum>(I)</enum><text>in paragraph (2)(A), by striking <quote>or by the terms of repayment pursuant to income contingent repayment offered by the Secretary under subsection (b)(5)</quote> and inserting <quote>or by the terms of repayment pursuant to an income-based repayment plan under section 493C</quote>; and</text></subclause>
<subclause id="HD00B9BE7BF4944B183E98365CD75FB49"><enum>(II)</enum><text>in paragraph (3)(B), by striking <quote>except as required by the terms of repayment pursuant to income contingent repayment offered by the Secretary under subsection (b)(5)</quote> and inserting <quote>except as required by the terms of repayment pursuant to an income-based repayment plan under section 493C</quote>.</text></subclause></clause></subparagraph> <subparagraph id="H0FB1D49298834A2CB02FB6EC575163E4"><enum>(C)</enum><text>Section 485(d)(1) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1092">20 U.S.C. 1092(d)(1)</external-xref>) is amended by striking <quote>income-contingent and</quote>.</text></subparagraph>
<subparagraph id="H528A620A58CC498AAB5235D789440C44" commented="no"><enum>(D)</enum><text>Section 494(a)(2) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1098h">20 U.S.C. 1098h(a)(2)</external-xref>) is amended—</text> <clause id="H962F79C3ABB0445A86907FE413D036E7" commented="no"><enum>(i)</enum><text>in the paragraph heading, by striking <quote><header-in-text style="OLC" level="paragraph">Income-contingent and income-based</header-in-text></quote> and inserting <quote><header-in-text style="OLC" level="paragraph">Income-based</header-in-text></quote>; and </text></clause>
<clause id="HB41B566272E944419CC67C28996D761C" commented="no"><enum>(ii)</enum><text>in subparagraph (A)—</text> <subclause id="HB58BB591976842C1BABAC7A4C83F1805" commented="no"><enum>(I)</enum><text>in the matter preceding clause (i), by striking <quote>income-contingent or</quote>; and</text></subclause>
<subclause id="H7BE207277B5343E3A87325EE30E5E0F6" commented="no"><enum>(II)</enum><text>in clause (ii)(I), by striking <quote>section 455(e)(8) or the equivalent procedures established under section 493C(c)(2)(B), as applicable</quote> and inserting <quote>section 493C(c)(2)</quote>.</text></subclause></clause></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H98F5061D2F0B4B0B8F9483EC1C7A697D"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall take effect on July 1, 2028. </text></paragraph></subsection>
<subsection id="H62053A7DCBB3422EB875B0E19E48DCC5"><enum>(d)</enum><header>Repayment assistance plan</header><text>Section 455 of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e</external-xref>) is amended by adding at the end the following new subsection:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB9E1CE46CABD4A128FE72FE320B122C5"> <subsection id="HE4B01B4DF91A44E3AB7751C5E27EAE17"><enum>(q)</enum><header>Repayment assistance plan</header> <paragraph id="H95100AC4E13C476492FBD97BECB3AD51"><enum>(1)</enum><header>In general</header><text>Notwithstanding any other provision of this Act, beginning on July 1, 2026, the Secretary shall carry out an income-based repayment plan (to be known as the <quote>Repayment Assistance Plan</quote>), that shall have the following terms and conditions:</text>
<subparagraph id="H2D68D90BDE9545ACBE7D6DAE2C2E3B46"><enum>(A)</enum><text>The total monthly repayment amount owed by a borrower for all of the loans of the borrower that are repaid pursuant to the Repayment Assistance Plan shall be equal to the applicable monthly payment of a borrower calculated under paragraph (4)(B), except that the borrower may not be precluded from repaying an amount that exceeds such amount for any month.</text></subparagraph> <subparagraph id="H3C0867DE766543419F8DD5B9E75AC5FB"><enum>(B)</enum><text>The Secretary shall apply the borrower’s applicable monthly payment under this paragraph first toward interest due on each such loan, next toward any fees due on each loan, and then toward the principal of each loan.</text></subparagraph>
<subparagraph id="H713AB81EE7304D66B5EC273A62784D50"><enum>(C)</enum><text>Any principal due and not paid under subparagraph (B) or paragraph (2)(B) shall be deferred.</text></subparagraph> <subparagraph id="H5AB24D608256464AA222FBC063F464B3"><enum>(D)</enum><text>A borrower who is not in a period of deferment or forbearance shall make an applicable monthly payment for each month until the earlier of—</text>
<clause id="H154AD81C8EFA458AA420EF12005E6C38"><enum>(i)</enum><text>the date on which the outstanding balance of principal and interest due on all of the loans of the borrower that are repaid pursuant to the Repayment Assistance Plan is $0; or</text></clause> <clause id="H209B764CDB994024AC074D1923C9A1B9"><enum>(ii)</enum><text>the date on which the borrower has made 360 qualifying monthly payments.</text></clause></subparagraph>
<subparagraph id="H539C09984C58426FBCD0099337EF31B5"><enum>(E)</enum><text>The Secretary shall cancel any outstanding balance of principal and interest due on a loan made under this part to a borrower—</text> <clause id="H1CDEA0CA37F4496B839A23A0D7C1481F"><enum>(i)</enum><text>who, for any period of time, participated in the Repayment Assistance Plan under this subsection;</text></clause>
<clause id="H8508D570F9B849D7870413405EABE281"><enum>(ii)</enum><text>whose most recent payment for such loan prior to the loan cancellation under this subparagraph was made under such Repayment Assistance Plan; and</text></clause> <clause id="H067A7FCB083442FA96601518C70EA4D7"><enum>(iii)</enum><text>who has made 360 qualifying monthly payments on such loan.</text></clause></subparagraph>
<subparagraph id="H023A5FE265894AEDAEE7ED8E8F262C75"><enum>(F)</enum><text>For the purposes of this subsection, the term <term>qualifying monthly payment</term> means any of the following:</text> <clause id="HE81A1C09B83B46EF9EC6B32ED2480314"><enum>(i)</enum><text>An on-time applicable monthly payment under this subsection.</text></clause>
<clause id="HE4C66213F03D48F593013B8B2779ED54"><enum>(ii)</enum><text>An on-time monthly payment under the standard repayment plan under subsection (d)(7)(A)(i) of not less than the monthly payment required under such plan.</text></clause> <clause id="HE640C4A09E124B0DAD6A35E568389383" commented="no"><enum>(iii)</enum><text>A monthly payment under any repayment plan (excluding the Repayment Assistance Plan under this subsection) of not less than the monthly payment that would be required under a standard repayment plan under section 455(d)(1)(A) with a repayment period of 10 years.</text></clause>
<clause id="H829E2304D36545A2846CAE83BECADBC9"><enum>(iv)</enum><text>A monthly payment under section 493C of not less than the monthly payment required under such section, including a monthly payment equal to the minimum payment amount permitted under such section.</text></clause> <clause id="H05B990AF08914B75BDC3D5AB809024D1"><enum>(v)</enum><text>A monthly payment made before July 1, 2028, under an income contingent repayment plan carried out under section 455(d)(1)(D) (or under an alternative repayment plan in lieu of repayment under such an income contingent repayment plan, if placed in such an alternative repayment plan by the Secretary) of not less than the monthly payment required under such a plan, including a monthly payment equal to the minimum payment amount permitted under such a plan.</text></clause>
<clause id="H045B06525BBB47CC8A37BC3625869235"><enum>(vi)</enum><text>A month when the borrower did not make a payment because the borrower was in deferment under subsection (f)(2)(B) or due to an economic hardship described in subsection (f)(2)(D).</text></clause> <clause id="HABB75EF60A034BBEB2EF803F520586E0"><enum>(vii)</enum><text>A month that ended before the date of enactment of this subsection when the borrower did not make a payment because the borrower was in a period of deferment or forbearance described in section 685.209(k)(4)(iv) of title 34, Code of Federal Regulations (as in effect on the date of enactment of this subsection).</text></clause></subparagraph>
<subparagraph id="H5ABCE02247684D7B84A03346CDF3AB3A" commented="no"><enum>(G)</enum><text>The procedures established by the Secretary under section 493C(c) shall apply for annually determining the borrower’s eligibility for the Repayment Assistance Plan, including verification of a borrower’s annual income and the annual amount due on the total amount of loans eligible to be repaid under this subsection, and such other procedures as are necessary to effectively implement income-based repayment under this subsection. With respect to carrying out section 494(a)(2) for the Repayment Assistance Plan, an individual may elect to opt out of the disclosures required under section 494(a)(2)(A)(ii) in accordance with the procedures established under section 493C(c)(2).</text></subparagraph></paragraph> <paragraph id="HEAF9E3DD72AE411C9DBA705CB22319C1"><enum>(2)</enum><header>Balance assistance for distressed borrowers</header> <subparagraph id="H2B081FD5F57B4679BA12627952564F91"><enum>(A)</enum><header>Interest subsidy</header><text>With respect to a borrower of a loan made under this part, for each month for which such a borrower makes an on-time applicable monthly payment required under paragraph (1)(A) and such monthly payment is insufficient to pay the total amount of interest that accrues for the month on all loans of the borrower repaid pursuant to the Repayment Assistance Plan under this subsection, the amount of interest accrued and not paid for the month shall not be charged to the borrower.</text></subparagraph>
<subparagraph id="H208D39F268814551B012ECAB299367A7"><enum>(B)</enum><header>Matching principal payment</header><text>With respect to a borrower of a loan made under this part and not in a period of deferment or forbearance, for each month for which a borrower makes an on-time applicable monthly payment required under paragraph (1)(A) and such monthly payment reduces the total outstanding principal balance of all loans of the borrower repaid pursuant to the Repayment Assistance Plan under this subsection by less than $50, the Secretary shall reduce such total outstanding principal balance of the borrower by an amount that is equal to—</text> <clause id="HEB61EF40EBB0479EA63075C3574A3703"><enum>(i)</enum><text>the amount that is the lesser of—</text>
<subclause id="H82D5403D41574FCF95DCB179C2AEAA73"><enum>(I)</enum><text>$50; or</text></subclause> <subclause id="HF97EC3BB87104FBEA0CDA594B2A07E56"><enum>(II)</enum><text>the total amount paid by the borrower for such month pursuant to paragraph (1)(A); minus</text></subclause></clause>
<clause id="H628E29EDA060484A805BBB00ED32ED07"><enum>(ii)</enum><text>the total amount paid by the borrower for such month pursuant to paragraph (1)(A) that is applied to such total outstanding principal balance. </text></clause></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H6D6B6E8266784ED29878273C6D975B7C"><enum>(3)</enum><header>Additional documents</header><text display-inline="yes-display-inline">A borrower who chooses, or is required, to repay a loan under this subsection, and for whom adjusted gross income is unavailable or does not reasonably reflect the borrower's current income, shall provide to the Secretary other documentation of income satisfactory to the Secretary, which documentation the Secretary may use to determine repayment under this subsection.</text></paragraph>
<paragraph id="HE10E5095FA3C42399D3877B65467E1E2"><enum>(4)</enum><header>Definitions</header><text>In this subsection:</text> <subparagraph id="HA28E0BA6ECD64A2AACE497C403D86CAF"><enum>(A)</enum><header>Adjusted gross income</header><text>The term <term>adjusted gross income</term>, when used with respect to a borrower, means the adjusted gross income (as such term is defined in <external-xref legal-doc="usc" parsable-cite="usc/26/62">section 62</external-xref> of the Internal Revenue Code of 1986) of the borrower (and the borrower’s spouse, as applicable) for the most recent taxable year, except that, in the case of a married borrower who files a separate Federal income tax return, the term does not include the adjusted gross income of the borrower’s spouse.</text></subparagraph>
<subparagraph id="H5BB245980EA1412B9516A2D149B29855"><enum>(B)</enum><header>Applicable monthly payment</header>
<clause id="HDF38B3853CD2472C9C1AB179769D9A59"><enum>(i)</enum><header>In general</header><text>Except as provided in clause (ii), (iii), or (vi), the term <term>applicable monthly payment</term> means, when used with respect to a borrower, the amount equal to—</text> <subclause id="H4FA8FED47C0F49C79A0B4858DFA9B46B"><enum>(I)</enum><text>the applicable base payment of the borrower, divided by 12; minus</text></subclause>
<subclause id="HD25555F7883C4A0EAEDEC8D110CD7E78"><enum>(II)</enum><text>$50 for each dependent of the borrower (which, in the case of a married borrower filing a separate Federal income tax return, shall include only each dependent that the borrower claims on that return).</text></subclause></clause> <clause id="H64FEB40171744E399932723DBC70BE1A"><enum>(ii)</enum><header>Minimum amount</header><text>In the case of a borrower with an applicable monthly payment amount calculated under clause (i) that is less than $10, the applicable monthly payment of the borrower shall be $10.</text></clause>
<clause id="HC930C5CC45FF4F9593A0297F75C187D3"><enum>(iii)</enum><header>Final payment</header><text>In the case of a borrower whose total outstanding balance of principal and interest on all of the loans of the borrower that are repaid pursuant to the Repayment Assistance Plan is less than the applicable monthly payment calculated pursuant to clause (i) or (ii), as applicable, then the applicable monthly payment of the borrower shall be the total outstanding balance of principal and interest on all such loans.</text></clause> <clause id="H9614872AC3454CE2881A363C73F7A691"><enum>(iv)</enum><header>Base payment</header><text>The amount of the applicable base payment for a borrower with an adjusted gross income of—</text>
<subclause id="H2B2091A44C9E4B3F8F5B83F366CDFD2F"><enum>(I)</enum><text>not more than $10,000, is $120;</text></subclause> <subclause id="H859BD826F81740668DC509CC1064E4B2"><enum>(II)</enum><text>more than $10,000 and not more than $20,000, is 1 percent of such adjusted gross income;</text></subclause>
<subclause id="HEE97FDC3F92643ABB26993C54CC83E19"><enum>(III)</enum><text>more than $20,000 and not more than $30,000, is 2 percent of such adjusted gross income;</text></subclause> <subclause id="H655EA414213E435C8F69FC1A8A99F250"><enum>(IV)</enum><text>more than $30,000 and not more than $40,000, is 3 percent of such adjusted gross income;</text></subclause>
<subclause id="HA24DB01188AF48089A9CD7CB2FC33D9F"><enum>(V)</enum><text>more than $40,000 and not more than $50,000, is 4 percent of such adjusted gross income;</text></subclause> <subclause id="HB99670FF286E44B9BB0007730AEF5723"><enum>(VI)</enum><text>more than $50,000 and not more than $60,000, is 5 percent of such adjusted gross income;</text></subclause>
<subclause id="H0FA43E5A8A1847D3B9C52F5AE5485D18"><enum>(VII)</enum><text>more than $60,000 and not more than $70,000, is 6 percent of such adjusted gross income;</text></subclause> <subclause id="H77ED2C6E7E104E8CB66386A144894EDE"><enum>(VIII)</enum><text>more than $70,000 and not more than $80,000, is 7 percent of such adjusted gross income;</text></subclause>
<subclause id="H9B66E3B8D9FD470291C5EDDBE9A8CCCD"><enum>(IX)</enum><text>more than $80,000 and not more than $90,000, is 8 percent of such adjusted gross income;</text></subclause> <subclause id="HF8EBEE92E915479E9F4C8C959FCF718F"><enum>(X)</enum><text>more than $90,000 and not more than $100,000, is 9 percent of such adjusted gross income; and</text></subclause>
<subclause id="HD1175A0A29774915A1B6B7D024CED468"><enum>(XI)</enum><text>more than $100,000, is 10 percent of such adjusted gross income.</text></subclause></clause> <clause id="H2C475DBCB582430192203702C92B84E0" commented="no"><enum>(v)</enum><header>Dependent</header><text>For the purposes of this paragraph, the term <term>dependent</term> means an individual who is a dependent under <external-xref legal-doc="usc" parsable-cite="usc/26/152">section 152</external-xref> of the Internal Revenue Code of 1986.</text></clause>
<clause id="HD8D08C6A8F4D4D429C523A196E76A16C"><enum>(vi)</enum><header>Special rule</header><text>In the case of a borrower who is required by the Secretary to provide information to the Secretary to determine the applicable monthly payment of the borrower under this subparagraph, and who does not comply with such requirement, the applicable monthly payment of the borrower shall be—</text> <subclause id="H821475E22394431AAADA628FD1D4A2B1"><enum>(I)</enum><text>the sum of the monthly payment amounts the borrower would have paid for each of the borrower’s loans made under this part under a standard repayment plan with a fixed monthly repayment amount, paid over a period of 10 years, based on the outstanding principal due on such loan when such loan entered repayment; and</text></subclause>
<subclause id="H2B136E3F24CB4DFCB03EF5823BC06D6A"><enum>(II)</enum><text>determined pursuant to this clause until the date on which the borrower provides such information to the Secretary.</text></subclause></clause></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="HE3B2C6D8F6444877BAAFA50688CF7956" commented="no"><enum>(e)</enum><header>Federal consolidation loans</header><text>Section 455(g) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(g)</external-xref>) is amended by adding at the end the following new paragraph:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H346DCECBE3F9402B94EB1FBA8FA8820C">
<paragraph id="H611A92EA224F485AAD94A00550E36919" commented="no"><enum>(3)</enum><header>Consolidation loans made on or after July 1, 2026</header><text>A Federal Direct Consolidation Loan offered to a borrower under this part on or after July 1, 2026, may only be repaid pursuant to a repayment plan described in clause (i) or (ii) of subsection (d)(7)(A) of this section, as applicable, and the repayment schedule of such a Consolidation Loan shall be determined in accordance with such repayment plan.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection> <subsection id="H573E4C90B24444EEB9ADBC2390C0640A"><enum>(f)</enum><header>Income-Based repayment</header> <paragraph id="HFCC7805E1C0D44E28BBAC82E8DC117F2"><enum>(1)</enum><header>Amendments</header> <subparagraph id="HFF2C186C06B9478499C8464631317EE6"><enum>(A)</enum><header>Excepted consolidation loan defined</header><text>Section 493C(a)(2) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1098e">20 U.S.C. 1098e(a)(2)</external-xref>) is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H1A5C48D8B0834707A14C842A5FA5395D">
<paragraph id="H48D5A90710744F118CCF48979F5A3A7F"><enum>(2)</enum><header>Excepted consolidation loan</header>
<subparagraph id="H8AA436BF43444A77B21AA64ACDA5395F"><enum>(A)</enum><header>In general</header><text>The term <term>excepted consolidation loan</term> means—</text> <clause id="H0010F8DED745459B81C380510B6784BD"><enum>(i)</enum><text>a consolidation loan under section 428C, or a Federal Direct Consolidation Loan, if the proceeds of such loan were used to discharge the liability on an excepted PLUS loan; or</text></clause>
<clause id="H5C0D3864EE244580BE42281F71157FD3"><enum>(ii)</enum><text>a consolidation loan under section 428C, or a Federal Direct Consolidation Loan, if the proceeds of such loan were used to discharge the liability on a consolidation loan under section 428C, or a Federal Direct Consolidation Loan described in clause (i).</text></clause></subparagraph> <subparagraph id="H49D72E06F62149D6A80E2BAFB2139C29" commented="no"><enum>(B)</enum><header>Exclusion</header><text>The term <term>excepted consolidation loan</term> does not include a Federal Direct Consolidation Loan described in subparagraph (A) that, on any date during the period beginning on the date of enactment of this subparagraph and ending on June 30, 2028, was being repaid—</text>
<clause commented="no" display-inline="no-display-inline" id="H63332112BDE54ACCB707993D7967BB41"><enum>(i)</enum><text display-inline="yes-display-inline">pursuant to the Income Contingent Repayment (ICR) plan in accordance with section 685.209(b) of title 34, Code of Federal Regulations (as in effect on June 30, 2023); or</text></clause> <clause commented="no" display-inline="no-display-inline" id="HE62D362FABED4A78A21C82A94B9C94A2"><enum>(ii)</enum><text display-inline="yes-display-inline">pursuant to another income driven repayment plan.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="H5520E8A6AFE54F00AAB755E05CE69A99"><enum>(B)</enum><header>Termination of partial financial hardship eligibility</header><text>Section 493C(a)(3) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1098e">20 U.S.C. 1098e(a)(3)</external-xref>) is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H672ED299D6A54BABB12FA84D892EDF3B"> <paragraph commented="no" display-inline="no-display-inline" id="HD43B79F6A0FA4F3798CD1DADC4E88A6C"><enum>(3)</enum><header>Applicable amount</header><text>The term <term>applicable amount</term> means 15 percent of the result obtained by calculating, on at least an annual basis, the amount by which—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H86A4197E1FD341D0A729F6A4C564C063"><enum>(A)</enum><text>the borrower's, and the borrower's spouse's (if applicable), adjusted gross income; exceeds</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H51366CECCAA34DBAB66710B90E5C4141"><enum>(B)</enum><text>150 percent of the poverty line applicable to the borrower's family size as determined under section 673(2) of the Community Services Block Grant Act (<external-xref legal-doc="usc" parsable-cite="usc/42/9902">42 U.S.C. 9902(2)</external-xref>).</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H7091C8059CCA40D39FCB8A9301DB29A6"><enum>(C)</enum><header display-inline="yes-display-inline">Terms of income-based repayment</header><text>Section 493C(b) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1098e">20 U.S.C. 1098e(b)</external-xref>) is amended—</text> <clause id="H2C07687FA2534A3DB76DDE32DA7324D7"><enum>(i)</enum><text>by amending paragraph (1) to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H8A7D7274378146249A3B8D5ABD99FA22">
<paragraph id="HED76A43B49F243CE9D3E101C6FB668F8"><enum>(1)</enum><text>a borrower of any loan made, insured, or guaranteed under part B or D (other than an excepted PLUS loan or excepted consolidation loan), may elect to have the borrower’s aggregate monthly payment for all such loans not exceed the applicable amount divided by 12;</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></clause> <clause id="H5304A5994BDE446A9FEE27B3DA0909D3"><enum>(ii)</enum><text>by striking paragraph (6) and inserting the following: </text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H47EB2FAD405F4973A6A55E0D85B5230E">
<paragraph id="HCBE3050A055D4BE281B82320A888FD68" commented="no" display-inline="no-display-inline"><enum>(6)</enum><text display-inline="yes-display-inline">if the monthly payment amount calculated under this section for all loans made to the borrower under part B or D (other than an excepted PLUS loan or excepted consolidation loan) exceeds the monthly amount calculated under section 428(b)(9)(A)(i) or 455(d)(1)(A), based on a 10-year repayment period, when the borrower first made the election described in this subsection (referred to in this paragraph as the <quote>standard monthly repayment amount</quote>), or if the borrower no longer wishes to continue the election under this subsection, then—</text> <subparagraph id="HFA91D6BD21D447289D6F9E8814A44D33" commented="no" display-inline="no-display-inline"><enum>(A)</enum><text>the maximum monthly payment required to be paid for all loans made to the borrower under part B or D (other than an excepted PLUS loan or excepted consolidation loan) shall be the standard monthly repayment amount; and</text></subparagraph>
<subparagraph id="H8D753CCE9BEA4BD09CA7C803518F5413" commented="no" display-inline="no-display-inline"><enum>(B)</enum><text>the amount of time the borrower is permitted to repay such loans may exceed 10 years;</text></subparagraph></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></clause> <clause id="HE2106D362A6147DDB12AD74844EF441F" commented="no"><enum>(iii)</enum><text>in paragraph (7)(B)(iv), by inserting <quote>(as such section was in effect on the day before the date of the repeal of section 455(e)</quote> after <quote>section 455(d)(1)(D)</quote>; and</text></clause>
<clause id="HDB4DCB46DCB94D04B8423319A4B4AD1E"><enum>(iv)</enum><text>in paragraph (8), by inserting <quote>or the Repayment Assistance Program under section 455(q)</quote> after <quote>standard repayment plan</quote>.</text></clause></subparagraph> <subparagraph id="HACB1BE96E4214A0580BA08ADEA79C4E7"><enum>(D)</enum><header>Eligibility determinations</header><text>Section 493C(c) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1098e">20 U.S.C. 1098e(c)</external-xref>) is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE55640FF971D4A5EA28A2D241BAF91EF">
<subsection id="H46FF12F8AB0F4A2E9D471D8E9C42F941" commented="no" display-inline="no-display-inline"><enum>(c)</enum><header display-inline="yes-display-inline">Eligibility determinations; automatic recertification</header>
<paragraph id="H179F520E4EB8447599A215E1E47865C4" commented="no" display-inline="no-display-inline"><enum>(1)</enum><header>In general</header><text>The Secretary shall establish procedures for annually determining, in accordance with paragraph (2), the borrower’s eligibility for income-based repayment, including the verification of a borrower’s annual income and the annual amount due on the total amount of loans made, insured, or guaranteed under part B or D (other than an excepted PLUS loan or excepted consolidation loan), and such other procedures as are necessary to effectively implement income-based repayment under this section. The Secretary shall consider, but is not limited to, the procedures established in accordance with section 455(e)(1) (as in effect on the day before the date of repeal of subsection (e) of section 455) or in connection with income sensitive repayment schedules under section 428(b)(9)(A)(iii) or 428C(b)(1)(E).</text></paragraph> <paragraph id="H80DE9397AC2F41CBA0AA65D54B6179F5" commented="no" display-inline="no-display-inline"><enum>(2)</enum><header display-inline="yes-display-inline">Automatic recertification</header> <subparagraph id="HB9125DD2913846FFBE5FE86321CE4886" commented="no" display-inline="no-display-inline"><enum>(A)</enum><header>In general</header><text>The Secretary shall establish and implement, with respect to any borrower enrolled in an income-based repayment program under this section or under section 455(q), procedures to—</text>
<clause id="HB6837B681CA64959BE6B08F7D8476D61"><enum>(i)</enum><text>use return information disclosed under <external-xref legal-doc="usc" parsable-cite="usc/26/6103">section 6103(l)(13)</external-xref> of the Internal Revenue Code of 1986, pursuant to approval provided under section 494, to determine the repayment obligation of the borrower without further action by the borrower;</text></clause> <clause id="HCC6C353D004945CF84E6B88DB9BA2B7C"><enum>(ii)</enum><text>allow the borrower (or the spouse of the borrower), at any time, to opt out of disclosure under such section 6103(l)(13) and instead provide such information as the Secretary may require to determine the repayment obligation of the borrower (or withdraw from the repayment plan under this section or under section 455(q), as the case may be); and </text></clause>
<clause id="H15F73848BF1E410BA6746E0DC57D37A4"><enum>(iii)</enum><text>provide the borrower with an opportunity to update the return information so disclosed before the determination of the repayment obligation of the borrower.</text></clause></subparagraph> <subparagraph id="HC7B735CE9CD343709656C58039DEC51D" commented="no" display-inline="no-display-inline"><enum>(B)</enum><header>Applicability</header><text>Subparagraph (A) shall apply to each borrower of a loan eligible to be repaid under this section or under section 455(q), who, on or after the date on which the Secretary establishes procedures under such subparagraph (A)—</text>
<clause commented="no" id="H76C878E8F32E418296457216261D7810"><enum>(i)</enum><text>selects, or is required to repay such loan pursuant to, an income-based repayment plan under this section or under section 455(q); or</text></clause> <clause commented="no" id="HEC60028070FD4BA3BD7542F97C000543"><enum>(ii)</enum><text>recertifies income or family size under such plan.</text></clause></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph>
<subparagraph id="HF0A6A66511A24E3D83AEF8428E0E75E0"><enum>(E)</enum><header>Special terms for new borrowers on and after July 1, 2014</header><text>Section 493C(e) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1098e">20 U.S.C. 1098e(e)</external-xref>) is amended—</text> <clause commented="no" display-inline="no-display-inline" id="HEECCCB21962D4B09A10807778C48BDE2"><enum>(i)</enum><text display-inline="yes-display-inline">in the subsection heading, by inserting <quote><header-in-text style="OLC" level="subsection">and before July 1, 2026</header-in-text></quote> after <quote><header-in-text style="OLC" level="subsection">After July 1, 2014</header-in-text></quote> ; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HD7AC30BB0C3748B6AF4436419309C73A"><enum>(ii)</enum><text>by inserting <quote>and before July 1, 2026</quote> after <quote>after July 1, 2014</quote>.</text></clause></subparagraph></paragraph> <paragraph id="H991F56DBD7BF4945B43074C368D1587A"><enum>(2)</enum><header>Effective date and application</header><text>The amendments made by this subsection shall take effect on the date of enactment of this title, and shall apply with respect to any borrower who is in repayment before, on, or after the date of enactment of this title.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H4EC4A821B68A40B3A7C21BD2072DFD13"><enum>(g)</enum><header>FFEL adjustment</header><text>Section 428(b)(9)(A)(v) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1078">20 U.S.C. 1078(b)(9)(A)(v)</external-xref>) is amended by striking <quote>who has a partial financial hardship</quote>.</text></subsection></section> <section id="H6E78655D58EB496685B70829A2DCA312" commented="no"><enum>82002.</enum><header>Deferment; forbearance</header> <subsection id="H513316937F1E48EA83570D88D7B55383"><enum>(a)</enum><header>Sunset of economic hardship and unemployment deferments</header><text>Section 455(f) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(f)</external-xref>) is amended—</text>
<paragraph id="HDEB09E853A4D43ECB9C9B252D5BBD36C"><enum>(1)</enum><text>by striking the subsection heading and inserting the following: <quote><header-in-text style="OLC" level="subsection">Deferment; forbearance</header-in-text></quote>;</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HF9331937DD66417588D1EE0D7A69BF45"><enum>(2)</enum><text display-inline="yes-display-inline">in paragraph (2)—</text>
<subparagraph id="H38094358E1994076BD4BBDF17F3BA657"><enum>(A)</enum><text>in subparagraph (B), by striking <quote>not in</quote> and inserting <quote>subject to paragraph (7), not in</quote> ; and</text></subparagraph> <subparagraph id="H7E1F52B9739044119C5054743E72BD14"><enum>(B)</enum><text>in subparagraph (D), by striking <quote>not in</quote> and inserting <quote>subject to paragraph (7), not in</quote>; and</text></subparagraph></paragraph>
<paragraph id="H0E81E01F74024D2AB40F54A72EFC6CF8"><enum>(3)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HFA9AD37F4F3544AFBBBC194AC0EAEDAE"> <paragraph id="HBF971BDAEDCD40AF822F8B67FD276DD3"><enum>(7)</enum><header>Sunset of unemployment and economic hardship deferments</header><text>A borrower who receives a loan made under this part on or after July 1, 2027, shall not be eligible to defer such loan under subparagraph (B) or (D) of paragraph (2).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H5022AC8AB0DE4D2E966C78AF65481D87"><enum>(b)</enum><header>Forbearance on loans made under this part on or after July 1, 2027</header><text>Section 455(f) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(f)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H8A0F53AC97454E808BF667E94EF368BC"> <paragraph id="HBBE29273C2554A6085C48319E1B7A8D4"><enum>(8)</enum><header>Forbearance on loans made under this part on or after July 1, 2027</header><text>A borrower who receives a loan made under this part on or after July 1, 2027, may only be eligible for a forbearance on such loan pursuant to section 428(c)(3)(B) that does not exceed 9 months during any 24-month period.</text></paragraph><after-quoted-block>. </after-quoted-block></quoted-block></subsection></section>
<section id="H85DF783522E342F7A1647D9FC3038E38"><enum>82003.</enum><header>Loan rehabilitation</header>
<subsection id="H69047C5E3647464FBF89F14ADAFB8E99"><enum>(a)</enum><header>Updating loan rehabilitation limits</header>
<paragraph id="HE4A509F1E2B14DCDBD4D2DB2173EB514"><enum>(1)</enum><header>FFEL and direct loans</header><text>Section 428F(a)(5) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1078-6">20 U.S.C. 1078–6(a)(5)</external-xref>) is amended by striking <quote>one time</quote> and inserting <quote>two times</quote>.</text></paragraph> <paragraph id="HEFE29BDE7B0A485EA184B822B4042DC9"><enum>(2)</enum><header>Perkins loans</header><text>Section 464(h)(1)(D) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087dd">20 U.S.C. 1087dd(h)(1)(D)</external-xref>) is amended by striking <quote>once</quote> and inserting <quote>twice</quote>.</text></paragraph>
<paragraph id="HEF8DE4AE131D435BA48E12404F80CE07"><enum>(3)</enum><header>Effective date</header><text>The amendments made by this subsection shall take effect beginning on July 1, 2027, and shall apply with respect to any loan made, insured, or guaranteed under title IV of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070">20 U.S.C. 1070 et seq.</external-xref>).</text></paragraph></subsection> <subsection id="HC510827F9CCF43F5BE6359DC547E8E65"><enum>(b)</enum><header>Minimum monthly payment amount</header><text>Section 428F(a)(1)(B) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1078-6">20 U.S.C. 1078–6(a)(1)(B)</external-xref>) is amended by adding at the end the following: <quote>With respect to a borrower who has 1 or more loans made under part D on or after July 1, 2027 that are described in subparagraph (A), the total monthly payment of the borrower for all such loans shall not be less than $10.</quote>. </text></subsection></section>
<section id="H4D29182962D349E3818B4E05EE9779E2"><enum>82004.</enum><header>Public service loan forgiveness</header><text display-inline="no-display-inline">Section 455(m)(1)(A) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087e">20 U.S.C. 1087e(m)(1)(A)</external-xref>) is amended—</text> <paragraph id="HDD5631A6AF9D40E0998B8F65794E47C4"><enum>(1)</enum><text>in clause (iii), by striking <quote>; or</quote> and inserting a semicolon;</text></paragraph>
<paragraph id="HC642249FE0524CAA8B547D4EA71DCBFE"><enum>(2)</enum><text>in clause (iv), by striking <quote>; and</quote> and inserting <quote>(as in effect on the day before the date of the repeal of subsection (e) of this section); or</quote>; and</text></paragraph> <paragraph id="H2E4CA89BAC5E474B88EF4EFF1DF0B2AA"><enum>(3)</enum><text>by adding at the end the following new clause:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HFFA5BAFD4EEB42F2B4CD19B1C0B8D9D2">
<clause id="H74D0A37793FB4D50948FE863040A9E6D"><enum>(v)</enum><text>on-time payments under the Repayment Assistance Plan under subsection (q); and</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section> <section id="HE933CF7D725C45DD92A17B9DC67AD1F5"><enum>82005.</enum><header>Student loan servicing</header><text display-inline="no-display-inline">Paragraph (1) of section 458(a) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087h">20 U.S.C. 1087h(a)(1)</external-xref>) is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H3DDB070929284C41A9408769C19173F1">
<paragraph id="H3ACA9BD5D7DC42FA8841DB53F56CD33F"><enum>(1)</enum><header>Additional mandatory funds for servicing</header><text>There shall be available to the Secretary (in addition to any other amounts appropriated under any appropriations Act for administrative costs under this part and part B and out of any money in the Treasury not otherwise appropriated) $1,000,000,000 to be obligated for administrative costs under this part and part B, including the costs of servicing the direct student loan programs under this part, which shall remain available until expended.</text></paragraph><after-quoted-block>. </after-quoted-block></quoted-block></section></subtitle> <subtitle id="HF8209129CBCE437290C70EEE80058FF4" style="OLC"><enum>D</enum><header>Pell Grants</header> <section id="H622F49281B5B48158232D80027FCBA9C"><enum>83001.</enum><header>Eligibility</header> <subsection id="HC7372E45D3AC42D5A1D2259CEC25D30E"><enum>(a)</enum><header>Foreign income and federal pell grant eligibility</header> <paragraph id="HCDD350323BF14A6ABBEEC6FC68E3E903"><enum>(1)</enum><header>Adjusted gross income defined</header><text display-inline="yes-display-inline">Section 401(a)(2)(A) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070a">20 U.S.C. 1070a(a)(2)(A)</external-xref>) is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HB9BE292C11684457A4483DB72683539A">
<subparagraph id="H7594ACA28A654D318F40EC9947A813DE"><enum>(A)</enum><text>the term <term>adjusted gross income</term> means—</text> <clause id="H8D218792DD2E4342BADC8A276D2B5516"><enum>(i)</enum><text>in the case of a dependent student, for the second tax year preceding the academic year—</text>
<subclause id="HCBB42CE84D76471BB2188FB18E0B12C6"><enum>(I)</enum><text>the adjusted gross income (as defined in <external-xref legal-doc="usc" parsable-cite="usc/26/62">section 62</external-xref> of the Internal Revenue Code of 1986) of the student’s parents; plus</text></subclause> <subclause id="HDC689776FE664ACC83AB72E2BDCB3ABA"><enum>(II)</enum><text>for Federal Pell Grant determinations made for academic years beginning on or after July 1, 2026, the foreign income (as described in section 480(b)(5)) of the student’s parents; and</text></subclause></clause>
<clause id="HB4EC74FEF36640AF8381317217C1CB74"><enum>(ii)</enum><text>in the case of an independent student, for the second tax year preceding the academic year—</text> <subclause id="H8E6BE478D96E4BE483C122BA811BE38E"><enum>(I)</enum><text>the adjusted gross income (as defined in <external-xref legal-doc="usc" parsable-cite="usc/26/62">section 62</external-xref> of the Internal Revenue Code of 1986) of the student (and the student’s spouse, if applicable); plus</text></subclause>
<subclause id="H86A514B68A3C42BE966137FF6F298CAF"><enum>(II)</enum><text>for Federal Pell Grant determinations made for academic years beginning on or after July 1, 2026, the foreign income (as described in section 480(b)(5)) of the student (and the student’s spouse, if applicable);</text></subclause></clause></subparagraph><after-quoted-block>. </after-quoted-block></quoted-block></paragraph> <paragraph id="HA5FD387B65FC48A488E5F40E32C4942D"><enum>(2)</enum><header>Sunset</header><text>Section 401(b)(1)(D) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070a">20 U.S.C. 1070a(b)(1)(D)</external-xref>) is amended—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H3FD1F18BAF47486C82AC525975EDD96B"><enum>(A)</enum><text display-inline="yes-display-inline">by striking <quote>A student</quote> and inserting <quote>For each academic year beginning before July 1, 2026, a student</quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H5040F106DE88487AAEFDD0AE8D096320"><enum>(B)</enum><text>by inserting <quote>, as in effect for such academic year,</quote> after <quote>section 479A(b)(1)(B)(v)</quote>.</text></subparagraph></paragraph>
<paragraph id="H56513E3F785E4AACA382FDEDE9533C39"><enum>(3)</enum><header>Conforming amendments</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HA890C83272D741D6B730DE6B028313AC"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Section 479A(b)(1)(B) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087tt">20 U.S.C. 1087tt(b)(1)(B)</external-xref>) is amended—</text> <clause id="H2ACE364AACEF496D9E0996BEA97A1837"><enum>(i)</enum><text>by striking clause (v); and</text></clause>
<clause id="H5D32D876CC604C98A0E36A2181558135"><enum>(ii)</enum><text>by redesignating clauses (vi) and (vii) as clauses (v) and (vi), respectively. </text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H17228E1D72594DB4B0DE48E8187AC63F"><enum>(B)</enum><header>Effective date</header><text>The amendment made by subparagraph (A) shall take effect on July 1, 2026.</text></subparagraph></paragraph></subsection>
<subsection id="H586699125DCC4F208614B8BFF16E411A"><enum>(b)</enum><header>Federal pell grant ineligibility due to a high student aid index</header>
<paragraph commented="no" display-inline="no-display-inline" id="H004970EA0B334A909D41C9AE1FFF6BD4"><enum>(1)</enum><header>In General</header><text display-inline="yes-display-inline">Section 401(b)(1) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070a">20 U.S.C. 1070a(b)(1)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HB67494CEABC041AAB4F6E1BDD7038536"> <subparagraph id="H168D8ACFCD0E4F79AF04C81D23E366EF"><enum>(F)</enum><header>Ineligibility of students with a high student aid index</header><text>Notwithstanding subparagraphs (A) through (E), a student shall not be eligible for a Federal Pell Grant under this subsection for an academic year in which the student has a student aid index that equals or exceeds twice the amount of the total maximum Federal Pell Grant for such academic year.</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H22B42EBCE7614368B6CA72ABD20BB783"><enum>(2)</enum><header>Effective date</header><text>The amendment made by paragraph (1) shall take effect on July 1, 2026.</text></paragraph></subsection></section> <section commented="no" display-inline="no-display-inline" id="H2BC52620F64B44A6A2997E18F3DF70AB"><enum>83002.</enum><header>Workforce Pell Grants</header> <subsection id="H96662E2F50054153AA1184125DAF4BD2"><enum>(a)</enum><header>In general</header><text>Section 401 of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070a">20 U.S.C. 1070a</external-xref>) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE681E78AD77F4EB8856387F25BB2F9F3">
<subsection id="H24C77ACBCB1D4A1EB4632210C6C2DDA7"><enum>(k)</enum><header>Workforce pell grant program</header>
<paragraph id="H0C78CD65EADB47FB9F476374EB11B640"><enum>(1)</enum><header>In general</header><text>For the award year beginning on July 1, 2026, and each subsequent award year, the Secretary shall award grants (to be known as <quote>Workforce Pell Grants</quote>) to eligible students under paragraph (2) in accordance with this subsection.</text></paragraph> <paragraph id="H0B164E80B8374892B4FBC200500D0196"><enum>(2)</enum><header>Eligible students</header><text>To be eligible to receive a Workforce Pell Grant under this subsection for any period of enrollment, a student shall meet the eligibility requirements for a Federal Pell Grant under this section, except that the student—</text>
<subparagraph id="HD2326BDB295D4D458A7BFBF60BAECEAB"><enum>(A)</enum><text>shall be enrolled, or accepted for enrollment, in an eligible program under section 481(b)(3) (hereinafter referred to as an <quote>eligible workforce program</quote>); and</text></subparagraph> <subparagraph id="H9499FB9AD1464E0AAD4DE49A0E4E3EB3"><enum>(B)</enum><text>may not—</text>
<clause id="HC72BF2B145BF4BBAADABB1AA8F7BD79D"><enum>(i)</enum><text>be enrolled, or accepted for enrollment, in a program of study that leads to a graduate credential; or</text></clause> <clause id="HD791302A837E4CACB756A7D5763C85F7"><enum>(ii)</enum><text>have attained such a credential.</text></clause></subparagraph></paragraph>
<paragraph id="H603CB2076A404797A1CDCF984A676267"><enum>(3)</enum><header>Terms and conditions of awards</header><text>The Secretary shall award Workforce Pell Grants under this subsection in the same manner and with the same terms and conditions as the Secretary awards Federal Pell Grants under this section, except that— </text> <subparagraph id="H0FBA76EBA33C4E64A89B590EAB9EF618"><enum>(A)</enum><text>each use of the term <term>eligible program</term> (except in subsection (b)(9)(A)) shall be substituted by <quote>eligible workforce program under section 481(b)(3)</quote>; </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H164B99D2A39A4622B5D31F0B8C6D456F"><enum>(B)</enum><text display-inline="yes-display-inline">the provisions of subsection (d)(2) shall not be applicable to eligible workforce programs; and</text></subparagraph> <subparagraph id="HE6D8B561DF6C4EFFB8DD7B4B2DA8A839"><enum>(C)</enum><text>a student who is eligible for a grant equal to less than the amount of the minimum Federal Pell Grant because the eligible workforce program in which the student is enrolled or accepted for enrollment is less than an academic year (in hours of instruction or weeks of duration) may still be eligible for a Workforce Pell Grant in an amount that is prorated based on the length of the program.</text></subparagraph></paragraph>
<paragraph id="HE036FB2D36AE4315A3F399279B763E88"><enum>(4)</enum><header>Prevention of double benefits</header><text>No eligible student described in paragraph (2) may concurrently receive a grant under both this subsection and—</text> <subparagraph id="H0CDE308E1E074363A403B3F61830A1E4"><enum>(A)</enum><text>subsection (b); or</text></subparagraph>
<subparagraph id="H045BC4CC31E44A1581BBA946EE6F17ED"><enum>(B)</enum><text>subsection (c).</text></subparagraph></paragraph> <paragraph id="H13FE4487F0CD4436940C91F7AF5FF78E"><enum>(5)</enum><header>Duration limit</header><text>Any period of study covered by a Workforce Pell Grant awarded under this subsection shall be included in determining a student’s duration limit under subsection (d)(5).</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H710CCF76573A474F99F353E055F1292B"><enum>(b)</enum><header>Program eligibility for workforce pell grants</header><text>Section 481(b) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1088">20 U.S.C. 1088(b)</external-xref>) is amended—</text> <paragraph id="H849E62737A91491E85A8BB651E7A6B90"><enum>(1)</enum><text>by redesignating paragraphs (3) and (4) as paragraphs (4) and (5), respectively; and</text></paragraph>
<paragraph id="H50C6867FDA844BD389901452F25B861F"><enum>(2)</enum><text>by inserting after paragraph (2) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H778C8BAC50234FD8876603AFF1340A29"> <paragraph id="H90F7DEB248894BC2AA4631B1A118C991"><enum>(3)</enum> <subparagraph commented="no" display-inline="yes-display-inline" id="H0B2DC03B97584B83AF7F3F62A697B370"><enum>(A)</enum><text>A program is an eligible program for purposes of the Workforce Pell Grant program under section 401(k) only if—</text>
<clause id="H207820EB1E2D4AB59C8CE051B92C2756" indent="up1"><enum>(i)</enum><text>it is a program of at least 150 clock hours of instruction, but less than 600 clock hours of instruction, or an equivalent number of credit hours, offered by an eligible institution during a minimum of 8 weeks, but less than 15 weeks;</text></clause> <clause id="H5B11D9C72181469B9701FBBFCE59CEAD" indent="up1"><enum>(ii)</enum><text>it is not offered as a correspondence course, as defined in 600.2 of title 34, Code of Federal Regulations (as in effect on July 1, 2021);</text></clause>
<clause id="H9CF79E25CE704F1B9CB81E657D461ABA" indent="up1"><enum>(iii)</enum><text>the Governor of a State, after consultation with the State board, determines that the program—</text> <subclause id="HD474F0B5F574428C9D47194D037A53AA"><enum>(I)</enum><text>provides an education aligned with the requirements of high-skill, high-wage (as identified by the State pursuant to section 122 of the Carl D. Perkins Career and Technical Education Act (<external-xref legal-doc="usc" parsable-cite="usc/20/2342">20 U.S.C. 2342</external-xref>)), or in-demand industry sectors or occupations;</text></subclause>
<subclause id="HC236DCBA04314529BFCDC7D88F3DCBC1"><enum>(II)</enum><text>meets the hiring requirements of potential employers in the sectors or occupations described in subclause (I);</text></subclause> <subclause id="H308015A01DD64E2E9F54229A5900238D"><enum>(III)</enum><text>either—</text>
<item id="HF5E798F85450451F87313775943E5786"><enum>(aa)</enum><text>leads to a recognized postsecondary credential that is stackable and portable across more than one employer; or</text></item> <item id="H2DE2578B984042D7B4FD918A6CF63C4D"><enum>(bb)</enum><text>with respect to students enrolled in the program—</text>
<subitem id="H1A317502A34A4082A3456F3199FE6CA2"><enum>(AA)</enum><text>prepares such students for employment in an occupation for which there is only one recognized postsecondary credential; and</text></subitem> <subitem id="HB197CCDD32E54742810F9B5E7ECC42FD"><enum>(BB)</enum><text>provides such students with such a credential upon completion of such program; and</text></subitem></item></subclause>
<subclause id="HA9056010BA05461DBC7EA26E42E3F9CD"><enum>(IV)</enum><text>prepares students to pursue 1 or more certificate or degree programs at 1 or more institutions of higher education (which may include the eligible institution providing the program), including by ensuring—</text> <item id="HEF9BFB74A24A4D2AA8EEF4BECC339EAE"><enum>(aa)</enum><text>that a student, upon completion of the program and enrollment in such a related certificate or degree program, will receive academic credit for the Workforce Pell program that will be accepted toward meeting such certificate or degree program requirements; and</text></item>
<item id="H2B7810EB06344FB59D896B84424EC7BE"><enum>(bb)</enum><text>the acceptability of such credit toward meeting such certificate or degree program requirements; and</text></item></subclause></clause> <clause id="H447FD36653304A81BE4F7C2A7DEFF3FC" indent="up1"><enum>(iv)</enum><text>after the Governor of such State makes the determination that the program meets the requirements under clause (iii), the Secretary determines that—</text>
<subclause id="H0F7C7C9741D249598A658A5D2EC772F7"><enum>(I)</enum><text>the program has been offered by the eligible institution for not less than 1 year prior to the date on which the Secretary makes a determination under this clause;</text></subclause> <subclause id="H6E7B7A03FADE44299F6E5F134131ACD5"><enum>(II)</enum><text>for each award year, the program has a verified completion rate of at least 70 percent, within 150 percent of the normal time for completion;</text></subclause>
<subclause id="HCBDDDB8931BD4534912D8C7A66142819"><enum>(III)</enum><text>for each award year, the program has a verified job placement rate of at least 70 percent, measured 180 days after completion; and</text></subclause> <subclause id="HBE975CA976C5443CAC87DB9B538C3C7B"><enum>(IV)</enum><text>for each award year, the total amount of the published tuition and fees of the program for such year is an amount that does not exceed the value-added earnings of students who received Federal financial aid under this title and who completed the program 3 years prior to the award year, as such earnings are determined by calculating the difference between—</text>
<item commented="no" id="H68E62AC1F7BA474C9155CA66256BC232"><enum>(aa)</enum><text display-inline="yes-display-inline">the median earnings of such students, as adjusted by the State and metropolitan area regional price parities of the Bureau of Economic Analysis based on the location of such program; and</text></item> <item commented="no" id="HF216CDF1BEC14B7EB7A27369CB0AB5D2"><enum>(bb)</enum><text display-inline="yes-display-inline">150 percent of the poverty line applicable to a single individual as determined under section 673(2) of the Community Services Block Grant Act (<external-xref legal-doc="usc" parsable-cite="usc/42/9902">42 U.S.C. 9902(2)</external-xref>) for such year.</text></item></subclause></clause></subparagraph>
<subparagraph id="H432B5673657E4E65B0040E8722987397" indent="up1"><enum>(B)</enum><text>In this paragraph:</text> <clause commented="no" display-inline="no-display-inline" id="H66C9DB80E47E4ABD89FD06F13C7F1499"><enum>(i)</enum><text>The term <term>eligible institution</term> means an eligible institution for purposes of section 401.</text></clause>
<clause id="HF4DCE970CD284AAB8942B3FEBAAF889A"><enum>(ii)</enum><text>The term <term>Governor</term> means the chief executive of a State.</text></clause> <clause id="H8BA55ABE9DC5414BB983FF676569E7F4"><enum>(iii)</enum><text>The terms <quote>in-demand industry sector or occupation</quote>, <quote>recognized postsecondary credential</quote>, and <quote>State board</quote> have the meanings given such terms in section 3 of the Workforce Innovation and Opportunity Act.</text></clause></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="HC834316133CA49F694E9BE2ED8F59E6F"><enum>(c)</enum><header>Effective date; applicability</header><text>The amendments made by this section shall take effect on July 1, 2026, and shall apply with respect to award year 2026–2027 and each succeeding award year.</text></subsection></section> <section commented="no" display-inline="no-display-inline" id="HBE363CD700B241249DD08621D65A4716"><enum>83003.</enum><header>Pell shortfall</header><text display-inline="no-display-inline">Section 401(b)(7)(A)(iii) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070a">20 U.S.C. 1070a(b)(7)(A)(iii)</external-xref>) is amended by striking <quote>$2,170,000,000</quote> and inserting <quote>$12,670,000,000</quote>.</text></section>
<section id="H9B94BAC36B664511BF8DD143FD652196"><enum>83004.</enum><header>Federal Pell Grant exclusion relating to other grant aid</header><text display-inline="no-display-inline">Section 401(d) of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1070a">20 U.S.C. 1070a(d)</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H8E8C93B00CEE4CEEA58FF1501B43B1EE"> <paragraph id="HAF06949EFDFC44DEA06A7E582C0A571C"><enum>(6)</enum><header>Exclusion</header><text display-inline="yes-display-inline">Beginning on July 1, 2026, and notwithstanding this subsection or subsection (b), a student shall not be eligible for a Federal Pell Grant under subsection (b) during any period for which the student receives grant aid from non-Federal sources, including States, institutions of higher education, or private sources, in an amount that equals or exceeds the student's cost of attendance for such period.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></section></subtitle>
<subtitle id="H75A5946E4DF0416E938173EBE49355B9" style="OLC"><enum>E</enum><header>Accountability</header>
<section id="H6A331BD3314348A28CB63C70D8E51444" commented="no"><enum>84001.</enum><header>Ineligibility based on low earning outcomes</header><text display-inline="no-display-inline">Section 454 of the Higher Education Act of 1965 (<external-xref legal-doc="usc" parsable-cite="usc/20/1087d">20 U.S.C. 1087d</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="HFD7143E84D37451096D49689BB879E55"><enum>(1)</enum><text>in subsection (a)—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HD3383B61AF6C4A9C95741C00F54284B7"><enum>(A)</enum><text>in paragraph (5), by striking <quote>and</quote> after the semicolon; </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HEFC3AF58B1874A79B23F87FDA7F50E46"><enum>(B)</enum><text>by redesignating paragraph (6) as paragraph (7); and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HB1A809CF22A9489CB8F524136DE6B6FA"><enum>(C)</enum><text>by inserting after paragraph (5) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HCC3608E51E4241A1A8E1A887B84AB0C6"> <paragraph commented="no" display-inline="no-display-inline" id="H322A03A051E84D308CF808448A856010"><enum>(6)</enum><text>provide assurances that, beginning July 1, 2026, the institution will comply with all requirements of subsection (c); and</text></paragraph><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HFC2F680BDAC5441DBC332ECDA8EEAC47"><enum>(2)</enum><text display-inline="yes-display-inline">in subsection (b)(2), by striking <quote>and (6)</quote> and inserting <quote>(6), and (7)</quote>; </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H74347F726CF04E74BA4C2EC6379F6A10"><enum>(3)</enum><text>by redesignating subsection (c) as subsection (d); and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H9A5BA639CE4F41789A4D3D8244FFC646"><enum>(4)</enum><text>by inserting after subsection (b) the following: </text> <quoted-block style="OLC" display-inline="no-display-inline" id="HD70A08FED40C42C28B4E904ED1D44E6A"> <subsection commented="no" display-inline="no-display-inline" id="HAB5CD1C45E7D44969C2FCD87B64C885E"><enum>(c)</enum><header>Ineligibility for certain programs based on low earning outcomes</header> <paragraph commented="no" display-inline="no-display-inline" id="HD611D77D2D9A4F108DDFE50F69C7DD4B"><enum>(1)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Notwithstanding section 481(b), an institution of higher education subject to this subsection shall not use funds under this part for student enrollment in an educational program offered by the institution that is described in paragraph (2).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H89DE1B3839634438A11E4C9E58ACD5FD"><enum>(2)</enum><header>Low-earning outcome programs described</header><text>An educational program at an institution is described in this paragraph if the program awards an undergraduate degree, graduate or professional degree, or graduate certificate, for which the median earnings (as determined by the Secretary) of the programmatic cohort of students who received funds under this title for enrollment in such program, who completed such program during the academic year that is 4 years before the year of the determination, who are not enrolled in any institution of higher education, and who are working, are, for not less than 2 of the 3 years immediately preceding the date of the determination, less than the median earnings of a working adult described in paragraph (3) for the corresponding year.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H0C4ECC4313A44E60A941FFB857794B20"><enum>(3)</enum><header>Calculation of median earnings</header> <subparagraph commented="no" display-inline="no-display-inline" id="HC6B6730516884EEAA3FAA0A6BFA323EA"><enum>(A)</enum><header>Working adult</header><text display-inline="yes-display-inline">For purposes of applying paragraph (2) to an educational program at an institution, a working adult described in this paragraph is a working adult who, for the corresponding year—</text>
<clause commented="no" display-inline="no-display-inline" id="HBCF090D630E34E14962C9DBEB7795735"><enum>(i)</enum><text>is aged 25 to 34;</text></clause> <clause commented="no" display-inline="no-display-inline" id="H9506758FC03D40419C2DF32145B87F42"><enum>(ii)</enum><text>is not enrolled in an institution of higher education; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H1355A4AB24C84FBE817B9E5A0FA00E5C"><enum>(iii)</enum>
<subclause commented="no" display-inline="yes-display-inline" id="H2DA8757EFADE4C539F4108C41F6854E2"><enum>(I)</enum><text>in the case of a determination made for an educational program that awards a baccalaureate or lesser degree, has only a high school diploma or its recognized equivalent; or</text></subclause> <subclause indent="up1" commented="no" display-inline="no-display-inline" id="H1D659C415FA045E780C19C75BD0322F9"><enum>(II)</enum><text>in the case of a determination made for a graduate or professional program, has only a baccalaureate degree.</text></subclause></clause></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H233CF14E37714E25834F209AB2879549"><enum>(B)</enum><header>Source of data</header><text display-inline="yes-display-inline">For purposes of applying paragraph (2) to an educational program at an institution, the median earnings of a working adult, as described in subparagraph (A), shall be based on data from the Bureau of the Census—</text> <clause commented="no" display-inline="no-display-inline" id="HC89BD90CBBFC4768B6C9438D46FB24DA"><enum>(i)</enum><text>with respect to an educational program that awards a baccalaureate or lesser degree—</text>
<subclause commented="no" display-inline="no-display-inline" id="HA3DCCFBA28824D65B9B33D5A5B9525CB"><enum>(I)</enum><text display-inline="yes-display-inline">for the State in which the institution is located; or</text></subclause> <subclause commented="no" display-inline="no-display-inline" id="HDCC79573BF874B0BB53ABF6FECC44805"><enum>(II)</enum><text>if fewer than 50 percent of the students enrolled in the institution reside in the State where the institution is located, for the entire United States; and</text></subclause></clause>
<clause commented="no" display-inline="no-display-inline" id="H8C9E1AFD194F45D79CA8ED95F66C2532"><enum>(ii)</enum><text>with respect to an educational program that is a graduate or professional program—</text> <subclause commented="no" display-inline="no-display-inline" id="H56C1C8BAD1D04018AA7B1A8BA20D4A93"><enum>(I)</enum><text display-inline="yes-display-inline">for the lowest median earnings of—</text>
<item commented="no" display-inline="no-display-inline" id="H2E55B7337B7A43EEA270A28A4C85EC74"><enum>(aa)</enum><text display-inline="yes-display-inline">a working adult in the State in which the institution is located; </text></item> <item commented="no" display-inline="no-display-inline" id="H29571F9B7AF645BA82AF5FEE386891B2"><enum>(bb)</enum><text display-inline="yes-display-inline">a working adult in the same field of study (as determined by the Secretary, such as by using the 2-digit CIP code) in the State in which the institution is located; and</text></item>
<item commented="no" display-inline="no-display-inline" id="H1DDD5604626447E38B371ECF1EB5FF2A"><enum>(cc)</enum><text>a working adult in the same field of study (as so determined) in the entire United States; or</text></item></subclause> <subclause commented="no" display-inline="no-display-inline" id="HAD46528BD2814392A4D5DABE458F3296"><enum>(II)</enum><text>if fewer than 50 percent of the students enrolled in the institution reside in the State where the institution is located, for the lower median earnings of—</text>
<item commented="no" display-inline="no-display-inline" id="H3939757654A941C9925857C2963A3DA6"><enum>(aa)</enum><text display-inline="yes-display-inline">a working adult in the entire United States; or</text></item> <item commented="no" display-inline="no-display-inline" id="H542A41B435524EE7BB99A0149D2DD1D7"><enum>(bb)</enum><text>a working adult in the same field of study (as so determined) in the entire United States.</text></item></subclause></clause></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H02B3B9D9DFC342E5BD73BCEC961E64A1"><enum>(4)</enum><header>Small programmatic cohorts</header><text>For any year for which the programmatic cohort described in paragraph (2) for an educational program of an institution is fewer than 30 individuals, the Secretary shall—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H3BE56453F6654E5890BABC32E889C0F8"><enum>(A)</enum><text>first, aggregate additional years of programmatic data in order to achieve a cohort of at least 30 individuals; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HC7FA8BCCBD21445084122FAC93CA1E69"><enum>(B)</enum><text>second, in cases in which the cohort (including the individuals added under subparagraph (A)) is still fewer than 30 individuals, aggregate additional cohort years of programmatic data for educational programs of equivalent length in order to achieve a cohort of at least 30 individuals. </text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HAE350FD0D926473ABDBBAFBDC279233B"><enum>(5)</enum><header>Appeals process</header><text display-inline="yes-display-inline">An educational program shall not lose eligibility under this subsection unless the institution has had the opportunity to appeal the programmatic median earnings of students working and not enrolled determination under paragraph (2), through a process established by the Secretary. During such appeal, the Secretary may permit the educational program to continue to participate in the program under this part. </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H071F3B843DEF4CE1AEEEFD995DB38AEB"><enum>(6)</enum><header>Notice to students</header>
<subparagraph commented="no" display-inline="no-display-inline" id="HC570D830D30C489C952FE0B7F6309180"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">If an educational program of an institution of higher education subject to this subsection does not meet the cohort median earning requirements, as described in paragraph (2), for one year during the applicable covered period but has not yet failed to meet such requirements for 2 years during such covered period, the institution shall promptly inform each student enrolled in the educational program of the eligible program's low cohort median earnings and that the educational program is at risk of losing its eligibility for funds under this part.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H4FD46CC530B346679FF12CD0899C9654"><enum>(B)</enum><header>Covered period</header><text>In this paragraph, the term <term>covered period</term> means the period of the 3 years immediately preceding the date of a determination made under paragraph (2).</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H70F428CA3E8F4FFD8F1D6BD982252DED"><enum>(7)</enum><header>Regaining programmatic eligibility</header><text display-inline="yes-display-inline">The Secretary shall establish a process by which an institution of higher education that has an educational program that has lost eligibility under this subsection may, after a period of not less than 2 years of such program's ineligibility, apply to regain such eligibility, subject to the requirements established by the Secretary that further the purpose of this subsection.</text></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section></subtitle> <subtitle id="H0E1AC748B95245958454F0128C041C92" style="OLC"><enum>F</enum><header>Regulatory Relief</header> <section id="HBAFDC61E49B5483193F83325D1D94800"><enum>85001.</enum><header>Delay of rule relating to borrower defense to repayment</header> <subsection commented="no" display-inline="no-display-inline" id="HF6EB828B2F55435ABD20E6A51F612D5C"><enum>(a)</enum><header display-inline="yes-display-inline">Delay</header><text display-inline="yes-display-inline">Beginning on the date of enactment of this section, for loans that first originate before July 1, 2035, the provisions of subpart D of part 685 of title 34, Code of Federal Regulations (relating to borrower defense to repayment), as added or amended by the final regulations published by the Department of Education on November 1, 2022, and titled <quote>Institutional Eligibility Under the Higher Education Act of 1965, as Amended; Student Assistance General Provisions; Federal Perkins Loan Program; Federal Family Education Loan Program; and William D. Ford Federal Direct Loan Program</quote> (87 Fed. Reg. 65904) shall not be in effect.</text></subsection>
<subsection id="H2906B9D70EC94811A27619BB198D1C89"><enum>(b)</enum><header>Effect</header><text>Beginning on the date of enactment of this section, with respect to loans that first originate before July 1, 2035, any regulations relating to borrower defense to repayment that took effect on July 1, 2020, are restored and revived as such regulations were in effect on such date.</text></subsection></section> <section id="H30450FB67D8240E88170C6ABA329D231"><enum>85002.</enum><header>Delay of rule relating to closed school discharges</header> <subsection commented="no" display-inline="no-display-inline" id="HD2CCDBCD8BA04BB6B93C0EE18F09167F"><enum>(a)</enum><header display-inline="yes-display-inline">Delay</header><text display-inline="yes-display-inline">Beginning on the date of enactment of this section, for loans that first originate before July 1, 2035, the provisions of sections 674.33(g), 682.402(d), and 685.214 of title 34, Code of Federal Regulations (relating to closed school discharges), as added or amended by the final regulations published by the Department of Education on November 1, 2022, and titled <quote>Institutional Eligibility Under the Higher Education Act of 1965, as Amended; Student Assistance General Provisions; Federal Perkins Loan Program; Federal Family Education Loan Program; and William D. Ford Federal Direct Loan Program</quote> (87 Fed. Reg. 65904), shall not be in effect.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H80965427ABBD4B6F94D8890A887C8193"><enum>(b)</enum><header>Effect</header><text>Beginning on the date of enactment of this section, with respect to loans that first originate before July 1, 2035, the portions of the Code of Federal Regulations described in subsection (a) and amended by the final regulations described in subsection (a) shall be in effect as if the amendments made by such final regulations had not been made. </text></subsection></section></subtitle> <subtitle id="HB4EFEDBFF0B04FD48CBDAFFBAD88F4F4" style="OLC"><enum>G</enum><header>Garden of Heroes</header> <section id="H6041F8B262D2454E9EE5C2B7146E94E3"><enum>86001.</enum><header>Garden of Heroes</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the National Endowment for the Humanities for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available through fiscal year 2028, $40,000,000 for the procurement of statues as described in Executive Order 13934 (85 Fed. Reg. 41165; relating to building and rebuilding monuments to American heroes), Executive Order 13978 (86 Fed. Reg. 6809; relating to building the National Garden of American Heroes), and Executive Order 14189 (90 Fed. Reg. 8849; relating to celebrating America’s birthday). </text></section></subtitle>
<subtitle id="HB8B813D1B7B446069E9BB2282FE78731" style="OLC"><enum>H</enum><header>Office of Refugee Resettlement</header>
<section id="H3156ED56FA474F96B3E7821B011A54AA"><enum>87001.</enum><header>Potential sponsor vetting for unaccompanied alien children appropriation</header>
<subsection id="HC301F7520EE34EFB8DC4FA2B4DB54799"><enum>(a)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Office of Refugee Resettlement for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $300,000,000, to remain available until September 30, 2028, for the purposes described in subsection (b).</text></subsection> <subsection id="H5F9BA958EAD34B4C9EBFE3A561AC91A7"><enum>(b)</enum><header>Use of funds</header><text>The funds made available under subsection (a) may only be used for the Office of Refugee Resettlement to support costs associated with—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HC86B21E91C144CC7A7EF18F36AFF1EEF"><enum>(1)</enum><text display-inline="yes-display-inline">background checks on potential sponsors, which shall include—</text> <subparagraph id="H466434479B424AC39977197050449B0F"><enum>(A)</enum><text>the name of the potential sponsor and of all adult residents of the potential sponsor’s household;</text></subparagraph>
<subparagraph id="H5E2BC3EB45584DBDAA07F62E24FAF14A"><enum>(B)</enum><text>the social security number or tax payer identification number of the potential sponsor and of all adult residents of the potential sponsor’s household;</text></subparagraph> <subparagraph id="H27B45D0D08E54E1796E12504E37FD16F"><enum>(C)</enum><text>the date of birth of the potential sponsor and of all adult residents of the potential sponsor’s household;</text></subparagraph>
<subparagraph id="HB7119B34A121490288A48043541C8657"><enum>(D)</enum><text>the validated location of the residence at which the unaccompanied alien child will be placed;</text></subparagraph> <subparagraph id="HF73F046E295A4DC6940D2C431A5757D4"><enum>(E)</enum><text>an in-person or virtual interview with, and suitability study concerning, the potential sponsor and all adult residents of the potential sponsor’s household;</text></subparagraph>
<subparagraph id="HFC9945859ED14D09AC1F2B8BF241D96A"><enum>(F)</enum><text>contact information for the potential sponsor and for all adult residents of the potential sponsor’s household; and</text></subparagraph> <subparagraph id="HB573680A004342829DAC0605E9CBDEEF"><enum>(G)</enum><text>the results of all background and criminal records checks for the potential sponsor and for all adult residents of the potential sponsor’s household, which shall include, at a minimum, an investigation of the public records sex offender registry, a public records background check, and a national criminal history check based on fingerprints; </text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H71FE682E252C49CCA3C950A0A3C97BA1"><enum>(2)</enum><text display-inline="yes-display-inline">home studies of potential sponsors of unaccompanied alien children; </text></paragraph> <paragraph id="H70C4B8CA7C7A4F168EE61A009DFC6E3D"><enum>(3)</enum><text>determining whether an unaccompanied alien child poses a danger to self or others by conducting an examination of the unaccompanied alien child for gang-related tattoos and other gang-related markings and covering such tattoos or markings while the child is in the care of the Office of Refugee Resettlement; </text></paragraph>
<paragraph id="H42C1654690C648F3984D484E5E3BCA2D"><enum>(4)</enum><text>data systems improvement and sharing that supports the health, safety, and well being of unaccompanied alien children by determining the appropriateness of potential sponsors of unaccompanied alien children and of adults residing in the household of the potential sponsor and by assisting with the identification and investigation of child labor exploitation and child trafficking; and</text></paragraph> <paragraph id="H5C0E82DDE383444395E972A87CD695EA"><enum>(5)</enum><text>coordinating and communicating with State child welfare agencies regarding the placement of unaccompanied alien children in such States by the Office of Refugee Resettlement.</text></paragraph></subsection>
<subsection id="HFBA259874924472A83E415C38FCC264C"><enum>(c)</enum><header>Definitions</header><text>In this section:</text> <paragraph commented="no" display-inline="no-display-inline" id="H5CAC6F41468F44CAAD0236FB56B82170"><enum>(1)</enum><header display-inline="yes-display-inline">Potential sponsor</header><text>The term <term>potential sponsor</term> means an individual or entity who applies for the custody of an unaccompanied alien child.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HEE84576F602F4EECBD62A578CB557DE2"><enum>(2)</enum><header display-inline="yes-display-inline">Unaccompanied alien child</header><text>The term <term>unaccompanied alien child</term> has the meaning given such term in section 462(g) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/279">6 U.S.C. 279(g)</external-xref>).</text></paragraph></subsection></section></subtitle></title> <title id="H1FCC00619DF945BC92F14EA791B54B51" style="OLC"><enum>IX</enum><header>Committee on Homeland Security and Governmental Affairs</header> <subtitle id="H991619CEBD344B4CB0AE6158431ACAB4" style="OLC"><enum>A</enum><header>Homeland security provisions</header> <section id="H8E47C753B78A4DE69F8D5372F8441B02"><enum>90001.</enum><header>Border infrastructure and wall system</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Commissioner of U.S. Customs and Border Protection for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $46,550,000,000 for necessary expenses relating to the following elements of the border infrastructure and wall system:</text>
<paragraph id="H037D25AC2906482EB0B6D66611B23B0D" commented="no"><enum>(1)</enum><text>Construction, installation, or improvement of new or replacement primary, waterborne, and secondary barriers.</text></paragraph> <paragraph id="H1F5A23937C87458FA58E741DEDD64B08" commented="no"><enum>(2)</enum><text>Access roads. </text></paragraph>
<paragraph id="HB686D6E163A64D96BF416B7A8CB0587F" commented="no"><enum>(3)</enum><text>Barrier system attributes, including cameras, lights, sensors, and other detection technology.</text></paragraph> <paragraph id="HCDDFBE8FB3324963A6E1C97AB0B40E82" commented="no"><enum>(4)</enum><text>Any work necessary to prepare the ground at or near the border to allow U.S. Customs and Border Protection to conduct its operations, including the construction and maintenance of the barrier system.</text></paragraph></section>
<section id="H9E6D5F8EE85C455AB4BEF8C9658EFB12"><enum>90002.</enum><header>U.S. Customs and Border Protection personnel, fleet vehicles, and facilities</header>
<subsection commented="no" display-inline="no-display-inline" id="H5431EC28F1EC418AB24ED5D5D6155852"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there is appropriated to the Commissioner of U.S. Customs and Border Protection for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, the following:</text> <paragraph id="H18214A85DBB6423CBE41CC5EFA0974FD"><enum>(1)</enum><header>Personnel</header><text>$4,100,000,000, to remain available until September 30, 2029, to hire and train additional Border Patrol agents, Office of Field Operations officers, Air and Marine agents, rehired annuitants, and U.S. Customs and Border Protection field support personnel.</text></paragraph>
<paragraph id="H606AC8C674DC4F0AA873EDDF943922CB"><enum>(2)</enum><header>Retention, hiring, and performance bonuses</header><text>$2,052,630,000, to remain available until September 30, 2029, to provide recruitment bonuses, performance awards, or annual retention bonuses to eligible Border Patrol agents, Office of Field Operations officers, and Air and Marine agents. </text></paragraph> <paragraph id="HCA397C9FA75F48FABD0EADB1801572AD"><enum>(3)</enum><header>Vehicles</header><text>$855,000,000, to remain available until September 30, 2029, for the repair of existing patrol units and the lease or acquisition of additional patrol units.</text></paragraph>
<paragraph id="H8AEC5A18ACDB4972AC78BB5B4AB05F57"><enum>(4)</enum><header>Facilities</header><text>$5,000,000,000 for necessary expenses relating to lease, acquisition, construction, design, or improvement of facilities and checkpoints owned, leased, or operated by U.S. Customs and Border Protection.</text></paragraph></subsection> <subsection id="HB473C0499C6E4305B5A70B0BAA2526E1"><enum>(b)</enum><header>Restriction</header><text>None of the funds made available by subsection (a) may be used to recruit, hire, or train personnel for the duties of processing coordinators after October 31, 2028.</text></subsection></section>
<section id="H1D6C2B6287664D3D8500DCAD0F320833"><enum>90003.</enum><header>Detention capacity</header>
<subsection commented="no" display-inline="no-display-inline" id="H5D5D7F211080476C84D35A34C89AE527"><enum>(a)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">In addition to any amounts otherwise appropriated, there is appropriated to U.S. Immigration and Customs Enforcement for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $45,000,000,000, for single adult alien detention capacity and family residential center capacity.</text></subsection> <subsection id="HA9B0E80BADF84BCB86A5F30DECC34EBA"><enum>(b)</enum><header>Duration and standards</header><text>Aliens may be detained at family residential centers, as described in subsection (a), pending a decision, under the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101 et seq.</external-xref>), on whether the aliens are to be removed from the United States and, if such aliens are ordered removed from the United States, until such aliens are removed. The detention standards for the single adult detention capacity described in subsection (a) shall be set in the discretion of the Secretary of Homeland Security, consistent with applicable law.</text></subsection>
<subsection id="H81EC7E84847E48B4A53A2B4D581722DD"><enum>(c)</enum><header>Definition of family residential center</header><text>In this section, the term <term>family residential center</term> means a facility used by the Department of Homeland Security to detain family units of aliens (including alien children who are not unaccompanied alien children (as defined in section 462(g) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/279">6 U.S.C. 279(g)</external-xref>))) who are encountered or apprehended by the Department of Homeland Security.</text></subsection></section> <section id="HA0A03EEF72984E6D98377B73E3300823"><enum>90004.</enum><header>Border security, technology, and screening</header> <subsection id="HC0E71994EB734EE9AF3AB73E3AFC7614"><enum>(a)</enum><header>In general</header><text>In addition to amounts otherwise available, there is appropriated to the Commissioner of U.S. Customs and Border Protection for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, $6,168,000,000 for the following:</text>
<paragraph commented="no" display-inline="no-display-inline" id="H89803F6211114324BD12FE2BC3981A0E"><enum>(1)</enum><text display-inline="yes-display-inline">Procurement and integration of new nonintrusive inspection equipment and associated civil works, including artificial intelligence, machine learning, and other innovative technologies, as well as other mission support, to combat the entry or exit of illicit narcotics at ports of entry and along the southwest, northern, and maritime borders.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H1AB133B00E5F477F830FE49BBA433401"><enum>(2)</enum><text>Air and Marine operations’ upgrading and procurement of new platforms for rapid air and marine response capabilities.</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HE7E96C9C99C6401EA836218AF6EB6A68"><enum>(3)</enum><text>Upgrades and procurement of border surveillance technologies along the southwest, northern, and maritime borders.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HD29407C39E4C4EB8AFD9BFEA5779371E"><enum>(4)</enum><text>Necessary expenses, including the deployment of technology, relating to the biometric entry and exit system under section 7208 of the Intelligence Reform and Terrorism Prevention Act of 2004 (<external-xref legal-doc="usc" parsable-cite="usc/8/1365b">8 U.S.C. 1365b</external-xref>).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H2CB3EEECFBA347E0BB539D48B09DEFFB"><enum>(5)</enum><text>Screening persons entering or exiting the United States.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H3EA7900F52F9465FAAC8D44BC739588A"><enum>(6)</enum><text>Initial screenings of unaccompanied alien children (as defined in section 462(g) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/279">6 U.S.C. 279(g)</external-xref>)), consistent with the William Wilberforce Trafficking Victims Protection Reauthorization Act of 2008 (<external-xref legal-doc="public-law" parsable-cite="pl/110/457">Public Law 110–457</external-xref>; 122 Stat. 5044).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HECA86FB8B8884B839BCAD9ADFB41138B"><enum>(7)</enum><text>Enhancing border security by combating drug trafficking, including fentanyl and its precursor chemicals, at the southwest, northern, and maritime borders.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H532C41F3E00D4766BAAE6F88B7EA285E"><enum>(8)</enum><text>Commemorating efforts and events related to border security.</text></paragraph></subsection>
<subsection commented="no" display-inline="no-display-inline" id="H020B9EE17D2B4EA39CDACCF272FE11BC"><enum>(b)</enum><header>Restrictions</header><text>None of the funds made available under subsection (a) may be used for the procurement or deployment of surveillance towers along the southwest border and northern border that have not been tested and accepted by U.S. Customs and Border Protection to deliver autonomous capabilities.</text></subsection> <subsection id="HA0FD4925542240E3B044ED655ED2CC28"><enum>(c)</enum><header>Definition of autonomous</header><text>In this section, with respect to capabilities, the term <term>autonomous</term> means a system designed to apply artificial intelligence, machine learning, computer vision, or other algorithms to accurately detect, identify, classify, and track items of interest in real time such that the system can make operational adjustments without the active engagement of personnel or continuous human command or control.</text></subsection></section>
<section id="HD696A7496A394E2EA13A025AF3413AA2"><enum>90005.</enum><header>State and local assistance</header>
<subsection id="HFE6BC75A451E4820985AF86484A699C5"><enum>(a)</enum><header>State Homeland Security Grant Programs</header>
<paragraph commented="no" display-inline="no-display-inline" id="HCF628F33B702460F80CFFA8485856920"><enum>(1)</enum><header>In general</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there is appropriated to the Administrator of the Federal Emergency Management Agency for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to remain available until September 30, 2029, to be administered under the State Homeland Security Grant Program authorized under section 2004 of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/605">6 U.S.C. 605</external-xref>), to enhance State, local, and Tribal security through grants, contracts, cooperative agreements, and other activities—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H54990AB849514943A3246E1F55F6B067"><enum>(A)</enum><text>$500,000,000 for State and local capabilities to detect, identify, track, or monitor threats from unmanned aircraft systems (as such term is defined in section 44801 of title 49, United States Code), consistent with titles 18 and 49 of the United States Code;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HF1B68C5DA6854DEF8FD856AF8CE7AED3"><enum>(B)</enum><text>$625,000,000 for security and other costs related to the 2026 FIFA World Cup;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H457717513C59458FB9B147133913A2B3"><enum>(C)</enum><text>$1,000,000,000 for security, planning, and other costs related to the 2028 Olympics; and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H8319DCB8CD1349739EE0907766CB96B4"><enum>(D)</enum><text>$450,000,000 for the Operation Stonegarden Grant Program.</text></subparagraph></paragraph> <paragraph id="H2CB894135BD74312876A2A66AE164C1D"><enum>(2)</enum><header>Terms and Conditions</header><text>None of the funds made available under subparagraph (B) or (C) of paragraph (1) shall be subject to the requirements of section 2004(e)(1) or section 2008(a)(12) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/605">6 U.S.C. 605(e)(1)</external-xref>, 609(a)(12)).</text></paragraph></subsection>
<subsection id="H9F68126605124D358D1C9D7266237581"><enum>(b)</enum><header>State Border Security Reinforcement Fund</header>
<paragraph commented="no" display-inline="no-display-inline" id="H91DB36A6FD4D4AEBAC3F5D593A99EBFF"><enum>(1)</enum><header>Establishment</header><text display-inline="yes-display-inline">There is established, in the Department of Homeland Security, a fund to be known as the <quote>State Border Security Reinforcement Fund.</quote></text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H2A2F226181E14ED7809BC2386564048E"><enum>(2)</enum><header>Purposes</header><text display-inline="yes-display-inline">The Secretary of Homeland Security shall use amounts appropriated or otherwise made available for the Fund for grants to eligible States and units of local government for any of the following purposes:</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HC7D32B98F913414983BBA896242D9CD4"><enum>(A)</enum><text>Construction or installation of a border wall, border fencing or other barrier, or buoys along the southern border of the United States, which may include planning, procurement of materials, and personnel costs related to such construction or installation.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF38F12F394134804BC4EA8C156ACF780"><enum>(B)</enum><text>Any work necessary to prepare the ground at or near land borders to allow construction and maintenance of a border wall or other barrier fencing.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H570A6A08F12941BEA9898883ECA38999"><enum>(C)</enum><text>Detection and interdiction of illicit substances and aliens who have unlawfully entered the United States and have committed a crime under Federal, State, or local law, and transfer or referral of such aliens to the Department of Homeland Security as provided by law.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HDA38567BDE1D4BE4AD198C4BB57C6DFD"><enum>(D)</enum><text>Relocation of aliens who are unlawfully present in the United States from small population centers to other domestic locations.</text></subparagraph></paragraph>
<paragraph id="HEA9185DF44C0478DA45DB348F3E84D05"><enum>(3)</enum><header>Appropriation</header><text>In addition to amounts otherwise available for the purposes described in paragraph (2), there is appropriated for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, to the Department of Homeland Security for the State Border Security Reinforcement Fund established by paragraph (1), $10,000,000,000, to remain available until September 30, 2034, for qualified expenses for such purposes.</text></paragraph> <paragraph id="H47051852915C47C484F9D5FF20DCED66"><enum>(4)</enum><header>Eligibility</header><text>The Secretary of Homeland Security may provide grants from the fund established by paragraph (1) to State agencies and units of local governments for expenditures made for completed, ongoing, or new activities, in accordance with law, that occurred on or after January 20, 2021. </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H77E79BB10C68444C8C62EEBDC46B4F0F"><enum>(5)</enum><header>Application</header><text display-inline="yes-display-inline">Each State desiring to apply for a grant under this subsection shall submit an application to the Secretary containing such information in support of the application as the Secretary may require. The Secretary shall require that each State include in its application the purposes for which the State seeks the funds and a description of how the State plans to allocate the funds. The Secretary shall begin to accept applications not later than 90 days after the date of the enactment of this Act.</text></paragraph> <paragraph id="H35EA5820F3FC4854B2407236C86FB791"><enum>(6)</enum><header>Terms and Conditions</header><text>Nothing in this subsection shall authorize any State or local government to exercise immigration or border security authorities reserved exclusively to the Federal Government under the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101 et seq.</external-xref>) or the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/101">6 U.S.C. 101 et seq.</external-xref>). The Federal Emergency Management Agency may use not more than 1 percent of the funds made available under this subsection for the purpose of administering grants provided for in this section.</text></paragraph></subsection></section>
<section id="H5B360C569A4248929E822C6032D80B5B"><enum>90006.</enum><header>Presidential residence protection</header>
<subsection id="HCF4489E045CF4D44A694D6DA5F01B184"><enum>(a)</enum><header>In general</header><text>In addition to amounts otherwise available, there is appropriated to the Administrator of the Federal Emergency Management Agency for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $300,000,000, to remain available until September 30, 2029, for the reimbursement of extraordinary law enforcement personnel costs for protection activities directly and demonstrably associated with any residence of the President designated pursuant to section 3 or 4 of the Presidential Protection Assistance Act of 1976 (<external-xref legal-doc="public-law" parsable-cite="pl/94/524">Public Law 94–524</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/18/3056">18 U.S.C. 3056</external-xref> note) to be secured by the United States Secret Service.</text></subsection> <subsection id="HD2419946D75241F294D3783436636EB0"><enum>(b)</enum><header>Availability</header><text>Funds appropriated under this section shall be available only for costs that a State or local agency—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H154752C3960147A49CF075432757A599"><enum>(1)</enum><text>incurred or incurs on or after July 1, 2024; </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H4B46E129C4DF433EA4A8CB7C52944FFA"><enum>(2)</enum><text>demonstrates to the Administrator of the Federal Emergency Management Agency as being—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HFE17FAA476854EFCB2D56FA43464A279"><enum>(A)</enum><text display-inline="yes-display-inline">in excess of typical law enforcement operation costs; </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H9069E63C443D4D4084D6C60D7A0DD25F"><enum>(B)</enum><text display-inline="yes-display-inline">directly attributable to the provision of protection described in this section; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HFCF55DB5E67249658EC0D341F2548A4E"><enum>(C)</enum><text display-inline="yes-display-inline">associated with a nongovernmental property designated pursuant to section 3 or 4 of the Presidential Protection Assistance Act of 1976 (<external-xref legal-doc="public-law" parsable-cite="pl/94/524">Public Law 94–524</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/18/3056">18 U.S.C. 3056</external-xref> note) to be secured by the United States Secret Service; and </text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HDDEEF1B549494B84A1119D0F256352B1"><enum>(3)</enum><text display-inline="yes-display-inline">certifies to the Administrator as compensating protection activities requested by the United States Secret Service.</text></paragraph></subsection>
<subsection id="HEA9F1D4EF90B46D8A1621AA47210E94F"><enum>(c)</enum><header>Terms and conditions</header><text>The Federal Emergency Management Agency may use not more than 3 percent of the funds made available under this section for the purpose of administering grants provided for in this section.</text></subsection></section> <section id="HC233F521EF6A4656B42F33EA4F310A63"><enum>90007.</enum><header>Department of Homeland Security appropriations for border support</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there are appropriated to the Secretary of Homeland Security for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $10,000,000,000, to remain available until September 30, 2029, for reimbursement of costs incurred in undertaking activities in support of the Department of Homeland Security’s mission to safeguard the borders of the United States.</text></section></subtitle>
<subtitle id="HD52098B979894FEB86B548B8DDEE7D7A" style="OLC"><enum>B</enum><header>Governmental affairs provisions</header>
<section id="HC25F58579B464A8C840EA0A660A4F42C"><enum>90101.</enum><header>FEHB improvements</header>
<subsection commented="no" display-inline="no-display-inline" id="H02D0BA57556042EDA23E83039B917EFF"><enum>(a)</enum><header display-inline="yes-display-inline">Short title</header><text display-inline="yes-display-inline">This section may be cited as the <quote><short-title>FEHB Protection Act of 2025</short-title></quote>.</text></subsection> <subsection id="HD3BAC52F08534E379A2BBC89F1B8EFB9"><enum>(b)</enum><header>Definitions</header><text>In this section:</text>
<paragraph id="HDC5E9E52B566442A96E13D052948540D"><enum>(1)</enum><header>Director</header><text>The term <term>Director</term> means the Director of the Office of Personnel Management.</text></paragraph> <paragraph id="HAB8273CB4C654CEEBA439EE3A2C4C7E9"><enum>(2)</enum><header>Health benefits plan; member of family</header><text>The terms <term>health benefits plan</term> and <term>member of family</term> have the meanings given those terms in section 8901 of title 5, United States Code.</text></paragraph>
<paragraph id="H7B27B8FA9B58425FBA692E2041B78111"><enum>(3)</enum><header>Open season</header><text>The term <term>open season</term> means an open season described in section 890.301(f) of title 5, Code of Federal Regulations, or any successor regulation.</text></paragraph> <paragraph id="H4454730C51DE4BA4AEC3C1403B6DFE92"><enum>(4)</enum><header>Program</header><text>The term <term>Program</term> means the health insurance programs carried out under <external-xref legal-doc="usc-chapter" parsable-cite="usc-chapter/5/89">chapter 89</external-xref> of title 5, United States Code, including the program carried out under <external-xref legal-doc="usc" parsable-cite="usc/26/8903c">section 8903c</external-xref> of that title.</text></paragraph>
<paragraph id="HB297E03462124B90A48A8BC4C9CE6D69"><enum>(5)</enum><header>Qualifying life event</header><text>The term <term>qualifying life event</term> has the meaning given the term in section 892.101 of title 5, Code of Federal Regulations, or any successor regulation.</text></paragraph></subsection> <subsection id="HC59E94FBB60A480A902CAF2A56CFDB40"><enum>(c)</enum><header>Verification requirements</header><text>Not later than 1 year after the date of enactment of this Act, the Director shall issue regulations and implement a process to verify—</text>
<paragraph id="H260DC2B324874889903C8B183BFCB074"><enum>(1)</enum><text>the veracity of any qualifying life event through which an enrollee in the Program seeks to add a member of family with respect to the enrollee to a health benefits plan under the Program; and</text></paragraph> <paragraph id="H5C4670B2AD904828AE08BEA0556CD0D9"><enum>(2)</enum><text>that, when an enrollee in the Program seeks to add a member of family with respect to the enrollee to the health benefits plan of the enrollee under the Program, including during any open season, the individual so added is a qualifying member of family with respect to the enrollee.</text></paragraph></subsection>
<subsection id="H4569E6A0640345558523B8004D180C91"><enum>(d)</enum><header>Fraud risk assessment</header><text>In any fraud risk assessment conducted with respect to the Program on or after the date of enactment of this Act, the Director shall include an assessment of individuals who are enrolled in, or covered under, a health benefits plan under the Program even though those individuals are not eligible to be so enrolled or covered.</text></subsection> <subsection id="H8F6BABECDA764AA19BFF8CE9F23232CA"><enum>(e)</enum><header>Family member eligibility verification audit</header> <paragraph id="HC95E700D596E4F98BDC0525F4FA9DDEE"><enum>(1)</enum><header>In general</header><text>During the 3-year period beginning on the date that is 1 year after the date of enactment of this Act, the Director shall carry out a comprehensive audit regarding members of family who are covered under an enrollment in a health benefits plan under the Program.</text></paragraph>
<paragraph id="H3F61922A59054B62A90CE649EFD22796"><enum>(2)</enum><header>Contents</header><text>With respect to the audit carried out under paragraph (1), the Director shall review marriage certificates, birth certificates, and other appropriate documents that are necessary to determine eligibility to enroll in a health benefits plan under the Program.</text></paragraph></subsection> <subsection id="HD404C30316EE4043878CF76257481D41"><enum>(f)</enum><header>Disenrollment or removal</header><text>Not later than 180 days after the date of enactment of this Act, the Director shall develop a process by which any individual enrolled in, or covered under, a health benefits plan under the Program who is not eligible to be so enrolled or covered shall be disenrolled or removed from enrollment in, or coverage under, that health benefits plan.</text></subsection>
<subsection id="H7DD2E7DCA04A4D18A10B99FD1D358119"><enum>(g)</enum><header>Earned benefits and health care administrative services associated oversight and audit funding</header><text>Section 8909 of title 5, United States Code, is amended—</text> <paragraph id="H71BE8C8D0E7944B894F674D2E0A3C317"><enum>(1)</enum><text>in subsection (a)(2), by inserting before the period at the end the following: <quote>, except that the amounts required to be set aside under subsection (b)(2) shall not be subject to the limitations that may be specified annually by Congress</quote>; and </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H81464C331A084991B88F60493D161F0C"><enum>(2)</enum><text>in subsection (b)—</text> <subparagraph id="H351980845AFD4B948CE61CFF5EDE21F7"><enum>(A)</enum><text>by redesignating paragraph (2) as paragraph (3); and</text></subparagraph>
<subparagraph id="HD98FB347FB174238AD9F1F317A20E86A"><enum>(B)</enum><text>by inserting after paragraph (1) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H72380A3C185B40B8B3C9DE092083382B"> <paragraph id="HBFB7EB6186E048BFB496EA57D07126F5"><enum>(2)</enum><text>In fiscal year 2026, $66,000,000, to be derived from all contributions, and to remain available until the end of fiscal year 2035, for the Director of the Office to carry out subsections (c) through (f) of the <short-title>FEHB Protection Act of 2025</short-title>.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subparagraph></paragraph></subsection></section>
<section id="H09B28BCE092A4CDE833DCF320A2D8BF6"><enum>90102.</enum><header>Pandemic Response Accountability Committee</header>
<subsection id="H212D61A63B3442869E3E928ED93D1F29"><enum>(a)</enum><header>Pandemic response accountability committee funding availability</header><text display-inline="yes-display-inline">In addition to amounts otherwise available, there is appropriated for fiscal year 2026, out of any money in the Treasury not otherwise appropriated, $88,000,000, to remain available until expended, for the Pandemic Response Accountability Committee to support oversight of the Coronavirus response and of funds provided in this Act or any other Act pertaining to the Coronavirus pandemic.</text></subsection> <subsection commented="no" display-inline="no-display-inline" id="HA87F37A9A1AD46BAB3F8B71C88B741DB"><enum>(b)</enum><header>CARES Act</header><text>Section 15010 of the CARES Act (<external-xref legal-doc="public-law" parsable-cite="pl/116/136">Public Law 116–136</external-xref>; 134 Stat. 533) is amended— </text>
<paragraph commented="no" display-inline="no-display-inline" id="H3EA671D8B71F4CB5A2ADD228D3C04144"><enum>(1)</enum><text>in subsection (a)(6)—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H893B6D5EC2CB420A87DB38B5933BE396"><enum>(A)</enum><text>in subparagraph (E), by striking <quote>or</quote> at the end;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H92E0AA2E2F6C45398E157C37AD1ADD92"><enum>(B)</enum><text>in subparagraph (F), by striking <quote>and</quote> at the end and inserting <quote>or</quote>; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H543B6A67698942D2BFC40E9357E86640"><enum>(C)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H8C460FF929154FB996DC8666178CA9DE">
<subparagraph commented="no" display-inline="no-display-inline" id="H470752D1C0C946C3A8E25F165A281AFA"><enum>(G)</enum><text>the Act titled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote>; and</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H6BCB162F077A43499ED23B4BCCF75B9C"><enum>(2)</enum><text>in subsection (k), by striking <quote>2025</quote> and inserting <quote>2034</quote>.</text></paragraph></subsection></section>
<section id="HDCB96DAB6FE24CE4AEEBA045837DED10"><enum>90103.</enum><header>Appropriation for the Office of Management and Budget</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Office of Management and Budget for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $100,000,000, to remain available until September 30, 2029, for purposes of finding budget and accounting efficiencies in the executive branch.</text></section></subtitle></title> <title id="H4FF1093A86C741008750037AFCD0421A" style="OLC"><enum>X</enum><header>Committee on the Judiciary</header> <subtitle id="H744021F7614B4D638536C181F841DECA"><enum>A</enum><header>Immigration and law enforcement matters</header> <part id="HB02EAE328EFE424A8A95C33032DE2880"><enum>I</enum><header>Immigration fees</header> <section id="H9E9066AE5B604717AF32531A80313328"><enum>100001.</enum><header>Applicability of the immigration laws</header> <subsection id="H03EFF8CE10C74E9F9A1249A168BB8992"><enum>(a)</enum><header>Applicability</header><text>The fees under this subtitle shall apply to aliens in the circumstances described in this subtitle.</text></subsection>
<subsection id="HE0B4E176D57648C586EF2F8250FD63DD"><enum>(b)</enum><header>Terms</header><text>The terms used under this subtitle shall have the meanings given such terms in section 101 of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101</external-xref>).</text></subsection> <subsection id="HB4C025F81B2E49DA8F5D11FB0EF08473"><enum>(c)</enum><header>References to Immigration and Nationality Act</header><text>Except as otherwise expressly provided, any reference in this subtitle to a section or other provision shall be considered to be to a section or other provision of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101 et seq.</external-xref>).</text></subsection></section>
<section id="HD0253485FCD347A7B66999A09301507D"><enum>100002.</enum><header>Asylum fee</header>
<subsection id="H47C8C2A64BD24B39A5609463929C919A"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security or the Attorney General, as applicable, shall require the payment of a fee, equal to the amount specified in this section, by any alien who files an application for asylum under section 208 (<external-xref legal-doc="usc" parsable-cite="usc/8/1158">8 U.S.C. 1158</external-xref>) at the time such application is filed.</text></subsection> <subsection id="H4576E6DA6FBE437D9A3BC1BF35EB126A"><enum>(b)</enum><header>Initial amount</header><text>During fiscal year 2025, the amount specified in this section shall be the greater of—</text>
<paragraph commented="no" display-inline="no-display-inline" id="HE45D41C62ACF43278E2A164EEFAE9B84"><enum>(1)</enum><text display-inline="yes-display-inline">$100; or</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HBA4A5D991F71422CB1B6E7D18EBBD248"><enum>(2)</enum><text display-inline="yes-display-inline">such amount as the Secretary or the Attorney General, as applicable, may establish, by rule.</text></paragraph></subsection>
<subsection id="H4AF1CBBF264C4F9194C410D22A2CCAEC"><enum>(c)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text> <paragraph id="HC3E14C54277C4B6382EFC2C036C59088"><enum>(1)</enum><text>the amount of the fee required under this section for the most recently concluded fiscal year; and</text></paragraph>
<paragraph id="H0B7CA2570D1A4AADA3466BCD826F9D9F"><enum>(2)</enum><text>the product resulting from the multiplication of the amount referred to in paragraph (1) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></paragraph></subsection> <subsection id="H9333577371D542B084B421274988C28F"><enum>(d)</enum><header>Disposition of asylum fee proceeds</header><text>During each fiscal year—</text>
<paragraph id="H7213AA2064184E5F8C7C04660DC43B0F"><enum>(1)</enum><text>50 percent of the fees received from aliens filing applications with the Attorney General—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HB489E7DF4CE74D1BB33D318D05D125BD"><enum>(A)</enum><text display-inline="yes-display-inline">shall be credited to the Executive Office for Immigration Review; and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H001F5DCB305F412D892C817F9037C296"><enum>(B)</enum><text display-inline="yes-display-inline">may be retained and expended without further appropriation;</text></subparagraph></paragraph> <paragraph id="H3E1F4FD779904E2982D3C3DFADDCB4B9"><enum>(2)</enum><text>50 percent of fees received from aliens filing applications with the Secretary of Homeland Security—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H6155BEE6FE7C41FBB25FFD396D962A1F"><enum>(A)</enum><text display-inline="yes-display-inline">shall be credited to U.S. Citizenship and Immigration Services;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HFC269D668BE24ADBA65D9D0BA9E20570"><enum>(B)</enum><text display-inline="yes-display-inline">shall be deposited into the Immigration Examinations Fee Account established under section 286(m) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(m)</external-xref>); and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H527AD364C2D64F6EBAFEC3501A67276A"><enum>(C)</enum><text display-inline="yes-display-inline">may be retained and expended without further appropriation; and</text></subparagraph></paragraph> <paragraph id="HBC198F5C9CF4460BABC0DC8BE8E62E18"><enum>(3)</enum><text>any amounts received in fees required under this section that were not credited to the Executive Office for Immigration Review pursuant to paragraph (1) or to U.S. Citizenship and Immigration Services pursuant to paragraph (2) shall be deposited into the general fund of the Treasury.</text></paragraph></subsection>
<subsection id="H0E945DF6DA824A16803DE2F38BB52468"><enum>(e)</enum><header>No fee waiver</header><text>Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section> <section id="H8F10482E78B24D7FA554BE200A7E460E"><enum>100003.</enum><header>Employment authorization document fees</header> <subsection id="H384015EE9113476F8976E2BDA9AD1AB1"><enum>(a)</enum><header>Asylum applicants</header> <paragraph id="HDFCBCEAE10D94CB9A8DB58F3F7828FF8"><enum>(1)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in this subsection, by any alien who files an initial application for employment authorization under section 208(d)(2) (<external-xref legal-doc="usc" parsable-cite="usc/8/1158">8 U.S.C. 1158(d)(2)</external-xref>) at the time such initial employment authorization application is filed.</text></paragraph>
<paragraph id="HDF5C8F39DEB54417A96DD4BD39DBCCC7"><enum>(2)</enum><header>Initial amount</header><text>During fiscal year 2025, the amount specified in this subsection shall be the greater of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HECD7C81073C84FF88C11282004073713"><enum>(A)</enum><text display-inline="yes-display-inline">$550; or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H69C552CC96414D1F8E520205036D080B"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="H771D3CC944D34517A45448229BED4435"><enum>(3)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text>
<subparagraph id="H59ED47BE5CF342D5B8908143DF245215"><enum>(A)</enum><text>the amount of the fee required under this section for the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="H21926FE17C654F43BF706E8FAD8311B1"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph>
<paragraph id="H48146D027572404199C0F4AD498EAC03"><enum>(4)</enum><header>Disposition of employment authorization document fees</header><text>During each fiscal year—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HC9E68E3CC29E485B9E39AB9C8EDEF358"><enum>(A)</enum><text display-inline="yes-display-inline">25 percent of the fees collected pursuant to this subsection—</text>
<clause commented="no" display-inline="no-display-inline" id="HFEBB155FC40243CF88C58104A803E308"><enum>(i)</enum><text display-inline="yes-display-inline">shall be credited to U.S. Citizenship and Immigration Services;</text></clause> <clause commented="no" display-inline="no-display-inline" id="HF56EDDCD19BF451A8281D76DC3E11F09"><enum>(ii)</enum><text display-inline="yes-display-inline">shall be deposited into the Immigration Examinations Fee Account established under section 286(m) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(m)</external-xref>); and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="H69D48B82D8BE42F7ACC76981DADD640C"><enum>(iii)</enum><text display-inline="yes-display-inline">may be retained and expended by U.S. Citizenship and Immigration Services without further appropriation, provided that not less than 50 percent is used to detect and prevent immigration benefit fraud; and</text></clause></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H708BE98EBD6C4951B5BC75570A7336A9"><enum>(B)</enum><text display-inline="yes-display-inline">any amounts collected pursuant to this subsection that are not credited to U.S. Citizenship and Immigration Services pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph>
<paragraph id="HD4AC7B3BFF6947ED8DFF23619636E4B3"><enum>(5)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this subsection shall not be waived or reduced.</text></paragraph></subsection> <subsection id="H1BD071A5B8D449E799FCA9ADBCB6C82D"><enum>(b)</enum><header>Parolees</header> <paragraph id="HFBA81A9A902E4BAA8A6131A67B29C760"><enum>(1)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in this subsection, by any alien paroled into the United States for any initial application for employment authorization at the time such initial application is filed. Each initial employment authorization shall be valid for a period of 1 year or for the duration of the alien’s parole, whichever is shorter.</text></paragraph>
<paragraph id="HB8C656BB5E314AB493CAA191D0EBFBDD"><enum>(2)</enum><header>Initial amount</header><text>During fiscal year 2025, the amount specified in this subsection shall be the greater of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H621D24F1C3104C85AE14D5706092ABF3"><enum>(A)</enum><text display-inline="yes-display-inline">$550; or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HB8587EB69FEC4FECA688BE80F95042EF"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="H390C4D2630E24D6499B0915CA8DD4BFF"><enum>(3)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this subsection shall be equal to the sum of—</text>
<subparagraph id="HC08640A7263D439B9F815AC405FF1CF1"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="HFEC7F6C5036846B8B1BAE7CFAED353CF"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph>
<paragraph id="H501E04346FC94ADA82B70DA05E27BD6F"><enum>(4)</enum><header>Disposition of parolee employment authorization application fees</header><text>All of the fees collected pursuant to this subsection shall be deposited into the general fund of the Treasury.</text></paragraph> <paragraph id="H224DB994441F49D79D5FA14484422542"><enum>(5)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this subsection shall not be waived or reduced.</text></paragraph></subsection>
<subsection id="H6BDE7469AD8E4E009E4411D33EAB5FA5"><enum>(c)</enum><header>Temporary protected status</header>
<paragraph id="H33CB7D6AD0AB4166940224B6BDC0251E"><enum>(1)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in this subsection, by any alien who files an initial application for employment authorization under section 244(a)(1)(B) (<external-xref legal-doc="usc" parsable-cite="usc/8/1254a">8 U.S.C. 1254a(a)(1)(B)</external-xref>) at the time such initial application is filed. Each initial employment authorization shall be valid for a period of 1 year, or for the duration of the alien’s temporary protected status, whichever is shorter.</text></paragraph> <paragraph id="H8BD17E8CEABC41918C28B6E4CC1BCCB4"><enum>(2)</enum><header>Initial amount</header><text>During fiscal year 2025, the amount specified in this subsection shall be the greater of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H30EC1E7DBBA645B0808DE494DBD09A1B"><enum>(A)</enum><text display-inline="yes-display-inline">$550; or</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HF8107C24599E45F2805789C58D147E17"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph>
<paragraph id="H456BAEC94AA44779A602F320D079D2EB"><enum>(3)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this subsection shall be equal to the sum of—</text> <subparagraph id="HDAD0A70E204C421E8DCD5C01F7765A39"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph>
<subparagraph id="H7E8C0CE058EB4E9B8B6A2F721981F5E4"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph> <paragraph id="HB160B8B969A9440F8972869E1F72FAA3"><enum>(4)</enum><header>Disposition of employment authorization application fees collected from aliens granted temporary protected status</header><text>All of the fees collected pursuant to this subsection shall be deposited into the general fund of the Treasury.</text></paragraph>
<paragraph id="H102FFEA22EBF43A09A0B968F22166B28"><enum>(5)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this subsection shall not be waived or reduced.</text></paragraph></subsection></section> <section id="H6F326F8651A64F769D4F3F8C27F3330E"><enum>100004.</enum><header>Immigration parole fee</header> <subsection id="H522B335C29614731931F7AD6916FDB04"><enum>(a)</enum><header>In general</header><text>Except as provided under subsection (b), the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in this section and in addition to any other fee authorized by law, by any alien who is paroled into the United States.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HE11690AD99D2491AB485814FC8349091"><enum>(b)</enum><header>Exceptions</header><text display-inline="yes-display-inline">An alien shall not be subject to the fee otherwise required under subsection (a) if the alien establishes, to the satisfaction of the Secretary of Homeland Security, on an individual, case-by-case basis, that the alien is being paroled because—</text> <paragraph id="H0868834011EB4364A509D6C8D6EA2CC8"><enum>(1)</enum> <subparagraph commented="no" display-inline="yes-display-inline" id="H6BD48335B37448659C32079EF0F512C8"><enum>(A)</enum><text>the alien has a medical emergency; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H57CCC18B05A24BBDA72B56B95F5A44BF" indent="up1"><enum>(B)</enum>
<clause commented="no" display-inline="yes-display-inline" id="HA66ECC08B3DB48ECA30B897BD25F0371"><enum>(i)</enum><text display-inline="yes-display-inline">the alien cannot obtain necessary treatment in the foreign state in which the alien is residing; or</text></clause> <clause commented="no" display-inline="no-display-inline" indent="up1" id="H72D747E43B68407FBDF70FD657B2EA72"><enum>(ii)</enum><text display-inline="yes-display-inline">the medical emergency is life-threatening and there is insufficient time for the alien to be admitted to the United States through the normal visa process;</text></clause></subparagraph></paragraph>
<paragraph id="HA9A7811F3B0A4585B0BFF2367FF4D67A"><enum>(2)</enum>
<subparagraph commented="no" display-inline="yes-display-inline" id="H185F0FC9EC5943978FEDF5D1B8209858"><enum>(A)</enum><text>the alien is the parent or legal guardian of an alien described in paragraph (1); and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HBC8CB6662D1741EEBF81C1C2A0E9786B" indent="up1"><enum>(B)</enum><text display-inline="yes-display-inline">the alien described in paragraph (1) is a minor;</text></subparagraph></paragraph>
<paragraph id="HF957D04D378F4CF197A59D1FF7FC885D"><enum>(3)</enum>
<subparagraph commented="no" display-inline="yes-display-inline" id="H47FB0D5364E34942BB198F30C854E809"><enum>(A)</enum><text>the alien is needed in the United States to donate an organ or other tissue for transplant; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H92430221C3604481B7929E6CE66BEF61" indent="up1"><enum>(B)</enum><text display-inline="yes-display-inline">there is insufficient time for the alien to be admitted to the United States through the normal visa process;</text></subparagraph></paragraph>
<paragraph id="H7877502AF47846EA89C8DAAD9F0A81D5"><enum>(4)</enum>
<subparagraph commented="no" display-inline="yes-display-inline" id="HA6A78CDC4354469AB965796D888B0321"><enum>(A)</enum><text>the alien has a close family member in the United States whose death is imminent; and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H6FFEE2E378B940968973EB899D756AEE" indent="up1"><enum>(B)</enum><text display-inline="yes-display-inline">the alien could not arrive in the United States in time to see such family member alive if the alien were to be admitted to the United States through the normal visa process;</text></subparagraph></paragraph>
<paragraph id="HC379D4B65A5144EA88129833EEA6C217"><enum>(5)</enum>
<subparagraph commented="no" display-inline="yes-display-inline" id="HE2ABD97946C54EDC996EFB1444EBE6B3"><enum>(A)</enum><text>the alien is seeking to attend the funeral of a close family member; and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HBE8192F9C40144A09FF61062360C970D" indent="up1"><enum>(B)</enum><text display-inline="yes-display-inline">the alien could not arrive in the United States in time to attend such funeral if the alien were to be admitted to the United States through the normal visa process;</text></subparagraph></paragraph>
<paragraph id="H42D38B96C3A04ACDB7F8D2244511D54B"><enum>(6)</enum><text>the alien is an adopted child—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HDDEF2EC84CC745E0BC7E4156302C3F22"><enum>(A)</enum><text display-inline="yes-display-inline">who has an urgent medical condition;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H326612EC89EA4C1BB40F6B9CF74E35AB"><enum>(B)</enum><text display-inline="yes-display-inline">who is in the legal custody of the petitioner for a final adoption-related visa; and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H29E393F77FB2420690EFBA1CAA25A52C"><enum>(C)</enum><text display-inline="yes-display-inline">whose medical treatment is required before the expected award of a final adoption-related visa;</text></subparagraph></paragraph>
<paragraph id="H5D48A42100F6414EABEE705F491BE7A3"><enum>(7)</enum><text>the alien—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H8BB631E7C99B42B1B07BF31F6A644E55"><enum>(A)</enum><text display-inline="yes-display-inline">is a lawful applicant for adjustment of status under section 245 (<external-xref legal-doc="usc" parsable-cite="usc/8/1255">8 U.S.C. 1255</external-xref>); and </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H84A2C705974440F891FA4EDF86398F0D"><enum>(B)</enum><text display-inline="yes-display-inline">is returning to the United States after temporary travel abroad;</text></subparagraph></paragraph> <paragraph id="HD2A6249124584D2ABA71480C18DBCE62"><enum>(8)</enum><text>the alien—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H223EBDECA05C470691CF201B2CE44E1E"><enum>(A)</enum><text display-inline="yes-display-inline">has been returned to a contiguous country pursuant to section 235(b)(2)(C) (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225(b)(2)(C)</external-xref>); and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H3957BC94635D4AEC96EB7BE157317F91"><enum>(B)</enum><text display-inline="yes-display-inline">is being paroled into the United States to allow the alien to attend the alien’s immigration hearing;</text></subparagraph></paragraph>
<paragraph id="H96A650B6A1C5411B90E3A67495F68561"><enum>(9)</enum><text>the alien has been granted the status of Cuban and Haitian entrant (as defined in section 501(e) of the Refugee Education Assistance Act of 1980 (<external-xref legal-doc="public-law" parsable-cite="pl/96/422">Public Law 96–422</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/8/1522">8 U.S.C. 1522</external-xref> note); or</text></paragraph> <paragraph id="H2920E0AD43D04032B8C736573E69A672"><enum>(10)</enum><text>the Secretary of Homeland Security determines that a significant public benefit has resulted or will result from the parole of an alien—</text>
<subparagraph id="H3C0F3E1333B94F25A907327AB18AEB9E"><enum>(A)</enum><text>who has assisted or will assist the United States Government in a law enforcement matter;</text></subparagraph> <subparagraph id="H310EA3B44E404B1CB6B1A489F84EDF8B"><enum>(B)</enum><text>whose presence is required by the United States Government in furtherance of such law enforcement matter; and</text></subparagraph>
<subparagraph id="HC9635F4B36D340C88393104DB479EC1E"><enum>(C)</enum>
<clause commented="no" display-inline="yes-display-inline" id="H03A51C4047A542309DBFE88A26C68BF6"><enum>(i)</enum><text>who is inadmissible or does not satisfy the eligibility requirements for admission as a nonimmigrant; or</text></clause> <clause commented="no" display-inline="no-display-inline" id="H431993A131174B0D9AC4D758741E7F3A" indent="up1"><enum>(ii)</enum><text display-inline="yes-display-inline">for which there is insufficient time for the alien to be admitted to the United States through the normal visa process.</text></clause></subparagraph></paragraph></subsection>
<subsection id="HC44FBB92B49242BD9C40473B86A680B0"><enum>(c)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text> <paragraph commented="no" display-inline="no-display-inline" id="H8421F116CCE14479BC53DC816EF87B0E"><enum>(1)</enum><text display-inline="yes-display-inline">$1,000; or </text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H3FC2DBC7A2E14220B59647A9F396EC2A"><enum>(2)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></paragraph></subsection> <subsection id="H1A8388080C524A179C714E77253940BF"><enum>(d)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text>
<paragraph id="HEF2F8D97805F4971BCDE28092A1233CD"><enum>(1)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></paragraph> <paragraph id="H50240A47BFF1417DA2D01FFDBFC798EE"><enum>(2)</enum><text>the product resulting from the multiplication of the amount referred to in paragraph (1) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></paragraph></subsection>
<subsection id="H5628A7F9CB54484B8D9FEAD06ED66887"><enum>(e)</enum><header>Disposition of fees collected from aliens granted parole</header><text>All of the fees collected pursuant to this section shall be deposited into the general fund of the Treasury.</text></subsection> <subsection id="H8FBB2A31AA79463884B46EB5D6811EFC"><enum>(f)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Except as provided in subsection (b), fees required to be paid under this section shall not be waived or reduced.</text></subsection></section>
<section id="H40144A2BADA5453D9709257FD13484AC"><enum>100005.</enum><header>Special immigrant juvenile fee</header>
<subsection id="HEC5FDF624C6F441E91E8DE22C1B04828"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in this section, by any alien, parent, or legal guardian of an alien applying for special immigrant juvenile status under section 101(a)(27)(J) (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101(a)(27)(J)</external-xref>).</text></subsection> <subsection id="H5CB78D974A0A472CAACB4A5FF21EC065"><enum>(b)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H1648DFB8B0C84B9783377E9132A29569"><enum>(1)</enum><text display-inline="yes-display-inline">$250; or </text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="H74F1F2EEA7DD4CCFA2D186F4B5DEE424"><enum>(2)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></paragraph></subsection>
<subsection id="H82DA25EAC33244AFAEAC5E96C7BCC344"><enum>(c)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text> <paragraph id="HAB52BAC197744F0A870427AB82F4E4F9"><enum>(1)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></paragraph>
<paragraph id="HD34F79DFE69049B1B3A63225FEDE52BE"><enum>(2)</enum><text>the product resulting from the multiplication of the amount referred to in paragraph (1) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></paragraph></subsection> <subsection id="H1C9858ACC8A14FB1928E5663B754C93D"><enum>(d)</enum><header>Disposition of special immigrant juvenile fees</header><text>All of the fees collected pursuant to this section shall be deposited into the general fund of the Treasury.</text></subsection></section>
<section id="H17AFC7F6A524418D97409DBE192B19DA"><enum>100006.</enum><header>Temporary protected status fee</header><text display-inline="no-display-inline">Section 244(c)(1)(B) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1254a">8 U.S.C. 1254a(c)(1)(B)</external-xref>) is amended—</text> <paragraph commented="no" display-inline="no-display-inline" id="H6D4B2DC341AB44CBB59D5CB9C3B25711"><enum>(1)</enum><text display-inline="yes-display-inline">by striking <quote>The Attorney General</quote> and inserting the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H64EB44F140794988950FF338887F3DC8">
<clause commented="no" display-inline="no-display-inline" id="H49B86AF9FFBD497C8A26CE7DA9BF8F72"><enum>(i)</enum><header>In general</header><text>The Attorney General</text></clause><after-quoted-block>;</after-quoted-block></quoted-block></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HBE46E29C6532491998C8CBD65DF30AD7"><enum>(2)</enum><text display-inline="yes-display-inline">in clause (i), as redesignated, by striking <quote>$50</quote> and inserting <quote>$500, subject to the adjustments required under clause (ii)</quote>; and</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H71411870DF4042FEB02B360452F6C22B"><enum>(3)</enum><text>by adding at the end the following: </text> <quoted-block style="OLC" display-inline="no-display-inline" id="HF6BD221E6B0E4DC0B0C885E18ACFBD0C"> <clause id="HFA2F8107FA2747AF9C3C4DB2672EE1C5"><enum>(ii)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the maximum amount of the fee authorized under clause (i) shall be equal to the sum of—</text>
<subclause id="HE2D41648BC38476F9FDC29F308B2F25D"><enum>(I)</enum><text>the maximum amount of the fee authorized under this subparagraph for the most recently concluded fiscal year; and</text></subclause> <subclause id="H042F1A3C135948DF958D96E6474BF185"><enum>(II)</enum><text>the product resulting from the multiplication of the amount referred to in subclause (I) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subclause></clause>
<clause id="HB45D183CC0994DEF9FCC6878BCFCF34B"><enum>(iii)</enum><header>Disposition of temporary protected status fees</header><text>All of the fees collected pursuant to this subparagraph shall be deposited into the general fund of the Treasury.</text></clause> <clause id="HE3C81841AB7F49F9BB68AA396EC98780"><enum>(iv)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this subparagraph shall not be waived or reduced.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section>
<section id="HDEFA86C4350446FD838E476CC6F0E9FB"><enum>100007.</enum><header>Visa integrity fee</header>
<subsection id="H847FA755C36C44F1B54CAAF3DD5205B5"><enum>(a)</enum><header>Visa integrity fee</header>
<paragraph id="H80485B92F85A41D0B7452F782A85AC01"><enum>(1)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in this subsection, by any alien issued a nonimmigrant visa at the time of such issuance.</text></paragraph> <paragraph id="HBF5075E860DD4CF2AA3B772B67B99C83"><enum>(2)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HE9B9C84924F8481E8F2BB9D1BB4DD68C"><enum>(A)</enum><text display-inline="yes-display-inline">$250; or </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H428C846B17244A45BC9A91CD654C393A"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph>
<paragraph id="H7197705E97954429ACA4F49C6A234644"><enum>(3)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text> <subparagraph id="H40BB61CB68E34E2E9B64392DF4D9DB68"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph>
<subparagraph id="H80BC44F556024514A0C3826800F3DA3B"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded down to the nearest dollar.</text></subparagraph></paragraph> <paragraph id="H8B3B8CBBD91946F7AC7B124820FDC1D7"><enum>(4)</enum><header>Disposition of visa integrity fees</header><text>All of the fees collected pursuant to this section that are not reimbursed pursuant to subsection (b) shall be deposited into the general fund of the Treasury.</text></paragraph>
<paragraph id="H426F450F325047CFBBC437A1D7902759"><enum>(5)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this subsection shall not be waived or reduced.</text></paragraph></subsection> <subsection id="H8F9DBCC61B6F43D9BD9E691BDF187890"><enum>(b)</enum><header>Fee reimbursement</header><text>The Secretary of Homeland Security may provide a reimbursement to an alien of the fee required under subsection (a) for the issuance of a nonimmigrant visa after the expiration of such nonimmigrant visa’s period of validity if such alien demonstrates that he or she—</text>
<paragraph id="H2229898AEB2B4B9EBB2EB558A0B1FE59"><enum>(1)</enum><text>after admission to the United States pursuant to such nonimmigrant visa, complied with all conditions of such nonimmigrant visa, including the condition that an alien shall not accept unauthorized employment; and</text></paragraph> <paragraph id="H3A5E33CFF8DF4EF7A4F039C286ED975B"><enum>(2)</enum> <subparagraph commented="no" display-inline="yes-display-inline" id="H7CAF080745CB4F0EB524995096C7983D"><enum>(A)</enum><text>has not sought to extend his or her period of admission during such period of validity and departed the United States not later than 5 days after the last day of such period; or</text></subparagraph>
<subparagraph indent="up1" commented="no" display-inline="no-display-inline" id="HF9CCA910659540958E04A0F2AF7DFD15"><enum>(B)</enum><text>during such period of validity, was granted an extension of such nonimmigrant status or an adjustment to the status of a lawful permanent resident.</text></subparagraph></paragraph></subsection></section> <section id="H4332DE23919749A0AE86FE367BC5BD81"><enum>100008.</enum><header>Form I–94 fee</header> <subsection id="H8AA7CCEF71134B88B6E6192C5DD7E8F5"><enum>(a)</enum><header>Fee authorized</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in subsection (b), by any alien who submits an application for a Form I–94 Arrival/Departure Record.</text></subsection>
<subsection id="HA5196C59D24A441CB4681B48C99B3FDD"><enum>(b)</enum><header>Amount specified</header>
<paragraph id="HF786EACFD9BF43B0A349C60618FD02BC"><enum>(1)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H4FE9E55605A24F408A52F201C7720D13"><enum>(A)</enum><text display-inline="yes-display-inline">$24; or </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H5B8CD0E0F451492FABE6680AD2DE02CC"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="H9E7BC953AD13446AB15AC7CFB7551E4F"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text>
<subparagraph id="H7AF3837EBD434B4BBCC105AC09F8345B"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="HBF16805E995247BDA2531492E13EA4D1"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded down to the nearest dollar.</text></subparagraph></paragraph></subsection>
<subsection id="HECF0799189CF40A8A2677C04A5877EAD"><enum>(c)</enum><header>Disposition of Form I–94 fees</header><text>During each fiscal year—</text> <paragraph id="HAE8FB639E00245A896CDCBA3FDCD766B"><enum>(1)</enum><text>20 percent of the fees collected pursuant to this section—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HD96602C326614C538C9F9AB3AF439D54"><enum>(A)</enum><text display-inline="yes-display-inline">shall be deposited into the Land Border Inspection Fee Account in accordance with section 286(q)(2) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(q)(2)</external-xref>); and </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HD6B4B1B044154D2C848E230A3D16A7D8"><enum>(B)</enum><text display-inline="yes-display-inline">shall be made available to U.S. Customs and Border Protection to retain and spend without further appropriation for the purpose of processing Form I–94; and</text></subparagraph></paragraph>
<paragraph id="H1DF513BCB2124AB1AF5FE25F84884E58"><enum>(2)</enum><text>any amounts not deposited into the Land Border Inspection Fee Account pursuant to paragraph (1)(A) shall be deposited in the general fund of the Treasury.</text></paragraph></subsection> <subsection id="HC4B138248A04473C8DB44FB888D15DA1"><enum>(d)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section>
<section id="H5AEEAF283CF7433EAAF19683479B905E"><enum>100009.</enum><header>Annual asylum fee</header>
<subsection id="H60B6F50BCCB04E34BC124D5CD2F6307B"><enum>(a)</enum><header>Fee authorized</header><text>In addition to any other fee authorized by law, for each calendar year that an alien’s application for asylum remains pending, the Secretary of Homeland Security or the Attorney General, as applicable, shall require the payment of a fee, equal to the amount specified in subsection (b), by such alien.</text></subsection> <subsection id="HA5EECDBC0EFA450293123BE219A43C99"><enum>(b)</enum><header>Amount specified</header> <paragraph id="H6ED04D2D12DB42D9913F9910D59FD1AF"><enum>(1)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="HC83F0AE973A942F88860409C0644B67E"><enum>(A)</enum><text display-inline="yes-display-inline">$100; or </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H5A6734E118E64B11A30451366432DE5A"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph>
<paragraph id="H035CB49630794A008140936CA9338168"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text> <subparagraph id="H4054D98DA45E459EAC2DC7047D2DDAC6"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph>
<subparagraph id="HE91AE11B742E40A8B9F0A93B20B4A1A8"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded down to the nearest dollar.</text></subparagraph></paragraph></subsection> <subsection id="H01C4BD9048FB410881045ECB93DB9430"><enum>(c)</enum><header>Disposition of annual asylum fees</header><text>All of the fees collected pursuant to this section shall be deposited into the general fund of the Treasury.</text></subsection>
<subsection id="H83A0E35B947D49D5B9151CD47B732007"><enum>(d)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section> <section id="H9DC71478800F4E04B74E980632335CF1"><enum>100010.</enum><header>Fee relating to renewal and extension of employment authorization for parolees</header> <subsection id="H7C6C1486F087421F8E107D1A2346E86C"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in subsection (b), for any parolee who seeks a renewal or extension of employment authorization based on a grant of parole. The employment authorization for each alien paroled into the United States, or any renewal or extension of such parole, shall be valid for a period of 1 year or for the duration of the alien’s parole, whichever is shorter.</text></subsection>
<subsection id="HBC6790CE46DC40E5ACB97719446B5EF6"><enum>(b)</enum><header>Amount specified</header>
<paragraph id="H7629EE8EB52C490991B08B090766660A"><enum>(1)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this subsection shall be the greater of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H9892073079964C06B2B4078618A719C2"><enum>(A)</enum><text display-inline="yes-display-inline">$275; or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HFCA9A5379D174DC2B43FE7090694D699"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="HD470D5A809A54A6FA5C0518ED7FDAC91"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text>
<subparagraph id="HE1925B7001B34DD584311DC22B775F78"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="HD17A4614FB304CFB997AB38D8FFC8844"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph></subsection>
<subsection id="H6A9958D1B41744EE8CA9396AFFEA84CD"><enum>(c)</enum><header>Disposition of fees relating to renewal and extension of employment authorization for parolees</header><text>During each fiscal year—</text> <paragraph id="H96F237A4D5764A329BCFAEA1B2EBE097"><enum>(1)</enum><text>25 percent of the fees collected pursuant to this section—</text>
<subparagraph id="HFF54A7DEBC2349CDB63F979394725ECF"><enum>(A)</enum><text>shall be credited to U.S. Citizenship and Immigration Services;</text></subparagraph> <subparagraph id="H595912172B88498CAB3B39FE9AC531F0"><enum>(B)</enum><text>shall be deposited into the Immigration Examinations Fee Account established under section 286(m) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(m)</external-xref>); and</text></subparagraph>
<subparagraph id="H8F5546383427486ABD4EF4CF696BF659"><enum>(C)</enum><text>may be retained and expended by U.S. Citizenship and Immigration Services without further appropriation; and</text></subparagraph></paragraph> <paragraph id="HA96F8E929ABC4EF5B83F61EF1302EE77"><enum>(2)</enum><text>any amounts collected pursuant to this section that are not credited to U.S. Citizenship and Immigration Services pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></paragraph></subsection>
<subsection id="H49371BFAFCD34D2184C94EB8A02E286A"><enum>(d)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section> <section id="H3BCF134F78F84855B2190D52C81D5A22"><enum>100011.</enum><header>Fee relating to renewal or extension of employment authorization for asylum applicants</header> <subsection id="H28DC625295474DEF940E9EF220F926FD"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee of not less than $275 by any alien who has applied for asylum for each renewal or extension of employment authorization based on such application.</text></subsection>
<subsection id="H406F7C4BEB954EF8AE12B35E5D118754"><enum>(b)</enum><header>Termination</header><text>Each initial employment authorization, or renewal or extension of such authorization, shall terminate—</text> <paragraph id="H730E6ACEAFA446F7A8C0D63CC14EAF6A"><enum>(1)</enum><text>immediately following the denial of an asylum application by an asylum officer, unless the case is referred to an immigration judge;</text></paragraph>
<paragraph id="H226C2438B7CA40058A3A881FB3BBE8E7"><enum>(2)</enum><text>on the date that is 30 days after the date on which an immigration judge denies an asylum application, unless the alien makes a timely appeal to the Board of Immigration Appeals; or</text></paragraph> <paragraph id="HCB3E3BF6B3054EA9AF5966B337B8AFDB"><enum>(3)</enum><text>immediately following the denial by the Board of Immigration Appeals of an appeal of a denial of an asylum application.</text></paragraph></subsection>
<subsection id="H74788FE46BDD48D6B5ED2E4C46666565"><enum>(c)</enum><header>Disposition of fees relating to renewal and extension of employment authorization for asylum applicants</header><text>During each fiscal year—</text> <paragraph id="H3243E6AB0722447D91B8973C5922069E"><enum>(1)</enum><text>25 percent of the fees collected pursuant to this section—</text>
<subparagraph id="HAE2C2E9DC86145EFBADBFC52F0F82BF4"><enum>(A)</enum><text>shall be credited to U.S. Citizenship and Immigration Services;</text></subparagraph> <subparagraph id="H24A173F51FDE4CB5B15278B5E043B81F"><enum>(B)</enum><text>shall be deposited into the Immigration Examinations Fee Account established under section 286(m) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(m)</external-xref>); and</text></subparagraph>
<subparagraph id="HF1F4DAA4F7C641559D3EF3795BC94DFB"><enum>(C)</enum><text>may be retained and expended by U.S. Citizenship and Immigration Services without further appropriation; and</text></subparagraph></paragraph> <paragraph id="H64ABEA680462499097A307D9EBC8DA96"><enum>(2)</enum><text>any amounts collected pursuant to this section that are not credited to U.S. Citizenship and Immigration Services pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></paragraph></subsection>
<subsection id="H6A09585EC7EF4DEABA373E2A0743E0F4"><enum>(d)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section> <section id="HFAEF4184C08F46F7AE1309A7D65275E7"><enum>100012.</enum><header>Fee relating to renewal and extension of employment authorization for aliens granted temporary protected status</header> <subsection id="H57567148096D4D23BAD486AB3B9777A7"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in subsection (b), by any alien at the time such alien seeks a renewal or extension of employment authorization based on a grant of temporary protected status. Any employment authorization for an alien granted temporary protected status, or any renewal or extension of such employment authorization, shall be valid for a period of 1 year or for the duration of the designation of temporary protected status, whichever is shorter.</text></subsection>
<subsection id="H87727DB5813C49F49E9B2C284212AC52"><enum>(b)</enum><header>Amount specified</header>
<paragraph id="HF6BECF5C8C244D3EB785DFDF9F6211EF"><enum>(1)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this subsection shall be the greater of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HEDFA7C959D6849EF80B4376BBC9A0940"><enum>(A)</enum><text display-inline="yes-display-inline">$275; or</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H364D496EDA1747E5B03B54C947295D2C"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="HD9436524C4DD40988D499128B77007D6"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text>
<subparagraph id="H69D3F640CE5544319F6BC939DAA7F999"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="H316BBEF02FBE4A12A76EED03D086B3BF"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph></subsection>
<subsection id="HC70A9229FD714CF99C8F4B207355E505"><enum>(c)</enum><header>Disposition of fees relating to renewal and extension of employment authorization for temporary protected status applicants</header><text>During each fiscal year—</text> <paragraph id="HDC36E36ADB794F078379E57C2C48889D"><enum>(1)</enum><text>25 percent of the fees collected pursuant to this section—</text>
<subparagraph id="H06652905971341ADAFA3475C43E981F9"><enum>(A)</enum><text>shall be credited to U.S. Citizenship and Immigration Services;</text></subparagraph> <subparagraph id="HEBA6522FA7104383A3866AB6447A1761"><enum>(B)</enum><text>shall be deposited into the Immigration Examinations Fee Account established under section 286(m) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(m)</external-xref>); and</text></subparagraph>
<subparagraph id="H2BFDF0193E024B74A6E7C0B7DFDA370D"><enum>(C)</enum><text>may be retained and expended by U.S. Citizenship and Immigration Services without further appropriation; and</text></subparagraph></paragraph> <paragraph id="H3A308B008E544A3C9CB1650CC42CE039"><enum>(2)</enum><text>any amounts collected pursuant to this section that are not credited to U.S. Citizenship and Immigration Services pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></paragraph></subsection>
<subsection id="HD421A5113324438293F2E0AB1FEA1E77"><enum>(d)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section> <section id="HE0641B275AA844BD8C4B6893D2B6C3D5"><enum>100013.</enum><header>Fees relating to applications for adjustment of status</header> <subsection id="H74703D66C4804603B2747020336B9DA8"><enum>(a)</enum><header>Fee for filing an application to adjust status to that of a lawful permanent resident</header> <paragraph id="H339B831C9EE14775BC80CEC8D4F358E4"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien who files an application with an immigration court to adjust the alien’s status to that of a lawful permanent resident, or whose application to adjust his or her status to that of a lawful permanent resident is adjudicated in immigration court. Such fee shall be paid at the time such application is filed or before such application is adjudicated by the immigration court.</text></paragraph>
<paragraph id="HA6D218E8826144EAA3496872C5E19306"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="H065DEF1590B04F8BBC85B29A310AB933"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="H352D34518B744DE189FC1565FAF4AA00"><enum>(i)</enum><text>$1,500; or</text></clause>
<clause id="H70B0E7D4B7454D77BCC8BA4BCB2A3617"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="HB1CA99DB72164F85B6459CE04AD0E3CC"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="H4B49985988B047D083E044992877FFEE"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="H45DE290907E14988A6F8E5847C7FC31F"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="H18DB21CFFD3E4FE0A1212FF311D0CDF6"><enum>(3)</enum><header>Disposition of adjustment of status application fees</header><text>During each fiscal year—</text> <subparagraph id="H9316B4E2D3C54CEEBD771FB4BB62AF8A"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="H3D8CABEF3D78493BA83A21E43726640A"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="HFA75CFF5706A44AC9AB95575ED12E75D"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="H1071635BD8F04C05BBBAA782F75DBFCD"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="H5E87D563C7A049FFB1F42CE4580E1532"><enum>(b)</enum><header>Fee for filing application for waiver of grounds of inadmissibility</header> <paragraph id="HB5661E3DE9934145A0B9C29C5A5FCA60"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files an application with an immigration court for a waiver of a ground of inadmissibility, or before such application is adjudicated by the immigration court.</text></paragraph>
<paragraph id="HF95D77A252F34FACBC72DBA6ABA6B034"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="H818EF291A38A494790AB5C3FDAAEBFB2"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="H0CE1DA72054A4B17913B8A0A75E6B50F"><enum>(i)</enum><text>$1,050; or</text></clause>
<clause id="H68BA84B0ECC447F4AC9E59DB64C736DD"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="H9826F7D7C09C4B35948F024B5066E211"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="H5E0484C9ED48478E88FE7D6C9327D917"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="H5219FCB8C58446468066D80AA604A624"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="HD1B15258C2B1481AB9110A8F33D18B9C"><enum>(3)</enum><header>Disposition of waiver of ground of admissibility application fees</header><text>During each fiscal year—</text> <subparagraph id="H4A26521A47694DB491E95B1044A10395"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="H182225B5A30F489E91C12842E1523F26"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="H3B7B45281C124E378247BE548DF55466"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="HD79FDC67091649528861B6754974DF1C"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="HF4A491B60ED949EBA387BD135AE48718"><enum>(c)</enum><header>Fee for filing an application for temporary protected status</header> <paragraph id="H47CC1886C365456BA237302FAB291538"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files an application with an immigration court for temporary protected status, or before such application is adjudicated by the immigration court.</text></paragraph>
<paragraph id="H9829698A77494904B4D6543C54885AA4"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="HC708ECC0243C4FB283A3F64877AE586F"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="HE234E4E712F34F2B8565D0AD44FA3CF1"><enum>(i)</enum><text>$500; or</text></clause>
<clause id="HDF7FC0AC11D04D93BDF5F8617DFB85CC"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="H99A16347765C4B728E30CF28361D2253"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="H5FA9B675DA554604B9A097B225C823C7"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="HB63955EEFFEB41A99F561C1FF136BF58"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="H5758D6786E434DD382138F2D5C674C9C"><enum>(3)</enum><header>Disposition of temporary protected status application fees</header><text>During each fiscal year—</text> <subparagraph id="H0A70E738362A45EFB0BC46C791DBA07D"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="HE2AD4667555E4360B53E0313F9ACE427"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="H60C0FCF6E5384DAABCC38BFF3EE82B3F"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="H7F3A52C949924F9991F0C840277C6173"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="HF0D9E21A0A4F4A6B845D25DD5BA7D3AE"><enum>(d)</enum><header>Fee for filing an appeal of a decision of an immigration judge</header> <paragraph id="H23EF6EBB3F0D4693BA51FD554BD8FA6A"><enum>(1)</enum><header>In general</header><text>Except as provided in paragraph (3), the Attorney General shall require, in addition to any other fees authorized by law, the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files an appeal from a decision of an immigration judge.</text></paragraph>
<paragraph id="HAD9B56AA4B7443AA89C9B31554AEE357"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="H846663E0A4FA4881A25F1D2A77CA7E8A"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="H0D27DD783553432387B2CB9328E9C591"><enum>(i)</enum><text>$900; or</text></clause>
<clause id="H02293DA1A2664B5E82B08CE58D2C27D2"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="HC8615667AF304F97BCC7481BFD2F8BE9"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="H2A5296AAD0F8472C8A7B97541679367D"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="H92711A5D6999409FB0B9B1DFF55BF4BF"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="H372FB3442FB44C0592F4FB6DD3085552"><enum>(3)</enum><header>Exception</header><text>The fee required under paragraph (1) shall not apply to the appeal of a bond decision.</text></paragraph> <paragraph id="HAAC6EF3A076A4A96B99564AD99288B15"><enum>(4)</enum><header>Disposition of fees for appealing immigration judge decisions</header><text>During each fiscal year—</text>
<subparagraph id="HC87015A9D5294CDA9D38F490EA8639BA"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text> <clause id="HF272D2A9D907473CA21DF8828D8E2E1A"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause>
<clause id="HEE739EB508D242E18F661456FD876345"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph> <subparagraph id="H187E7C284D2447E3A0F402D2E0DC14E4"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection>
<subsection id="H1D995785B6044C54B8737FE5B193AC20"><enum>(e)</enum><header>Fee for filing an appeal from a decision of an officer of the department of homeland security</header>
<paragraph id="HE6144014B3C949449C9F7AA27404958E"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files an appeal of a decision of an officer of the Department of Homeland Security.</text></paragraph> <paragraph id="HB3FBCD10E9644AE681AD944658E3565B"><enum>(2)</enum><header>Amount specified</header> <subparagraph id="HB7278E2DADBC4B2DA9136118938C3181"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text>
<clause id="H7F6D9550AE0F4C279A5ED604D5F86679"><enum>(i)</enum><text>$900; or</text></clause> <clause id="HAC024E36FCAD48EEBE2F51EB4D95689C"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph>
<subparagraph id="H99FA162E5A9D4006957464B5DB5286EA"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text> <clause id="H3D7D93426BED4341AEA204218E9ED483"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause>
<clause id="H5BB171C9ED4A4949AB9F85E02C951869"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph> <paragraph id="H3F29CFA953174815A2427848DA3180DA"><enum>(3)</enum><header>Disposition of fees for appealing department of homeland security officer decisions</header><text>During each fiscal year—</text>
<subparagraph id="H44D48E0EB3A645E28CFFE7C6B69FE7FD"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text> <clause id="HA507AF5D02AF41D584A10DCE4AD50D0D"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause>
<clause id="HCC7E8908F17749C08CA56220DAC496C4"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph> <subparagraph id="H8F29810239884868B26E6CB55086FD35"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection>
<subsection id="H6993FD08C38C4AE8A8AC06707DB5BDA0"><enum>(f)</enum><header>Fee for filing an appeal from a decision of an adjudicating official in a practitioner disciplinary case</header>
<paragraph id="HFDA19A0956034C6DAEE18A46905F511B"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any practitioner at the time such practitioner files an appeal from a decision of an adjudicating official in a practitioner disciplinary case.</text></paragraph> <paragraph id="H06903E96DABC4CCCA7B07CC15AFF077E"><enum>(2)</enum><header>Amount specified</header> <subparagraph id="HB753D59F1F524AA5B997099B95444A27"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text>
<clause id="H51CEB759ADC14506A66B08D8E7EF0F26"><enum>(i)</enum><text>$1,325; or</text></clause> <clause id="H0309B6A4B46140F9B561F8A87924A4C9"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph>
<subparagraph id="HB1B80B9534B647468526558A0365397B"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text> <clause id="H93320F15DC2B494A9034B5B0CDEEA865"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause>
<clause id="HB7CC4325F0C843D4A666B5D3C5AEEBD9"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph> <paragraph id="HB64BE7FB48EF4AD7AC0DB7A9BA878D82"><enum>(3)</enum><header>Disposition of fees for appealing department of homeland security officer decisions</header><text>During each fiscal year—</text>
<subparagraph id="H768269EE89E3466CB28A1552AD207381"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text> <clause id="H10C91E796FD1483184DCA0F2F4E5665B"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause>
<clause id="H90D391DC1139432B871F9B9118E5C34D"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph> <subparagraph id="HF378145C56784E1B8D307688CECE5F94"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection>
<subsection id="HE1C8DEB51EDF4CA4BDA3BD3429BC3700"><enum>(g)</enum><header>Fee for filing a motion to reopen or a motion to reconsider</header>
<paragraph id="HFC1629D290F9454BB35983025C102146"><enum>(1)</enum><header>In general</header><text>Except as provided in paragraph (3), in addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files a motion to reopen or motion to reconsider a decision of an immigration judge or the Board of Immigration Appeals.</text></paragraph> <paragraph id="H6BF6091F7C5849628DC3ED17655632F2"><enum>(2)</enum><header>Amount specified</header> <subparagraph id="H705A037BB95848C28F2F2D9A21D56240"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text>
<clause id="H657CCA7390E841B7B60C14DBE55DAC6A"><enum>(i)</enum><text>$900; or</text></clause> <clause id="HDDB2C4C2708A46B5A7CECF5E1DB2C642"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph>
<subparagraph id="H637338CCEB9B4F0097B48143AF2BDC62"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text> <clause id="HAE67D43A9A73403D829A5C447C3D7A95"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause>
<clause id="HDEE3C8C6426F4C20B9D9A6459EFD276E"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph> <paragraph id="HF6ADABC8341946A1B4B14A3CD60E74CF"><enum>(3)</enum><header>Exceptions</header><text>The fee required under paragraph (1) shall not apply to—</text>
<subparagraph id="HE11216DDE4AB4B498DD658FC3AB96A7B"><enum>(A)</enum><text>a motion to reopen a removal order entered in absentia if such motion is filed in accordance with section 240(b)(5)(C)(ii) (<external-xref legal-doc="usc" parsable-cite="usc/8/1229a">8 U.S.C. 1229a(b)(5)(C)(ii)</external-xref>); or</text></subparagraph> <subparagraph id="HB144215C4F7547868A9A52CD5DE46EAF"><enum>(B)</enum><text>a motion to reopen a deportation order entered in absentia if such motion is filed in accordance with section 242B(c)(3)(B) prior to April 1, 1997.</text></subparagraph></paragraph>
<paragraph id="H713F874755DA40FDBA0D5BA991219077"><enum>(4)</enum><header>Disposition of fees for filing certain motions</header><text>During each fiscal year—</text> <subparagraph id="H30CF014193AC49A69FC1426C2A16507B"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="H89D35F49B46A4540B1FCBFA0DFAE1CDC"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="H3DF849E147324F3E83959DE11D78939D"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="HF029595A5AE949B9895F66F5FE6C2463"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="H55149C1D45194DD68636D3D9098057A4"><enum>(h)</enum><header>Fee for filing application for suspension of deportation</header> <paragraph id="H1FCAE6E1D1E64A01BC256B4AA8D5E6F9"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files an application with an immigration court for suspension of deportation.</text></paragraph>
<paragraph id="HA42416BC280E495D9FC378556287814B"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="H76DA7BD9FF154945BF0D76852226394D"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="H24BA4F27C2534976985747446B6E98EF"><enum>(i)</enum><text>$600; or</text></clause>
<clause id="H309193D816714D64B33CA87B3A64A2B1"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="H395FE48326E1462CBA71AC29EA6A5905"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="HEF09A1929B7641B9A1ABB623CEFD2EEB"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="HE4E9A7CDC0CF4105BFEED90589E45968"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="HDECC411E374142059BDA5D4C9483F6AE"><enum>(3)</enum><header>Disposition of fees for filing application for suspension of deportation</header><text>During each fiscal year—</text> <subparagraph id="H897664A7D25642E2988D5C7129C7E41F"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="H71A06190A39743E9B19331FD2C482EAD"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="H76EB386872B34CD9A648F27E40D9D1AE"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="H919AC7DEFD7A458F9DF2409F6431C8AD"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="H18DAB26F994445D08140321B132740EA"><enum>(i)</enum><header>Fee for filing application for cancellation of removal for certain permanent residents</header> <paragraph id="H0358976806B94A2BA88EF7AAA0EC8C2B"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien at the time such alien files an application with an immigration court an application for cancellation of removal for an alien who is a lawful permanent resident.</text></paragraph>
<paragraph id="H076D13603F334C61A0314D76648026A0"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="H3DB664251F1C403491454B94A6AC6934"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="H823F982FAA34454C8ACD5F78D130414D"><enum>(i)</enum><text>$600; or</text></clause>
<clause id="H1D2A6B6021E54976AFE37CC2375D5854"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="H05A97C6A314E413881F88F4EF378CB6B"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="H6AF4197A117945E7B1B6A8F1BF2E8560"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="H4EF614B64B9D4729B343525A845462B8"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="H2FF315CA42EA424E85CFD8D8A89048AF"><enum>(3)</enum><header>Disposition of fees for filing application for cancellation of removal</header><text>During each fiscal year—</text> <subparagraph id="HB4AE126F38DB4D42A0AA929256BEA9FC"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="HA0B12E562FC84491AA6D0CF0BF878FEB"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="HECB77017FC204D188F9794D5AED6D334"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="H1037233BF57B40C0B021BAE4584FF7F4"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="HD961E7B3EFCE4314BFF38EE0FB454261"><enum>(j)</enum><header>Fee for filing an application for cancellation of removal and adjustment of status for certain nonpermanent residents</header> <paragraph id="H43489AB912A54DB58D9B366F1CEBB3EF"><enum>(1)</enum><header>In general</header><text>In addition to any other fees authorized by law, the Attorney General shall require the payment of a fee, equal to the amount specified in paragraph (2), by any alien who is not a lawful permanent resident at the time such alien files an application with an immigration court for cancellation of removal and adjustment of status for any alien.</text></paragraph>
<paragraph id="HE07A7B37DF6643F48795E21FC2AAF3E1"><enum>(2)</enum><header>Amount specified</header>
<subparagraph id="HE7C92D40065E45B9BD90F2671C83AC5B"><enum>(A)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this paragraph shall be the greater of—</text> <clause id="H51C1FF6FFFDF4F128587550B8C906AC0"><enum>(i)</enum><text>$1,500; or</text></clause>
<clause id="H9274961417944F278DAD17110CC021B1"><enum>(ii)</enum><text>such amount as the Attorney General may establish, by rule.</text></clause></subparagraph> <subparagraph id="HC03F071154F741978D75C6C5544554F8"><enum>(B)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this paragraph shall be equal to the sum of—</text>
<clause id="H94C94D698C964FE1970EE6C080411C49"><enum>(i)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></clause> <clause id="HF6A7712B243B4CA49C444E3AD9D5A599"><enum>(ii)</enum><text>the product resulting from the multiplication of the amount referred to in clause (i) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></clause></subparagraph></paragraph>
<paragraph id="H29F050EF17D1496D81B4052A65113A25"><enum>(3)</enum><header>Disposition of fees for filing application for cancellation of removal</header><text>During each fiscal year—</text> <subparagraph id="H7E573166B18C49CFB1409A5F52AE169C"><enum>(A)</enum><text>not more than 25 percent of the fees collected pursuant to this subsection—</text>
<clause id="H2EEDD362361F4020A6F46DD37A9608AF"><enum>(i)</enum><text>shall be derived by transfer from the Immigration Examinations Fee Account under section 286(n) (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356(n)</external-xref>); and</text></clause> <clause id="HF25F5B3D265346FB922F42C263AE8313"><enum>(ii)</enum><text>shall be credited to the Executive Office for Immigration Review to retain and spend without further appropriation; and</text></clause></subparagraph>
<subparagraph id="H29420FEA5EE44E15BE31805C6CC56152"><enum>(B)</enum><text>any amounts not derived by transfer and credited pursuant to subparagraph (A) shall be deposited into the general fund of the Treasury.</text></subparagraph></paragraph></subsection> <subsection id="HF03C4544B6594824AC970DAC25B50935"><enum>(k)</enum><header>Limitation on use of funds</header><text>No fees collected pursuant to this section may be expended by the Executive Office for Immigration Review for the Legal Orientation Program, or for any successor program.</text></subsection></section>
<section id="H2069E89A13734C9C9FC5CC35BB95F120"><enum>100014.</enum><header>Electronic System for Travel Authorization fee</header><text display-inline="no-display-inline">Section 217(h)(3)(B) (<external-xref legal-doc="usc" parsable-cite="usc/8/1187">8 U.S.C. 1187(h)(3)(B)</external-xref>) is amended—</text> <paragraph id="H0179DA40646147AEA43580D90E9AE479"><enum>(1)</enum><text>in clause (i)—</text>
<subparagraph id="H209CF4E5FC3D4548BE29C7FBBBBCCF6A"><enum>(A)</enum><text>in subclause (I), by striking <quote>and</quote> at the end;</text></subparagraph> <subparagraph id="H7BCDA0793EFB49348AC26F27905745F3"><enum>(B)</enum><text>in subclause (II)—</text>
<clause id="HB416CA5FFB504EFB8CE73D7481F8C41F"><enum>(i)</enum><text>by inserting <quote>of not less than $10</quote> after <quote>an amount</quote>; and</text></clause> <clause id="HF69839F0C69345E78A0FDE03876F07A7"><enum>(ii)</enum><text>by striking the period at the end and inserting <quote>; and</quote>; and</text></clause></subparagraph>
<subparagraph id="HDBAB93A71305494E95B62EFF333C235A"><enum>(C)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H118BFD4F97FD4ABD8358084F96AD6637"> <subclause id="H1CE268EB873D4139A8402D63594B64EE"><enum>(III)</enum><text>not less than $13 per travel authorization.</text></subclause><after-quoted-block>;</after-quoted-block></quoted-block></subparagraph></paragraph>
<paragraph id="HC8430FBF6A574AE78E4C93DEFC778661"><enum>(2)</enum><text>in clause (iii), by striking <quote>October 31, 2028</quote> and inserting <quote>October 31, 2034</quote>; and</text></paragraph> <paragraph id="HBC7D852E99C6445A9D1CB909AE508202"><enum>(3)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H63831ACBDE964976A56F68315CA67990">
<clause id="HFB6F9924C83948CF843C74C25D54D707"><enum>(iv)</enum><header>Subsequent adjustment</header><text>During fiscal year 2026 and each subsequent fiscal year, the amount specified in clause (i)(II) for a fiscal year shall be equal to the sum of—</text> <subclause id="HF1BD8B2BBECC4EFE97E41F501E356B54"><enum>(I)</enum><text>the amount of the fee required under this subparagraph during the most recently concluded fiscal year; and</text></subclause>
<subclause id="H6BEF648AC57246A3A72E5A658FA64CD7"><enum>(II)</enum><text>the product of the amount referred to in subclause (I) multiplied by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year.</text></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></section> <section id="H84041769EF3844F8ACEFB2012722C91C"><enum>100015.</enum><header>Electronic Visa Update System fee</header> <subsection id="H0620DDDA8ACA48A2B3DFCF77347D7673"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, in the amount specified in subsection (b), by any alien subject to the Electronic Visa Update System at the time of such alien’s enrollment in such system.</text></subsection>
<subsection id="HB152A448B908465B8A2B7E06CDB210F4"><enum>(b)</enum><header>Amount specified</header>
<paragraph id="HE803949BB27D48E5A38B1EB7D5510710"><enum>(1)</enum><header>In general</header><text>For fiscal year 2025, the amount specified in this subsection shall be the greater of—</text> <subparagraph id="H158C7145919742EB92C945A44C725084"><enum>(A)</enum><text>$30; or</text></subparagraph>
<subparagraph id="H5637405BA40B4A67BBA22B37EF09E66C"><enum>(B)</enum><text>such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="HF3D7DBB630A1407E8A7A8494C91F806A"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026 and each subsequent fiscal year, the amount specified in this subsection shall be equal to the sum of—</text>
<subparagraph id="H142A91F0AA964EDCBE5DBA82D1EBC62D"><enum>(A)</enum><text>the amount of the fee required under this subsection during the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="HDE24D43EA10241449BB9611DFF808246"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $0.25.</text></subparagraph></paragraph></subsection>
<subsection id="H5C0A08A2245B459091865268D4E5B5E0"><enum>(c)</enum><header>Disposition of electronic visa update system fees</header>
<paragraph id="HA5B03A62EA7144EF9BD84D9DF3844D10"><enum>(1)</enum><header>In general</header><text>Section 286 (<external-xref legal-doc="usc" parsable-cite="usc/8/1356">8 U.S.C. 1356</external-xref>) is amended by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HEEB42D86953C4113ACCD623EF33001EB"> <subsection id="HF03661E17FD445EAB7361CCA6DBA5AC3"><enum>(w)</enum><header>CBP electronic visa update system account</header> <paragraph id="HE36145220BC9416D88701D496DDA03CC"><enum>(1)</enum><header>Establishment</header><text>There is established in the general fund of the Treasury a separate account, which shall be known as the <quote>CBP Electronic Visa Update System Account</quote> (referred to in this subsection as the <quote>Account</quote>).</text></paragraph>
<paragraph id="HD37B47B29128415F9F8A85E6849D744F"><enum>(2)</enum><header>Deposits</header><text>There shall be deposited into the Account an amount equal to the difference between—</text> <subparagraph id="HB7394A7144DC4E988D9B8F844E87E185"><enum>(A)</enum><text>all of the fees received pursuant to section 100015 of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote> (119th Congress); and</text></subparagraph>
<subparagraph id="H1AA978788EF64D07A45D2AA260D04E5C"><enum>(B)</enum><text>an amount equal to $5 multiplied by the number of payments collected pursuant to such section.</text></subparagraph></paragraph> <paragraph id="H064E068DD7AA44EFB6A8FDC200D0CF96"><enum>(3)</enum><header>Appropriation</header><text>Amounts deposited in the Account—</text>
<subparagraph id="HFCDA777DDC5B455EB044863107999A05"><enum>(A)</enum><text>are hereby appropriated to make payments and offset program costs in accordance with section 100015 of the Act entitled <quote>An Act to provide for reconciliation pursuant to title II of H. Con. Res. 14</quote> (119th Congress), without further appropriation; and</text></subparagraph> <subparagraph id="HEEF727CFD145488C9BA50DA43F98F6A0"><enum>(B)</enum><text>shall remain available until expended for any U.S. Customs and Border Protection costs associated with administering the CBP Electronic Visa Update System.</text></subparagraph></paragraph></subsection><after-quoted-block>.</after-quoted-block></quoted-block></paragraph>
<paragraph id="H6C3B7E806A944A78A9ADF0E2A7C9A415"><enum>(2)</enum><header>Remaining fees</header><text>Of the fees collected pursuant to this section, an amount equal to $5 multiplied by the number of payments collected pursuant to this section shall be deposited to the general fund of the Treasury.</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="H6756FB3BB4954C2BA5E9D6BA9F7DBCBD"><enum>(d)</enum><header>No fee waiver</header><text>Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section>
<section id="H450F7A95C2374D61941C77BC53922C33"><enum>100016.</enum><header>Fee for aliens ordered removed in absentia</header>
<subsection id="H5D5128C150544CE69FD7CF413C0EA325"><enum>(a)</enum><header>In general</header><text>As partial reimbursement for the cost of arresting an alien described in this section, the Secretary of Homeland Security, except as provided in subsection (c), shall require the payment of a fee, equal to the amount specified in subsection (b) on any alien who—</text> <paragraph id="HBFFF079ACC9B4AEA83D9FAEDF47E761C"><enum>(1)</enum><text>is ordered removed in absentia pursuant to section 240(b)(5) (<external-xref legal-doc="usc" parsable-cite="usc/8/1229a">8 U.S.C. 1229a(b)(5)</external-xref>); and</text></paragraph>
<paragraph id="H84B06CF8F0A64A0EB17ED99B71F0F9F5"><enum>(2)</enum><text>is subsequently arrested by U.S. Immigration and Customs Enforcement.</text></paragraph></subsection> <subsection id="H5DE64EBC2C914F548AAA2C6D49DB5742"><enum>(b)</enum><header>Amount specified</header> <paragraph id="HD3C84BD393E147F48B8F929397971F85"><enum>(1)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H4AECC56B8E7B43FF8F06B140A0C9D813"><enum>(A)</enum><text display-inline="yes-display-inline">$5,000; or </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H9F2934AD647740028160F43849DE3124"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph>
<paragraph id="H82B8A1ACD879413DA5B76B1C502FB579"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text> <subparagraph id="H4FEA22F950F74D8AA2D0E51403813794"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph>
<subparagraph id="HF82D67B55E3F4D7EBD570CD011EB46CB"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph></subsection> <subsection id="H5D6E665004AA4733A50B372AFCA88244"><enum>(c)</enum><header>Exception</header><text>The fee described in this section shall not apply to any alien who was ordered removed in absentia if such order was rescinded pursuant to section 240(b)(5)(C) (<external-xref legal-doc="usc" parsable-cite="usc/8/1229a">8 U.S.C. 1229a(b)(5)(C)</external-xref>).</text></subsection>
<subsection id="H2D01F4178899463394117BB315BFAA48"><enum>(d)</enum><header>Disposition of removal in absentia fees</header><text>During each fiscal year—</text> <paragraph id="HB70ADF1132FA4CA2AB6350BB12361A67"><enum>(1)</enum><text>50 percent of the fees collected pursuant to this section—</text>
<subparagraph id="HD28CFC9CFC9C4BA39420C3B93F38195E"><enum>(A)</enum><text>shall be credited to U.S. Immigration and Customs Enforcement;</text></subparagraph> <subparagraph id="H8470A1F7357B47648EA091F879A8B443"><enum>(B)</enum><text>shall be deposited into the Detention and Removal Office Fee Account; and</text></subparagraph>
<subparagraph id="H0A79C981059F402DAC0C4738D93EFD49"><enum>(C)</enum><text>may be retained and expended by U.S. Immigration and Customs Enforcement without further appropriation; and</text></subparagraph></paragraph> <paragraph id="H900E8D17289146AEB738294D1B341AAD"><enum>(2)</enum><text>any amounts collected pursuant to this section that are not credited to U.S. Immigration and Customs Enforcement pursuant to paragraph (1) shall be deposited into the general fund of the Treasury.</text></paragraph></subsection>
<subsection id="H0D8993A4DB414463AD6374552B1AFB90"><enum>(e)</enum><header>No fee waiver</header><text display-inline="yes-display-inline">Fees required to be paid under this section shall not be waived or reduced.</text></subsection></section> <section id="HDD7453798A4140C8BE57DB17E780BBFE"><enum>100017.</enum><header>Inadmissible alien apprehension fee</header> <subsection id="H175188AD7C9A47CEB0037D5AA94CC802"><enum>(a)</enum><header>In general</header><text>In addition to any other fee authorized by law, the Secretary of Homeland Security shall require the payment of a fee, equal to the amount specified in subsection (b), by any inadmissible alien at the time such alien is apprehended between ports of entry.</text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HC81F50D8DB3D47FEA1518367F80DAD6A"><enum>(b)</enum><header>Amount specified</header>
<paragraph id="H614C3BE4507A4DE58EECD81FA655DE4C"><enum>(1)</enum><header>Initial amount</header><text>For fiscal year 2025, the amount specified in this section shall be the greater of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="H2025B60E99824A2D963079599A3BBDD5"><enum>(A)</enum><text display-inline="yes-display-inline">$5,000; or </text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HB9B1537E91604DA9BAA9951800F48D86"><enum>(B)</enum><text display-inline="yes-display-inline">such amount as the Secretary of Homeland Security may establish, by rule.</text></subparagraph></paragraph> <paragraph id="H6B23F776648B49DBB1D720A617C30472"><enum>(2)</enum><header>Annual adjustments for inflation</header><text>During fiscal year 2026, and during each subsequent fiscal year, the amount specified in this section shall be equal to the sum of—</text>
<subparagraph id="HC47207A52F2B46F6BA0FB3FC1CE6BF0E"><enum>(A)</enum><text>the amount of the fee required under this subsection for the most recently concluded fiscal year; and</text></subparagraph> <subparagraph id="HC59AD841D90E40E89F77BC6E94E9EFE7"><enum>(B)</enum><text>the product resulting from the multiplication of the amount referred to in subparagraph (A) by the percentage (if any) by which the Consumer Price Index for All Urban Consumers for the month of July preceding the date on which such adjustment takes effect exceeds the Consumer Price Index for All Urban Consumers for the same month of the preceding calendar year, rounded to the next lowest multiple of $10.</text></subparagraph></paragraph></subsection>
<subsection id="HB8C31A42A9A04BC996DF53E76068E9EF"><enum>(c)</enum><header>Disposition of inadmissible alien apprehension fees</header><text>During each fiscal year—</text> <paragraph id="H85058A6FABFE4302AFB064216E41B7AB"><enum>(1)</enum><text>50 percent of the fees collected pursuant to this section—</text>
<subparagraph id="HD634CC96BD6743F9980E2FDAC131D65E"><enum>(A)</enum><text>shall be credited to U.S. Immigration and Customs Enforcement;</text></subparagraph> <subparagraph id="H3FBB919D8A75433F986C870F76392A06"><enum>(B)</enum><text>shall be deposited into the Detention and Removal Office Fee Account; and</text></subparagraph>
<subparagraph id="HFD4ED001F7564A6198BD2A5543554CB8"><enum>(C)</enum><text>may be retained and expended by U.S. Immigration and Customs Enforcement without further appropriation; and</text></subparagraph></paragraph> <paragraph id="H62E9CD6E12134E9087CB7F1EA5298BE4"><enum>(2)</enum><text>any amounts collected pursuant to this section that are not credited to U.S. Immigration and Customs Enforcement pursuant to paragraph (1) shall be deposited into the general fund of the Treasury.</text></paragraph></subsection>
<subsection id="HECEA1EE8F11B4002AE50CA91F87E0004"><enum>(d)</enum><header>Disposition of inadmissible alien apprehension fees</header><text>All of the fees collected pursuant to this section shall be deposited into the general fund of the Treasury.</text></subsection></section> <section id="HC33600E3B16E46E8B4DC4731C9850C13"><enum>100018.</enum><header>Amendment to authority to apply for asylum</header><text display-inline="no-display-inline">Section 208(d)(3) (<external-xref legal-doc="usc" parsable-cite="usc/8/1158">8 U.S.C. 1158(d)(3)</external-xref>) is amended—</text>
<paragraph id="HBBDAA848B22E49B8A09F1671A1328312"><enum>(1)</enum><text>in the first sentence, by striking <quote>may</quote> and inserting <quote>shall</quote>;</text></paragraph> <paragraph id="HD7FF48CD96E54DBFA779B61CEB2504FD"><enum>(2)</enum><text>by striking <quote>Such fees shall not exceed</quote> and all that follows and inserting the following: <quote>Nothing in this paragraph may be construed to limit the authority of the Attorney General to set additional adjudication and naturalization fees in accordance with section 286(m).</quote>.</text></paragraph></section></part>
<part id="H2949220EB780479788A58F0B5F7C198B" style="OLC"><enum>II</enum><header>Immigration and law enforcement funding</header>
<section id="HCF7A89A27C5B4F03B40F6051A8D96C3D"><enum>100051.</enum><header>Appropriation for the Department of Homeland Security</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Secretary of Homeland Security for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $2,055,000,000, to remain available through September 30, 2029, for the following purposes: </text> <paragraph id="H981AAD4788DD46F28732E2A623E2633C"><enum>(1)</enum><header>Immigration and enforcement activities</header><text>Hiring and training of additional U.S. Customs and Border Protection agents, and the necessary support staff, to carry out immigration enforcement activities.</text></paragraph>
<paragraph id="H317A8FDCCBA24C27A78B62160E4E2086"><enum>(2)</enum><header>Departures and removals</header><text>Funding for transportation costs and related costs associated with the departure or removal of aliens.</text></paragraph> <paragraph id="H38AC91F92286413BB536DDB2E6E7A45C"><enum>(3)</enum><header>Personnel assignments</header><text>Funding for the assignment of Department of Homeland Security employees and State officers to carry out immigration enforcement activities pursuant to sections 103(a) and 287(g) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1103">8 U.S.C. 1103(a)</external-xref> and 1357(g)).</text></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="H2AD3D4703CE54028B759971E07AD6CFA"><enum>(4)</enum><header display-inline="yes-display-inline">Background checks</header><text>Hiring additional staff and investing the necessary resources to enhance screening and vetting of all aliens seeking entry into United States, consistent with section 212 of such Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1182">8 U.S.C. 1182</external-xref>), or intending to remain in the United States, consistent with section 237 of such Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1227">8 U.S.C. 1227</external-xref>).</text></paragraph> <paragraph id="H04DA97D57A414E0181F9F046928007E8"><enum>(5)</enum><header>Protecting alien children from exploitation</header><text>In instances of aliens and alien children entering the United States without a valid visa, funding is provided for the purposes of—</text>
<subparagraph id="HEDD86D99080545EA8F15948A21D3F248"><enum>(A)</enum><text>collecting fingerprints, in accordance with section 262 of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1302">8 U.S.C. 1302</external-xref>) and subsections (a)(3) and (b) of section 235 of such Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225</external-xref>); and</text></subparagraph> <subparagraph id="H54F6B51D1D494BDB8E7A5B28F8055CDD"><enum>(B)</enum><text>collecting DNA, in accordance with sections 235(d) and 287(b) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225(d)</external-xref> and 1357(b)).</text></subparagraph></paragraph>
<paragraph commented="no" display-inline="no-display-inline" id="HF0FB18F75F174FB8A5EE605DA1F810E1"><enum>(6)</enum><header>Transporting and return of aliens from contiguous territory</header><text display-inline="yes-display-inline">Transporting and facilitating the return, pursuant to section 235(b)(2)(C) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225(b)(2)(C)</external-xref>), of aliens arriving from contiguous territory.</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HAFFE0809EBB644CC8E24D5A17A70FBBA"><enum>(7)</enum><header>State and local participation</header><text display-inline="yes-display-inline">Funding for State and local participation in homeland security efforts for purposes of—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H43883AF4D5CC45AA9A927DAE24A231EF"><enum>(A)</enum><text display-inline="yes-display-inline">ending the presence of criminal gangs and criminal organizations throughout the United States;</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HE2572369F158451C9647A2E7CFCF1C73"><enum>(B)</enum><text display-inline="yes-display-inline">addressing crime and public safety threats;</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HE3DCC083E806472FBF4BCE802FC724A3"><enum>(C)</enum><text display-inline="yes-display-inline">combating human smuggling and trafficking networks throughout the United States; </text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HBAB54CD60190470D9F7BCF54EBC54F38"><enum>(D)</enum><text display-inline="yes-display-inline">supporting immigration enforcement activities; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HBBFF445DF0E948CC8DE7752FEE2D82AC"><enum>(E)</enum><text display-inline="yes-display-inline">providing reimbursement for State and local participation in such efforts. </text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HA6411E19CF9F4A359AB6DDD68F0F50DC"><enum>(8)</enum><header>Removal of specified unaccompanied alien children</header> <subparagraph commented="no" display-inline="no-display-inline" id="H1DFD7AFF355A4E7E9484EEC8FD4571FD"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Funding removal operations for specified unaccompanied alien children. </text></subparagraph>
<subparagraph id="H61E8985478FD4340BA880EB068FC1834" commented="no"><enum>(B)</enum><header>Use of funds</header><text>Amounts made available under this paragraph shall only be used for permitting a specified unaccompanied alien child to withdraw the application for admission of the child pursuant to section 235(a)(4) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225(a)(4)</external-xref>).</text></subparagraph> <subparagraph id="HDCA6EA90E5C147EEAC612766EE43214F" commented="no"><enum>(C)</enum><header>Definitions</header><text>In this paragraph:</text>
<clause id="HADC8D4D7CC394393B4314B4F3F43353E" commented="no"><enum>(i)</enum><header>Specified unaccompanied alien child</header><text>The term <term>specified unaccompanied alien child</term> means an unaccompanied alien child (as defined in section 462(g) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/279">6 U.S.C. 279(g)</external-xref>)) who the Secretary of Homeland Security determines on a case-by-case basis—</text> <subclause id="HAC04DCEDA8F94A37A73DE8D27D99D35B" commented="no"><enum>(I)</enum><text>has been found by an immigration officer at a land border or port of entry of the United States and is inadmissible under the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101 et seq.</external-xref>);</text></subclause>
<subclause id="HAEF0DD67C5D541BDA965D032B951C5B7" commented="no"><enum>(II)</enum><text>has not been a victim of severe forms of trafficking in persons, and there is no credible evidence that such child is at risk of being trafficked upon return of the child to the child's country of nationality or country of last habitual residence; and</text></subclause> <subclause id="H26EE2C4D8808475AAA66C7590D8C2D01" commented="no"><enum>(III)</enum><text>does not have a fear of returning to the child’s country of nationality or country of last habitual residence owing to a credible fear of persecution.</text></subclause></clause>
<clause id="H48E02F8D8AC44D9EBE379FD7AD7965BC" commented="no"><enum>(ii)</enum><header>Severe forms of trafficking in persons</header><text>The term <term>severe forms of trafficking in persons</term> has the meaning given such term in section 103 of the Trafficking Victims Protection Act of 2000 (<external-xref legal-doc="usc" parsable-cite="usc/22/7102">22 U.S.C. 7102</external-xref>).</text></clause></subparagraph></paragraph> <paragraph id="H001AB4B8E00540329CD6B85B9EC4EB98"><enum>(9)</enum><header>Expedited removal of criminal aliens</header><text>Funding for the expedited removal of criminal aliens, in accordance with the provisions of section 235(b)(1) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225(b)(1)</external-xref>).</text></paragraph>
<paragraph id="H64D9CE084651456AA958952F697AA4A9"><enum>(10)</enum><header>Removal of certain criminal aliens without further hearings</header><text>Funding for the removal of certain criminal aliens without further hearings, in accordance with the provisions of section 235(c) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1225">8 U.S.C. 1225(c)</external-xref>).</text></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HF6F721FF51AD4EC595AC686EECDA4A24"><enum>(11)</enum><header>Criminal and gang checks for unaccompanied alien children</header><text>Funding for criminal and gang checks of unaccompanied alien children (as defined in section 462(g) of the Homeland Security Act of 2002 (<external-xref legal-doc="usc" parsable-cite="usc/6/279">6 U.S.C. 279(g)</external-xref>)) who are 12 years of age and older, including the examination of such unaccompanied alien children for gang-related tattoos and other gang-related markings.</text></paragraph>
<paragraph id="H57B65828E19D4AB995B93BD1F55E0DA7"><enum>(12)</enum><header>Information technology</header><text>Information technology investments to support immigration purposes, including improvements to fee and revenue collections.</text></paragraph></section> <section id="H47F26C8C13F044A19B6F489E46CF0ADA"><enum>100052.</enum><header>Appropriation for U.S. Immigration and Customs Enforcement</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Secretary of Homeland Security for U.S. Immigration and Customs Enforcement for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $29,850,000,000, to remain available through September 30, 2029, for the following purposes:</text>
<paragraph commented="no" display-inline="no-display-inline" id="H3F281D54796E4A019FC08C27B9F34FAE"><enum>(1)</enum><header>Hiring and training</header><text>Hiring and training additional U.S. Immigration and Customs Enforcement personnel, including officers, agents, investigators, and support staff, to carry out immigration enforcement activities and prioritizing and streamlining the hiring of retired U.S. Immigration and Customs Enforcement personnel.</text></paragraph> <paragraph id="H0ED1E29C987241D08DDB9B103660BD22" commented="no"><enum>(2)</enum><header>Performance, retention, and signing bonuses</header> <subparagraph commented="no" display-inline="no-display-inline" id="HE307934409EE4A229AA80168B8CA88B0"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text display-inline="yes-display-inline">Providing performance, retention, and signing bonuses for qualified U.S. Immigration and Customs Enforcement personnel in accordance with this subsection.</text></subparagraph>
<subparagraph id="H1043B6D2A3B4400190CBC0A98B3561EC"><enum>(B)</enum><header>Performance bonuses</header><text>The Director of U.S. Immigration and Customs Enforcement, at the Director’s discretion, may provide performance bonuses to any U.S. Immigration and Customs Enforcement agent, officer, or attorney who demonstrates exemplary service.</text></subparagraph> <subparagraph id="H65F938F737B042D5A55A12DDDDF32BC4" commented="no"><enum>(C)</enum><header>Retention bonuses</header><text>The Director of U.S. Immigration and Customs Enforcement may provide retention bonuses to any U.S. Immigration and Customs Enforcement agent, officer, or attorney who commits to 2 years of additional service with U.S. Immigration and Customs Enforcement to carry out immigration enforcement activities.</text></subparagraph>
<subparagraph id="HFC4A322040BE4CF1B3A27EE483553404" commented="no"><enum>(D)</enum><header>Signing bonuses</header><text>The Director of U.S. Immigration and Customs Enforcement may provide a signing bonus to any U.S. Immigration and Customs Enforcement agent, officer, or attorney who—</text> <clause commented="no" display-inline="no-display-inline" id="H446F61EAE8A745218BDACB0B76B725C7"><enum>(i)</enum><text display-inline="yes-display-inline">is hired on or after the date of the enactment of this Act; and </text></clause>
<clause commented="no" display-inline="no-display-inline" id="H1AFE4293774F462081C186C137C9D86E"><enum>(ii)</enum><text display-inline="yes-display-inline">who commits to 5 years of service with U.S. Immigration and Customs Enforcement to carry out immigration enforcement activities.</text></clause></subparagraph> <subparagraph id="HE55F4D0E570145EABC84FB662F1F28CE" commented="no"><enum>(E)</enum><header>Service agreement</header><text>In providing a retention or signing bonus under this paragraph, the Director of U.S. Immigration and Customs Enforcement shall provide each qualifying individual with a written service agreement that includes—</text>
<clause id="H0EA7EDA923D148F7B839D75D2F4626A3" commented="no"><enum>(i)</enum><text>the commencement and termination dates of the required service period (or provisions for the determination of such dates);</text></clause> <clause id="H2254BE2F24174C9FBBD9938B42B17D5D" commented="no"><enum>(ii)</enum><text>the amount of the bonus; and</text></clause>
<clause id="HC1BE759921FF442F9445C45D115439B7" commented="no"><enum>(iii)</enum><text>any other term or condition under which the bonus is payable, subject to the requirements of this paragraph, including—</text> <subclause id="H6A9A3E4A28024D5982A31B8865D8DE39" commented="no"><enum>(I)</enum><text>the conditions under which the agreement may be terminated before the agreed-upon service period has been completed; and</text></subclause>
<subclause id="H982CB0C546534184B4967A6E9926C68D" commented="no"><enum>(II)</enum><text>the effect of a termination described in subclause (I).</text></subclause></clause></subparagraph></paragraph> <paragraph id="HB02B5ABE65254853A633A43A6E4B8093"><enum>(3)</enum><header>Recruitment, hiring, and onboarding</header><text>Facilitating the recruitment, hiring, and onboarding of additional U.S. Immigration and Customs Enforcement personnel to carry out immigration enforcement activities, including by—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H4DEA692C5F2A42DC97252AFA9EB8E108"><enum>(A)</enum><text display-inline="yes-display-inline">investing in information technology, recruitment, and marketing; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H2E72C15406A44A4FB6B188A7570A5662"><enum>(B)</enum><text display-inline="yes-display-inline">hiring staff necessary to carry out information technology, recruitment, and marketing activities.</text></subparagraph></paragraph>
<paragraph id="H68BDE259B3A541DE8D77F1086E22CF2E"><enum>(4)</enum><header>Transportation</header><text>Funding for transportation costs and related costs associated with alien departure or removal operations.</text></paragraph> <paragraph id="H0153295B7DC0424DAEA90404A10A9D12"><enum>(5)</enum><header>Information technology</header><text>Funding for information technology investments to support enforcement and removal operations, including improvements to fee collections.</text></paragraph>
<paragraph id="H3A9D92CFBA8D4004967962C714B25718"><enum>(6)</enum><header>Facility upgrades</header><text>Funding for facility upgrades to support enforcement and removal operations.</text></paragraph> <paragraph id="H142A74EE7E9D4536AD9314D5B78880A1"><enum>(7)</enum><header>Fleet modernization</header><text>Funding for fleet modernization to support enforcement and removal operations.</text></paragraph>
<paragraph id="HA8575DB3992E4D108E53FA997CF3515E"><enum>(8)</enum><header>Family unity</header><text>Promoting family unity by—</text> <subparagraph id="H9AAD5CFE83A7407986269366C5FB1EE8"><enum>(A)</enum><text>maintaining the care and custody, during the period in which a charge described in clause (i) is pending, in accordance with applicable laws, of an alien who—</text>
<clause id="HD5988FF5B502448BA339E55413BE0600"><enum>(i)</enum><text>is charged only with a misdemeanor offense under section 275(a) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1325">8 U.S.C. 1325(a)</external-xref>); and</text></clause> <clause id="HE28521ED0AA740578809F64E728EFFA7"><enum>(ii)</enum><text>entered the United States with the alien’s child who has not attained 18 years of age; and</text></clause></subparagraph>
<subparagraph id="H3920C18C41474C7FA7D27A7E4B0ADE35"><enum>(B)</enum><text>detaining such an alien with the alien’s child.</text></subparagraph></paragraph> <paragraph id="HB9676FF4A888406F956A2BBEEC179C41"><enum>(9)</enum><header><enum-in-header>287(g)</enum-in-header> agreements</header><text>Expanding, facilitating, and implementing agreements under section 287(g) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1357">8 U.S.C. 1357(g)</external-xref>).</text></paragraph>
<paragraph id="H1BA61DF3351D409D8C336F96263A5418"><enum>(10)</enum><header>Victims of Immigration Crime Engagement Office</header><text>Hiring and training additional staff to carry out the mission of the Victims of Immigration Crime Engagement Office and for providing nonfinancial assistance to the victims of crimes perpetrated by aliens who are present in the United States without authorization. </text></paragraph> <paragraph id="H8D550E1AA85F42589E8E0B5A89A52795"><enum>(11)</enum><header>Office of the principal legal advisor</header><text>Hiring additional attorneys and the necessary support staff within the Office of the Principal Legal Advisor to represent the Department of Homeland Security in immigration enforcement and removal proceedings.</text></paragraph></section>
<section id="HDB0633D433D44A4A9C411B12102B7BAF"><enum>100053.</enum><header>Appropriation for Federal Law Enforcement Training Centers</header>
<subsection id="H4DDD99E01DFE402E814EDBC3DB901FA8"><enum>(a)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Secretary of Homeland Security for the Federal Law Enforcement Training Centers for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $750,000,000, to remain available until September 30, 2029, for the purposes described in subsections (b) and (c).</text></subsection> <subsection id="HE5A7534753744DD296652DF95986DF77"><enum>(b)</enum><header>Training</header><text>Not less than $285,000,000 of the amounts available under subsection (a) shall be for supporting the training of newly hired Federal law enforcement personnel employed by the Department of Homeland Security and State and local law enforcement agencies operating in support of the Department of Homeland Security.</text></subsection>
<subsection id="H4BD46B2C566C499A95EE3FEB494FDB99"><enum>(c)</enum><header>Facilities</header><text>Not more than $465,000,000 of the amounts available under subsection (a) shall be for procurement, construction and maintenance of, improvements to, training equipment for, and related expenses, of facilities of the Federal Law Enforcement Training Centers.</text></subsection></section> <section id="H313D2E37B978467A9445E87ACD267A01"><enum>100054.</enum><header>Appropriation for the Department of Justice</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Attorney General for the Department of Justice for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $3,330,000,000, to remain available through September 30, 2029, for the following purposes:</text>
<paragraph id="HB91E51E921CB4075BCE94C4107A136C9"><enum>(1)</enum><header>Executive Office for Immigration Review</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H6E25F37EFD364E03A6D28B0CAFA8511F"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Hiring immigration judges and necessary support staff for the Executive Office for Immigration Review to address the backlog of petitions, cases, and removals.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="HC2908AA22D184CE8829DD77BEA372732"><enum>(B)</enum><header>Staffing level</header><text>Effective November 1, 2028, the Executive Office for Immigration Review shall be comprised of not more than 800 immigration judges, along with the necessary support staff.</text></subparagraph></paragraph>
<paragraph id="HED1E8D978D3349F0B26738B1263C88B2"><enum>(2)</enum><header>Combating drug trafficking</header><text>Funding efforts to combat drug trafficking (including trafficking of fentanyl and its precursor chemicals) and illegal drug use.</text></paragraph> <paragraph id="H03D774BA19464D11A2CCE2248DA4CA45"><enum>(3)</enum><header>Prosecution of immigration matters</header><text>Funding efforts to investigate and prosecute immigration matters, gang-related crimes involving aliens, child trafficking and smuggling involving aliens within the United States, unlawful voting by aliens, violations of the Alien Registration Act, 1940 (54 Stat., chapter 439), and violations of or fraud relating to title IV of the Personal Responsibility and Work Opportunity Act of 1996 (<external-xref legal-doc="public-law" parsable-cite="pl/104/193">Public Law 104–193</external-xref>; 110 Stat. 2277), including hiring additional Department of Justice personnel to investigate and prosecute such matters.</text></paragraph>
<paragraph id="H150F68E380B54B8E918E229A9862DBF1"><enum>(4)</enum><header>Nonparty or other injunctive relief</header><text>Hiring additional attorneys and necessary support staff for the purpose of continuing implementation of assignments by the Attorney General pursuant to sections 516, 517, and 518 of title 28, United States Code, to conduct litigation and attend to the interests of the United States in suits pending in a court of the United States or in a court of a State in suits seeking nonparty or other injunctive relief against the Federal Government.</text></paragraph> <paragraph id="H2C5C37CF39C748409C924923CB843759"><enum>(5)</enum><header>Edward Byrne Memorial Justice Assistance Grant Program and Office of Community Oriented Policing</header> <subparagraph commented="no" display-inline="no-display-inline" id="H11BE51ADDF794578A8D3E5F4C4093FB0"><enum>(A)</enum><header>In general</header><text display-inline="yes-display-inline">Increasing funding for the Edward Byrne Memorial Justice Assistance Grant Program and the Office of Community Oriented Policing for initiatives associated with—</text>
<clause commented="no" display-inline="no-display-inline" id="H70F457E8981B44C4A919470B705BEC98"><enum>(i)</enum><text display-inline="yes-display-inline">investigating and prosecuting violent crime; </text></clause> <clause commented="no" display-inline="no-display-inline" id="HD9EF383D329541B0858EE968E5199146"><enum>(ii)</enum><text display-inline="yes-display-inline">criminal enforcement initiatives; and</text></clause>
<clause commented="no" display-inline="no-display-inline" id="HB94B0064CDD9491B9080ABBCB149A2DE"><enum>(iii)</enum><text display-inline="yes-display-inline">immigration enforcement and removal efforts.</text></clause></subparagraph> <subparagraph id="HF250FA60F3954AFEB57AAFF0ACA015E1"><enum>(B)</enum><header>Limitations</header><text>No funds made available under this subsection shall be made available to community violence intervention and prevention initiative programs.</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="HC7F1F5436B024038B26D1A0A4DAA59FB"><enum>(C)</enum><header display-inline="yes-display-inline">Eligibility</header><text>To be eligible to receive funds made available under this subsection, a State or local government shall be in full compliance, as determined by the Attorney General, with section 642 of the Illegal Immigration Reform and Immigrant Responsibility Act of 1996 (<external-xref legal-doc="usc" parsable-cite="usc/8/1373">8 U.S.C. 1373</external-xref>).</text></subparagraph></paragraph> <paragraph id="H5BA4156AF71A43F4B42E5CA3EEEB0C52"><enum>(6)</enum><header>Fiscally responsible lawsuit settlements</header><text>Hiring additional attorneys and necessary support staff for the purpose of maximizing lawsuit settlements that require the payment of fines and penalties to the Treasury of the United States in lieu of providing for the payment to any person or entity other than the United States, other than a payment that provides restitution or otherwise directly remedies actual harm directly and proximately caused by the party making the payment, or constitutes payment for services rendered in connection with the case.</text></paragraph>
<paragraph id="H4603EA23ACF841CEBA0902A97BA7D473"><enum>(7)</enum><header>Compensation for incarceration of criminal aliens</header>
<subparagraph commented="no" display-inline="no-display-inline" id="H51BEFDDE15034FF9AA670478B056FDD5"><enum>(A)</enum><header display-inline="yes-display-inline">In general</header><text>Providing compensation to a State or political subdivision of a State for the incarceration of criminal aliens.</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H2A17AF78016E45818678329C46326537"><enum>(B)</enum><header>Use of funds</header><text>The amounts made available under subparagraph (A) shall only be used to compensate a State or political subdivision of a State, as appropriate, with respect to the incarceration of an alien who—</text>
<clause id="H895DEA7F4AF8402685AD4B3ED7D84B75"><enum>(i)</enum><text>has been convicted of a felony or 2 or more misdemeanors; and</text></clause> <clause id="HF8B61209A81641E6BBD4A98E082CFE02"><enum>(ii)</enum> <subclause commented="no" display-inline="yes-display-inline" id="H77D095EC42A74A1B99A8482BE0829ED5"><enum>(I)</enum><text>entered the United States without inspection or at any time or place other than as designated by the Secretary of Homeland Security;</text></subclause>
<subclause indent="up1" commented="no" display-inline="no-display-inline" id="HC717DA6938F74413A044CFF634948281"><enum>(II)</enum><text>was the subject of removal proceedings at the time the alien was taken into custody by the State or a political subdivision of the State; or</text></subclause> <subclause indent="up1" commented="no" display-inline="no-display-inline" id="HCD6EBD6DD9104D4BB94EF73BEFE7C0A8"><enum>(III)</enum><text>was admitted as a nonimmigrant and, at the time the alien was taken into custody by the State or a political subdivision of the State, has failed to maintain the nonimmigrant status in which the alien was admitted, or to which it was changed, or to comply with the conditions of any such status.</text></subclause></clause></subparagraph>
<subparagraph id="H78E6430C65624C7BBE194A3DE84894E7"><enum>(C)</enum><header>Limitation</header><text>Amounts made available under this subsection shall be distributed to more than 1 State. The amounts made available under subparagraph (A) may not be used to compensate any State or political subdivision of a State if the State or political subdivision of the State prohibits or in any way restricts a Federal, State, or local government entity, official, or other personnel from doing any of the following:</text> <clause id="H6056DE367A634F0596F36BC0420445AA"><enum>(i)</enum><text>Complying with the immigration laws (as defined in section 101(a)(17) of the Immigration and Nationality Act (<external-xref legal-doc="usc" parsable-cite="usc/8/1101">8 U.S.C. 1101(a)(17)</external-xref>)).</text></clause>
<clause id="HE843D74022EC46B5838EF69020BE6AA1"><enum>(ii)</enum><text>Assisting or cooperating with Federal law enforcement entities, officials, or other personnel regarding the enforcement of the immigration laws.</text></clause> <clause id="HE6A3BBD7E3E74553A35B148235417CE5"><enum>(iii)</enum><text>Undertaking any of the following law enforcement activities as such activities relate to information regarding the citizenship or immigration status, lawful or unlawful, the inadmissibility or deportability, and the custody status, of any individual:</text>
<subclause id="H824D6BF802454E45994044E615E86DF4"><enum>(I)</enum><text>Making inquiries to any individual to obtain such information regarding such individual or any other individuals.</text></subclause> <subclause id="HA5DED6838B62452D9796849AF7832E01"><enum>(II)</enum><text>Notifying the Federal Government regarding the presence of individuals who are encountered by law enforcement officials or other personnel of a State or political subdivision of a State.</text></subclause>
<subclause id="HA67992C438CE42708281DBD5E5F65EA4"><enum>(III)</enum><text>Complying with requests for such information from Federal law enforcement entities, officials, or other personnel.</text></subclause></clause></subparagraph></paragraph></section> <section id="H5AA1A74E5C2A48F78E868A547133BAFB"><enum>100055.</enum><header>Bridging Immigration-related Deficits Experienced Nationwide Reimbursement Fund</header> <subsection id="HA52F811B7E144E89AC4EAA5543480481"><enum>(a)</enum><header>Establishment</header><text>There is established within the Department of Justice a fund, to be known as the <quote>Bridging Immigration-related Deficits Experienced Nationwide (BIDEN) Reimbursement Fund</quote> (referred to in this section as the <quote>Fund</quote>). </text></subsection>
<subsection commented="no" display-inline="no-display-inline" id="HB7ADF336F5B94F89A7B209A2A63603E1"><enum>(b)</enum><header>Use of funds</header><text display-inline="yes-display-inline">The Attorney General shall use amounts appropriated or otherwise made available for the Fund for grants to eligible States, State agencies, and units of local government, pursuant to their existing statutory authorities, for any of the following purposes:</text> <paragraph id="HB7E7B69FA0E44D01A2FDECE03DA6D9B5"><enum>(1)</enum><text>Locating and apprehending aliens who have committed a crime under Federal, State, or local law, in addition to being unlawfully present in the United States.</text></paragraph>
<paragraph id="H4462F97D06FF4FD593819F6030DD87C4"><enum>(2)</enum><text>Collection and analysis of law enforcement investigative information within the United States to counter gang or other criminal activity.</text></paragraph> <paragraph id="H90035A8ABBF3433EAA701B7E37D473EF"><enum>(3)</enum><text>Investigating and prosecuting—</text>
<subparagraph commented="no" display-inline="no-display-inline" id="H1B485189966545C6B20543F111ED4426"><enum>(A)</enum><text display-inline="yes-display-inline">crimes committed by aliens within the United States; and</text></subparagraph> <subparagraph commented="no" display-inline="no-display-inline" id="H2AABEAC4A53F4A54AB6CF8B4A465A5D8"><enum>(B)</enum><text display-inline="yes-display-inline">drug and human trafficking crimes committed within the United States.</text></subparagraph></paragraph>
<paragraph id="HAB1B722690C54F8DBBD21868563B7081"><enum>(4)</enum><text>Court operations related to the prosecution of—</text> <subparagraph commented="no" display-inline="no-display-inline" id="HE87D37C17CA349819CD47DC059F12DFA"><enum>(A)</enum><text display-inline="yes-display-inline">crimes committed by aliens; and</text></subparagraph>
<subparagraph commented="no" display-inline="no-display-inline" id="H18D09E2F7A5843F1A95DB3D30870B5EA"><enum>(B)</enum><text display-inline="yes-display-inline">drug and human trafficking crimes.</text></subparagraph></paragraph> <paragraph id="HFF1ABB2C996445C9BFE91FAFB75FC0AA"><enum>(5)</enum><text>Temporary criminal detention of aliens.</text></paragraph>
<paragraph id="H2EE80600C8F24C16A56C4374C62454BC"><enum>(6)</enum><text>Transporting aliens described in paragraph (1) within the United States to locations related to the apprehension, detention, and prosecution of such aliens.</text></paragraph> <paragraph id="H0F9906C5C0CB4A5C98CDDCAA00AA409D"><enum>(7)</enum><text>Vehicle maintenance, logistics, transportation, and other support provided to law enforcement agencies by a State agency to enhance the ability to locate and apprehend aliens who have committed crimes under Federal, State, or local law, in addition to being unlawfully present in the United States.</text></paragraph></subsection>
<subsection id="HA3DF91C59D9D495EB9DFDF9A239A536C"><enum>(c)</enum><header>Appropriation</header><text>In addition to amounts otherwise available for the purposes described in subsection (b), there is appropriated to the Attorney General for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, not to exceed $3,500,000,000, to remain available until September 30, 2028, for the Fund for qualified and documented expenses that achieve any such purpose.</text></subsection> <subsection id="HC826DA8221E04C138BAF96CCB453638B"><enum>(d)</enum><header>Grant eligibility of completed, ongoing, or new activities</header><text>The Attorney General may provide grants under this section to State agencies and units of local government for expenditures made by State agencies or units of local government for completed, ongoing, or new activities determined to be eligible for such grant funding that occurred on or after January 20, 2021. Amounts made available under this section shall be distributed to more than 1 State. </text></subsection></section>
<section id="HDCC4580D90FA4839BFA98C94DB6125D2"><enum>100056.</enum><header>Appropriation for the Bureau of Prisons</header>
<subsection id="HA932424667D54EC9B1F0CB9FA27A979B"><enum>(a)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Director of the Bureau of Prisons for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $5,000,000,000, to remain available through September 30, 2029, for the purposes described in subsections (b) and (c).</text></subsection> <subsection id="H48705516E43B4090A88C8E6108A8B6C3"><enum>(b)</enum><header>Salaries and benefits</header><text>Not less than $3,000,000,000 of the amounts made available under subsection (a) shall be for hiring and training of new employees, including correctional officers, medical professionals, and facilities and maintenance employees, the necessary support staff, and for additional funding for salaries and benefits for the current workforce of the Bureau of Prisons.</text></subsection>
<subsection id="H50EA67DA4648468D8527259B9CD489AF"><enum>(c)</enum><header>Facilities</header><text>Not more than $2,000,000,000 of the amounts made available under subsection (a) shall be for addressing maintenance and repairs to facilities maintained or operated by the Bureau of Prisons.</text></subsection></section> <section id="H542A0F73A9D24A9DB202B07D5ABD0B02"><enum>100057.</enum><header>Appropriation for the United States Secret Service</header> <subsection id="H4DDD55F67C0B4B81ACB187860BE80C65"><enum>(a)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Director of the United States Secret Service (referred to in this section as the <quote>Director</quote>) for fiscal year 2025, out of any money in the Treasury not otherwise appropriated, $1,170,000,000, to remain available through September 30, 2029, for the purposes described in subsection (b).</text></subsection>
<subsection id="H99912C01A1394ABD8EEBDD3E06066320"><enum>(b)</enum><header>Use of funds</header><text>Amounts made available under subsection (a) may only be used for—</text> <paragraph id="H63A7DD7C7ACF42A08947E41C944D458A"><enum>(1)</enum><text>additional United States Secret Service resources, including personnel, training facilities, programming, and technology; and</text></paragraph>
<paragraph id="HF428ED089C864B0E8E13950B4FF2A6DE"><enum>(2)</enum><text>performance, retention, and signing bonuses for qualified United States Secret Service personnel in accordance with subsection (c).</text></paragraph></subsection> <subsection commented="no" display-inline="no-display-inline" id="HC3C75ACAA4B74A50885AFCD7C3F0659C"><enum>(c)</enum><header>Performance, retention, and signing bonuses</header> <paragraph id="H866E497E0A284BB094B8388AB70EBD9D"><enum>(1)</enum><header>Performance bonuses</header><text>The Director, at the Director’s discretion, may provide performance bonuses to any Secret Service agent, officer, or analyst who demonstrates exemplary service.</text></paragraph>
<paragraph id="HB90C5A2C589048A5BFADAD6DE05C8CB8"><enum>(2)</enum><header>Retention bonuses</header><text>The Director may provide retention bonuses to any Secret Service agent, officer, or analyst who commits to 2 years of additional service with the Secret Service.</text></paragraph> <paragraph id="H25FB570AF6014C62942A6A64272792D9"><enum>(3)</enum><header>Signing bonuses</header><text>The Director may provide a signing bonus to any Secret Service agent, officer, or analyst who—</text>
<subparagraph id="HC15DA460989146629EBDB02889C0E816"><enum>(A)</enum><text>is hired on or after the date of the enactment of this Act; and</text></subparagraph> <subparagraph id="HD0EF690AACF94B088DABFAF403C7B7DE"><enum>(B)</enum><text>commits to 5 years of service with the United States Secret Service.</text></subparagraph></paragraph>
<paragraph id="HF6087B153D9F4743891D10B6F8186E91"><enum>(4)</enum><header>Service agreement</header><text>In providing a retention or signing bonus under this subsection, the Director shall provide each qualifying individual with a written service agreement that includes—</text> <subparagraph id="H83C9D9B61F8D4B6FA503522377DD97BD"><enum>(A)</enum><text>the commencement and termination dates of the required service period (or provisions for the determination of such dates);</text></subparagraph>
<subparagraph id="HD091ECAE9DF6476FA6BE51CFF68B4AD0"><enum>(B)</enum><text>the amount of the bonus; and</text></subparagraph> <subparagraph id="HFDA5D3D152194184BDBD75BB9FAAF147"><enum>(C)</enum><text>any other term or condition under which the bonus is payable, subject to the requirements under this subsection, including—</text>
<clause id="H3331A2D7A06D4A829F03A6560024C916"><enum>(i)</enum><text>the conditions under which the agreement may be terminated before the agreed-upon service period has been completed; and</text></clause> <clause id="HFC37D01750414D77904127E51340339F"><enum>(ii)</enum><text>the effect of a termination described in clause (i).</text></clause></subparagraph></paragraph></subsection></section></part></subtitle>
<subtitle id="H39E87AE25D6A4F4E8149A05D3BD8FF45" style="OLC"><enum>B</enum><header>Judiciary Matters</header>
<section id="H44595049859C493784E6188B7D58CF4D"><enum>100101.</enum><header>Appropriation to the Administrative Office of the United States Courts</header><text display-inline="no-display-inline">In addition to amounts otherwise available, there is appropriated to the Director of the Administrative Office of the United States Courts, out of amounts in the Treasury not otherwise appropriated, $1,250,000 for each of fiscal years 2025 through 2028, for the purpose of continuing analyses and reporting pursuant to section 604(a)(2) of title 28, United States Code, to examine the state of the dockets of the courts and to prepare and transmit statistical data and reports as to the business of the courts, including an assessment of the number, frequency, and related metrics of judicial orders issuing non-party relief against the Federal Government and their aggregate cost impact on the taxpayers of the United States, as determined by each court when imposing securities for the issuance of preliminary injunctions or temporary restraining orders against the Federal Government pursuant to rule 65(c) of the Federal Rules of Civil Procedure.</text></section> <section id="HCACC31E4C31149B4A2F3A31E7A89AA75"><enum>100102.</enum><header>Appropriation to the Federal Judicial Center</header> <subsection id="H169AF7220D9F4C459D5D4319BB1CF26C"><enum>(a)</enum><header>Appropriation</header><text>In addition to amounts otherwise available, there is appropriated to the Director of the Federal Judicial Center, out of amounts in the Treasury not otherwise appropriated, $1,000,000 for each of fiscal years 2025 through 2028, for the purpose described in subsection (b).</text></subsection>
<subsection id="H67499CA8BBFB485D9630D5E5F218E23D"><enum>(b)</enum><header>Use of funds</header><text>The Federal Judicial Center shall use the amounts appropriated under subsection (a) for the continued implementation of programs pursuant to section 620(b)(3) of title 28, United States Code, to stimulate, create, develop, and conduct programs of continuing education and training for personnel of the judicial branch, including training on the absence of constitutional and statutory authority supporting legal claims that seek non-party relief against the Federal Government, and strategic approaches for mitigating the aggregate cost impact of such legal claims on the taxpayers of the United States.</text></subsection></section></subtitle> <subtitle id="H7073EB6AF0EE48689FDA1E4BCF9F3EDB" style="OLC"><enum>C</enum><header>Radiation exposure compensation matters</header> <section id="H94747EF0D71D4A948E3FA3CE045D7BC3"><enum>100201.</enum><header>Extension of fund</header><text display-inline="no-display-inline">Section 3(d) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text>
<paragraph id="HF80C97E47CE34617BDF3008BE84E51D2"><enum>(1)</enum><text>by striking the first sentence and inserting <quote>The Fund shall terminate on December 31, 2028.</quote>; and</text></paragraph> <paragraph id="H392EF94693CF41598E81F76CA446E3D7"><enum>(2)</enum><text>by striking <quote>the end of that 2-year period</quote> and inserting <quote>such date</quote>.</text></paragraph></section>
<section id="H5AD1E8B8F1BE4815A81FEF7402C35225"><enum>100202.</enum><header>Claims relating to atmospheric testing</header>
<subsection id="H0C47E821894B402E95AD0DEAFB0A7CBF"><enum>(a)</enum><header>Leukemia claims relating to trinity test in New Mexico and tests at the Nevada site</header><text>Section 4(a)(1)(A) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text> <paragraph id="H81D7D145370D41269C9F76B915297FDF"><enum>(1)</enum><text>in clause (i)—</text>
<subparagraph id="H467B6647566848008BD0B402EBA8B52F"><enum>(A)</enum><text>in subclause (I), by striking <quote>October 31, 1958</quote> and inserting <quote>November 6, 1962</quote>;</text></subparagraph> <subparagraph id="HD3D19D2A086E494DA3DC9551B4E9608A"><enum>(B)</enum><text>in subclause (II)—</text>
<clause id="H6201452083CF4EF9820EFF8C35DF6123"><enum>(i)</enum><text>by striking <quote>in the affected area</quote> and inserting <quote>in an affected area</quote>; and</text></clause> <clause id="H44CBE55C83EF4B01B8C46DCAFB4C3B5C"><enum>(ii)</enum><text>by striking <quote>or</quote> after the semicolon;</text></clause></subparagraph>
<subparagraph id="H88E45DB3950941FA851F0DD919736DE0"><enum>(C)</enum><text>by redesignating subclause (III) as subclause (IV); and</text></subparagraph> <subparagraph id="H7DF51066271E4F678475E06EF38D06FE"><enum>(D)</enum><text>by inserting after subclause (II) the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H8983E3632C224D1A937963091336F417">
<subclause id="H2688AE336CB14EFC8BBAD53C9012CFB5"><enum>(III)</enum><text>was physically present in an affected area for a period of at least 1 year during the period beginning on September 24, 1944, and ending on November 6, 1962; or</text></subclause><after-quoted-block>; and</after-quoted-block></quoted-block></subparagraph></paragraph> <paragraph id="H5BBF2875D55A4B548631374C512973CF"><enum>(2)</enum><text>in clause (ii)(I), by striking <quote>physical presence described in subclause (I) or (II) of clause (i) or onsite participation described in clause (i)(III)</quote> and inserting <quote>physical presence described in subclause (I), (II), or (III) of clause (i) or onsite participation described in clause (i)(IV)</quote>.</text></paragraph></subsection>
<subsection id="H25EDE401C6AE4435AF7BB84600BAAD9A"><enum>(b)</enum><header>Amounts for claims related to leukemia</header><text>Section 4(a)(1) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text> <paragraph id="H5784890246AA46118FD0FC314156664E"><enum>(1)</enum><text>in subparagraph (A), by striking <quote>an amount</quote> and inserting <quote>the amount</quote>;</text></paragraph>
<paragraph id="H1BF29182BF76478A9EC7E20F55CD86EF"><enum>(2)</enum><text>by striking subparagraph (B) and inserting the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HA77DFDC7393847EAA14D0C8CF173617F"> <subparagraph id="HE9AA9312FE754B528CC33E5B1B81AF4A"><enum>(B)</enum><header>Amount</header><text>If the conditions described in subparagraph (C) are met, an individual who is described in subparagraph (A) shall receive $100,000.</text></subparagraph><after-quoted-block>; and</after-quoted-block></quoted-block></paragraph>
<paragraph id="HEE67418636F74841A6F22115EC678BCD"><enum>(3)</enum><text>in subparagraph (C), by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H786499ED8F374A48A331B465A7885EEB"> <clause id="HB927CFBC7EDB4454B09053E8FDD63214"><enum>(iv)</enum><text>No payment under this paragraph previously has been made to the individual, on behalf of the individual, or to a survivor of the individual.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="H5FFA22A04D1946D29C9DF952C38C5A24"><enum>(c)</enum><header>Conditions for claims related to leukemia</header><text>Section 4(a)(1)(C) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text> <paragraph id="HF2AA1CF2E7FD4D469056B8C42438CC7F"><enum>(1)</enum><text>by striking clause (i); and</text></paragraph>
<paragraph id="HA0601B5B9A10410AA561584D03E1EF20"><enum>(2)</enum><text>by redesignating clauses (ii) and (iii) as clauses (i) and (ii), respectively.</text></paragraph></subsection> <subsection id="HE6E89BAA38874802A85328150AA9AD8B"><enum>(d)</enum><header>Specified diseases claims relating to trinity test in New Mexico and tests at the Nevada site</header><text>Section 4(a)(2) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text>
<paragraph id="HDC961F53271B432D8D266B9EC3A2A9A2"><enum>(1)</enum><text>in subparagraph (A)—</text> <subparagraph id="H9D5CB2561F28406381104E91C3C3526A"><enum>(A)</enum><text>by striking <quote>in the affected area</quote> and inserting <quote>in an affected area</quote>;</text></subparagraph>
<subparagraph id="HF1C94BF4A3E04712BF0A08DC06CA1D8B"><enum>(B)</enum><text>by striking <quote>2 years</quote> and inserting <quote>1 year</quote>; and</text></subparagraph> <subparagraph id="H9A7045A953DB4323BBB96ABA0854B760"><enum>(C)</enum><text>by striking <quote>October 31, 1958,</quote> and inserting <quote>November 6, 1962;</quote>;</text></subparagraph></paragraph>
<paragraph id="HEF58A1187BD048EB92BD5977CE60899F"><enum>(2)</enum><text>in subparagraph (B)—</text> <subparagraph id="H51DD0C72480C47C1A717EA6D11362CF3"><enum>(A)</enum><text>by striking <quote>in the affected area</quote> and inserting <quote>in an affected area</quote>; and</text></subparagraph>
<subparagraph id="H869D8ED60E3F496E83E33E334CAB31FF"><enum>(B)</enum><text>by striking <quote>, or</quote> at the end and inserting a semicolon;</text></subparagraph></paragraph> <paragraph id="HDAB739E7192949538166A8146DFA6265"><enum>(3)</enum><text>by redesignating subparagraph (C) as subparagraph (D); and</text></paragraph>
<paragraph id="HE8F50886771F453A8D2695DE2FAF74C7"><enum>(4)</enum><text>by inserting after subparagraph (B) the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HE9B90795E7824EBFAB018F6770A69D8C"> <subparagraph id="HDD791B4982CF4E2ABE30123D8BF240B7"><enum>(C)</enum><text>was physically present in an affected area for a period of at least 1 year during the period beginning on September 24, 1944, and ending on November 6, 1962; or</text></subparagraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="HF857651AF4844EFFAAB5E26C7F5B197A"><enum>(e)</enum><header>Amounts for claims related to specified diseases</header><text>Section 4(a)(2) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended in the matter following subparagraph (D) (as redesignated by subsection (d) of this section)—</text> <paragraph id="H6AD8AB026D6C4A78AB50980D88AEAAF7"><enum>(1)</enum><text>by striking <quote>$50,000 (in the case of an individual described in subparagraph (A) or (B)) or $75,000 (in the case of an individual described in subparagraph (C)),</quote> and inserting <quote>$100,000</quote>;</text></paragraph>
<paragraph id="H610C0AA7FAA04A019239B2F477184C16"><enum>(2)</enum><text>in clause (i), by striking <quote>, and</quote> and inserting a semicolon;</text></paragraph> <paragraph id="HA503AA75EB9C434C845CDF4A2E7B6869"><enum>(3)</enum><text>in clause (ii), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph>
<paragraph id="H0EE4AF43DE444BA1A9EB7D6709BE9325"><enum>(4)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="H90B485701FF14F379E34D872B3A137FF"> <clause id="H120BE5F7A16446F2A682DA34A27EF050"><enum>(iii)</enum><text>no payment under this paragraph previously has been made to the individual, on behalf of the individual, or to a survivor of the individual.</text></clause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection>
<subsection id="HE97C15E9FB5E4E46906AEC18869FC496"><enum>(f)</enum><header>Downwind states</header><text>Section 4(b)(1) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended to read as follows:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HCE36F08DAB5C4967BCA8F55493DA6DB4"> <paragraph id="H939A6BA12A7E4D119C5182357D561FA5"><enum>(1)</enum><text><term>affected area</term> means—</text>
<subparagraph id="H054D1532AAB14693B9447FB4D8AAA2D3"><enum>(A)</enum><text>except as provided under subparagraph (B)—</text> <clause id="HCD02580C2355414080A78632AA3B9C89"><enum>(i)</enum><text>the States of New Mexico, Utah, and Idaho;</text></clause>
<clause id="H536B758212214D759FEB6E545625A251"><enum>(ii)</enum><text>in the State of Nevada, the counties of White Pine, Nye, Lander, Lincoln, Eureka, and that portion of Clark County that consists of townships 13 through 16 at ranges 63 through 71; and</text></clause> <clause id="HB60456A1CB004BF1B6E49315F3C84C4E"><enum>(iii)</enum><text>in the State of Arizona, the counties of Coconino, Yavapai, Navajo, Apache, and Gila, and Mohave; and</text></clause></subparagraph>
<subparagraph id="H9FE78B4EC0354E82A3130B871132DAD9"><enum>(B)</enum><text>with respect to a claim by an individual under subsection (a)(1)(A)(i)(III) or subsection (a)(2)(C), only New Mexico; and</text></subparagraph></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection></section> <section id="H7871E98F6F8245C4A12014DC0D102AB0"><enum>100203.</enum><header>Claims relating to uranium mining</header> <subsection id="H09CC3C0A61D84780BEA79DE77368AC34"><enum>(a)</enum><header>Employees of mines and mills</header><text>Section 5(a)(1)(A)(i) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended to read as follows:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H6B89A9DED84D4185ABDD985CB7FCE064">
<clause id="H46F50B8A65A84958A425F33DCE3604E5"><enum>(i)</enum>
<subclause commented="no" display-inline="yes-display-inline" id="H42743AFDF0874385916146D3E0804AFF"><enum>(I)</enum><text>was employed in a uranium mine or uranium mill (including any individual who was employed in the transport of uranium ore or vanadium-uranium ore from such mine or mill) located in Colorado, New Mexico, Arizona, Wyoming, South Dakota, Washington, Utah, Idaho, North Dakota, Oregon, or Texas at any time during the period beginning on January 1, 1942, and ending on December 31, 1990; or</text></subclause> <subclause indent="up1" commented="no" display-inline="no-display-inline" id="HAD53FB9980B045E1BF1108F773A2FA75"><enum>(II)</enum><text>was employed as a core driller in a State referred to in subclause (I) during the period described in such subclause; and</text></subclause></clause><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="H2BA8C204C274424588CA8C43DF735F4B"><enum>(b)</enum><header>Miners</header><text>Section 5(a)(1)(A)(ii)(I) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended by inserting <quote>or renal cancer or any other chronic renal disease, including nephritis and kidney tubal tissue injury</quote> after <quote>nonmalignant respiratory disease</quote>.</text></subsection> <subsection id="HB97714F585034494BEFB4D2A3E9FF17D"><enum>(c)</enum><header>Millers, core drillers, and ore transporters</header><text>Section 5(a)(1)(A)(ii)(II) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text>
<paragraph id="H8291D0FBF78A45E8B22941718EB50757"><enum>(1)</enum><text>by inserting <quote>, core driller,</quote> after <quote>was a miller</quote>;</text></paragraph> <paragraph id="H2E6451EB77BD43EA98521B32FC4B4865"><enum>(2)</enum><text>by inserting <quote>, or was involved in remediation efforts at such a uranium mine or uranium mill,</quote> after <quote>ore transporter</quote>;</text></paragraph>
<paragraph id="HC25D7AE8C3AF4745B1B3F0368A964CC6"><enum>(3)</enum><text>by inserting <quote>(I)</quote> after <quote>clause (i)</quote>; and</text></paragraph> <paragraph id="HB548BBE84C2B40C1B128AD5E04EE2F11"><enum>(4)</enum><text>by striking <quote>or renal cancers</quote> and all that follows and inserting <quote>or renal cancer or any other chronic renal disease, including nephritis and kidney tubal tissue injury; or</quote>.</text></paragraph></subsection>
<subsection id="H205EC8D97F384B2780CBD2B9744AD297"><enum>(d)</enum><header>Combined work histories</header><text>Section 5(a)(1)(A)(ii) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note), as amended by subsection (c), is further amended—</text> <paragraph id="H29FC34353F304735BA16A35E4E096549"><enum>(1)</enum><text>in subclause (I), by striking <quote>or</quote> at the end; and</text></paragraph>
<paragraph id="H63FE3C05CABA4716B231C00E773C330F"><enum>(2)</enum><text>by adding at the end the following:</text> <quoted-block style="OLC" display-inline="no-display-inline" id="HAB354D58350040B7ADC53874BB26009C"> <subclause id="HD1565D1D2D2F42DAB59842515165B657"><enum>(III)</enum> <item commented="no" display-inline="yes-display-inline" id="H31C4080E297947FA8401FFEC306C36F8"><enum>(aa)</enum><text>does not meet the conditions of subclause (I) or (II);</text></item>
<item indent="up1" commented="no" display-inline="no-display-inline" id="H327D5D3BC0D64840868ECC5A27505DDF"><enum>(bb)</enum><text>worked, during the period described in clause (i)(I), in 2 or more of the following positions: miner, miller, core driller, and ore transporter;</text></item> <item indent="up1" commented="no" display-inline="no-display-inline" id="HEEAA83A6DFAB47A99A58EAB772BCFAD5"><enum>(cc)</enum><text>meets the requirements under paragraph (4) or (5); and</text></item>
<item indent="up1" commented="no" display-inline="no-display-inline" id="HEE52E2430A7A47828125B5C2158DDCFA"><enum>(dd)</enum><text>submits written medical documentation that the individual developed lung cancer, a nonmalignant respiratory disease, renal cancer, or any other chronic renal disease, including nephritis and kidney tubal tissue injury after exposure to radiation through work in one or more of the positions referred to in item (bb);</text></item></subclause><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection> <subsection id="HF92E6078FE6241368FE8671B670A4348"><enum>(e)</enum><header>Special rules relating to combined work histories</header><text>Section 5(a) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="HE0C8EC8C54734F39A732DC1375EDC195">
<paragraph id="H12BCC619E8844EBF82CBBDA1A808EF62"><enum>(4)</enum><header>Special rule relating to combined work histories for individuals with at least one year of experience</header><text>An individual meets the requirements under this paragraph if the individual worked in one or more of the positions referred to in paragraph (1)(A)(ii)(III)(bb) for a period of at least one year during the period described in paragraph (1)(A)(i)(I).</text></paragraph> <paragraph id="H50A80773B1394D7FA11DE0BEB4C88B39"><enum>(5)</enum><header>Special rule relating to combined work histories for miners</header><text>An individual meets the requirements of this paragraph if the individual, during the period described in paragraph (1)(A)(i)(I), worked as a miner and was exposed to such number of working level months that the Attorney General determines, when combined with the exposure of such individual to radiation through work as a miller, core driller, or ore transporter during the period described in paragraph (1)(A)(i)(I), results in such individual being exposed to a total level of radiation that is greater or equal to the level of exposure of an individual described in paragraph (4).</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></subsection>
<subsection id="HED45D400212C4AF1A40C81EBC62CF85C"><enum>(f)</enum><header>Definition of core driller</header><text>Section 5(b) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended—</text> <paragraph id="H7B478D4B919844B285AFD732C48BBB67"><enum>(1)</enum><text>in paragraph (7), by striking <quote>and</quote> at the end;</text></paragraph>
<paragraph id="H8169B5E4B6B249AAB583AEBDFF39425B"><enum>(2)</enum><text>in paragraph (8), by striking the period at the end and inserting <quote>; and</quote>; and</text></paragraph> <paragraph id="H6A85E6D30E1D4D9FB9ABB94D91BA5C70"><enum>(3)</enum><text>by adding at the end the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H107F24D2F8914AAC808CFAEDF62BC72C">
<paragraph id="H3C94DF15A167487BA8A311F1C4E36C14"><enum>(9)</enum><text>the term <term>core driller</term> means any individual employed to engage in the act or process of obtaining cylindrical rock samples of uranium or vanadium by means of a borehole drilling machine for the purpose of mining uranium or vanadium.</text></paragraph><after-quoted-block>.</after-quoted-block></quoted-block></paragraph></subsection></section> <section id="H754F42C0C4C247E19AA8BF461D441BF0"><enum>100204.</enum><header>Claims relating to Manhattan Project waste</header><text display-inline="no-display-inline">The Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended by inserting after section 5 the following:</text>
<quoted-block style="OLC" display-inline="no-display-inline" id="H38917CDE9F9842BFA3FABBB07B4002CB">
<section id="H65E04A9EFF6D4D10AAACCC01CEC3CC5E"><enum>5A.</enum><header>Claims relating to Manhattan Project waste</header>
<subsection id="H7CCDCE6BC5B240D1BFB4AB574F9A9C6C"><enum>(a)</enum><header>In general</header><text>A claimant shall receive compensation for a claim made under this Act, as described in subsection (b) or (c), if—</text> <paragraph id="H4972762D4E534969874DD92DFB8704D4"><enum>(1)</enum><text>a claim for compensation is filed with the Attorney General—</text>
<subparagraph id="HD941543CC2764203843004ABBBD686FD"><enum>(A)</enum><text>by an individual described in paragraph (2); or</text></subparagraph> <subparagraph id="H01AAB5ED81A44E7E8339651A70BB3DBB"><enum>(B)</enum><text>on behalf of that individual by an authorized agent of that individual, if the individual is deceased or incapacitated, such as—</text>
<clause id="H785C71837068412ABA21F88D4840C366"><enum>(i)</enum><text>an executor of estate of that individual; or</text></clause> <clause id="HE0A8FD3113D447D7B9ED98DDC347AD33"><enum>(ii)</enum><text>a legal guardian or conservator of that individual;</text></clause></subparagraph></paragraph>
<paragraph id="H6878815468614195BE2BC901B6468F15"><enum>(2)</enum><text>that individual, or if applicable, an authorized agent of that individual, demonstrates that such individual—</text> <subparagraph id="HB5361DE79DD44C4182FDE0C5CC479CBA"><enum>(A)</enum><text>was physically present in an affected area for a period of at least 2 years after January 1, 1949; and</text></subparagraph>
<subparagraph id="H71358A291C384A8F869D58681115C58E"><enum>(B)</enum><text>contracted a specified disease after such period of physical presence;</text></subparagraph></paragraph> <paragraph id="HACBC235EC3984F0E9A974C64FEF5BAA2"><enum>(3)</enum><text>the Attorney General certifies that the identity of that individual, and if applicable, the authorized agent of that individual, is not fraudulent or otherwise misrepresented; and</text></paragraph>
<paragraph id="H018F3695352245CB8B9369A05D6F8B2B"><enum>(4)</enum><text>the Attorney General determines that the claimant has satisfied the applicable requirements of this Act.</text></paragraph></subsection> <subsection id="HA62CFEB79FEC4F80A5FE1893A5187CDF"><enum>(b)</enum><header>Losses available to living affected individuals</header> <paragraph id="H1CC9AE324AC547869D8C6EFDB0CD03C5"><enum>(1)</enum><header>In general</header><text>In the event of a claim qualifying for compensation under subsection (a) that is submitted to the Attorney General to be eligible for compensation under this section at a time when the individual described in subsection (a)(2) is living, the amount of compensation under this section shall be in an amount that is the greater of $50,000 or the total amount of compensation for which the individual is eligible under paragraph (2).</text></paragraph>
<paragraph id="H259AB061B3A041289A3F86FF304B4F39"><enum>(2)</enum><header>Losses due to medical expenses</header><text>A claimant described in paragraph (1) shall be eligible to receive, upon submission of contemporaneous written medical records, reports, or billing statements created by or at the direction of a licensed medical professional who provided contemporaneous medical care to the claimant, additional compensation in the amount of all documented out-of-pocket medical expenses incurred as a result of the specified disease suffered by that claimant, such as any medical expenses not covered, paid for, or reimbursed through—</text> <subparagraph id="H01BAB0DA53B446F0A334AAB2F9423FB4"><enum>(A)</enum><text>any public or private health insurance;</text></subparagraph>
<subparagraph id="H37A9B32116B24158ABD2302FDED86A5A"><enum>(B)</enum><text>any employee health insurance;</text></subparagraph> <subparagraph id="HB5183894CE934947805A67EABBFBFEA1"><enum>(C)</enum><text>any workers’ compensation program; or</text></subparagraph>
<subparagraph id="H41F667A619C543D89E86F913460A6826"><enum>(D)</enum><text>any other public, private, or employee health program or benefit.</text></subparagraph></paragraph> <paragraph commented="no" display-inline="no-display-inline" id="HCC18364C838047F29DF123647782DF82"><enum>(3)</enum><header>Limitation</header><text display-inline="yes-display-inline">No claimant is eligible to receive compensation under this subsection with respect to medical expenses unless the submissions described in paragraph (2) with respect to such expenses are submitted on or before December 31, 2028.</text></paragraph></subsection>
<subsection id="H24E177A7E44D4E03B483CDAACE46375C"><enum>(c)</enum><header>Payments to beneficiaries of deceased individuals</header><text>In the event that an individual described in subsection (a)(2) who qualifies for compensation under subsection (a) is deceased at the time of submission of the claim—</text> <paragraph id="H14E73FCBD83B4055A255D36855D69B34"><enum>(1)</enum><text>a surviving spouse may, upon submission of a claim and records sufficient to satisfy the requirements of subsection (a) with respect to the deceased individual, receive compensation in the amount of $25,000; or</text></paragraph>
<paragraph id="HF7AE135736974F45B50B1EC4A757E731"><enum>(2)</enum><text>in the event that there is no surviving spouse, the surviving children, minor or otherwise, of the deceased individual may, upon submission of a claim and records sufficient to satisfy the requirements of subsection (a) with respect to the deceased individual, receive compensation in the total amount of $25,000, paid in equal shares to each surviving child.</text></paragraph></subsection> <subsection id="HFB64A85BD3F4440A8F29808AD593CD33"><enum>(d)</enum><header>Affected areas</header><text>For purposes of this section, the term <term>affected area</term> means—</text>
<paragraph commented="no" display-inline="no-display-inline" id="H95B187F1DB39467AA657DDE3796FAB60"><enum>(1)</enum><text display-inline="yes-display-inline">in the State of Missouri, the ZIP Codes of 63031, 63033, 63034, 63042, 63045, 63074, 63114, 63135, 63138, 63044, 63121, 63140, 63145, 63147, 63102, 63304, 63134, 63043, 63341, 63368, and 63367;</text></paragraph> <paragraph id="H37C78FDCF2D545B9AABD15D3117EAD10"><enum>(2)</enum><text>in the State of Tennessee, the ZIP Codes of 37716, 37840, 37719, 37748, 37763, 37828, 37769, 37710, 37845, 37887, 37829, 37854, 37830, and 37831;</text></paragraph>
<paragraph id="H5091E272A982498D8AA22451140A33CD"><enum>(3)</enum><text>in the State of Alaska, the ZIP Codes of 99546 and 99547; and</text></paragraph> <paragraph id="HD85121EA37D74B61A8874F7A5B53ECAD"><enum>(4)</enum><text>in the State of Kentucky, the ZIP Codes of 42001, 42003, and 42086.</text></paragraph></subsection>
<subsection id="HE3C758B1C3B743768F7BC3AC3E2FBBA0"><enum>(e)</enum><header>Specified disease</header><text>For purposes of this section, the term <term>specified disease</term> means any of the following:</text> <paragraph id="H5DFDBBA2B0A54C7A8E889393AE2C2C54"><enum>(1)</enum><text>Any leukemia, provided that the initial exposure occurred after 20 years of age and the onset of the disease was at least 2 years after first exposure.</text></paragraph>
<paragraph id="HBA072F6C44DF4A48809893DDD62B3F14"><enum>(2)</enum><text>Any of the following diseases, provided that the onset was at least 2 years after the initial exposure:</text> <subparagraph id="H3ED007C6FB154CF49F952BF2F1580BED"><enum>(A)</enum><text>Multiple myeloma.</text></subparagraph>
<subparagraph id="HC3CDE17564774B5C8BC16597CF8055B0"><enum>(B)</enum><text>Lymphoma, other than Hodgkin’s disease.</text></subparagraph> <subparagraph id="H556429EB22CE461FAE3EC7EFFE40439E"><enum>(C)</enum><text>Primary cancer of the—</text>
<clause id="HAEC3718C566642E3B5F6A72089B6F1D2"><enum>(i)</enum><text>thyroid;</text></clause> <clause id="H92B7EF1DD23B4AF99305765E55C9BD5A"><enum>(ii)</enum><text>male or female breast;</text></clause>
<clause id="H4F309B96749D46A19C1E39734A385882"><enum>(iii)</enum><text>esophagus;</text></clause> <clause id="HA33E0A73D43A4418A5938126AE62D635"><enum>(iv)</enum><text>stomach;</text></clause>
<clause id="HCE741F47559E4E00B0A056F1FBF4E243"><enum>(v)</enum><text>pharynx;</text></clause> <clause id="HF4DA2993267F45B2A832BB074B4D80E4"><enum>(vi)</enum><text>small intestine;</text></clause>
<clause id="H20075988E0AC4317A4838C8BC8BB0DF9"><enum>(vii)</enum><text>pancreas;</text></clause> <clause id="H18173C1B3D774A74922E96A7E9540F9B"><enum>(viii)</enum><text>bile ducts;</text></clause>
<clause id="H62B7824894404343BDC426D2F2633507"><enum>(ix)</enum><text>gall bladder;</text></clause> <clause id="H3E217809D76D449F9FC036039402A55C"><enum>(x)</enum><text>salivary gland;</text></clause>
<clause id="HCA064EB628454C52A2BEA94EF8F9DD83"><enum>(xi)</enum><text>urinary bladder;</text></clause> <clause id="H204BC761623746658CA3972D3B9A6C42"><enum>(xii)</enum><text>brain;</text></clause>
<clause id="H0D161C32294246FB9A3C0980219A63DB"><enum>(xiii)</enum><text>colon;</text></clause> <clause id="HBA9F72C0DED14C83B5CD68EA113969B9"><enum>(xiv)</enum><text>ovary;</text></clause>
<clause id="HC2CA5FAF52814FC4B435C84DAA4C85B8"><enum>(xv)</enum><text>bone;</text></clause> <clause id="H0D71F4F81B9049BF9667BD3D9E546178"><enum>(xvi)</enum><text>renal;</text></clause>
<clause id="H77E85A76DBF948DD86A86AD33E429BF8"><enum>(xvii)</enum><text>liver, except if cirrhosis or hepatitis B is indicated; or</text></clause> <clause id="HB369527AFAFA4B79840A76CE6AA96D2C"><enum>(xviii)</enum><text>lung.</text></clause></subparagraph></paragraph></subsection>
<subsection id="H4F6F0EF087C144379635BA06A625E98B"><enum>(f)</enum><header>Physical presence</header>
<paragraph id="HE07E41AE0CAA4CB3945C97BDB2F73D6E"><enum>(1)</enum><header>In general</header><text>For purposes of this section, the Attorney General may not determine that a claimant has satisfied the requirements under subsection (a) unless demonstrated by submission of—</text> <subparagraph id="H41203CE7C90C4B1EBC38B1674121FF95"><enum>(A)</enum><text>contemporaneous written residential documentation or at least 1 additional employer-issued or government-issued document or record that the claimant, for at least 2 years after January 1, 1949, was physically present in an affected area; or</text></subparagraph>
<subparagraph id="H991023A1279C4DEEB133E17F9F6F7671"><enum>(B)</enum><text>other documentation determined by the Attorney General to demonstrate that the claimant, for at least 2 years after January 1, 1949, was physically present in an affected area.</text></subparagraph></paragraph> <paragraph id="H0DC1D9F3AD3C415F80EE7431A096461B"><enum>(2)</enum><header>Types of physical presence</header><text>For purposes of determining physical presence under this section, a claimant shall be considered to have been physically present in an affected area if—</text>
<subparagraph id="HCDFDE887250E407F8621D3CD5FEB9441"><enum>(A)</enum><text>the claimant’s primary residence was in the affected area;</text></subparagraph> <subparagraph id="H80AA5F1F061E4E4A92FF92ED2EC05A56"><enum>(B)</enum><text>the claimant’s place of employment was in the affected area; or</text></subparagraph>
<subparagraph id="H88B17D533F7949D38E8FB7820F1999BB"><enum>(C)</enum><text>the claimant attended school in the affected area.</text></subparagraph></paragraph></subsection> <subsection id="H7B0A97952883416795DEB32D77D08AC2"><enum>(g)</enum><header>Disease contraction in affected areas</header><text>For purposes of this section, the Attorney General may not determine that a claimant has satisfied the requirements under subsection (a) unless the claimant submits—</text>
<paragraph id="H0A2A0FD1D87A422EB82E6A6E454A29AE"><enum>(1)</enum><text>written medical records or reports created by or at the direction of a licensed medical professional, created contemporaneously with the provision of medical care to the claimant, that the claimant, after a period of physical presence in an affected area, contracted a specified disease; or</text></paragraph> <paragraph id="H5DD3DF5E6B5E40DF8B2FCEC607C2761B"><enum>(2)</enum><text>other documentation determined by the Attorney General to demonstrate that the claimant contracted a specified disease after a period of physical presence in an affected area.</text></paragraph></subsection></section><after-quoted-block>.</after-quoted-block></quoted-block><pagebreak/></section>
<section id="H6E895D9CA2834DB7B22C96DB7C3FDBD0"><enum>100205.</enum><header>Limitations on claims</header><text display-inline="no-display-inline">Section 8(a) of the Radiation Exposure Compensation Act (<external-xref legal-doc="public-law" parsable-cite="pl/101/426">Public Law 101–426</external-xref>; <external-xref legal-doc="usc" parsable-cite="usc/42/2210">42 U.S.C. 2210</external-xref> note) is amended by striking <quote>2 years after the date of enactment of the RECA Extension Act of 2022</quote> and inserting <quote>December 31, 2027</quote>.</text></section></subtitle></title> </legis-body> <attestation><attestation-group><role>Speaker of the House of Representatives.</role></attestation-group><attestation-group><role>Vice President of the United States and President of the Senate.</role></attestation-group></attestation> </bill> 

", "parsed_json": {"title": "To provide for reconciliation pursuant to title II of H. Con. Res. 14.", "sponsors": null, "actions": null}}
{"source_domain": "govinfo.gov", "source_collection": "BILLS", "source_congress": null, "source_session": null, "source_filename": "rss.xml", "source_url": "https://www.govinfo.gov/content/pkg/rss/xml/rss.xml", "doc_type": null, "published_at": null, "received_at": null, "canonical_id": "rss", "title": "GovInfo - U.S. Government Publishing Office", "sponsors": null, "actions": null, "text_versions": null, "raw_xml_base64": "<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xml:base="https://www.govinfo.gov/">
  <channel>
    <title>GovInfo - U.S. Government Publishing Office</title>
    <link>https://www.govinfo.gov/</link>
    <description/>
    <language>en</language>
    
    <item>
  <title>National Preparedness Month, 2025</title>
  <link>https://www.govinfo.gov/features/national-preparedness-month-2025</link>
  <description>&lt;p&gt;The goal of National Preparedness Month is to increase the number of individuals, families, and communities that engage in preparedness actions. &lt;/p&gt;
&lt;br&gt;
&lt;p&gt;

&lt;/p&gt;</description>
  <pubDate>Thu, 18 Sep 2025 11:34:55 +0000</pubDate>
    <guid isPermaLink="false">National Preparedness Month, 2025</guid>
    </item>
<item>
  <title>September 11, 2025</title>
  <link>https://www.govinfo.gov/features/September-11-2025</link>
  <description>&lt;p&gt;&lt;a href="https://media.defense.gov/2020/Sep/11/2002495347/-1/-1/0/200911-N-CW570-001.PNG" target="_blank"&gt;&lt;img src="https://www.govinfo.gov/media/twin_towers_beams_of_light_dod" class="center" title="Image: The New York skyline, with the Memorial Beams of Light representing the twin towers that were hit on 9/11 with the words: 9/11 NEVER FORGET, Source: Department of Defense (DOD)"&gt;&lt;/a&gt;&lt;/p&gt;</description>
  <pubDate>Thu, 11 Sep 2025 11:18:28 +0000</pubDate>
    <guid isPermaLink="false">September 11, 2025</guid>
    </item>
<item>
  <title>Labor Day 2025</title>
  <link>https://www.govinfo.gov/features/labor-day-2025</link>
  <description>&lt;p&gt;Sometimes called the "unofficial end of summer," Labor Day is an annual celebration of the economic and social achievements of American workers.  The legal holiday was created in 1894 by &lt;a class="underlined-link" href="https://www.govinfo.gov/content/pkg/STATUTE-28/pdf/STATUTE-28-Pg96.pdf" target="_blank"&gt;28 Stat. 96&lt;/a&gt; and is observed on the first Monday of September.  &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
  <pubDate>Fri, 29 Aug 2025 19:55:43 +0000</pubDate>
    <guid isPermaLink="false">Labor Day 2025</guid>
    </item>
<item>
  <title>National History Day® 2025-2026</title>
  <link>https://www.govinfo.gov/features/nhd-2025-26</link>
  <description>&lt;img title="National History Day 2025-26 Theme" alt="National History Day 2025-26 Theme" src="https://www.govinfo.gov/media/NHD_25_26_theme_banner.png" class="pull-center"&gt;

&lt;p&gt;
National History Day® (NHD) is a non-profit education organization established in 1974 that provides educational programs helping students and teachers influence the future through discovery of the past. The National History Day® Contest is a year-long academic program focused on historical research, interpretation, and creative expression for 6th to 12th-grade students.&lt;/p&gt;</description>
  <pubDate>Thu, 28 Aug 2025 11:42:15 +0000</pubDate>
    <guid isPermaLink="false">National History Day® 2025-2026</guid>
    </item>
<item>
  <title>Purple Heart Day 2025</title>
  <link>https://www.govinfo.gov/features/purple-heart-day-2025</link>
  <description>&lt;img src="https://www.govinfo.gov/media/purple_heart_day_banner.png" class="center" title="National Purple Heart Day, August 7th banner with the Purple Heart Medal."&gt; 
</description>
  <pubDate>Thu, 07 Aug 2025 13:40:31 +0000</pubDate>
    <guid isPermaLink="false">Purple Heart Day 2025</guid>
    </item>
<item>
  <title>35th Anniversary of the Americans with Disabilities Act </title>
  <link>https://www.govinfo.gov/features/ADA-35th-Anniversary</link>
  <description>&lt;p&gt;&lt;img src="https://www.govinfo.gov/media/ada_35_banner.png" class="center"&gt; &lt;/p&gt;</description>
  <pubDate>Thu, 24 Jul 2025 13:38:26 +0000</pubDate>
    <guid isPermaLink="false">35th Anniversary of the Americans with Disabilities Act </guid>
    </item>
<item>
  <title>June 2025 Release Notes</title>
  <link>https://www.govinfo.gov/features/june-2025-release-notes</link>
  <description>&lt;p&gt;The June 2025 GovInfo release included 110 individually tracked system changes. Highlights included the new United States Reports collection which launched in July 2025; file size information on search results and collection browse pages; a new custom search widget on the Statute Compilations collection browse page; increased access to amendments in the Congressional Record; a Related Documents use case connecting associated Congressional Reports on Public and Private Laws details pages; as well as continued migration of collection browse pages to a more supported web application framework.&lt;/p&gt;</description>
  <pubDate>Mon, 14 Jul 2025 16:56:01 +0000</pubDate>
    <guid isPermaLink="false">June 2025 Release Notes</guid>
    </item>
<item>
  <title>Supreme Court Cases in the United States Reports Collection</title>
  <link>https://www.govinfo.gov/features/united-states-reports-release</link>
  <description>&lt;p&gt;The U.S. Government Publishing Office (GPO), has made hundreds of &lt;a class="underlined-link" href="https://www.govinfo.gov/app/collection/usreports" target="_blank"&gt;historic volumes of U.S. Supreme Court cases available dating from 1790–1991&lt;/a&gt;. These cases are published officially in the United States Reports and are now available on GPO’s GovInfo.&lt;/p&gt;</description>
  <pubDate>Wed, 09 Jul 2025 12:52:29 +0000</pubDate>
    <guid isPermaLink="false">Supreme Court Cases in the United States Reports Collection</guid>
    </item>
<item>
  <title>Helen Keller Day</title>
  <link>https://www.govinfo.gov/features/helen-keller-day-2025</link>
  <description>&lt;p&gt;
On June 19, 1980, President Jimmy Carter proclaimed June 27 as &lt;a class="underlined-link" href="https://www.govinfo.gov/content/pkg/STATUTE-94/pdf/STATUTE-94-Pg3764.pdf" target="_blank"&gt;Helen Keller Day&lt;/a&gt;. This was also the 100th anniversary of her birth. The last week of June is also recognized as Helen Keller Deaf-Blind Awareness Week. Although she is most remembered as an advocate for the blind and deaf, during her lifetime, Helen Keller also traveled the country as an activist for civil rights, women's rights, labor movements, and global causes.  &lt;/p&gt;</description>
  <pubDate>Fri, 27 Jun 2025 13:07:57 +0000</pubDate>
    <guid isPermaLink="false">Helen Keller Day</guid>
    </item>
<item>
  <title>Juneteenth 2025</title>
  <link>https://www.govinfo.gov/features/juneteenth-2025</link>
  <description>&lt;p&gt;&lt;img src="https://www.govinfo.gov/media/juneteenth_banner_2025.png" class="center"&gt; &lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Juneteenth, also known as Freedom Day or Emancipation Day, is an important holiday celebrated annually on June 19. It holds significant historical and cultural importance in the United States, marking the emancipation of enslaved African Americans.  &lt;/p&gt;</description>
  <pubDate>Wed, 18 Jun 2025 13:49:21 +0000</pubDate>
    <guid isPermaLink="false">Juneteenth 2025</guid>
    </item>

  </channel>
</rss>
", "parsed_json": {"title": "GovInfo - U.S. Government Publishing Office", "sponsors": null, "actions": null}}
